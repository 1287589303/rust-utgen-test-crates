fns:
{
    "<  as ryu::buffer::Sealed>::format_nonfinite": FnData {
        fn_name: "format_nonfinite",
        complete_fn_name: "<  as ryu::buffer::Sealed>::format_nonfinite",
        fn_type: TraitFn(
            TraitFnItem {
                fn_name: Name {
                    name: "format_nonfinite",
                    complete_name: "<  as ryu::buffer::Sealed>::format_nonfinite",
                    import_name: MyPath {
                        name: "<  as ryu",
                        next: Some(
                            MyPath {
                                name: "buffer",
                                next: Some(
                                    MyPath {
                                        name: "Sealed>",
                                        next: Some(
                                            MyPath {
                                                name: "format_nonfinite",
                                                next: None,
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "Sealed::format_nonfinite",
                item: Some(
                    TraitItemFn {
                        attrs: [],
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: format_nonfinite,
                                span: bytes(7460..7476),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Receiver(
                                    Receiver {
                                        attrs: [],
                                        reference: None,
                                        mutability: None,
                                        self_token: SelfValue,
                                        colon_token: None,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Self,
                                                            span: bytes(7477..7481),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Reference {
                                    and_token: And,
                                    lifetime: Some(
                                        Lifetime {
                                            apostrophe: bytes(7487..7488),
                                            ident: Ident {
                                                sym: static,
                                                span: bytes(7488..7494),
                                            },
                                        },
                                    ),
                                    mutability: None,
                                    elem: Type::Path {
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: str,
                                                        span: bytes(7495..7498),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                },
                            ),
                        },
                        default: None,
                        semi_token: Some(
                            Semi,
                        ),
                    },
                ),
                inside_items: [],
                is_constructor: false,
            },
            TraitItem {
                trait_name: Name {
                    name: "Sealed",
                    complete_name: "ryu::buffer::Sealed",
                    import_name: MyPath {
                        name: "ryu",
                        next: Some(
                            MyPath {
                                name: "buffer",
                                next: Some(
                                    MyPath {
                                        name: "Sealed",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                item: Some(
                    ItemTrait {
                        attrs: [],
                        vis: Visibility::Public(
                            Pub,
                        ),
                        unsafety: None,
                        auto_token: None,
                        restriction: None,
                        trait_token: Trait,
                        ident: Ident {
                            sym: Sealed,
                            span: bytes(7403..7409),
                        },
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        colon_token: Some(
                            Colon,
                        ),
                        supertraits: [
                            TypeParamBound::Trait(
                                TraitBound {
                                    paren_token: None,
                                    modifier: TraitBoundModifier::None,
                                    lifetimes: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: Copy,
                                                    span: bytes(7411..7415),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        ],
                        brace_token: Brace,
                        items: [],
                    },
                ),
                types: [],
                consts: [],
                functions: [
                    TraitFnItem {
                        fn_name: Name {
                            name: "is_nonfinite",
                            complete_name: "<  as ryu::buffer::Sealed>::is_nonfinite",
                            import_name: MyPath {
                                name: "<  as ryu",
                                next: Some(
                                    MyPath {
                                        name: "buffer",
                                        next: Some(
                                            MyPath {
                                                name: "Sealed>",
                                                next: Some(
                                                    MyPath {
                                                        name: "is_nonfinite",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "Sealed::is_nonfinite",
                        item: Some(
                            TraitItemFn {
                                attrs: [],
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: is_nonfinite,
                                        span: bytes(7425..7437),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: None,
                                                mutability: None,
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Self,
                                                                    span: bytes(7438..7442),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: bool,
                                                            span: bytes(7447..7451),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                default: None,
                                semi_token: Some(
                                    Semi,
                                ),
                            },
                        ),
                        inside_items: [],
                        is_constructor: false,
                    },
                    TraitFnItem {
                        fn_name: Name {
                            name: "format_nonfinite",
                            complete_name: "<  as ryu::buffer::Sealed>::format_nonfinite",
                            import_name: MyPath {
                                name: "<  as ryu",
                                next: Some(
                                    MyPath {
                                        name: "buffer",
                                        next: Some(
                                            MyPath {
                                                name: "Sealed>",
                                                next: Some(
                                                    MyPath {
                                                        name: "format_nonfinite",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "Sealed::format_nonfinite",
                        item: Some(
                            TraitItemFn {
                                attrs: [],
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: format_nonfinite,
                                        span: bytes(7460..7476),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: None,
                                                mutability: None,
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Self,
                                                                    span: bytes(7477..7481),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Reference {
                                            and_token: And,
                                            lifetime: Some(
                                                Lifetime {
                                                    apostrophe: bytes(7487..7488),
                                                    ident: Ident {
                                                        sym: static,
                                                        span: bytes(7488..7494),
                                                    },
                                                },
                                            ),
                                            mutability: None,
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: str,
                                                                span: bytes(7495..7498),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    ),
                                },
                                default: None,
                                semi_token: Some(
                                    Semi,
                                ),
                            },
                        ),
                        inside_items: [],
                        is_constructor: false,
                    },
                    TraitFnItem {
                        fn_name: Name {
                            name: "write_to_ryu_buffer",
                            complete_name: "<  as ryu::buffer::Sealed>::write_to_ryu_buffer",
                            import_name: MyPath {
                                name: "<  as ryu",
                                next: Some(
                                    MyPath {
                                        name: "buffer",
                                        next: Some(
                                            MyPath {
                                                name: "Sealed>",
                                                next: Some(
                                                    MyPath {
                                                        name: "write_to_ryu_buffer",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "Sealed::write_to_ryu_buffer",
                        item: Some(
                            TraitItemFn {
                                attrs: [],
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: Some(
                                        Unsafe,
                                    ),
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: write_to_ryu_buffer,
                                        span: bytes(7514..7533),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: None,
                                                mutability: None,
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Self,
                                                                    span: bytes(7534..7538),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: result,
                                                        span: bytes(7540..7546),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Ptr {
                                                    star_token: Star,
                                                    const_token: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: u8,
                                                                        span: bytes(7553..7555),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: usize,
                                                            span: bytes(7560..7565),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                default: None,
                                semi_token: Some(
                                    Semi,
                                ),
                            },
                        ),
                        inside_items: [],
                        is_constructor: false,
                    },
                ],
                visibility: PubT,
                relative_types: [
                    "Copy",
                ],
            },
        ),
    },
    "ryu::common::log10_pow2": FnData {
        fn_name: "log10_pow2",
        complete_fn_name: "ryu::common::log10_pow2",
        fn_type: Fn(
            FnItem {
                fn_name: Name {
                    name: "log10_pow2",
                    complete_name: "ryu::common::log10_pow2",
                    import_name: MyPath {
                        name: "ryu",
                        next: Some(
                            MyPath {
                                name: "common",
                                next: Some(
                                    MyPath {
                                        name: "log10_pow2",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "log10_pow2",
                item: Some(
                    ItemFn {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::List {
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: cfg_attr,
                                                    span: bytes(11663..11671),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                    delimiter: MacroDelimiter::Paren(
                                        Paren,
                                    ),
                                    tokens: TokenStream [
                                        Ident {
                                            sym: feature,
                                            span: bytes(11672..11679),
                                        },
                                        Punct {
                                            char: '=',
                                            spacing: Alone,
                                            span: bytes(11680..11681),
                                        },
                                        Literal {
                                            lit: "no-panic",
                                            span: bytes(11682..11692),
                                        },
                                        Punct {
                                            char: ',',
                                            spacing: Alone,
                                            span: bytes(11692..11693),
                                        },
                                        Ident {
                                            sym: inline,
                                            span: bytes(11694..11700),
                                        },
                                    ],
                                },
                            },
                        ],
                        vis: Visibility::Public(
                            Pub,
                        ),
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: log10_pow2,
                                span: bytes(11710..11720),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: e,
                                                span: bytes(11721..11722),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: i32,
                                                            span: bytes(11724..11727),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: u32,
                                                    span: bytes(11732..11735),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Macro {
                                    attrs: [],
                                    mac: Macro {
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: debug_assert,
                                                        span: bytes(11859..11871),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                        bang_token: Not,
                                        delimiter: MacroDelimiter::Paren(
                                            Paren,
                                        ),
                                        tokens: TokenStream [
                                            Ident {
                                                sym: e,
                                                span: bytes(11873..11874),
                                            },
                                            Punct {
                                                char: '>',
                                                spacing: Joint,
                                                span: bytes(11875..11876),
                                            },
                                            Punct {
                                                char: '=',
                                                spacing: Alone,
                                                span: bytes(11876..11877),
                                            },
                                            Literal {
                                                lit: 0,
                                                span: bytes(11878..11879),
                                            },
                                        ],
                                    },
                                    semi_token: Some(
                                        Semi,
                                    ),
                                },
                                Stmt::Macro {
                                    attrs: [],
                                    mac: Macro {
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: debug_assert,
                                                        span: bytes(11886..11898),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                        bang_token: Not,
                                        delimiter: MacroDelimiter::Paren(
                                            Paren,
                                        ),
                                        tokens: TokenStream [
                                            Ident {
                                                sym: e,
                                                span: bytes(11900..11901),
                                            },
                                            Punct {
                                                char: '<',
                                                spacing: Joint,
                                                span: bytes(11902..11903),
                                            },
                                            Punct {
                                                char: '=',
                                                spacing: Alone,
                                                span: bytes(11903..11904),
                                            },
                                            Literal {
                                                lit: 1650,
                                                span: bytes(11905..11909),
                                            },
                                        ],
                                    },
                                    semi_token: Some(
                                        Semi,
                                    ),
                                },
                                Stmt::Expr(
                                    Expr::Binary {
                                        attrs: [],
                                        left: Expr::Paren {
                                            attrs: [],
                                            paren_token: Paren,
                                            expr: Expr::Binary {
                                                attrs: [],
                                                left: Expr::Cast {
                                                    attrs: [],
                                                    expr: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: e,
                                                                        span: bytes(11917..11918),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    as_token: As,
                                                    ty: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: u32,
                                                                        span: bytes(11922..11925),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                                op: BinOp::Mul(
                                                    Star,
                                                ),
                                                right: Expr::Lit {
                                                    attrs: [],
                                                    lit: Lit::Int {
                                                        token: 78913,
                                                    },
                                                },
                                            },
                                        },
                                        op: BinOp::Shr(
                                            Shr,
                                        ),
                                        right: Expr::Lit {
                                            attrs: [],
                                            lit: Lit::Int {
                                                token: 18,
                                            },
                                        },
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: PubT,
            },
        ),
    },
    "ryu::d2s_intrinsics::mul_shift_all_64": FnData {
        fn_name: "mul_shift_all_64",
        complete_fn_name: "ryu::d2s_intrinsics::mul_shift_all_64",
        fn_type: Fn(
            FnItem {
                fn_name: Name {
                    name: "mul_shift_all_64",
                    complete_name: "ryu::d2s_intrinsics::mul_shift_all_64",
                    import_name: MyPath {
                        name: "ryu",
                        next: Some(
                            MyPath {
                                name: "d2s_intrinsics",
                                next: Some(
                                    MyPath {
                                        name: "mul_shift_all_64",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "mul_shift_all_64",
                item: Some(
                    ItemFn {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::List {
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: cfg_attr,
                                                    span: bytes(58983..58991),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                    delimiter: MacroDelimiter::Paren(
                                        Paren,
                                    ),
                                    tokens: TokenStream [
                                        Ident {
                                            sym: feature,
                                            span: bytes(58992..58999),
                                        },
                                        Punct {
                                            char: '=',
                                            spacing: Alone,
                                            span: bytes(59000..59001),
                                        },
                                        Literal {
                                            lit: "no-panic",
                                            span: bytes(59002..59012),
                                        },
                                        Punct {
                                            char: ',',
                                            spacing: Alone,
                                            span: bytes(59012..59013),
                                        },
                                        Ident {
                                            sym: inline,
                                            span: bytes(59014..59020),
                                        },
                                    ],
                                },
                            },
                        ],
                        vis: Visibility::Public(
                            Pub,
                        ),
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: Some(
                                Unsafe,
                            ),
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: mul_shift_all_64,
                                span: bytes(59037..59053),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: m,
                                                span: bytes(59059..59060),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u64,
                                                            span: bytes(59062..59065),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                                Comma,
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: mul,
                                                span: bytes(59071..59074),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: None,
                                            elem: Type::Tuple {
                                                paren_token: Paren,
                                                elems: [
                                                    Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: u64,
                                                                        span: bytes(59078..59081),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    Comma,
                                                    Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: u64,
                                                                        span: bytes(59083..59086),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                                Comma,
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: j,
                                                span: bytes(59093..59094),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u32,
                                                            span: bytes(59096..59099),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                                Comma,
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: vp,
                                                span: bytes(59105..59107),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Ptr {
                                            star_token: Star,
                                            const_token: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: u64,
                                                                span: bytes(59114..59117),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    },
                                ),
                                Comma,
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: vm,
                                                span: bytes(59123..59125),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Ptr {
                                            star_token: Star,
                                            const_token: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: u64,
                                                                span: bytes(59132..59135),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    },
                                ),
                                Comma,
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: mm_shift,
                                                span: bytes(59141..59149),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u32,
                                                            span: bytes(59151..59154),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                                Comma,
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: u64,
                                                    span: bytes(59161..59164),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Expr(
                                    Expr::Call {
                                        attrs: [],
                                        func: Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: ptr,
                                                            span: bytes(59171..59174),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                    PathSep,
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: write,
                                                            span: bytes(59176..59181),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        paren_token: Paren,
                                        args: [
                                            Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: vp,
                                                                span: bytes(59182..59184),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            Comma,
                                            Expr::Call {
                                                attrs: [],
                                                func: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: mul_shift_64,
                                                                    span: bytes(59186..59198),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                paren_token: Paren,
                                                args: [
                                                    Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Binary {
                                                            attrs: [],
                                                            left: Expr::Lit {
                                                                attrs: [],
                                                                lit: Lit::Int {
                                                                    token: 4,
                                                                },
                                                            },
                                                            op: BinOp::Mul(
                                                                Star,
                                                            ),
                                                            right: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: m,
                                                                                span: bytes(59203..59204),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                        op: BinOp::Add(
                                                            Plus,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 2,
                                                            },
                                                        },
                                                    },
                                                    Comma,
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: mul,
                                                                        span: bytes(59210..59213),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    Comma,
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: j,
                                                                        span: bytes(59215..59216),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                        ],
                                    },
                                    Some(
                                        Semi,
                                    ),
                                ),
                                Stmt::Expr(
                                    Expr::Call {
                                        attrs: [],
                                        func: Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: ptr,
                                                            span: bytes(59224..59227),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                    PathSep,
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: write,
                                                            span: bytes(59229..59234),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        paren_token: Paren,
                                        args: [
                                            Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: vm,
                                                                span: bytes(59235..59237),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            Comma,
                                            Expr::Call {
                                                attrs: [],
                                                func: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: mul_shift_64,
                                                                    span: bytes(59239..59251),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                paren_token: Paren,
                                                args: [
                                                    Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Binary {
                                                            attrs: [],
                                                            left: Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 4,
                                                                    },
                                                                },
                                                                op: BinOp::Mul(
                                                                    Star,
                                                                ),
                                                                right: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: m,
                                                                                    span: bytes(59256..59257),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                            op: BinOp::Sub(
                                                                Minus,
                                                            ),
                                                            right: Expr::Lit {
                                                                attrs: [],
                                                                lit: Lit::Int {
                                                                    token: 1,
                                                                },
                                                            },
                                                        },
                                                        op: BinOp::Sub(
                                                            Minus,
                                                        ),
                                                        right: Expr::Cast {
                                                            attrs: [],
                                                            expr: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: mm_shift,
                                                                                span: bytes(59264..59272),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            as_token: As,
                                                            ty: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: u64,
                                                                                span: bytes(59276..59279),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                    Comma,
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: mul,
                                                                        span: bytes(59281..59284),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    Comma,
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: j,
                                                                        span: bytes(59286..59287),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                        ],
                                    },
                                    Some(
                                        Semi,
                                    ),
                                ),
                                Stmt::Expr(
                                    Expr::Call {
                                        attrs: [],
                                        func: Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: mul_shift_64,
                                                            span: bytes(59295..59307),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        paren_token: Paren,
                                        args: [
                                            Expr::Binary {
                                                attrs: [],
                                                left: Expr::Lit {
                                                    attrs: [],
                                                    lit: Lit::Int {
                                                        token: 4,
                                                    },
                                                },
                                                op: BinOp::Mul(
                                                    Star,
                                                ),
                                                right: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: m,
                                                                    span: bytes(59312..59313),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                            Comma,
                                            Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: mul,
                                                                span: bytes(59315..59318),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            Comma,
                                            Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: j,
                                                                span: bytes(59320..59321),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: PubT,
            },
        ),
    },
    "ryu::buffer::Buffer::format_finite": FnData {
        fn_name: "format_finite",
        complete_fn_name: "ryu::buffer::Buffer::format_finite",
        fn_type: ImplFn(
            ImplFnItem {
                fn_name: Name {
                    name: "format_finite",
                    complete_name: "ryu::buffer::Buffer::format_finite",
                    import_name: MyPath {
                        name: "ryu",
                        next: Some(
                            MyPath {
                                name: "buffer",
                                next: Some(
                                    MyPath {
                                        name: "Buffer",
                                        next: Some(
                                            MyPath {
                                                name: "format_finite",
                                                next: None,
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "{impl#0}::format_finite",
                item: Some(
                    ImplItemFn {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident {
                                                sym: inline,
                                                span: bytes(6327..6333),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                    ],
                                },
                            },
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::List {
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: cfg_attr,
                                                    span: bytes(6341..6349),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                    delimiter: MacroDelimiter::Paren(
                                        Paren,
                                    ),
                                    tokens: TokenStream [
                                        Ident {
                                            sym: feature,
                                            span: bytes(6350..6357),
                                        },
                                        Punct {
                                            char: '=',
                                            spacing: Alone,
                                            span: bytes(6358..6359),
                                        },
                                        Literal {
                                            lit: "no-panic",
                                            span: bytes(6360..6370),
                                        },
                                        Punct {
                                            char: ',',
                                            spacing: Alone,
                                            span: bytes(6370..6371),
                                        },
                                        Ident {
                                            sym: no_panic,
                                            span: bytes(6372..6380),
                                        },
                                    ],
                                },
                            },
                        ],
                        vis: Visibility::Public(
                            Pub,
                        ),
                        defaultness: None,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: format_finite,
                                span: bytes(6394..6407),
                            },
                            generics: Generics {
                                lt_token: Some(
                                    Lt,
                                ),
                                params: [
                                    GenericParam::Type(
                                        TypeParam {
                                            attrs: [],
                                            ident: Ident {
                                                sym: F,
                                                span: bytes(6408..6409),
                                            },
                                            colon_token: Some(
                                                Colon,
                                            ),
                                            bounds: [
                                                TypeParamBound::Trait(
                                                    TraitBound {
                                                        paren_token: None,
                                                        modifier: TraitBoundModifier::None,
                                                        lifetimes: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Float,
                                                                        span: bytes(6411..6416),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                            ],
                                            eq_token: None,
                                            default: None,
                                        },
                                    ),
                                ],
                                gt_token: Some(
                                    Gt,
                                ),
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Receiver(
                                    Receiver {
                                        attrs: [],
                                        reference: Some(
                                            (
                                                And,
                                                None,
                                            ),
                                        ),
                                        mutability: Some(
                                            Mut,
                                        ),
                                        self_token: SelfValue,
                                        colon_token: None,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Self,
                                                                span: bytes(6423..6427),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    },
                                ),
                                Comma,
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: f,
                                                span: bytes(6429..6430),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: F,
                                                            span: bytes(6432..6433),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Reference {
                                    and_token: And,
                                    lifetime: None,
                                    mutability: None,
                                    elem: Type::Path {
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: str,
                                                        span: bytes(6439..6442),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Expr(
                                    Expr::Unsafe {
                                        attrs: [],
                                        unsafe_token: Unsafe,
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: n,
                                                            span: bytes(6478..6479),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: f,
                                                                                    span: bytes(6482..6483),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: write_to_ryu_buffer,
                                                                    span: bytes(6484..6503),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Cast {
                                                                        attrs: [],
                                                                        expr: Expr::MethodCall {
                                                                            attrs: [],
                                                                            receiver: Expr::Field {
                                                                                attrs: [],
                                                                                base: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: self,
                                                                                                    span: bytes(6504..6508),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                dot_token: Dot,
                                                                                member: Member::Named(
                                                                                    Ident {
                                                                                        sym: bytes,
                                                                                        span: bytes(6509..6514),
                                                                                    },
                                                                                ),
                                                                            },
                                                                            dot_token: Dot,
                                                                            method: Ident {
                                                                                sym: as_mut_ptr,
                                                                                span: bytes(6515..6525),
                                                                            },
                                                                            turbofish: None,
                                                                            paren_token: Paren,
                                                                            args: [],
                                                                        },
                                                                        as_token: As,
                                                                        ty: Type::Ptr {
                                                                            star_token: Star,
                                                                            const_token: None,
                                                                            mutability: Some(
                                                                                Mut,
                                                                            ),
                                                                            elem: Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: u8,
                                                                                                span: bytes(6536..6538),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Macro {
                                                    attrs: [],
                                                    mac: Macro {
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: debug_assert,
                                                                        span: bytes(6553..6565),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                        bang_token: Not,
                                                        delimiter: MacroDelimiter::Paren(
                                                            Paren,
                                                        ),
                                                        tokens: TokenStream [
                                                            Ident {
                                                                sym: n,
                                                                span: bytes(6567..6568),
                                                            },
                                                            Punct {
                                                                char: '<',
                                                                spacing: Joint,
                                                                span: bytes(6569..6570),
                                                            },
                                                            Punct {
                                                                char: '=',
                                                                spacing: Alone,
                                                                span: bytes(6570..6571),
                                                            },
                                                            Ident {
                                                                sym: self,
                                                                span: bytes(6572..6576),
                                                            },
                                                            Punct {
                                                                char: '.',
                                                                spacing: Alone,
                                                                span: bytes(6576..6577),
                                                            },
                                                            Ident {
                                                                sym: bytes,
                                                                span: bytes(6577..6582),
                                                            },
                                                            Punct {
                                                                char: '.',
                                                                spacing: Alone,
                                                                span: bytes(6582..6583),
                                                            },
                                                            Ident {
                                                                sym: len,
                                                                span: bytes(6583..6586),
                                                            },
                                                            Group {
                                                                delimiter: Parenthesis,
                                                                stream: TokenStream [],
                                                                span: bytes(6586..6588),
                                                            },
                                                        ],
                                                    },
                                                    semi_token: Some(
                                                        Semi,
                                                    ),
                                                },
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: slice,
                                                            span: bytes(6607..6612),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::Call {
                                                                attrs: [],
                                                                func: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: slice,
                                                                                    span: bytes(6615..6620),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: from_raw_parts,
                                                                                    span: bytes(6622..6636),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Cast {
                                                                        attrs: [],
                                                                        expr: Expr::MethodCall {
                                                                            attrs: [],
                                                                            receiver: Expr::Field {
                                                                                attrs: [],
                                                                                base: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: self,
                                                                                                    span: bytes(6637..6641),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                dot_token: Dot,
                                                                                member: Member::Named(
                                                                                    Ident {
                                                                                        sym: bytes,
                                                                                        span: bytes(6642..6647),
                                                                                    },
                                                                                ),
                                                                            },
                                                                            dot_token: Dot,
                                                                            method: Ident {
                                                                                sym: as_ptr,
                                                                                span: bytes(6648..6654),
                                                                            },
                                                                            turbofish: None,
                                                                            paren_token: Paren,
                                                                            args: [],
                                                                        },
                                                                        as_token: As,
                                                                        ty: Type::Ptr {
                                                                            star_token: Star,
                                                                            const_token: Some(
                                                                                Const,
                                                                            ),
                                                                            mutability: None,
                                                                            elem: Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: u8,
                                                                                                span: bytes(6667..6669),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        },
                                                                    },
                                                                    Comma,
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: n,
                                                                                        span: bytes(6671..6672),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Expr(
                                                    Expr::Call {
                                                        attrs: [],
                                                        func: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: str,
                                                                            span: bytes(6687..6690),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: from_utf8_unchecked,
                                                                            span: bytes(6692..6711),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        paren_token: Paren,
                                                        args: [
                                                            Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: slice,
                                                                                span: bytes(6712..6717),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: PubT,
                is_constructor: false,
            },
            ImplItem {
                impl_num: 0,
                struct_name: Name {
                    name: "Buffer",
                    complete_name: "ryu::buffer::Buffer",
                    import_name: MyPath {
                        name: "ryu",
                        next: Some(
                            MyPath {
                                name: "buffer",
                                next: Some(
                                    MyPath {
                                        name: "Buffer",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                trait_name: None,
                item: Some(
                    ItemImpl {
                        attrs: [],
                        defaultness: None,
                        unsafety: None,
                        impl_token: Impl,
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        trait_: None,
                        self_ty: Type::Path {
                            qself: None,
                            path: Path {
                                leading_colon: None,
                                segments: [
                                    PathSegment {
                                        ident: Ident {
                                            sym: Buffer,
                                            span: bytes(4567..4573),
                                        },
                                        arguments: PathArguments::None,
                                    },
                                ],
                            },
                        },
                        brace_token: Brace,
                        items: [],
                    },
                ),
                types: [],
                consts: [],
                functions: [
                    ImplFnItem {
                        fn_name: Name {
                            name: "new",
                            complete_name: "ryu::buffer::Buffer::new",
                            import_name: MyPath {
                                name: "ryu",
                                next: Some(
                                    MyPath {
                                        name: "buffer",
                                        next: Some(
                                            MyPath {
                                                name: "Buffer",
                                                next: Some(
                                                    MyPath {
                                                        name: "new",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#0}::new",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(4687..4693),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::List {
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: cfg_attr,
                                                            span: bytes(4701..4709),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                            delimiter: MacroDelimiter::Paren(
                                                Paren,
                                            ),
                                            tokens: TokenStream [
                                                Ident {
                                                    sym: feature,
                                                    span: bytes(4710..4717),
                                                },
                                                Punct {
                                                    char: '=',
                                                    spacing: Alone,
                                                    span: bytes(4718..4719),
                                                },
                                                Literal {
                                                    lit: "no-panic",
                                                    span: bytes(4720..4730),
                                                },
                                                Punct {
                                                    char: ',',
                                                    spacing: Alone,
                                                    span: bytes(4730..4731),
                                                },
                                                Ident {
                                                    sym: no_panic,
                                                    span: bytes(4732..4740),
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: new,
                                        span: bytes(4754..4757),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Self,
                                                            span: bytes(4763..4767),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: None,
                                                ident: Ident {
                                                    sym: bytes,
                                                    span: bytes(4782..4787),
                                                },
                                                subpat: None,
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Repeat {
                                                        attrs: [],
                                                        bracket_token: Bracket,
                                                        expr: Expr::Call {
                                                            attrs: [],
                                                            func: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: MaybeUninit,
                                                                                span: bytes(4791..4802),
                                                                            },
                                                                            arguments: PathArguments::AngleBracketed {
                                                                                colon2_token: Some(
                                                                                    PathSep,
                                                                                ),
                                                                                lt_token: Lt,
                                                                                args: [
                                                                                    GenericArgument::Type(
                                                                                        Type::Path {
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: u8,
                                                                                                            span: bytes(4805..4807),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                                gt_token: Gt,
                                                                            },
                                                                        },
                                                                        PathSep,
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: uninit,
                                                                                span: bytes(4810..4816),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            paren_token: Paren,
                                                            args: [],
                                                        },
                                                        semi_token: Semi,
                                                        len: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 24,
                                                            },
                                                        },
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Expr(
                                            Expr::Struct {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Buffer,
                                                                span: bytes(4833..4839),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                brace_token: Brace,
                                                fields: [
                                                    FieldValue {
                                                        attrs: [],
                                                        member: Member::Named(
                                                            Ident {
                                                                sym: bytes,
                                                                span: bytes(4842..4847),
                                                            },
                                                        ),
                                                        colon_token: None,
                                                        expr: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: bytes,
                                                                            span: bytes(4842..4847),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                ],
                                                dot2_token: None,
                                                rest: None,
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                        is_constructor: true,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "format",
                            complete_name: "ryu::buffer::Buffer::format",
                            import_name: MyPath {
                                name: "ryu",
                                next: Some(
                                    MyPath {
                                        name: "buffer",
                                        next: Some(
                                            MyPath {
                                                name: "Buffer",
                                                next: Some(
                                                    MyPath {
                                                        name: "format",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#0}::format",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::List {
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: cfg_attr,
                                                            span: bytes(5376..5384),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                            delimiter: MacroDelimiter::Paren(
                                                Paren,
                                            ),
                                            tokens: TokenStream [
                                                Ident {
                                                    sym: feature,
                                                    span: bytes(5385..5392),
                                                },
                                                Punct {
                                                    char: '=',
                                                    spacing: Alone,
                                                    span: bytes(5393..5394),
                                                },
                                                Literal {
                                                    lit: "no-panic",
                                                    span: bytes(5395..5405),
                                                },
                                                Punct {
                                                    char: ',',
                                                    spacing: Alone,
                                                    span: bytes(5405..5406),
                                                },
                                                Ident {
                                                    sym: inline,
                                                    span: bytes(5407..5413),
                                                },
                                            ],
                                        },
                                    },
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::List {
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: cfg_attr,
                                                            span: bytes(5422..5430),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                            delimiter: MacroDelimiter::Paren(
                                                Paren,
                                            ),
                                            tokens: TokenStream [
                                                Ident {
                                                    sym: feature,
                                                    span: bytes(5431..5438),
                                                },
                                                Punct {
                                                    char: '=',
                                                    spacing: Alone,
                                                    span: bytes(5439..5440),
                                                },
                                                Literal {
                                                    lit: "no-panic",
                                                    span: bytes(5441..5451),
                                                },
                                                Punct {
                                                    char: ',',
                                                    spacing: Alone,
                                                    span: bytes(5451..5452),
                                                },
                                                Ident {
                                                    sym: no_panic,
                                                    span: bytes(5453..5461),
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: format,
                                        span: bytes(5475..5481),
                                    },
                                    generics: Generics {
                                        lt_token: Some(
                                            Lt,
                                        ),
                                        params: [
                                            GenericParam::Type(
                                                TypeParam {
                                                    attrs: [],
                                                    ident: Ident {
                                                        sym: F,
                                                        span: bytes(5482..5483),
                                                    },
                                                    colon_token: Some(
                                                        Colon,
                                                    ),
                                                    bounds: [
                                                        TypeParamBound::Trait(
                                                            TraitBound {
                                                                paren_token: None,
                                                                modifier: TraitBoundModifier::None,
                                                                lifetimes: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Float,
                                                                                span: bytes(5485..5490),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    eq_token: None,
                                                    default: None,
                                                },
                                            ),
                                        ],
                                        gt_token: Some(
                                            Gt,
                                        ),
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(5497..5501),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: f,
                                                        span: bytes(5503..5504),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: F,
                                                                    span: bytes(5506..5507),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: None,
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: str,
                                                                span: bytes(5513..5516),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                        is_constructor: false,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "format_finite",
                            complete_name: "ryu::buffer::Buffer::format_finite",
                            import_name: MyPath {
                                name: "ryu",
                                next: Some(
                                    MyPath {
                                        name: "buffer",
                                        next: Some(
                                            MyPath {
                                                name: "Buffer",
                                                next: Some(
                                                    MyPath {
                                                        name: "format_finite",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#0}::format_finite",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(6327..6333),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::List {
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: cfg_attr,
                                                            span: bytes(6341..6349),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                            delimiter: MacroDelimiter::Paren(
                                                Paren,
                                            ),
                                            tokens: TokenStream [
                                                Ident {
                                                    sym: feature,
                                                    span: bytes(6350..6357),
                                                },
                                                Punct {
                                                    char: '=',
                                                    spacing: Alone,
                                                    span: bytes(6358..6359),
                                                },
                                                Literal {
                                                    lit: "no-panic",
                                                    span: bytes(6360..6370),
                                                },
                                                Punct {
                                                    char: ',',
                                                    spacing: Alone,
                                                    span: bytes(6370..6371),
                                                },
                                                Ident {
                                                    sym: no_panic,
                                                    span: bytes(6372..6380),
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: format_finite,
                                        span: bytes(6394..6407),
                                    },
                                    generics: Generics {
                                        lt_token: Some(
                                            Lt,
                                        ),
                                        params: [
                                            GenericParam::Type(
                                                TypeParam {
                                                    attrs: [],
                                                    ident: Ident {
                                                        sym: F,
                                                        span: bytes(6408..6409),
                                                    },
                                                    colon_token: Some(
                                                        Colon,
                                                    ),
                                                    bounds: [
                                                        TypeParamBound::Trait(
                                                            TraitBound {
                                                                paren_token: None,
                                                                modifier: TraitBoundModifier::None,
                                                                lifetimes: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Float,
                                                                                span: bytes(6411..6416),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    eq_token: None,
                                                    default: None,
                                                },
                                            ),
                                        ],
                                        gt_token: Some(
                                            Gt,
                                        ),
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(6423..6427),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: f,
                                                        span: bytes(6429..6430),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: F,
                                                                    span: bytes(6432..6433),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: None,
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: str,
                                                                span: bytes(6439..6442),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                        is_constructor: false,
                    },
                ],
                relative_types: [],
            },
        ),
    },
    "ryu::pretty::mantissa::write_mantissa_long": FnData {
        fn_name: "write_mantissa_long",
        complete_fn_name: "ryu::pretty::mantissa::write_mantissa_long",
        fn_type: Fn(
            FnItem {
                fn_name: Name {
                    name: "write_mantissa_long",
                    complete_name: "ryu::pretty::mantissa::write_mantissa_long",
                    import_name: MyPath {
                        name: "ryu",
                        next: Some(
                            MyPath {
                                name: "pretty",
                                next: Some(
                                    MyPath {
                                        name: "mantissa",
                                        next: Some(
                                            MyPath {
                                                name: "write_mantissa_long",
                                                next: None,
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "write_mantissa_long",
                item: Some(
                    ItemFn {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::List {
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: cfg_attr,
                                                    span: bytes(85872..85880),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                    delimiter: MacroDelimiter::Paren(
                                        Paren,
                                    ),
                                    tokens: TokenStream [
                                        Ident {
                                            sym: feature,
                                            span: bytes(85881..85888),
                                        },
                                        Punct {
                                            char: '=',
                                            spacing: Alone,
                                            span: bytes(85889..85890),
                                        },
                                        Literal {
                                            lit: "no-panic",
                                            span: bytes(85891..85901),
                                        },
                                        Punct {
                                            char: ',',
                                            spacing: Alone,
                                            span: bytes(85901..85902),
                                        },
                                        Ident {
                                            sym: inline,
                                            span: bytes(85903..85909),
                                        },
                                    ],
                                },
                            },
                        ],
                        vis: Visibility::Public(
                            Pub,
                        ),
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: Some(
                                Unsafe,
                            ),
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: write_mantissa_long,
                                span: bytes(85926..85945),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            ident: Ident {
                                                sym: output,
                                                span: bytes(85950..85956),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u64,
                                                            span: bytes(85958..85961),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                                Comma,
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            ident: Ident {
                                                sym: result,
                                                span: bytes(85967..85973),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Ptr {
                                            star_token: Star,
                                            const_token: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: u8,
                                                                span: bytes(85980..85982),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Default,
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Expr(
                                    Expr::If {
                                        attrs: [],
                                        if_token: If,
                                        cond: Expr::Binary {
                                            attrs: [],
                                            left: Expr::Paren {
                                                attrs: [],
                                                paren_token: Paren,
                                                expr: Expr::Binary {
                                                    attrs: [],
                                                    left: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: output,
                                                                        span: bytes(85994..86000),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    op: BinOp::Shr(
                                                        Shr,
                                                    ),
                                                    right: Expr::Lit {
                                                        attrs: [],
                                                        lit: Lit::Int {
                                                            token: 32,
                                                        },
                                                    },
                                                },
                                            },
                                            op: BinOp::Ne(
                                                Ne,
                                            ),
                                            right: Expr::Lit {
                                                attrs: [],
                                                lit: Lit::Int {
                                                    token: 0,
                                                },
                                            },
                                        },
                                        then_branch: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: Some(
                                                            Mut,
                                                        ),
                                                        ident: Ident {
                                                            sym: output2,
                                                            span: bytes(86073..86080),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::Cast {
                                                                attrs: [],
                                                                expr: Expr::Paren {
                                                                    attrs: [],
                                                                    paren_token: Paren,
                                                                    expr: Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: output,
                                                                                            span: bytes(86084..86090),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        op: BinOp::Sub(
                                                                            Minus,
                                                                        ),
                                                                        right: Expr::Binary {
                                                                            attrs: [],
                                                                            left: Expr::Lit {
                                                                                attrs: [],
                                                                                lit: Lit::Int {
                                                                                    token: 100_000_000,
                                                                                },
                                                                            },
                                                                            op: BinOp::Mul(
                                                                                Star,
                                                                            ),
                                                                            right: Expr::Paren {
                                                                                attrs: [],
                                                                                paren_token: Paren,
                                                                                expr: Expr::Binary {
                                                                                    attrs: [],
                                                                                    left: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: output,
                                                                                                        span: bytes(86108..86114),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    op: BinOp::Div(
                                                                                        Slash,
                                                                                    ),
                                                                                    right: Expr::Lit {
                                                                                        attrs: [],
                                                                                        lit: Lit::Int {
                                                                                            token: 100_000_000,
                                                                                        },
                                                                                    },
                                                                                },
                                                                            },
                                                                        },
                                                                    },
                                                                },
                                                                as_token: As,
                                                                ty: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: u32,
                                                                                    span: bytes(86134..86137),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Expr(
                                                    Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: output,
                                                                            span: bytes(86147..86153),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        op: BinOp::DivAssign(
                                                            SlashEq,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 100_000_000,
                                                            },
                                                        },
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: c,
                                                            span: bytes(86183..86184),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: output2,
                                                                                    span: bytes(86187..86194),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                op: BinOp::Rem(
                                                                    Percent,
                                                                ),
                                                                right: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 10_000,
                                                                    },
                                                                },
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Expr(
                                                    Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: output2,
                                                                            span: bytes(86213..86220),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        op: BinOp::DivAssign(
                                                            SlashEq,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 10_000,
                                                            },
                                                        },
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: d,
                                                            span: bytes(86244..86245),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: output2,
                                                                                    span: bytes(86248..86255),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                op: BinOp::Rem(
                                                                    Percent,
                                                                ),
                                                                right: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 10_000,
                                                                    },
                                                                },
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: c0,
                                                            span: bytes(86278..86280),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Paren {
                                                                    attrs: [],
                                                                    paren_token: Paren,
                                                                    expr: Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: c,
                                                                                            span: bytes(86284..86285),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        op: BinOp::Rem(
                                                                            Percent,
                                                                        ),
                                                                        right: Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Int {
                                                                                token: 100,
                                                                            },
                                                                        },
                                                                    },
                                                                },
                                                                op: BinOp::Shl(
                                                                    Shl,
                                                                ),
                                                                right: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 1,
                                                                    },
                                                                },
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: c1,
                                                            span: bytes(86311..86313),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Paren {
                                                                    attrs: [],
                                                                    paren_token: Paren,
                                                                    expr: Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: c,
                                                                                            span: bytes(86317..86318),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        op: BinOp::Div(
                                                                            Slash,
                                                                        ),
                                                                        right: Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Int {
                                                                                token: 100,
                                                                            },
                                                                        },
                                                                    },
                                                                },
                                                                op: BinOp::Shl(
                                                                    Shl,
                                                                ),
                                                                right: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 1,
                                                                    },
                                                                },
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: d0,
                                                            span: bytes(86344..86346),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Paren {
                                                                    attrs: [],
                                                                    paren_token: Paren,
                                                                    expr: Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: d,
                                                                                            span: bytes(86350..86351),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        op: BinOp::Rem(
                                                                            Percent,
                                                                        ),
                                                                        right: Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Int {
                                                                                token: 100,
                                                                            },
                                                                        },
                                                                    },
                                                                },
                                                                op: BinOp::Shl(
                                                                    Shl,
                                                                ),
                                                                right: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 1,
                                                                    },
                                                                },
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: d1,
                                                            span: bytes(86377..86379),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Paren {
                                                                    attrs: [],
                                                                    paren_token: Paren,
                                                                    expr: Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: d,
                                                                                            span: bytes(86383..86384),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        op: BinOp::Div(
                                                                            Slash,
                                                                        ),
                                                                        right: Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Int {
                                                                                token: 100,
                                                                            },
                                                                        },
                                                                    },
                                                                },
                                                                op: BinOp::Shl(
                                                                    Shl,
                                                                ),
                                                                right: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 1,
                                                                    },
                                                                },
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Expr(
                                                    Expr::Call {
                                                        attrs: [],
                                                        func: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: ptr,
                                                                            span: bytes(86406..86409),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: copy_nonoverlapping,
                                                                            span: bytes(86411..86430),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        paren_token: Paren,
                                                        args: [
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::MethodCall {
                                                                    attrs: [],
                                                                    receiver: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: DIGIT_TABLE,
                                                                                        span: bytes(86444..86455),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    method: Ident {
                                                                        sym: as_ptr,
                                                                        span: bytes(86456..86462),
                                                                    },
                                                                    turbofish: None,
                                                                    paren_token: Paren,
                                                                    args: [],
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: offset,
                                                                    span: bytes(86465..86471),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Cast {
                                                                        attrs: [],
                                                                        expr: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: c0,
                                                                                            span: bytes(86472..86474),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        as_token: As,
                                                                        ty: Type::Path {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: isize,
                                                                                            span: bytes(86478..86483),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            Comma,
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: result,
                                                                                    span: bytes(86498..86504),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: offset,
                                                                    span: bytes(86505..86511),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Unary {
                                                                        attrs: [],
                                                                        op: UnOp::Neg(
                                                                            Minus,
                                                                        ),
                                                                        expr: Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Int {
                                                                                token: 2,
                                                                            },
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            Comma,
                                                            Expr::Lit {
                                                                attrs: [],
                                                                lit: Lit::Int {
                                                                    token: 2,
                                                                },
                                                            },
                                                            Comma,
                                                        ],
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                                Stmt::Expr(
                                                    Expr::Call {
                                                        attrs: [],
                                                        func: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: ptr,
                                                                            span: bytes(86551..86554),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: copy_nonoverlapping,
                                                                            span: bytes(86556..86575),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        paren_token: Paren,
                                                        args: [
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::MethodCall {
                                                                    attrs: [],
                                                                    receiver: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: DIGIT_TABLE,
                                                                                        span: bytes(86589..86600),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    method: Ident {
                                                                        sym: as_ptr,
                                                                        span: bytes(86601..86607),
                                                                    },
                                                                    turbofish: None,
                                                                    paren_token: Paren,
                                                                    args: [],
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: offset,
                                                                    span: bytes(86610..86616),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Cast {
                                                                        attrs: [],
                                                                        expr: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: c1,
                                                                                            span: bytes(86617..86619),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        as_token: As,
                                                                        ty: Type::Path {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: isize,
                                                                                            span: bytes(86623..86628),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            Comma,
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: result,
                                                                                    span: bytes(86643..86649),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: offset,
                                                                    span: bytes(86650..86656),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Unary {
                                                                        attrs: [],
                                                                        op: UnOp::Neg(
                                                                            Minus,
                                                                        ),
                                                                        expr: Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Int {
                                                                                token: 4,
                                                                            },
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            Comma,
                                                            Expr::Lit {
                                                                attrs: [],
                                                                lit: Lit::Int {
                                                                    token: 2,
                                                                },
                                                            },
                                                            Comma,
                                                        ],
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                                Stmt::Expr(
                                                    Expr::Call {
                                                        attrs: [],
                                                        func: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: ptr,
                                                                            span: bytes(86696..86699),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: copy_nonoverlapping,
                                                                            span: bytes(86701..86720),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        paren_token: Paren,
                                                        args: [
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::MethodCall {
                                                                    attrs: [],
                                                                    receiver: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: DIGIT_TABLE,
                                                                                        span: bytes(86734..86745),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    method: Ident {
                                                                        sym: as_ptr,
                                                                        span: bytes(86746..86752),
                                                                    },
                                                                    turbofish: None,
                                                                    paren_token: Paren,
                                                                    args: [],
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: offset,
                                                                    span: bytes(86755..86761),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Cast {
                                                                        attrs: [],
                                                                        expr: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: d0,
                                                                                            span: bytes(86762..86764),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        as_token: As,
                                                                        ty: Type::Path {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: isize,
                                                                                            span: bytes(86768..86773),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            Comma,
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: result,
                                                                                    span: bytes(86788..86794),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: offset,
                                                                    span: bytes(86795..86801),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Unary {
                                                                        attrs: [],
                                                                        op: UnOp::Neg(
                                                                            Minus,
                                                                        ),
                                                                        expr: Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Int {
                                                                                token: 6,
                                                                            },
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            Comma,
                                                            Expr::Lit {
                                                                attrs: [],
                                                                lit: Lit::Int {
                                                                    token: 2,
                                                                },
                                                            },
                                                            Comma,
                                                        ],
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                                Stmt::Expr(
                                                    Expr::Call {
                                                        attrs: [],
                                                        func: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: ptr,
                                                                            span: bytes(86841..86844),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: copy_nonoverlapping,
                                                                            span: bytes(86846..86865),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        paren_token: Paren,
                                                        args: [
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::MethodCall {
                                                                    attrs: [],
                                                                    receiver: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: DIGIT_TABLE,
                                                                                        span: bytes(86879..86890),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    method: Ident {
                                                                        sym: as_ptr,
                                                                        span: bytes(86891..86897),
                                                                    },
                                                                    turbofish: None,
                                                                    paren_token: Paren,
                                                                    args: [],
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: offset,
                                                                    span: bytes(86900..86906),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Cast {
                                                                        attrs: [],
                                                                        expr: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: d1,
                                                                                            span: bytes(86907..86909),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        as_token: As,
                                                                        ty: Type::Path {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: isize,
                                                                                            span: bytes(86913..86918),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            Comma,
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: result,
                                                                                    span: bytes(86933..86939),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: offset,
                                                                    span: bytes(86940..86946),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Unary {
                                                                        attrs: [],
                                                                        op: UnOp::Neg(
                                                                            Minus,
                                                                        ),
                                                                        expr: Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Int {
                                                                                token: 8,
                                                                            },
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            Comma,
                                                            Expr::Lit {
                                                                attrs: [],
                                                                lit: Lit::Int {
                                                                    token: 2,
                                                                },
                                                            },
                                                            Comma,
                                                        ],
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                                Stmt::Expr(
                                                    Expr::Assign {
                                                        attrs: [],
                                                        left: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: result,
                                                                            span: bytes(86986..86992),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        eq_token: Eq,
                                                        right: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: result,
                                                                                span: bytes(86995..87001),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: offset,
                                                                span: bytes(87002..87008),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Unary {
                                                                    attrs: [],
                                                                    op: UnOp::Neg(
                                                                        Minus,
                                                                    ),
                                                                    expr: Expr::Lit {
                                                                        attrs: [],
                                                                        lit: Lit::Int {
                                                                            token: 8,
                                                                        },
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                            ],
                                        },
                                        else_branch: None,
                                    },
                                    None,
                                ),
                                Stmt::Expr(
                                    Expr::Call {
                                        attrs: [],
                                        func: Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: write_mantissa,
                                                            span: bytes(87024..87038),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        paren_token: Paren,
                                        args: [
                                            Expr::Cast {
                                                attrs: [],
                                                expr: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: output,
                                                                    span: bytes(87039..87045),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                as_token: As,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u32,
                                                                    span: bytes(87049..87052),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                            Comma,
                                            Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: result,
                                                                span: bytes(87054..87060),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                    },
                                    Some(
                                        Semi,
                                    ),
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: PubT,
            },
        ),
    },
    "ryu::d2s_intrinsics::div5": FnData {
        fn_name: "div5",
        complete_fn_name: "ryu::d2s_intrinsics::div5",
        fn_type: Fn(
            FnItem {
                fn_name: Name {
                    name: "div5",
                    complete_name: "ryu::d2s_intrinsics::div5",
                    import_name: MyPath {
                        name: "ryu",
                        next: Some(
                            MyPath {
                                name: "d2s_intrinsics",
                                next: Some(
                                    MyPath {
                                        name: "div5",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "div5",
                item: Some(
                    ItemFn {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::List {
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: cfg_attr,
                                                    span: bytes(57461..57469),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                    delimiter: MacroDelimiter::Paren(
                                        Paren,
                                    ),
                                    tokens: TokenStream [
                                        Ident {
                                            sym: feature,
                                            span: bytes(57470..57477),
                                        },
                                        Punct {
                                            char: '=',
                                            spacing: Alone,
                                            span: bytes(57478..57479),
                                        },
                                        Literal {
                                            lit: "no-panic",
                                            span: bytes(57480..57490),
                                        },
                                        Punct {
                                            char: ',',
                                            spacing: Alone,
                                            span: bytes(57490..57491),
                                        },
                                        Ident {
                                            sym: inline,
                                            span: bytes(57492..57498),
                                        },
                                    ],
                                },
                            },
                        ],
                        vis: Visibility::Public(
                            Pub,
                        ),
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: div5,
                                span: bytes(57508..57512),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: x,
                                                span: bytes(57513..57514),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u64,
                                                            span: bytes(57516..57519),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: u64,
                                                    span: bytes(57524..57527),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Expr(
                                    Expr::Binary {
                                        attrs: [],
                                        left: Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: x,
                                                            span: bytes(57534..57535),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        op: BinOp::Div(
                                            Slash,
                                        ),
                                        right: Expr::Lit {
                                            attrs: [],
                                            lit: Lit::Int {
                                                token: 5,
                                            },
                                        },
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: PubT,
            },
        ),
    },
    "<  as ryu::buffer::Sealed>::write_to_ryu_buffer": FnData {
        fn_name: "write_to_ryu_buffer",
        complete_fn_name: "<  as ryu::buffer::Sealed>::write_to_ryu_buffer",
        fn_type: TraitFn(
            TraitFnItem {
                fn_name: Name {
                    name: "write_to_ryu_buffer",
                    complete_name: "<  as ryu::buffer::Sealed>::write_to_ryu_buffer",
                    import_name: MyPath {
                        name: "<  as ryu",
                        next: Some(
                            MyPath {
                                name: "buffer",
                                next: Some(
                                    MyPath {
                                        name: "Sealed>",
                                        next: Some(
                                            MyPath {
                                                name: "write_to_ryu_buffer",
                                                next: None,
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "Sealed::write_to_ryu_buffer",
                item: Some(
                    TraitItemFn {
                        attrs: [],
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: Some(
                                Unsafe,
                            ),
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: write_to_ryu_buffer,
                                span: bytes(7514..7533),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Receiver(
                                    Receiver {
                                        attrs: [],
                                        reference: None,
                                        mutability: None,
                                        self_token: SelfValue,
                                        colon_token: None,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Self,
                                                            span: bytes(7534..7538),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                                Comma,
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: result,
                                                span: bytes(7540..7546),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Ptr {
                                            star_token: Star,
                                            const_token: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: u8,
                                                                span: bytes(7553..7555),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: usize,
                                                    span: bytes(7560..7565),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        default: None,
                        semi_token: Some(
                            Semi,
                        ),
                    },
                ),
                inside_items: [],
                is_constructor: false,
            },
            TraitItem {
                trait_name: Name {
                    name: "Sealed",
                    complete_name: "ryu::buffer::Sealed",
                    import_name: MyPath {
                        name: "ryu",
                        next: Some(
                            MyPath {
                                name: "buffer",
                                next: Some(
                                    MyPath {
                                        name: "Sealed",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                item: Some(
                    ItemTrait {
                        attrs: [],
                        vis: Visibility::Public(
                            Pub,
                        ),
                        unsafety: None,
                        auto_token: None,
                        restriction: None,
                        trait_token: Trait,
                        ident: Ident {
                            sym: Sealed,
                            span: bytes(7403..7409),
                        },
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        colon_token: Some(
                            Colon,
                        ),
                        supertraits: [
                            TypeParamBound::Trait(
                                TraitBound {
                                    paren_token: None,
                                    modifier: TraitBoundModifier::None,
                                    lifetimes: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: Copy,
                                                    span: bytes(7411..7415),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        ],
                        brace_token: Brace,
                        items: [],
                    },
                ),
                types: [],
                consts: [],
                functions: [
                    TraitFnItem {
                        fn_name: Name {
                            name: "is_nonfinite",
                            complete_name: "<  as ryu::buffer::Sealed>::is_nonfinite",
                            import_name: MyPath {
                                name: "<  as ryu",
                                next: Some(
                                    MyPath {
                                        name: "buffer",
                                        next: Some(
                                            MyPath {
                                                name: "Sealed>",
                                                next: Some(
                                                    MyPath {
                                                        name: "is_nonfinite",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "Sealed::is_nonfinite",
                        item: Some(
                            TraitItemFn {
                                attrs: [],
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: is_nonfinite,
                                        span: bytes(7425..7437),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: None,
                                                mutability: None,
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Self,
                                                                    span: bytes(7438..7442),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: bool,
                                                            span: bytes(7447..7451),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                default: None,
                                semi_token: Some(
                                    Semi,
                                ),
                            },
                        ),
                        inside_items: [],
                        is_constructor: false,
                    },
                    TraitFnItem {
                        fn_name: Name {
                            name: "format_nonfinite",
                            complete_name: "<  as ryu::buffer::Sealed>::format_nonfinite",
                            import_name: MyPath {
                                name: "<  as ryu",
                                next: Some(
                                    MyPath {
                                        name: "buffer",
                                        next: Some(
                                            MyPath {
                                                name: "Sealed>",
                                                next: Some(
                                                    MyPath {
                                                        name: "format_nonfinite",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "Sealed::format_nonfinite",
                        item: Some(
                            TraitItemFn {
                                attrs: [],
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: format_nonfinite,
                                        span: bytes(7460..7476),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: None,
                                                mutability: None,
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Self,
                                                                    span: bytes(7477..7481),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Reference {
                                            and_token: And,
                                            lifetime: Some(
                                                Lifetime {
                                                    apostrophe: bytes(7487..7488),
                                                    ident: Ident {
                                                        sym: static,
                                                        span: bytes(7488..7494),
                                                    },
                                                },
                                            ),
                                            mutability: None,
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: str,
                                                                span: bytes(7495..7498),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    ),
                                },
                                default: None,
                                semi_token: Some(
                                    Semi,
                                ),
                            },
                        ),
                        inside_items: [],
                        is_constructor: false,
                    },
                    TraitFnItem {
                        fn_name: Name {
                            name: "write_to_ryu_buffer",
                            complete_name: "<  as ryu::buffer::Sealed>::write_to_ryu_buffer",
                            import_name: MyPath {
                                name: "<  as ryu",
                                next: Some(
                                    MyPath {
                                        name: "buffer",
                                        next: Some(
                                            MyPath {
                                                name: "Sealed>",
                                                next: Some(
                                                    MyPath {
                                                        name: "write_to_ryu_buffer",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "Sealed::write_to_ryu_buffer",
                        item: Some(
                            TraitItemFn {
                                attrs: [],
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: Some(
                                        Unsafe,
                                    ),
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: write_to_ryu_buffer,
                                        span: bytes(7514..7533),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: None,
                                                mutability: None,
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Self,
                                                                    span: bytes(7534..7538),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: result,
                                                        span: bytes(7540..7546),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Ptr {
                                                    star_token: Star,
                                                    const_token: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: u8,
                                                                        span: bytes(7553..7555),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: usize,
                                                            span: bytes(7560..7565),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                default: None,
                                semi_token: Some(
                                    Semi,
                                ),
                            },
                        ),
                        inside_items: [],
                        is_constructor: false,
                    },
                ],
                visibility: PubT,
                relative_types: [
                    "Copy",
                ],
            },
        ),
    },
    "ryu::f2s::f2d": FnData {
        fn_name: "f2d",
        complete_fn_name: "ryu::f2s::f2d",
        fn_type: Fn(
            FnItem {
                fn_name: Name {
                    name: "f2d",
                    complete_name: "ryu::f2s::f2d",
                    import_name: MyPath {
                        name: "ryu",
                        next: Some(
                            MyPath {
                                name: "f2s",
                                next: Some(
                                    MyPath {
                                        name: "f2d",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "f2d",
                item: Some(
                    ItemFn {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::List {
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: cfg_attr,
                                                    span: bytes(67292..67300),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                    delimiter: MacroDelimiter::Paren(
                                        Paren,
                                    ),
                                    tokens: TokenStream [
                                        Ident {
                                            sym: feature,
                                            span: bytes(67301..67308),
                                        },
                                        Punct {
                                            char: '=',
                                            spacing: Alone,
                                            span: bytes(67309..67310),
                                        },
                                        Literal {
                                            lit: "no-panic",
                                            span: bytes(67311..67321),
                                        },
                                        Punct {
                                            char: ',',
                                            spacing: Alone,
                                            span: bytes(67321..67322),
                                        },
                                        Ident {
                                            sym: inline,
                                            span: bytes(67323..67329),
                                        },
                                    ],
                                },
                            },
                        ],
                        vis: Visibility::Public(
                            Pub,
                        ),
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: f2d,
                                span: bytes(67339..67342),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: ieee_mantissa,
                                                span: bytes(67343..67356),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u32,
                                                            span: bytes(67358..67361),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                                Comma,
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: ieee_exponent,
                                                span: bytes(67363..67376),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u32,
                                                            span: bytes(67378..67381),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: FloatingDecimal32,
                                                    span: bytes(67386..67403),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Tuple {
                                        attrs: [],
                                        paren_token: Paren,
                                        elems: [
                                            Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: None,
                                                ident: Ident {
                                                    sym: e2,
                                                    span: bytes(67415..67417),
                                                },
                                                subpat: None,
                                            },
                                            Comma,
                                            Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: None,
                                                ident: Ident {
                                                    sym: m2,
                                                    span: bytes(67419..67421),
                                                },
                                                subpat: None,
                                            },
                                        ],
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::If {
                                                attrs: [],
                                                if_token: If,
                                                cond: Expr::Binary {
                                                    attrs: [],
                                                    left: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: ieee_exponent,
                                                                        span: bytes(67428..67441),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    op: BinOp::Eq(
                                                        EqEq,
                                                    ),
                                                    right: Expr::Lit {
                                                        attrs: [],
                                                        lit: Lit::Int {
                                                            token: 0,
                                                        },
                                                    },
                                                },
                                                then_branch: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::Tuple {
                                                                attrs: [],
                                                                paren_token: Paren,
                                                                elems: [
                                                                    Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Binary {
                                                                            attrs: [],
                                                                            left: Expr::Binary {
                                                                                attrs: [],
                                                                                left: Expr::Lit {
                                                                                    attrs: [],
                                                                                    lit: Lit::Int {
                                                                                        token: 1,
                                                                                    },
                                                                                },
                                                                                op: BinOp::Sub(
                                                                                    Minus,
                                                                                ),
                                                                                right: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: FLOAT_BIAS,
                                                                                                    span: bytes(67558..67568),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            },
                                                                            op: BinOp::Sub(
                                                                                Minus,
                                                                            ),
                                                                            right: Expr::Cast {
                                                                                attrs: [],
                                                                                expr: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: FLOAT_MANTISSA_BITS,
                                                                                                    span: bytes(67571..67590),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                as_token: As,
                                                                                ty: Type::Path {
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: i32,
                                                                                                    span: bytes(67594..67597),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            },
                                                                        },
                                                                        op: BinOp::Sub(
                                                                            Minus,
                                                                        ),
                                                                        right: Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Int {
                                                                                token: 2,
                                                                            },
                                                                        },
                                                                    },
                                                                    Comma,
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: ieee_mantissa,
                                                                                        span: bytes(67615..67628),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    Comma,
                                                                ],
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                                else_branch: Some(
                                                    (
                                                        Else,
                                                        Expr::Block {
                                                            attrs: [],
                                                            label: None,
                                                            block: Block {
                                                                brace_token: Brace,
                                                                stmts: [
                                                                    Stmt::Expr(
                                                                        Expr::Tuple {
                                                                            attrs: [],
                                                                            paren_token: Paren,
                                                                            elems: [
                                                                                Expr::Binary {
                                                                                    attrs: [],
                                                                                    left: Expr::Binary {
                                                                                        attrs: [],
                                                                                        left: Expr::Binary {
                                                                                            attrs: [],
                                                                                            left: Expr::Cast {
                                                                                                attrs: [],
                                                                                                expr: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: ieee_exponent,
                                                                                                                    span: bytes(67675..67688),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                as_token: As,
                                                                                                ty: Type::Path {
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: i32,
                                                                                                                    span: bytes(67692..67695),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                            op: BinOp::Sub(
                                                                                                Minus,
                                                                                            ),
                                                                                            right: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: FLOAT_BIAS,
                                                                                                                span: bytes(67698..67708),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                        op: BinOp::Sub(
                                                                                            Minus,
                                                                                        ),
                                                                                        right: Expr::Cast {
                                                                                            attrs: [],
                                                                                            expr: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: FLOAT_MANTISSA_BITS,
                                                                                                                span: bytes(67711..67730),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            as_token: As,
                                                                                            ty: Type::Path {
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: i32,
                                                                                                                span: bytes(67734..67737),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                    op: BinOp::Sub(
                                                                                        Minus,
                                                                                    ),
                                                                                    right: Expr::Lit {
                                                                                        attrs: [],
                                                                                        lit: Lit::Int {
                                                                                            token: 2,
                                                                                        },
                                                                                    },
                                                                                },
                                                                                Comma,
                                                                                Expr::Binary {
                                                                                    attrs: [],
                                                                                    left: Expr::Paren {
                                                                                        attrs: [],
                                                                                        paren_token: Paren,
                                                                                        expr: Expr::Binary {
                                                                                            attrs: [],
                                                                                            left: Expr::Lit {
                                                                                                attrs: [],
                                                                                                lit: Lit::Int {
                                                                                                    token: 1u32,
                                                                                                },
                                                                                            },
                                                                                            op: BinOp::Shl(
                                                                                                Shl,
                                                                                            ),
                                                                                            right: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: FLOAT_MANTISSA_BITS,
                                                                                                                span: bytes(67764..67783),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                    op: BinOp::BitOr(
                                                                                        Or,
                                                                                    ),
                                                                                    right: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: ieee_mantissa,
                                                                                                        span: bytes(67787..67800),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                },
                                                                                Comma,
                                                                            ],
                                                                        },
                                                                        None,
                                                                    ),
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                ),
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: even,
                                            span: bytes(67827..67831),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Binary {
                                                attrs: [],
                                                left: Expr::Paren {
                                                    attrs: [],
                                                    paren_token: Paren,
                                                    expr: Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: m2,
                                                                            span: bytes(67835..67837),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        op: BinOp::BitAnd(
                                                            And,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 1,
                                                            },
                                                        },
                                                    },
                                                },
                                                op: BinOp::Eq(
                                                    EqEq,
                                                ),
                                                right: Expr::Lit {
                                                    attrs: [],
                                                    lit: Lit::Int {
                                                        token: 0,
                                                    },
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: accept_bounds,
                                            span: bytes(67857..67870),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: even,
                                                                span: bytes(67873..67877),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: mv,
                                            span: bytes(67960..67962),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Binary {
                                                attrs: [],
                                                left: Expr::Lit {
                                                    attrs: [],
                                                    lit: Lit::Int {
                                                        token: 4,
                                                    },
                                                },
                                                op: BinOp::Mul(
                                                    Star,
                                                ),
                                                right: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: m2,
                                                                    span: bytes(67969..67971),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: mp,
                                            span: bytes(67981..67983),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Binary {
                                                attrs: [],
                                                left: Expr::Binary {
                                                    attrs: [],
                                                    left: Expr::Lit {
                                                        attrs: [],
                                                        lit: Lit::Int {
                                                            token: 4,
                                                        },
                                                    },
                                                    op: BinOp::Mul(
                                                        Star,
                                                    ),
                                                    right: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: m2,
                                                                        span: bytes(67990..67992),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                                op: BinOp::Add(
                                                    Plus,
                                                ),
                                                right: Expr::Lit {
                                                    attrs: [],
                                                    lit: Lit::Int {
                                                        token: 2,
                                                    },
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: mm_shift,
                                            span: bytes(68069..68077),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Cast {
                                                attrs: [],
                                                expr: Expr::Paren {
                                                    attrs: [],
                                                    paren_token: Paren,
                                                    expr: Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Binary {
                                                            attrs: [],
                                                            left: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: ieee_mantissa,
                                                                                span: bytes(68081..68094),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            op: BinOp::Ne(
                                                                Ne,
                                                            ),
                                                            right: Expr::Lit {
                                                                attrs: [],
                                                                lit: Lit::Int {
                                                                    token: 0,
                                                                },
                                                            },
                                                        },
                                                        op: BinOp::Or(
                                                            OrOr,
                                                        ),
                                                        right: Expr::Binary {
                                                            attrs: [],
                                                            left: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: ieee_exponent,
                                                                                span: bytes(68103..68116),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            op: BinOp::Le(
                                                                Le,
                                                            ),
                                                            right: Expr::Lit {
                                                                attrs: [],
                                                                lit: Lit::Int {
                                                                    token: 1,
                                                                },
                                                            },
                                                        },
                                                    },
                                                },
                                                as_token: As,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u32,
                                                                    span: bytes(68126..68129),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: mm,
                                            span: bytes(68139..68141),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Binary {
                                                attrs: [],
                                                left: Expr::Binary {
                                                    attrs: [],
                                                    left: Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 4,
                                                            },
                                                        },
                                                        op: BinOp::Mul(
                                                            Star,
                                                        ),
                                                        right: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: m2,
                                                                            span: bytes(68148..68150),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                    op: BinOp::Sub(
                                                        Minus,
                                                    ),
                                                    right: Expr::Lit {
                                                        attrs: [],
                                                        lit: Lit::Int {
                                                            token: 1,
                                                        },
                                                    },
                                                },
                                                op: BinOp::Sub(
                                                    Minus,
                                                ),
                                                right: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: mm_shift,
                                                                    span: bytes(68157..68165),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Type {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            ident: Ident {
                                                sym: vr,
                                                span: bytes(68252..68254),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u32,
                                                            span: bytes(68256..68259),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                    init: None,
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Type {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            ident: Ident {
                                                sym: vp,
                                                span: bytes(68273..68275),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u32,
                                                            span: bytes(68277..68280),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                    init: None,
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Type {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            ident: Ident {
                                                sym: vm,
                                                span: bytes(68294..68296),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u32,
                                                            span: bytes(68298..68301),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                    init: None,
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Type {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: e10,
                                                span: bytes(68311..68314),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: i32,
                                                            span: bytes(68316..68319),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                    init: None,
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: Some(
                                            Mut,
                                        ),
                                        ident: Ident {
                                            sym: vm_is_trailing_zeros,
                                            span: bytes(68333..68353),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Lit {
                                                attrs: [],
                                                lit: Lit::Bool {
                                                    value: false,
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: Some(
                                            Mut,
                                        ),
                                        ident: Ident {
                                            sym: vr_is_trailing_zeros,
                                            span: bytes(68375..68395),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Lit {
                                                attrs: [],
                                                lit: Lit::Bool {
                                                    value: false,
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: Some(
                                            Mut,
                                        ),
                                        ident: Ident {
                                            sym: last_removed_digit,
                                            span: bytes(68417..68435),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Lit {
                                                attrs: [],
                                                lit: Lit::Int {
                                                    token: 0u8,
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Expr(
                                    Expr::If {
                                        attrs: [],
                                        if_token: If,
                                        cond: Expr::Binary {
                                            attrs: [],
                                            left: Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: e2,
                                                                span: bytes(68450..68452),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            op: BinOp::Ge(
                                                Ge,
                                            ),
                                            right: Expr::Lit {
                                                attrs: [],
                                                lit: Lit::Int {
                                                    token: 0,
                                                },
                                            },
                                        },
                                        then_branch: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: q,
                                                            span: bytes(68472..68473),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::Call {
                                                                attrs: [],
                                                                func: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: log10_pow2,
                                                                                    span: bytes(68476..68486),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: e2,
                                                                                        span: bytes(68487..68489),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Expr(
                                                    Expr::Assign {
                                                        attrs: [],
                                                        left: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: e10,
                                                                            span: bytes(68500..68503),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        eq_token: Eq,
                                                        right: Expr::Cast {
                                                            attrs: [],
                                                            expr: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: q,
                                                                                span: bytes(68506..68507),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            as_token: As,
                                                            ty: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: i32,
                                                                                span: bytes(68511..68514),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: k,
                                                            span: bytes(68528..68529),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Binary {
                                                                    attrs: [],
                                                                    left: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: FLOAT_POW5_INV_BITCOUNT,
                                                                                        span: bytes(68532..68555),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    op: BinOp::Add(
                                                                        Plus,
                                                                    ),
                                                                    right: Expr::Call {
                                                                        attrs: [],
                                                                        func: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: pow5bits,
                                                                                            span: bytes(68558..68566),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        paren_token: Paren,
                                                                        args: [
                                                                            Expr::Cast {
                                                                                attrs: [],
                                                                                expr: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: q,
                                                                                                    span: bytes(68567..68568),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                as_token: As,
                                                                                ty: Type::Path {
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: i32,
                                                                                                    span: bytes(68572..68575),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                op: BinOp::Sub(
                                                                    Minus,
                                                                ),
                                                                right: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 1,
                                                                    },
                                                                },
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: i,
                                                            span: bytes(68594..68595),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Binary {
                                                                    attrs: [],
                                                                    left: Expr::Unary {
                                                                        attrs: [],
                                                                        op: UnOp::Neg(
                                                                            Minus,
                                                                        ),
                                                                        expr: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: e2,
                                                                                            span: bytes(68599..68601),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                    op: BinOp::Add(
                                                                        Plus,
                                                                    ),
                                                                    right: Expr::Cast {
                                                                        attrs: [],
                                                                        expr: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: q,
                                                                                            span: bytes(68604..68605),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        as_token: As,
                                                                        ty: Type::Path {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: i32,
                                                                                            span: bytes(68609..68612),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                },
                                                                op: BinOp::Add(
                                                                    Plus,
                                                                ),
                                                                right: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: k,
                                                                                    span: bytes(68615..68616),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Expr(
                                                    Expr::Assign {
                                                        attrs: [],
                                                        left: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: vr,
                                                                            span: bytes(68626..68628),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        eq_token: Eq,
                                                        right: Expr::Call {
                                                            attrs: [],
                                                            func: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: mul_pow5_inv_div_pow2,
                                                                                span: bytes(68631..68652),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: mv,
                                                                                    span: bytes(68653..68655),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                Comma,
                                                                Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: q,
                                                                                    span: bytes(68657..68658),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                Comma,
                                                                Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: i,
                                                                                    span: bytes(68660..68661),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                                Stmt::Expr(
                                                    Expr::Assign {
                                                        attrs: [],
                                                        left: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: vp,
                                                                            span: bytes(68672..68674),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        eq_token: Eq,
                                                        right: Expr::Call {
                                                            attrs: [],
                                                            func: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: mul_pow5_inv_div_pow2,
                                                                                span: bytes(68677..68698),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: mp,
                                                                                    span: bytes(68699..68701),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                Comma,
                                                                Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: q,
                                                                                    span: bytes(68703..68704),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                Comma,
                                                                Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: i,
                                                                                    span: bytes(68706..68707),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                                Stmt::Expr(
                                                    Expr::Assign {
                                                        attrs: [],
                                                        left: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: vm,
                                                                            span: bytes(68718..68720),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        eq_token: Eq,
                                                        right: Expr::Call {
                                                            attrs: [],
                                                            func: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: mul_pow5_inv_div_pow2,
                                                                                span: bytes(68723..68744),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: mm,
                                                                                    span: bytes(68745..68747),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                Comma,
                                                                Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: q,
                                                                                    span: bytes(68749..68750),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                Comma,
                                                                Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: i,
                                                                                    span: bytes(68752..68753),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                                Stmt::Expr(
                                                    Expr::If {
                                                        attrs: [],
                                                        if_token: If,
                                                        cond: Expr::Binary {
                                                            attrs: [],
                                                            left: Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: q,
                                                                                    span: bytes(68767..68768),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                op: BinOp::Ne(
                                                                    Ne,
                                                                ),
                                                                right: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 0,
                                                                    },
                                                                },
                                                            },
                                                            op: BinOp::And(
                                                                AndAnd,
                                                            ),
                                                            right: Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Binary {
                                                                    attrs: [],
                                                                    left: Expr::Paren {
                                                                        attrs: [],
                                                                        paren_token: Paren,
                                                                        expr: Expr::Binary {
                                                                            attrs: [],
                                                                            left: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: vp,
                                                                                                span: bytes(68778..68780),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            op: BinOp::Sub(
                                                                                Minus,
                                                                            ),
                                                                            right: Expr::Lit {
                                                                                attrs: [],
                                                                                lit: Lit::Int {
                                                                                    token: 1,
                                                                                },
                                                                            },
                                                                        },
                                                                    },
                                                                    op: BinOp::Div(
                                                                        Slash,
                                                                    ),
                                                                    right: Expr::Lit {
                                                                        attrs: [],
                                                                        lit: Lit::Int {
                                                                            token: 10,
                                                                        },
                                                                    },
                                                                },
                                                                op: BinOp::Le(
                                                                    Le,
                                                                ),
                                                                right: Expr::Binary {
                                                                    attrs: [],
                                                                    left: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: vm,
                                                                                        span: bytes(68794..68796),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    op: BinOp::Div(
                                                                        Slash,
                                                                    ),
                                                                    right: Expr::Lit {
                                                                        attrs: [],
                                                                        lit: Lit::Int {
                                                                            token: 10,
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        },
                                                        then_branch: Block {
                                                            brace_token: Brace,
                                                            stmts: [
                                                                Stmt::Local {
                                                                    attrs: [],
                                                                    let_token: Let,
                                                                    pat: Pat::Ident {
                                                                        attrs: [],
                                                                        by_ref: None,
                                                                        mutability: None,
                                                                        ident: Ident {
                                                                            sym: l,
                                                                            span: bytes(69093..69094),
                                                                        },
                                                                        subpat: None,
                                                                    },
                                                                    init: Some(
                                                                        LocalInit {
                                                                            eq_token: Eq,
                                                                            expr: Expr::Binary {
                                                                                attrs: [],
                                                                                left: Expr::Binary {
                                                                                    attrs: [],
                                                                                    left: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: FLOAT_POW5_INV_BITCOUNT,
                                                                                                        span: bytes(69097..69120),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    op: BinOp::Add(
                                                                                        Plus,
                                                                                    ),
                                                                                    right: Expr::Call {
                                                                                        attrs: [],
                                                                                        func: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: pow5bits,
                                                                                                            span: bytes(69123..69131),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        paren_token: Paren,
                                                                                        args: [
                                                                                            Expr::Binary {
                                                                                                attrs: [],
                                                                                                left: Expr::Cast {
                                                                                                    attrs: [],
                                                                                                    expr: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: q,
                                                                                                                        span: bytes(69132..69133),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    as_token: As,
                                                                                                    ty: Type::Path {
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: i32,
                                                                                                                        span: bytes(69137..69140),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                                op: BinOp::Sub(
                                                                                                    Minus,
                                                                                                ),
                                                                                                right: Expr::Lit {
                                                                                                    attrs: [],
                                                                                                    lit: Lit::Int {
                                                                                                        token: 1,
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                op: BinOp::Sub(
                                                                                    Minus,
                                                                                ),
                                                                                right: Expr::Lit {
                                                                                    attrs: [],
                                                                                    lit: Lit::Int {
                                                                                        token: 1,
                                                                                    },
                                                                                },
                                                                            },
                                                                            diverge: None,
                                                                        },
                                                                    ),
                                                                    semi_token: Semi,
                                                                },
                                                                Stmt::Expr(
                                                                    Expr::Assign {
                                                                        attrs: [],
                                                                        left: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: last_removed_digit,
                                                                                            span: bytes(69163..69181),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        eq_token: Eq,
                                                                        right: Expr::Cast {
                                                                            attrs: [],
                                                                            expr: Expr::Paren {
                                                                                attrs: [],
                                                                                paren_token: Paren,
                                                                                expr: Expr::Binary {
                                                                                    attrs: [],
                                                                                    left: Expr::Call {
                                                                                        attrs: [],
                                                                                        func: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: mul_pow5_inv_div_pow2,
                                                                                                            span: bytes(69201..69222),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        paren_token: Paren,
                                                                                        args: [
                                                                                            Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: mv,
                                                                                                                span: bytes(69223..69225),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            Comma,
                                                                                            Expr::Binary {
                                                                                                attrs: [],
                                                                                                left: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: q,
                                                                                                                    span: bytes(69227..69228),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                op: BinOp::Sub(
                                                                                                    Minus,
                                                                                                ),
                                                                                                right: Expr::Lit {
                                                                                                    attrs: [],
                                                                                                    lit: Lit::Int {
                                                                                                        token: 1,
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                            Comma,
                                                                                            Expr::Binary {
                                                                                                attrs: [],
                                                                                                left: Expr::Binary {
                                                                                                    attrs: [],
                                                                                                    left: Expr::Binary {
                                                                                                        attrs: [],
                                                                                                        left: Expr::Unary {
                                                                                                            attrs: [],
                                                                                                            op: UnOp::Neg(
                                                                                                                Minus,
                                                                                                            ),
                                                                                                            expr: Expr::Path {
                                                                                                                attrs: [],
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: e2,
                                                                                                                                span: bytes(69235..69237),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                        },
                                                                                                        op: BinOp::Add(
                                                                                                            Plus,
                                                                                                        ),
                                                                                                        right: Expr::Cast {
                                                                                                            attrs: [],
                                                                                                            expr: Expr::Path {
                                                                                                                attrs: [],
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: q,
                                                                                                                                span: bytes(69240..69241),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                            as_token: As,
                                                                                                            ty: Type::Path {
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: i32,
                                                                                                                                span: bytes(69245..69248),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                        },
                                                                                                    },
                                                                                                    op: BinOp::Sub(
                                                                                                        Minus,
                                                                                                    ),
                                                                                                    right: Expr::Lit {
                                                                                                        attrs: [],
                                                                                                        lit: Lit::Int {
                                                                                                            token: 1,
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                                op: BinOp::Add(
                                                                                                    Plus,
                                                                                                ),
                                                                                                right: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: l,
                                                                                                                    span: bytes(69255..69256),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                    op: BinOp::Rem(
                                                                                        Percent,
                                                                                    ),
                                                                                    right: Expr::Lit {
                                                                                        attrs: [],
                                                                                        lit: Lit::Int {
                                                                                            token: 10,
                                                                                        },
                                                                                    },
                                                                                },
                                                                            },
                                                                            as_token: As,
                                                                            ty: Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: u8,
                                                                                                span: bytes(69267..69269),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        },
                                                                    },
                                                                    Some(
                                                                        Semi,
                                                                    ),
                                                                ),
                                                            ],
                                                        },
                                                        else_branch: None,
                                                    },
                                                    None,
                                                ),
                                                Stmt::Expr(
                                                    Expr::If {
                                                        attrs: [],
                                                        if_token: If,
                                                        cond: Expr::Binary {
                                                            attrs: [],
                                                            left: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: q,
                                                                                span: bytes(69292..69293),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            op: BinOp::Le(
                                                                Le,
                                                            ),
                                                            right: Expr::Lit {
                                                                attrs: [],
                                                                lit: Lit::Int {
                                                                    token: 9,
                                                                },
                                                            },
                                                        },
                                                        then_branch: Block {
                                                            brace_token: Brace,
                                                            stmts: [
                                                                Stmt::Expr(
                                                                    Expr::If {
                                                                        attrs: [],
                                                                        if_token: If,
                                                                        cond: Expr::Binary {
                                                                            attrs: [],
                                                                            left: Expr::Binary {
                                                                                attrs: [],
                                                                                left: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: mv,
                                                                                                    span: bytes(69495..69497),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                op: BinOp::Rem(
                                                                                    Percent,
                                                                                ),
                                                                                right: Expr::Lit {
                                                                                    attrs: [],
                                                                                    lit: Lit::Int {
                                                                                        token: 5,
                                                                                    },
                                                                                },
                                                                            },
                                                                            op: BinOp::Eq(
                                                                                EqEq,
                                                                            ),
                                                                            right: Expr::Lit {
                                                                                attrs: [],
                                                                                lit: Lit::Int {
                                                                                    token: 0,
                                                                                },
                                                                            },
                                                                        },
                                                                        then_branch: Block {
                                                                            brace_token: Brace,
                                                                            stmts: [
                                                                                Stmt::Expr(
                                                                                    Expr::Assign {
                                                                                        attrs: [],
                                                                                        left: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: vr_is_trailing_zeros,
                                                                                                            span: bytes(69525..69545),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        eq_token: Eq,
                                                                                        right: Expr::Call {
                                                                                            attrs: [],
                                                                                            func: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: multiple_of_power_of_5_32,
                                                                                                                span: bytes(69548..69573),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            paren_token: Paren,
                                                                                            args: [
                                                                                                Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: mv,
                                                                                                                    span: bytes(69574..69576),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                Comma,
                                                                                                Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: q,
                                                                                                                    span: bytes(69578..69579),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    Some(
                                                                                        Semi,
                                                                                    ),
                                                                                ),
                                                                            ],
                                                                        },
                                                                        else_branch: Some(
                                                                            (
                                                                                Else,
                                                                                Expr::If {
                                                                                    attrs: [],
                                                                                    if_token: If,
                                                                                    cond: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: accept_bounds,
                                                                                                        span: bytes(69604..69617),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    then_branch: Block {
                                                                                        brace_token: Brace,
                                                                                        stmts: [
                                                                                            Stmt::Expr(
                                                                                                Expr::Assign {
                                                                                                    attrs: [],
                                                                                                    left: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: vm_is_trailing_zeros,
                                                                                                                        span: bytes(69636..69656),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    eq_token: Eq,
                                                                                                    right: Expr::Call {
                                                                                                        attrs: [],
                                                                                                        func: Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: multiple_of_power_of_5_32,
                                                                                                                            span: bytes(69659..69684),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                        paren_token: Paren,
                                                                                                        args: [
                                                                                                            Expr::Path {
                                                                                                                attrs: [],
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: mm,
                                                                                                                                span: bytes(69685..69687),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                            Comma,
                                                                                                            Expr::Path {
                                                                                                                attrs: [],
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: q,
                                                                                                                                span: bytes(69689..69690),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                Some(
                                                                                                    Semi,
                                                                                                ),
                                                                                            ),
                                                                                        ],
                                                                                    },
                                                                                    else_branch: Some(
                                                                                        (
                                                                                            Else,
                                                                                            Expr::Block {
                                                                                                attrs: [],
                                                                                                label: None,
                                                                                                block: Block {
                                                                                                    brace_token: Brace,
                                                                                                    stmts: [
                                                                                                        Stmt::Expr(
                                                                                                            Expr::Binary {
                                                                                                                attrs: [],
                                                                                                                left: Expr::Path {
                                                                                                                    attrs: [],
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: vp,
                                                                                                                                    span: bytes(69730..69732),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                                op: BinOp::SubAssign(
                                                                                                                    MinusEq,
                                                                                                                ),
                                                                                                                right: Expr::Cast {
                                                                                                                    attrs: [],
                                                                                                                    expr: Expr::Call {
                                                                                                                        attrs: [],
                                                                                                                        func: Expr::Path {
                                                                                                                            attrs: [],
                                                                                                                            qself: None,
                                                                                                                            path: Path {
                                                                                                                                leading_colon: None,
                                                                                                                                segments: [
                                                                                                                                    PathSegment {
                                                                                                                                        ident: Ident {
                                                                                                                                            sym: multiple_of_power_of_5_32,
                                                                                                                                            span: bytes(69736..69761),
                                                                                                                                        },
                                                                                                                                        arguments: PathArguments::None,
                                                                                                                                    },
                                                                                                                                ],
                                                                                                                            },
                                                                                                                        },
                                                                                                                        paren_token: Paren,
                                                                                                                        args: [
                                                                                                                            Expr::Path {
                                                                                                                                attrs: [],
                                                                                                                                qself: None,
                                                                                                                                path: Path {
                                                                                                                                    leading_colon: None,
                                                                                                                                    segments: [
                                                                                                                                        PathSegment {
                                                                                                                                            ident: Ident {
                                                                                                                                                sym: mp,
                                                                                                                                                span: bytes(69762..69764),
                                                                                                                                            },
                                                                                                                                            arguments: PathArguments::None,
                                                                                                                                        },
                                                                                                                                    ],
                                                                                                                                },
                                                                                                                            },
                                                                                                                            Comma,
                                                                                                                            Expr::Path {
                                                                                                                                attrs: [],
                                                                                                                                qself: None,
                                                                                                                                path: Path {
                                                                                                                                    leading_colon: None,
                                                                                                                                    segments: [
                                                                                                                                        PathSegment {
                                                                                                                                            ident: Ident {
                                                                                                                                                sym: q,
                                                                                                                                                span: bytes(69766..69767),
                                                                                                                                            },
                                                                                                                                            arguments: PathArguments::None,
                                                                                                                                        },
                                                                                                                                    ],
                                                                                                                                },
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                    as_token: As,
                                                                                                                    ty: Type::Path {
                                                                                                                        qself: None,
                                                                                                                        path: Path {
                                                                                                                            leading_colon: None,
                                                                                                                            segments: [
                                                                                                                                PathSegment {
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: u32,
                                                                                                                                        span: bytes(69772..69775),
                                                                                                                                    },
                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                },
                                                                                                                            ],
                                                                                                                        },
                                                                                                                    },
                                                                                                                },
                                                                                                            },
                                                                                                            Some(
                                                                                                                Semi,
                                                                                                            ),
                                                                                                        ),
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                        ),
                                                                                    ),
                                                                                },
                                                                            ),
                                                                        ),
                                                                    },
                                                                    None,
                                                                ),
                                                            ],
                                                        },
                                                        else_branch: None,
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                        else_branch: Some(
                                            (
                                                Else,
                                                Expr::Block {
                                                    attrs: [],
                                                    label: None,
                                                    block: Block {
                                                        brace_token: Brace,
                                                        stmts: [
                                                            Stmt::Local {
                                                                attrs: [],
                                                                let_token: Let,
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: q,
                                                                        span: bytes(69826..69827),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                init: Some(
                                                                    LocalInit {
                                                                        eq_token: Eq,
                                                                        expr: Expr::Call {
                                                                            attrs: [],
                                                                            func: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: log10_pow5,
                                                                                                span: bytes(69830..69840),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            paren_token: Paren,
                                                                            args: [
                                                                                Expr::Unary {
                                                                                    attrs: [],
                                                                                    op: UnOp::Neg(
                                                                                        Minus,
                                                                                    ),
                                                                                    expr: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: e2,
                                                                                                        span: bytes(69842..69844),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                        diverge: None,
                                                                    },
                                                                ),
                                                                semi_token: Semi,
                                                            },
                                                            Stmt::Expr(
                                                                Expr::Assign {
                                                                    attrs: [],
                                                                    left: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: e10,
                                                                                        span: bytes(69855..69858),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    eq_token: Eq,
                                                                    right: Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Cast {
                                                                            attrs: [],
                                                                            expr: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: q,
                                                                                                span: bytes(69861..69862),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            as_token: As,
                                                                            ty: Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: i32,
                                                                                                span: bytes(69866..69869),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        },
                                                                        op: BinOp::Add(
                                                                            Plus,
                                                                        ),
                                                                        right: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: e2,
                                                                                            span: bytes(69872..69874),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                },
                                                                Some(
                                                                    Semi,
                                                                ),
                                                            ),
                                                            Stmt::Local {
                                                                attrs: [],
                                                                let_token: Let,
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: i,
                                                                        span: bytes(69888..69889),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                init: Some(
                                                                    LocalInit {
                                                                        eq_token: Eq,
                                                                        expr: Expr::Binary {
                                                                            attrs: [],
                                                                            left: Expr::Unary {
                                                                                attrs: [],
                                                                                op: UnOp::Neg(
                                                                                    Minus,
                                                                                ),
                                                                                expr: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: e2,
                                                                                                    span: bytes(69893..69895),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            },
                                                                            op: BinOp::Sub(
                                                                                Minus,
                                                                            ),
                                                                            right: Expr::Cast {
                                                                                attrs: [],
                                                                                expr: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: q,
                                                                                                    span: bytes(69898..69899),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                as_token: As,
                                                                                ty: Type::Path {
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: i32,
                                                                                                    span: bytes(69903..69906),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            },
                                                                        },
                                                                        diverge: None,
                                                                    },
                                                                ),
                                                                semi_token: Semi,
                                                            },
                                                            Stmt::Local {
                                                                attrs: [],
                                                                let_token: Let,
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: k,
                                                                        span: bytes(69920..69921),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                init: Some(
                                                                    LocalInit {
                                                                        eq_token: Eq,
                                                                        expr: Expr::Binary {
                                                                            attrs: [],
                                                                            left: Expr::Call {
                                                                                attrs: [],
                                                                                func: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: pow5bits,
                                                                                                    span: bytes(69924..69932),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                paren_token: Paren,
                                                                                args: [
                                                                                    Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: i,
                                                                                                        span: bytes(69933..69934),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ],
                                                                            },
                                                                            op: BinOp::Sub(
                                                                                Minus,
                                                                            ),
                                                                            right: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: FLOAT_POW5_BITCOUNT,
                                                                                                span: bytes(69938..69957),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        },
                                                                        diverge: None,
                                                                    },
                                                                ),
                                                                semi_token: Semi,
                                                            },
                                                            Stmt::Local {
                                                                attrs: [],
                                                                let_token: Let,
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    ident: Ident {
                                                                        sym: j,
                                                                        span: bytes(69975..69976),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                init: Some(
                                                                    LocalInit {
                                                                        eq_token: Eq,
                                                                        expr: Expr::Binary {
                                                                            attrs: [],
                                                                            left: Expr::Cast {
                                                                                attrs: [],
                                                                                expr: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: q,
                                                                                                    span: bytes(69979..69980),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                as_token: As,
                                                                                ty: Type::Path {
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: i32,
                                                                                                    span: bytes(69984..69987),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            },
                                                                            op: BinOp::Sub(
                                                                                Minus,
                                                                            ),
                                                                            right: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: k,
                                                                                                span: bytes(69990..69991),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        },
                                                                        diverge: None,
                                                                    },
                                                                ),
                                                                semi_token: Semi,
                                                            },
                                                            Stmt::Expr(
                                                                Expr::Assign {
                                                                    attrs: [],
                                                                    left: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: vr,
                                                                                        span: bytes(70001..70003),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    eq_token: Eq,
                                                                    right: Expr::Call {
                                                                        attrs: [],
                                                                        func: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: mul_pow5_div_pow2,
                                                                                            span: bytes(70006..70023),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        paren_token: Paren,
                                                                        args: [
                                                                            Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: mv,
                                                                                                span: bytes(70024..70026),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            Comma,
                                                                            Expr::Cast {
                                                                                attrs: [],
                                                                                expr: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: i,
                                                                                                    span: bytes(70028..70029),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                as_token: As,
                                                                                ty: Type::Path {
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: u32,
                                                                                                    span: bytes(70033..70036),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            },
                                                                            Comma,
                                                                            Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: j,
                                                                                                span: bytes(70038..70039),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                Some(
                                                                    Semi,
                                                                ),
                                                            ),
                                                            Stmt::Expr(
                                                                Expr::Assign {
                                                                    attrs: [],
                                                                    left: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: vp,
                                                                                        span: bytes(70050..70052),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    eq_token: Eq,
                                                                    right: Expr::Call {
                                                                        attrs: [],
                                                                        func: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: mul_pow5_div_pow2,
                                                                                            span: bytes(70055..70072),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        paren_token: Paren,
                                                                        args: [
                                                                            Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: mp,
                                                                                                span: bytes(70073..70075),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            Comma,
                                                                            Expr::Cast {
                                                                                attrs: [],
                                                                                expr: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: i,
                                                                                                    span: bytes(70077..70078),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                as_token: As,
                                                                                ty: Type::Path {
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: u32,
                                                                                                    span: bytes(70082..70085),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            },
                                                                            Comma,
                                                                            Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: j,
                                                                                                span: bytes(70087..70088),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                Some(
                                                                    Semi,
                                                                ),
                                                            ),
                                                            Stmt::Expr(
                                                                Expr::Assign {
                                                                    attrs: [],
                                                                    left: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: vm,
                                                                                        span: bytes(70099..70101),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    eq_token: Eq,
                                                                    right: Expr::Call {
                                                                        attrs: [],
                                                                        func: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: mul_pow5_div_pow2,
                                                                                            span: bytes(70104..70121),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        paren_token: Paren,
                                                                        args: [
                                                                            Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: mm,
                                                                                                span: bytes(70122..70124),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            Comma,
                                                                            Expr::Cast {
                                                                                attrs: [],
                                                                                expr: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: i,
                                                                                                    span: bytes(70126..70127),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                as_token: As,
                                                                                ty: Type::Path {
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: u32,
                                                                                                    span: bytes(70131..70134),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            },
                                                                            Comma,
                                                                            Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: j,
                                                                                                span: bytes(70136..70137),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                Some(
                                                                    Semi,
                                                                ),
                                                            ),
                                                            Stmt::Expr(
                                                                Expr::If {
                                                                    attrs: [],
                                                                    if_token: If,
                                                                    cond: Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Binary {
                                                                            attrs: [],
                                                                            left: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: q,
                                                                                                span: bytes(70151..70152),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            op: BinOp::Ne(
                                                                                Ne,
                                                                            ),
                                                                            right: Expr::Lit {
                                                                                attrs: [],
                                                                                lit: Lit::Int {
                                                                                    token: 0,
                                                                                },
                                                                            },
                                                                        },
                                                                        op: BinOp::And(
                                                                            AndAnd,
                                                                        ),
                                                                        right: Expr::Binary {
                                                                            attrs: [],
                                                                            left: Expr::Binary {
                                                                                attrs: [],
                                                                                left: Expr::Paren {
                                                                                    attrs: [],
                                                                                    paren_token: Paren,
                                                                                    expr: Expr::Binary {
                                                                                        attrs: [],
                                                                                        left: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: vp,
                                                                                                            span: bytes(70162..70164),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        op: BinOp::Sub(
                                                                                            Minus,
                                                                                        ),
                                                                                        right: Expr::Lit {
                                                                                            attrs: [],
                                                                                            lit: Lit::Int {
                                                                                                token: 1,
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                },
                                                                                op: BinOp::Div(
                                                                                    Slash,
                                                                                ),
                                                                                right: Expr::Lit {
                                                                                    attrs: [],
                                                                                    lit: Lit::Int {
                                                                                        token: 10,
                                                                                    },
                                                                                },
                                                                            },
                                                                            op: BinOp::Le(
                                                                                Le,
                                                                            ),
                                                                            right: Expr::Binary {
                                                                                attrs: [],
                                                                                left: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: vm,
                                                                                                    span: bytes(70178..70180),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                op: BinOp::Div(
                                                                                    Slash,
                                                                                ),
                                                                                right: Expr::Lit {
                                                                                    attrs: [],
                                                                                    lit: Lit::Int {
                                                                                        token: 10,
                                                                                    },
                                                                                },
                                                                            },
                                                                        },
                                                                    },
                                                                    then_branch: Block {
                                                                        brace_token: Brace,
                                                                        stmts: [
                                                                            Stmt::Expr(
                                                                                Expr::Assign {
                                                                                    attrs: [],
                                                                                    left: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: j,
                                                                                                        span: bytes(70200..70201),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    eq_token: Eq,
                                                                                    right: Expr::Binary {
                                                                                        attrs: [],
                                                                                        left: Expr::Binary {
                                                                                            attrs: [],
                                                                                            left: Expr::Cast {
                                                                                                attrs: [],
                                                                                                expr: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: q,
                                                                                                                    span: bytes(70204..70205),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                as_token: As,
                                                                                                ty: Type::Path {
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: i32,
                                                                                                                    span: bytes(70209..70212),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                            op: BinOp::Sub(
                                                                                                Minus,
                                                                                            ),
                                                                                            right: Expr::Lit {
                                                                                                attrs: [],
                                                                                                lit: Lit::Int {
                                                                                                    token: 1,
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                        op: BinOp::Sub(
                                                                                            Minus,
                                                                                        ),
                                                                                        right: Expr::Paren {
                                                                                            attrs: [],
                                                                                            paren_token: Paren,
                                                                                            expr: Expr::Binary {
                                                                                                attrs: [],
                                                                                                left: Expr::Call {
                                                                                                    attrs: [],
                                                                                                    func: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: pow5bits,
                                                                                                                        span: bytes(70220..70228),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    paren_token: Paren,
                                                                                                    args: [
                                                                                                        Expr::Binary {
                                                                                                            attrs: [],
                                                                                                            left: Expr::Path {
                                                                                                                attrs: [],
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: i,
                                                                                                                                span: bytes(70229..70230),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                            op: BinOp::Add(
                                                                                                                Plus,
                                                                                                            ),
                                                                                                            right: Expr::Lit {
                                                                                                                attrs: [],
                                                                                                                lit: Lit::Int {
                                                                                                                    token: 1,
                                                                                                                },
                                                                                                            },
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                                op: BinOp::Sub(
                                                                                                    Minus,
                                                                                                ),
                                                                                                right: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: FLOAT_POW5_BITCOUNT,
                                                                                                                    span: bytes(70238..70257),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                },
                                                                                Some(
                                                                                    Semi,
                                                                                ),
                                                                            ),
                                                                            Stmt::Expr(
                                                                                Expr::Assign {
                                                                                    attrs: [],
                                                                                    left: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: last_removed_digit,
                                                                                                        span: bytes(70272..70290),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    eq_token: Eq,
                                                                                    right: Expr::Cast {
                                                                                        attrs: [],
                                                                                        expr: Expr::Paren {
                                                                                            attrs: [],
                                                                                            paren_token: Paren,
                                                                                            expr: Expr::Binary {
                                                                                                attrs: [],
                                                                                                left: Expr::Call {
                                                                                                    attrs: [],
                                                                                                    func: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: mul_pow5_div_pow2,
                                                                                                                        span: bytes(70294..70311),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    paren_token: Paren,
                                                                                                    args: [
                                                                                                        Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: mv,
                                                                                                                            span: bytes(70312..70314),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                        Comma,
                                                                                                        Expr::Cast {
                                                                                                            attrs: [],
                                                                                                            expr: Expr::Paren {
                                                                                                                attrs: [],
                                                                                                                paren_token: Paren,
                                                                                                                expr: Expr::Binary {
                                                                                                                    attrs: [],
                                                                                                                    left: Expr::Path {
                                                                                                                        attrs: [],
                                                                                                                        qself: None,
                                                                                                                        path: Path {
                                                                                                                            leading_colon: None,
                                                                                                                            segments: [
                                                                                                                                PathSegment {
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: i,
                                                                                                                                        span: bytes(70317..70318),
                                                                                                                                    },
                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                },
                                                                                                                            ],
                                                                                                                        },
                                                                                                                    },
                                                                                                                    op: BinOp::Add(
                                                                                                                        Plus,
                                                                                                                    ),
                                                                                                                    right: Expr::Lit {
                                                                                                                        attrs: [],
                                                                                                                        lit: Lit::Int {
                                                                                                                            token: 1,
                                                                                                                        },
                                                                                                                    },
                                                                                                                },
                                                                                                            },
                                                                                                            as_token: As,
                                                                                                            ty: Type::Path {
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: u32,
                                                                                                                                span: bytes(70327..70330),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                        },
                                                                                                        Comma,
                                                                                                        Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: j,
                                                                                                                            span: bytes(70332..70333),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                                op: BinOp::Rem(
                                                                                                    Percent,
                                                                                                ),
                                                                                                right: Expr::Lit {
                                                                                                    attrs: [],
                                                                                                    lit: Lit::Int {
                                                                                                        token: 10,
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                        as_token: As,
                                                                                        ty: Type::Path {
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: u8,
                                                                                                            span: bytes(70344..70346),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                },
                                                                                Some(
                                                                                    Semi,
                                                                                ),
                                                                            ),
                                                                        ],
                                                                    },
                                                                    else_branch: None,
                                                                },
                                                                None,
                                                            ),
                                                            Stmt::Expr(
                                                                Expr::If {
                                                                    attrs: [],
                                                                    if_token: If,
                                                                    cond: Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: q,
                                                                                            span: bytes(70369..70370),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        op: BinOp::Le(
                                                                            Le,
                                                                        ),
                                                                        right: Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Int {
                                                                                token: 1,
                                                                            },
                                                                        },
                                                                    },
                                                                    then_branch: Block {
                                                                        brace_token: Brace,
                                                                        stmts: [
                                                                            Stmt::Expr(
                                                                                Expr::Assign {
                                                                                    attrs: [],
                                                                                    left: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: vr_is_trailing_zeros,
                                                                                                        span: bytes(70555..70575),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    eq_token: Eq,
                                                                                    right: Expr::Lit {
                                                                                        attrs: [],
                                                                                        lit: Lit::Bool {
                                                                                            value: true,
                                                                                        },
                                                                                    },
                                                                                },
                                                                                Some(
                                                                                    Semi,
                                                                                ),
                                                                            ),
                                                                            Stmt::Expr(
                                                                                Expr::If {
                                                                                    attrs: [],
                                                                                    if_token: If,
                                                                                    cond: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: accept_bounds,
                                                                                                        span: bytes(70599..70612),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    then_branch: Block {
                                                                                        brace_token: Brace,
                                                                                        stmts: [
                                                                                            Stmt::Expr(
                                                                                                Expr::Assign {
                                                                                                    attrs: [],
                                                                                                    left: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: vm_is_trailing_zeros,
                                                                                                                        span: bytes(70720..70740),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    eq_token: Eq,
                                                                                                    right: Expr::Binary {
                                                                                                        attrs: [],
                                                                                                        left: Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: mm_shift,
                                                                                                                            span: bytes(70743..70751),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                        op: BinOp::Eq(
                                                                                                            EqEq,
                                                                                                        ),
                                                                                                        right: Expr::Lit {
                                                                                                            attrs: [],
                                                                                                            lit: Lit::Int {
                                                                                                                token: 1,
                                                                                                            },
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                                Some(
                                                                                                    Semi,
                                                                                                ),
                                                                                            ),
                                                                                        ],
                                                                                    },
                                                                                    else_branch: Some(
                                                                                        (
                                                                                            Else,
                                                                                            Expr::Block {
                                                                                                attrs: [],
                                                                                                label: None,
                                                                                                block: Block {
                                                                                                    brace_token: Brace,
                                                                                                    stmts: [
                                                                                                        Stmt::Expr(
                                                                                                            Expr::Binary {
                                                                                                                attrs: [],
                                                                                                                left: Expr::Path {
                                                                                                                    attrs: [],
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: vp,
                                                                                                                                    span: bytes(70873..70875),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                                op: BinOp::SubAssign(
                                                                                                                    MinusEq,
                                                                                                                ),
                                                                                                                right: Expr::Lit {
                                                                                                                    attrs: [],
                                                                                                                    lit: Lit::Int {
                                                                                                                        token: 1,
                                                                                                                    },
                                                                                                                },
                                                                                                            },
                                                                                                            Some(
                                                                                                                Semi,
                                                                                                            ),
                                                                                                        ),
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                        ),
                                                                                    ),
                                                                                },
                                                                                None,
                                                                            ),
                                                                        ],
                                                                    },
                                                                    else_branch: Some(
                                                                        (
                                                                            Else,
                                                                            Expr::If {
                                                                                attrs: [],
                                                                                if_token: If,
                                                                                cond: Expr::Binary {
                                                                                    attrs: [],
                                                                                    left: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: q,
                                                                                                        span: bytes(70914..70915),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    op: BinOp::Lt(
                                                                                        Lt,
                                                                                    ),
                                                                                    right: Expr::Lit {
                                                                                        attrs: [],
                                                                                        lit: Lit::Int {
                                                                                            token: 31,
                                                                                        },
                                                                                    },
                                                                                },
                                                                                then_branch: Block {
                                                                                    brace_token: Brace,
                                                                                    stmts: [
                                                                                        Stmt::Expr(
                                                                                            Expr::Assign {
                                                                                                attrs: [],
                                                                                                left: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: vr_is_trailing_zeros,
                                                                                                                    span: bytes(70991..71011),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                eq_token: Eq,
                                                                                                right: Expr::Call {
                                                                                                    attrs: [],
                                                                                                    func: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: multiple_of_power_of_2_32,
                                                                                                                        span: bytes(71014..71039),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    paren_token: Paren,
                                                                                                    args: [
                                                                                                        Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: mv,
                                                                                                                            span: bytes(71040..71042),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                        Comma,
                                                                                                        Expr::Binary {
                                                                                                            attrs: [],
                                                                                                            left: Expr::Path {
                                                                                                                attrs: [],
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: q,
                                                                                                                                span: bytes(71044..71045),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                            op: BinOp::Sub(
                                                                                                                Minus,
                                                                                                            ),
                                                                                                            right: Expr::Lit {
                                                                                                                attrs: [],
                                                                                                                lit: Lit::Int {
                                                                                                                    token: 1,
                                                                                                                },
                                                                                                            },
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            Some(
                                                                                                Semi,
                                                                                            ),
                                                                                        ),
                                                                                    ],
                                                                                },
                                                                                else_branch: None,
                                                                            },
                                                                        ),
                                                                    ),
                                                                },
                                                                None,
                                                            ),
                                                        ],
                                                    },
                                                },
                                            ),
                                        ),
                                    },
                                    None,
                                ),
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: Some(
                                            Mut,
                                        ),
                                        ident: Ident {
                                            sym: removed,
                                            span: bytes(71179..71186),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Lit {
                                                attrs: [],
                                                lit: Lit::Int {
                                                    token: 0i32,
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: output,
                                            span: bytes(71203..71209),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::If {
                                                attrs: [],
                                                if_token: If,
                                                cond: Expr::Binary {
                                                    attrs: [],
                                                    left: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: vm_is_trailing_zeros,
                                                                        span: bytes(71215..71235),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    op: BinOp::Or(
                                                        OrOr,
                                                    ),
                                                    right: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: vr_is_trailing_zeros,
                                                                        span: bytes(71239..71259),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                                then_branch: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::While {
                                                                attrs: [],
                                                                label: None,
                                                                while_token: While,
                                                                cond: Expr::Binary {
                                                                    attrs: [],
                                                                    left: Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: vp,
                                                                                            span: bytes(71331..71333),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        op: BinOp::Div(
                                                                            Slash,
                                                                        ),
                                                                        right: Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Int {
                                                                                token: 10,
                                                                            },
                                                                        },
                                                                    },
                                                                    op: BinOp::Gt(
                                                                        Gt,
                                                                    ),
                                                                    right: Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: vm,
                                                                                            span: bytes(71341..71343),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        op: BinOp::Div(
                                                                            Slash,
                                                                        ),
                                                                        right: Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Int {
                                                                                token: 10,
                                                                            },
                                                                        },
                                                                    },
                                                                },
                                                                body: Block {
                                                                    brace_token: Brace,
                                                                    stmts: [
                                                                        Stmt::Expr(
                                                                            Expr::Binary {
                                                                                attrs: [],
                                                                                left: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: vm_is_trailing_zeros,
                                                                                                    span: bytes(71363..71383),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                op: BinOp::BitAndAssign(
                                                                                    AndEq,
                                                                                ),
                                                                                right: Expr::Binary {
                                                                                    attrs: [],
                                                                                    left: Expr::Binary {
                                                                                        attrs: [],
                                                                                        left: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: vm,
                                                                                                            span: bytes(71387..71389),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        op: BinOp::Sub(
                                                                                            Minus,
                                                                                        ),
                                                                                        right: Expr::Binary {
                                                                                            attrs: [],
                                                                                            left: Expr::Paren {
                                                                                                attrs: [],
                                                                                                paren_token: Paren,
                                                                                                expr: Expr::Binary {
                                                                                                    attrs: [],
                                                                                                    left: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: vm,
                                                                                                                        span: bytes(71393..71395),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    op: BinOp::Div(
                                                                                                        Slash,
                                                                                                    ),
                                                                                                    right: Expr::Lit {
                                                                                                        attrs: [],
                                                                                                        lit: Lit::Int {
                                                                                                            token: 10,
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                            op: BinOp::Mul(
                                                                                                Star,
                                                                                            ),
                                                                                            right: Expr::Lit {
                                                                                                attrs: [],
                                                                                                lit: Lit::Int {
                                                                                                    token: 10,
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                    op: BinOp::Eq(
                                                                                        EqEq,
                                                                                    ),
                                                                                    right: Expr::Lit {
                                                                                        attrs: [],
                                                                                        lit: Lit::Int {
                                                                                            token: 0,
                                                                                        },
                                                                                    },
                                                                                },
                                                                            },
                                                                            Some(
                                                                                Semi,
                                                                            ),
                                                                        ),
                                                                        Stmt::Expr(
                                                                            Expr::Binary {
                                                                                attrs: [],
                                                                                left: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: vr_is_trailing_zeros,
                                                                                                    span: bytes(71425..71445),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                op: BinOp::BitAndAssign(
                                                                                    AndEq,
                                                                                ),
                                                                                right: Expr::Binary {
                                                                                    attrs: [],
                                                                                    left: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: last_removed_digit,
                                                                                                        span: bytes(71449..71467),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    op: BinOp::Eq(
                                                                                        EqEq,
                                                                                    ),
                                                                                    right: Expr::Lit {
                                                                                        attrs: [],
                                                                                        lit: Lit::Int {
                                                                                            token: 0,
                                                                                        },
                                                                                    },
                                                                                },
                                                                            },
                                                                            Some(
                                                                                Semi,
                                                                            ),
                                                                        ),
                                                                        Stmt::Expr(
                                                                            Expr::Assign {
                                                                                attrs: [],
                                                                                left: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: last_removed_digit,
                                                                                                    span: bytes(71486..71504),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                eq_token: Eq,
                                                                                right: Expr::Cast {
                                                                                    attrs: [],
                                                                                    expr: Expr::Paren {
                                                                                        attrs: [],
                                                                                        paren_token: Paren,
                                                                                        expr: Expr::Binary {
                                                                                            attrs: [],
                                                                                            left: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: vr,
                                                                                                                span: bytes(71508..71510),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            op: BinOp::Rem(
                                                                                                Percent,
                                                                                            ),
                                                                                            right: Expr::Lit {
                                                                                                attrs: [],
                                                                                                lit: Lit::Int {
                                                                                                    token: 10,
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                    as_token: As,
                                                                                    ty: Type::Path {
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: u8,
                                                                                                        span: bytes(71520..71522),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                },
                                                                            },
                                                                            Some(
                                                                                Semi,
                                                                            ),
                                                                        ),
                                                                        Stmt::Expr(
                                                                            Expr::Binary {
                                                                                attrs: [],
                                                                                left: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: vr,
                                                                                                    span: bytes(71536..71538),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                op: BinOp::DivAssign(
                                                                                    SlashEq,
                                                                                ),
                                                                                right: Expr::Lit {
                                                                                    attrs: [],
                                                                                    lit: Lit::Int {
                                                                                        token: 10,
                                                                                    },
                                                                                },
                                                                            },
                                                                            Some(
                                                                                Semi,
                                                                            ),
                                                                        ),
                                                                        Stmt::Expr(
                                                                            Expr::Binary {
                                                                                attrs: [],
                                                                                left: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: vp,
                                                                                                    span: bytes(71558..71560),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                op: BinOp::DivAssign(
                                                                                    SlashEq,
                                                                                ),
                                                                                right: Expr::Lit {
                                                                                    attrs: [],
                                                                                    lit: Lit::Int {
                                                                                        token: 10,
                                                                                    },
                                                                                },
                                                                            },
                                                                            Some(
                                                                                Semi,
                                                                            ),
                                                                        ),
                                                                        Stmt::Expr(
                                                                            Expr::Binary {
                                                                                attrs: [],
                                                                                left: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: vm,
                                                                                                    span: bytes(71580..71582),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                op: BinOp::DivAssign(
                                                                                    SlashEq,
                                                                                ),
                                                                                right: Expr::Lit {
                                                                                    attrs: [],
                                                                                    lit: Lit::Int {
                                                                                        token: 10,
                                                                                    },
                                                                                },
                                                                            },
                                                                            Some(
                                                                                Semi,
                                                                            ),
                                                                        ),
                                                                        Stmt::Expr(
                                                                            Expr::Binary {
                                                                                attrs: [],
                                                                                left: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: removed,
                                                                                                    span: bytes(71602..71609),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                op: BinOp::AddAssign(
                                                                                    PlusEq,
                                                                                ),
                                                                                right: Expr::Lit {
                                                                                    attrs: [],
                                                                                    lit: Lit::Int {
                                                                                        token: 1,
                                                                                    },
                                                                                },
                                                                            },
                                                                            Some(
                                                                                Semi,
                                                                            ),
                                                                        ),
                                                                    ],
                                                                },
                                                            },
                                                            None,
                                                        ),
                                                        Stmt::Expr(
                                                            Expr::If {
                                                                attrs: [],
                                                                if_token: If,
                                                                cond: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: vm_is_trailing_zeros,
                                                                                    span: bytes(71637..71657),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                then_branch: Block {
                                                                    brace_token: Brace,
                                                                    stmts: [
                                                                        Stmt::Expr(
                                                                            Expr::While {
                                                                                attrs: [],
                                                                                label: None,
                                                                                while_token: While,
                                                                                cond: Expr::Binary {
                                                                                    attrs: [],
                                                                                    left: Expr::Binary {
                                                                                        attrs: [],
                                                                                        left: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: vm,
                                                                                                            span: bytes(71678..71680),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        op: BinOp::Rem(
                                                                                            Percent,
                                                                                        ),
                                                                                        right: Expr::Lit {
                                                                                            attrs: [],
                                                                                            lit: Lit::Int {
                                                                                                token: 10,
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                    op: BinOp::Eq(
                                                                                        EqEq,
                                                                                    ),
                                                                                    right: Expr::Lit {
                                                                                        attrs: [],
                                                                                        lit: Lit::Int {
                                                                                            token: 0,
                                                                                        },
                                                                                    },
                                                                                },
                                                                                body: Block {
                                                                                    brace_token: Brace,
                                                                                    stmts: [
                                                                                        Stmt::Expr(
                                                                                            Expr::Binary {
                                                                                                attrs: [],
                                                                                                left: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: vr_is_trailing_zeros,
                                                                                                                    span: bytes(71709..71729),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                op: BinOp::BitAndAssign(
                                                                                                    AndEq,
                                                                                                ),
                                                                                                right: Expr::Binary {
                                                                                                    attrs: [],
                                                                                                    left: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: last_removed_digit,
                                                                                                                        span: bytes(71733..71751),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    op: BinOp::Eq(
                                                                                                        EqEq,
                                                                                                    ),
                                                                                                    right: Expr::Lit {
                                                                                                        attrs: [],
                                                                                                        lit: Lit::Int {
                                                                                                            token: 0,
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                            Some(
                                                                                                Semi,
                                                                                            ),
                                                                                        ),
                                                                                        Stmt::Expr(
                                                                                            Expr::Assign {
                                                                                                attrs: [],
                                                                                                left: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: last_removed_digit,
                                                                                                                    span: bytes(71774..71792),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                eq_token: Eq,
                                                                                                right: Expr::Cast {
                                                                                                    attrs: [],
                                                                                                    expr: Expr::Paren {
                                                                                                        attrs: [],
                                                                                                        paren_token: Paren,
                                                                                                        expr: Expr::Binary {
                                                                                                            attrs: [],
                                                                                                            left: Expr::Path {
                                                                                                                attrs: [],
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: vr,
                                                                                                                                span: bytes(71796..71798),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                            op: BinOp::Rem(
                                                                                                                Percent,
                                                                                                            ),
                                                                                                            right: Expr::Lit {
                                                                                                                attrs: [],
                                                                                                                lit: Lit::Int {
                                                                                                                    token: 10,
                                                                                                                },
                                                                                                            },
                                                                                                        },
                                                                                                    },
                                                                                                    as_token: As,
                                                                                                    ty: Type::Path {
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: u8,
                                                                                                                        span: bytes(71808..71810),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                            Some(
                                                                                                Semi,
                                                                                            ),
                                                                                        ),
                                                                                        Stmt::Expr(
                                                                                            Expr::Binary {
                                                                                                attrs: [],
                                                                                                left: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: vr,
                                                                                                                    span: bytes(71828..71830),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                op: BinOp::DivAssign(
                                                                                                    SlashEq,
                                                                                                ),
                                                                                                right: Expr::Lit {
                                                                                                    attrs: [],
                                                                                                    lit: Lit::Int {
                                                                                                        token: 10,
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                            Some(
                                                                                                Semi,
                                                                                            ),
                                                                                        ),
                                                                                        Stmt::Expr(
                                                                                            Expr::Binary {
                                                                                                attrs: [],
                                                                                                left: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: vp,
                                                                                                                    span: bytes(71854..71856),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                op: BinOp::DivAssign(
                                                                                                    SlashEq,
                                                                                                ),
                                                                                                right: Expr::Lit {
                                                                                                    attrs: [],
                                                                                                    lit: Lit::Int {
                                                                                                        token: 10,
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                            Some(
                                                                                                Semi,
                                                                                            ),
                                                                                        ),
                                                                                        Stmt::Expr(
                                                                                            Expr::Binary {
                                                                                                attrs: [],
                                                                                                left: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: vm,
                                                                                                                    span: bytes(71880..71882),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                op: BinOp::DivAssign(
                                                                                                    SlashEq,
                                                                                                ),
                                                                                                right: Expr::Lit {
                                                                                                    attrs: [],
                                                                                                    lit: Lit::Int {
                                                                                                        token: 10,
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                            Some(
                                                                                                Semi,
                                                                                            ),
                                                                                        ),
                                                                                        Stmt::Expr(
                                                                                            Expr::Binary {
                                                                                                attrs: [],
                                                                                                left: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: removed,
                                                                                                                    span: bytes(71906..71913),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                op: BinOp::AddAssign(
                                                                                                    PlusEq,
                                                                                                ),
                                                                                                right: Expr::Lit {
                                                                                                    attrs: [],
                                                                                                    lit: Lit::Int {
                                                                                                        token: 1,
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                            Some(
                                                                                                Semi,
                                                                                            ),
                                                                                        ),
                                                                                    ],
                                                                                },
                                                                            },
                                                                            None,
                                                                        ),
                                                                    ],
                                                                },
                                                                else_branch: None,
                                                            },
                                                            None,
                                                        ),
                                                        Stmt::Expr(
                                                            Expr::If {
                                                                attrs: [],
                                                                if_token: If,
                                                                cond: Expr::Binary {
                                                                    attrs: [],
                                                                    left: Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: vr_is_trailing_zeros,
                                                                                            span: bytes(71955..71975),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        op: BinOp::And(
                                                                            AndAnd,
                                                                        ),
                                                                        right: Expr::Binary {
                                                                            attrs: [],
                                                                            left: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: last_removed_digit,
                                                                                                span: bytes(71979..71997),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            op: BinOp::Eq(
                                                                                EqEq,
                                                                            ),
                                                                            right: Expr::Lit {
                                                                                attrs: [],
                                                                                lit: Lit::Int {
                                                                                    token: 5,
                                                                                },
                                                                            },
                                                                        },
                                                                    },
                                                                    op: BinOp::And(
                                                                        AndAnd,
                                                                    ),
                                                                    right: Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Binary {
                                                                            attrs: [],
                                                                            left: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: vr,
                                                                                                span: bytes(72006..72008),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            op: BinOp::Rem(
                                                                                Percent,
                                                                            ),
                                                                            right: Expr::Lit {
                                                                                attrs: [],
                                                                                lit: Lit::Int {
                                                                                    token: 2,
                                                                                },
                                                                            },
                                                                        },
                                                                        op: BinOp::Eq(
                                                                            EqEq,
                                                                        ),
                                                                        right: Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Int {
                                                                                token: 0,
                                                                            },
                                                                        },
                                                                    },
                                                                },
                                                                then_branch: Block {
                                                                    brace_token: Brace,
                                                                    stmts: [
                                                                        Stmt::Expr(
                                                                            Expr::Assign {
                                                                                attrs: [],
                                                                                left: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: last_removed_digit,
                                                                                                    span: bytes(72093..72111),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                eq_token: Eq,
                                                                                right: Expr::Lit {
                                                                                    attrs: [],
                                                                                    lit: Lit::Int {
                                                                                        token: 4,
                                                                                    },
                                                                                },
                                                                            },
                                                                            Some(
                                                                                Semi,
                                                                            ),
                                                                        ),
                                                                    ],
                                                                },
                                                                else_branch: None,
                                                            },
                                                            None,
                                                        ),
                                                        Stmt::Expr(
                                                            Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: vr,
                                                                                    span: bytes(72217..72219),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                op: BinOp::Add(
                                                                    Plus,
                                                                ),
                                                                right: Expr::Cast {
                                                                    attrs: [],
                                                                    expr: Expr::Paren {
                                                                        attrs: [],
                                                                        paren_token: Paren,
                                                                        expr: Expr::Binary {
                                                                            attrs: [],
                                                                            left: Expr::Paren {
                                                                                attrs: [],
                                                                                paren_token: Paren,
                                                                                expr: Expr::Binary {
                                                                                    attrs: [],
                                                                                    left: Expr::Binary {
                                                                                        attrs: [],
                                                                                        left: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: vr,
                                                                                                            span: bytes(72224..72226),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        op: BinOp::Eq(
                                                                                            EqEq,
                                                                                        ),
                                                                                        right: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: vm,
                                                                                                            span: bytes(72230..72232),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                    op: BinOp::And(
                                                                                        AndAnd,
                                                                                    ),
                                                                                    right: Expr::Paren {
                                                                                        attrs: [],
                                                                                        paren_token: Paren,
                                                                                        expr: Expr::Binary {
                                                                                            attrs: [],
                                                                                            left: Expr::Unary {
                                                                                                attrs: [],
                                                                                                op: UnOp::Not(
                                                                                                    Not,
                                                                                                ),
                                                                                                expr: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: accept_bounds,
                                                                                                                    span: bytes(72238..72251),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                            op: BinOp::Or(
                                                                                                OrOr,
                                                                                            ),
                                                                                            right: Expr::Unary {
                                                                                                attrs: [],
                                                                                                op: UnOp::Not(
                                                                                                    Not,
                                                                                                ),
                                                                                                expr: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: vm_is_trailing_zeros,
                                                                                                                    span: bytes(72256..72276),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                },
                                                                            },
                                                                            op: BinOp::Or(
                                                                                OrOr,
                                                                            ),
                                                                            right: Expr::Binary {
                                                                                attrs: [],
                                                                                left: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: last_removed_digit,
                                                                                                    span: bytes(72282..72300),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                op: BinOp::Ge(
                                                                                    Ge,
                                                                                ),
                                                                                right: Expr::Lit {
                                                                                    attrs: [],
                                                                                    lit: Lit::Int {
                                                                                        token: 5,
                                                                                    },
                                                                                },
                                                                            },
                                                                        },
                                                                    },
                                                                    as_token: As,
                                                                    ty: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: u32,
                                                                                        span: bytes(72322..72325),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                                else_branch: Some(
                                                    (
                                                        Else,
                                                        Expr::Block {
                                                            attrs: [],
                                                            label: None,
                                                            block: Block {
                                                                brace_token: Brace,
                                                                stmts: [
                                                                    Stmt::Expr(
                                                                        Expr::While {
                                                                            attrs: [],
                                                                            label: None,
                                                                            while_token: While,
                                                                            cond: Expr::Binary {
                                                                                attrs: [],
                                                                                left: Expr::Binary {
                                                                                    attrs: [],
                                                                                    left: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: vp,
                                                                                                        span: bytes(72567..72569),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    op: BinOp::Div(
                                                                                        Slash,
                                                                                    ),
                                                                                    right: Expr::Lit {
                                                                                        attrs: [],
                                                                                        lit: Lit::Int {
                                                                                            token: 10,
                                                                                        },
                                                                                    },
                                                                                },
                                                                                op: BinOp::Gt(
                                                                                    Gt,
                                                                                ),
                                                                                right: Expr::Binary {
                                                                                    attrs: [],
                                                                                    left: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: vm,
                                                                                                        span: bytes(72577..72579),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    op: BinOp::Div(
                                                                                        Slash,
                                                                                    ),
                                                                                    right: Expr::Lit {
                                                                                        attrs: [],
                                                                                        lit: Lit::Int {
                                                                                            token: 10,
                                                                                        },
                                                                                    },
                                                                                },
                                                                            },
                                                                            body: Block {
                                                                                brace_token: Brace,
                                                                                stmts: [
                                                                                    Stmt::Expr(
                                                                                        Expr::Assign {
                                                                                            attrs: [],
                                                                                            left: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: last_removed_digit,
                                                                                                                span: bytes(72599..72617),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            eq_token: Eq,
                                                                                            right: Expr::Cast {
                                                                                                attrs: [],
                                                                                                expr: Expr::Paren {
                                                                                                    attrs: [],
                                                                                                    paren_token: Paren,
                                                                                                    expr: Expr::Binary {
                                                                                                        attrs: [],
                                                                                                        left: Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: vr,
                                                                                                                            span: bytes(72621..72623),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                        op: BinOp::Rem(
                                                                                                            Percent,
                                                                                                        ),
                                                                                                        right: Expr::Lit {
                                                                                                            attrs: [],
                                                                                                            lit: Lit::Int {
                                                                                                                token: 10,
                                                                                                            },
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                                as_token: As,
                                                                                                ty: Type::Path {
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: u8,
                                                                                                                    span: bytes(72633..72635),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                        Some(
                                                                                            Semi,
                                                                                        ),
                                                                                    ),
                                                                                    Stmt::Expr(
                                                                                        Expr::Binary {
                                                                                            attrs: [],
                                                                                            left: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: vr,
                                                                                                                span: bytes(72649..72651),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            op: BinOp::DivAssign(
                                                                                                SlashEq,
                                                                                            ),
                                                                                            right: Expr::Lit {
                                                                                                attrs: [],
                                                                                                lit: Lit::Int {
                                                                                                    token: 10,
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                        Some(
                                                                                            Semi,
                                                                                        ),
                                                                                    ),
                                                                                    Stmt::Expr(
                                                                                        Expr::Binary {
                                                                                            attrs: [],
                                                                                            left: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: vp,
                                                                                                                span: bytes(72671..72673),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            op: BinOp::DivAssign(
                                                                                                SlashEq,
                                                                                            ),
                                                                                            right: Expr::Lit {
                                                                                                attrs: [],
                                                                                                lit: Lit::Int {
                                                                                                    token: 10,
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                        Some(
                                                                                            Semi,
                                                                                        ),
                                                                                    ),
                                                                                    Stmt::Expr(
                                                                                        Expr::Binary {
                                                                                            attrs: [],
                                                                                            left: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: vm,
                                                                                                                span: bytes(72693..72695),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            op: BinOp::DivAssign(
                                                                                                SlashEq,
                                                                                            ),
                                                                                            right: Expr::Lit {
                                                                                                attrs: [],
                                                                                                lit: Lit::Int {
                                                                                                    token: 10,
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                        Some(
                                                                                            Semi,
                                                                                        ),
                                                                                    ),
                                                                                    Stmt::Expr(
                                                                                        Expr::Binary {
                                                                                            attrs: [],
                                                                                            left: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: removed,
                                                                                                                span: bytes(72715..72722),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            op: BinOp::AddAssign(
                                                                                                PlusEq,
                                                                                            ),
                                                                                            right: Expr::Lit {
                                                                                                attrs: [],
                                                                                                lit: Lit::Int {
                                                                                                    token: 1,
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                        Some(
                                                                                            Semi,
                                                                                        ),
                                                                                    ),
                                                                                ],
                                                                            },
                                                                        },
                                                                        None,
                                                                    ),
                                                                    Stmt::Expr(
                                                                        Expr::Binary {
                                                                            attrs: [],
                                                                            left: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: vr,
                                                                                                span: bytes(72829..72831),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            op: BinOp::Add(
                                                                                Plus,
                                                                            ),
                                                                            right: Expr::Cast {
                                                                                attrs: [],
                                                                                expr: Expr::Paren {
                                                                                    attrs: [],
                                                                                    paren_token: Paren,
                                                                                    expr: Expr::Binary {
                                                                                        attrs: [],
                                                                                        left: Expr::Binary {
                                                                                            attrs: [],
                                                                                            left: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: vr,
                                                                                                                span: bytes(72835..72837),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            op: BinOp::Eq(
                                                                                                EqEq,
                                                                                            ),
                                                                                            right: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: vm,
                                                                                                                span: bytes(72841..72843),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                        op: BinOp::Or(
                                                                                            OrOr,
                                                                                        ),
                                                                                        right: Expr::Binary {
                                                                                            attrs: [],
                                                                                            left: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: last_removed_digit,
                                                                                                                span: bytes(72847..72865),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            op: BinOp::Ge(
                                                                                                Ge,
                                                                                            ),
                                                                                            right: Expr::Lit {
                                                                                                attrs: [],
                                                                                                lit: Lit::Int {
                                                                                                    token: 5,
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                },
                                                                                as_token: As,
                                                                                ty: Type::Path {
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: u32,
                                                                                                    span: bytes(72875..72878),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            },
                                                                        },
                                                                        None,
                                                                    ),
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                ),
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: exp,
                                            span: bytes(72894..72897),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Binary {
                                                attrs: [],
                                                left: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: e10,
                                                                    span: bytes(72900..72903),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                op: BinOp::Add(
                                                    Plus,
                                                ),
                                                right: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: removed,
                                                                    span: bytes(72906..72913),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Expr(
                                    Expr::Struct {
                                        attrs: [],
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: FloatingDecimal32,
                                                        span: bytes(72920..72937),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                        brace_token: Brace,
                                        fields: [
                                            FieldValue {
                                                attrs: [],
                                                member: Member::Named(
                                                    Ident {
                                                        sym: exponent,
                                                        span: bytes(72948..72956),
                                                    },
                                                ),
                                                colon_token: Some(
                                                    Colon,
                                                ),
                                                expr: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: exp,
                                                                    span: bytes(72958..72961),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                            Comma,
                                            FieldValue {
                                                attrs: [],
                                                member: Member::Named(
                                                    Ident {
                                                        sym: mantissa,
                                                        span: bytes(72971..72979),
                                                    },
                                                ),
                                                colon_token: Some(
                                                    Colon,
                                                ),
                                                expr: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: output,
                                                                    span: bytes(72981..72987),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                            Comma,
                                        ],
                                        dot2_token: None,
                                        rest: None,
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: PubT,
            },
        ),
    },
    "<ryu::buffer::Buffer as >::default": FnData {
        fn_name: "default",
        complete_fn_name: "<ryu::buffer::Buffer as >::default",
        fn_type: ImplFn(
            ImplFnItem {
                fn_name: Name {
                    name: "default",
                    complete_name: "<ryu::buffer::Buffer as >::default",
                    import_name: MyPath {
                        name: "<ryu",
                        next: Some(
                            MyPath {
                                name: "buffer",
                                next: Some(
                                    MyPath {
                                        name: "Buffer as >",
                                        next: Some(
                                            MyPath {
                                                name: "default",
                                                next: None,
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "{impl#3}::default",
                item: Some(
                    ImplItemFn {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident {
                                                sym: inline,
                                                span: bytes(7013..7019),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                    ],
                                },
                            },
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::List {
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: cfg_attr,
                                                    span: bytes(7027..7035),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                    delimiter: MacroDelimiter::Paren(
                                        Paren,
                                    ),
                                    tokens: TokenStream [
                                        Ident {
                                            sym: feature,
                                            span: bytes(7036..7043),
                                        },
                                        Punct {
                                            char: '=',
                                            spacing: Alone,
                                            span: bytes(7044..7045),
                                        },
                                        Literal {
                                            lit: "no-panic",
                                            span: bytes(7046..7056),
                                        },
                                        Punct {
                                            char: ',',
                                            spacing: Alone,
                                            span: bytes(7056..7057),
                                        },
                                        Ident {
                                            sym: no_panic,
                                            span: bytes(7058..7066),
                                        },
                                    ],
                                },
                            },
                        ],
                        vis: Visibility::Inherited,
                        defaultness: None,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: default,
                                span: bytes(7076..7083),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: Self,
                                                    span: bytes(7089..7093),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Expr(
                                    Expr::Call {
                                        attrs: [],
                                        func: Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Buffer,
                                                            span: bytes(7104..7110),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                    PathSep,
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: new,
                                                            span: bytes(7112..7115),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        paren_token: Paren,
                                        args: [],
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: Pri,
                is_constructor: true,
            },
            ImplItem {
                impl_num: 3,
                struct_name: Name {
                    name: "Buffer",
                    complete_name: "ryu::buffer::Buffer",
                    import_name: MyPath {
                        name: "ryu",
                        next: Some(
                            MyPath {
                                name: "buffer",
                                next: Some(
                                    MyPath {
                                        name: "Buffer",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                trait_name: Some(
                    Name {
                        name: "",
                        complete_name: "",
                        import_name: MyPath {
                            name: "",
                            next: None,
                        },
                    },
                ),
                item: Some(
                    ItemImpl {
                        attrs: [],
                        defaultness: None,
                        unsafety: None,
                        impl_token: Impl,
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        trait_: Some(
                            (
                                None,
                                Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident {
                                                sym: Default,
                                                span: bytes(6986..6993),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                    ],
                                },
                                For,
                            ),
                        ),
                        self_ty: Type::Path {
                            qself: None,
                            path: Path {
                                leading_colon: None,
                                segments: [
                                    PathSegment {
                                        ident: Ident {
                                            sym: Buffer,
                                            span: bytes(6998..7004),
                                        },
                                        arguments: PathArguments::None,
                                    },
                                ],
                            },
                        },
                        brace_token: Brace,
                        items: [],
                    },
                ),
                types: [],
                consts: [],
                functions: [
                    ImplFnItem {
                        fn_name: Name {
                            name: "default",
                            complete_name: "<ryu::buffer::Buffer as >::default",
                            import_name: MyPath {
                                name: "<ryu",
                                next: Some(
                                    MyPath {
                                        name: "buffer",
                                        next: Some(
                                            MyPath {
                                                name: "Buffer as >",
                                                next: Some(
                                                    MyPath {
                                                        name: "default",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#3}::default",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(7013..7019),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::List {
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: cfg_attr,
                                                            span: bytes(7027..7035),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                            delimiter: MacroDelimiter::Paren(
                                                Paren,
                                            ),
                                            tokens: TokenStream [
                                                Ident {
                                                    sym: feature,
                                                    span: bytes(7036..7043),
                                                },
                                                Punct {
                                                    char: '=',
                                                    spacing: Alone,
                                                    span: bytes(7044..7045),
                                                },
                                                Literal {
                                                    lit: "no-panic",
                                                    span: bytes(7046..7056),
                                                },
                                                Punct {
                                                    char: ',',
                                                    spacing: Alone,
                                                    span: bytes(7056..7057),
                                                },
                                                Ident {
                                                    sym: no_panic,
                                                    span: bytes(7058..7066),
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: default,
                                        span: bytes(7076..7083),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Self,
                                                            span: bytes(7089..7093),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Expr(
                                            Expr::Call {
                                                attrs: [],
                                                func: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Buffer,
                                                                    span: bytes(7104..7110),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: new,
                                                                    span: bytes(7112..7115),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                paren_token: Paren,
                                                args: [],
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: true,
                    },
                ],
                relative_types: [],
            },
        ),
    },
    "ryu::d2s_intrinsics::multiple_of_power_of_2": FnData {
        fn_name: "multiple_of_power_of_2",
        complete_fn_name: "ryu::d2s_intrinsics::multiple_of_power_of_2",
        fn_type: Fn(
            FnItem {
                fn_name: Name {
                    name: "multiple_of_power_of_2",
                    complete_name: "ryu::d2s_intrinsics::multiple_of_power_of_2",
                    import_name: MyPath {
                        name: "ryu",
                        next: Some(
                            MyPath {
                                name: "d2s_intrinsics",
                                next: Some(
                                    MyPath {
                                        name: "multiple_of_power_of_2",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "multiple_of_power_of_2",
                item: Some(
                    ItemFn {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::List {
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: cfg_attr,
                                                    span: bytes(58495..58503),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                    delimiter: MacroDelimiter::Paren(
                                        Paren,
                                    ),
                                    tokens: TokenStream [
                                        Ident {
                                            sym: feature,
                                            span: bytes(58504..58511),
                                        },
                                        Punct {
                                            char: '=',
                                            spacing: Alone,
                                            span: bytes(58512..58513),
                                        },
                                        Literal {
                                            lit: "no-panic",
                                            span: bytes(58514..58524),
                                        },
                                        Punct {
                                            char: ',',
                                            spacing: Alone,
                                            span: bytes(58524..58525),
                                        },
                                        Ident {
                                            sym: inline,
                                            span: bytes(58526..58532),
                                        },
                                    ],
                                },
                            },
                        ],
                        vis: Visibility::Public(
                            Pub,
                        ),
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: multiple_of_power_of_2,
                                span: bytes(58542..58564),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: value,
                                                span: bytes(58565..58570),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u64,
                                                            span: bytes(58572..58575),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                                Comma,
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: p,
                                                span: bytes(58577..58578),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u32,
                                                            span: bytes(58580..58583),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: bool,
                                                    span: bytes(58588..58592),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Macro {
                                    attrs: [],
                                    mac: Macro {
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: debug_assert,
                                                        span: bytes(58599..58611),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                        bang_token: Not,
                                        delimiter: MacroDelimiter::Paren(
                                            Paren,
                                        ),
                                        tokens: TokenStream [
                                            Ident {
                                                sym: value,
                                                span: bytes(58613..58618),
                                            },
                                            Punct {
                                                char: '!',
                                                spacing: Joint,
                                                span: bytes(58619..58620),
                                            },
                                            Punct {
                                                char: '=',
                                                spacing: Alone,
                                                span: bytes(58620..58621),
                                            },
                                            Literal {
                                                lit: 0,
                                                span: bytes(58622..58623),
                                            },
                                        ],
                                    },
                                    semi_token: Some(
                                        Semi,
                                    ),
                                },
                                Stmt::Macro {
                                    attrs: [],
                                    mac: Macro {
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: debug_assert,
                                                        span: bytes(58630..58642),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                        bang_token: Not,
                                        delimiter: MacroDelimiter::Paren(
                                            Paren,
                                        ),
                                        tokens: TokenStream [
                                            Ident {
                                                sym: p,
                                                span: bytes(58644..58645),
                                            },
                                            Punct {
                                                char: '<',
                                                spacing: Alone,
                                                span: bytes(58646..58647),
                                            },
                                            Literal {
                                                lit: 64,
                                                span: bytes(58648..58650),
                                            },
                                        ],
                                    },
                                    semi_token: Some(
                                        Semi,
                                    ),
                                },
                                Stmt::Expr(
                                    Expr::Binary {
                                        attrs: [],
                                        left: Expr::Paren {
                                            attrs: [],
                                            paren_token: Paren,
                                            expr: Expr::Binary {
                                                attrs: [],
                                                left: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: value,
                                                                    span: bytes(58715..58720),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                op: BinOp::BitAnd(
                                                    And,
                                                ),
                                                right: Expr::Paren {
                                                    attrs: [],
                                                    paren_token: Paren,
                                                    expr: Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Paren {
                                                            attrs: [],
                                                            paren_token: Paren,
                                                            expr: Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 1u64,
                                                                    },
                                                                },
                                                                op: BinOp::Shl(
                                                                    Shl,
                                                                ),
                                                                right: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: p,
                                                                                    span: bytes(58733..58734),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        },
                                                        op: BinOp::Sub(
                                                            Minus,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 1,
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                        },
                                        op: BinOp::Eq(
                                            EqEq,
                                        ),
                                        right: Expr::Lit {
                                            attrs: [],
                                            lit: Lit::Int {
                                                token: 0,
                                            },
                                        },
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: PubT,
            },
        ),
    },
    "ryu::common::decimal_length9": FnData {
        fn_name: "decimal_length9",
        complete_fn_name: "ryu::common::decimal_length9",
        fn_type: Fn(
            FnItem {
                fn_name: Name {
                    name: "decimal_length9",
                    complete_name: "ryu::common::decimal_length9",
                    import_name: MyPath {
                        name: "ryu",
                        next: Some(
                            MyPath {
                                name: "common",
                                next: Some(
                                    MyPath {
                                        name: "decimal_length9",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "decimal_length9",
                item: Some(
                    ItemFn {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::List {
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: cfg_attr,
                                                    span: bytes(9932..9940),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                    delimiter: MacroDelimiter::Paren(
                                        Paren,
                                    ),
                                    tokens: TokenStream [
                                        Ident {
                                            sym: feature,
                                            span: bytes(9941..9948),
                                        },
                                        Punct {
                                            char: '=',
                                            spacing: Alone,
                                            span: bytes(9949..9950),
                                        },
                                        Literal {
                                            lit: "no-panic",
                                            span: bytes(9951..9961),
                                        },
                                        Punct {
                                            char: ',',
                                            spacing: Alone,
                                            span: bytes(9961..9962),
                                        },
                                        Ident {
                                            sym: inline,
                                            span: bytes(9963..9969),
                                        },
                                    ],
                                },
                            },
                        ],
                        vis: Visibility::Public(
                            Pub,
                        ),
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: decimal_length9,
                                span: bytes(9979..9994),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: v,
                                                span: bytes(9995..9996),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u32,
                                                            span: bytes(9998..10001),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: u32,
                                                    span: bytes(10006..10009),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Macro {
                                    attrs: [],
                                    mac: Macro {
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: debug_assert,
                                                        span: bytes(10132..10144),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                        bang_token: Not,
                                        delimiter: MacroDelimiter::Paren(
                                            Paren,
                                        ),
                                        tokens: TokenStream [
                                            Ident {
                                                sym: v,
                                                span: bytes(10146..10147),
                                            },
                                            Punct {
                                                char: '<',
                                                spacing: Alone,
                                                span: bytes(10148..10149),
                                            },
                                            Literal {
                                                lit: 1000000000,
                                                span: bytes(10150..10160),
                                            },
                                        ],
                                    },
                                    semi_token: Some(
                                        Semi,
                                    ),
                                },
                                Stmt::Expr(
                                    Expr::If {
                                        attrs: [],
                                        if_token: If,
                                        cond: Expr::Binary {
                                            attrs: [],
                                            left: Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: v,
                                                                span: bytes(10171..10172),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            op: BinOp::Ge(
                                                Ge,
                                            ),
                                            right: Expr::Lit {
                                                attrs: [],
                                                lit: Lit::Int {
                                                    token: 100000000,
                                                },
                                            },
                                        },
                                        then_branch: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::Lit {
                                                        attrs: [],
                                                        lit: Lit::Int {
                                                            token: 9,
                                                        },
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                        else_branch: Some(
                                            (
                                                Else,
                                                Expr::If {
                                                    attrs: [],
                                                    if_token: If,
                                                    cond: Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: v,
                                                                            span: bytes(10212..10213),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        op: BinOp::Ge(
                                                            Ge,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 10000000,
                                                            },
                                                        },
                                                    },
                                                    then_branch: Block {
                                                        brace_token: Brace,
                                                        stmts: [
                                                            Stmt::Expr(
                                                                Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 8,
                                                                    },
                                                                },
                                                                None,
                                                            ),
                                                        ],
                                                    },
                                                    else_branch: Some(
                                                        (
                                                            Else,
                                                            Expr::If {
                                                                attrs: [],
                                                                if_token: If,
                                                                cond: Expr::Binary {
                                                                    attrs: [],
                                                                    left: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: v,
                                                                                        span: bytes(10252..10253),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    op: BinOp::Ge(
                                                                        Ge,
                                                                    ),
                                                                    right: Expr::Lit {
                                                                        attrs: [],
                                                                        lit: Lit::Int {
                                                                            token: 1000000,
                                                                        },
                                                                    },
                                                                },
                                                                then_branch: Block {
                                                                    brace_token: Brace,
                                                                    stmts: [
                                                                        Stmt::Expr(
                                                                            Expr::Lit {
                                                                                attrs: [],
                                                                                lit: Lit::Int {
                                                                                    token: 7,
                                                                                },
                                                                            },
                                                                            None,
                                                                        ),
                                                                    ],
                                                                },
                                                                else_branch: Some(
                                                                    (
                                                                        Else,
                                                                        Expr::If {
                                                                            attrs: [],
                                                                            if_token: If,
                                                                            cond: Expr::Binary {
                                                                                attrs: [],
                                                                                left: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: v,
                                                                                                    span: bytes(10291..10292),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                op: BinOp::Ge(
                                                                                    Ge,
                                                                                ),
                                                                                right: Expr::Lit {
                                                                                    attrs: [],
                                                                                    lit: Lit::Int {
                                                                                        token: 100000,
                                                                                    },
                                                                                },
                                                                            },
                                                                            then_branch: Block {
                                                                                brace_token: Brace,
                                                                                stmts: [
                                                                                    Stmt::Expr(
                                                                                        Expr::Lit {
                                                                                            attrs: [],
                                                                                            lit: Lit::Int {
                                                                                                token: 6,
                                                                                            },
                                                                                        },
                                                                                        None,
                                                                                    ),
                                                                                ],
                                                                            },
                                                                            else_branch: Some(
                                                                                (
                                                                                    Else,
                                                                                    Expr::If {
                                                                                        attrs: [],
                                                                                        if_token: If,
                                                                                        cond: Expr::Binary {
                                                                                            attrs: [],
                                                                                            left: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: v,
                                                                                                                span: bytes(10329..10330),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            op: BinOp::Ge(
                                                                                                Ge,
                                                                                            ),
                                                                                            right: Expr::Lit {
                                                                                                attrs: [],
                                                                                                lit: Lit::Int {
                                                                                                    token: 10000,
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                        then_branch: Block {
                                                                                            brace_token: Brace,
                                                                                            stmts: [
                                                                                                Stmt::Expr(
                                                                                                    Expr::Lit {
                                                                                                        attrs: [],
                                                                                                        lit: Lit::Int {
                                                                                                            token: 5,
                                                                                                        },
                                                                                                    },
                                                                                                    None,
                                                                                                ),
                                                                                            ],
                                                                                        },
                                                                                        else_branch: Some(
                                                                                            (
                                                                                                Else,
                                                                                                Expr::If {
                                                                                                    attrs: [],
                                                                                                    if_token: If,
                                                                                                    cond: Expr::Binary {
                                                                                                        attrs: [],
                                                                                                        left: Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: v,
                                                                                                                            span: bytes(10366..10367),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                        op: BinOp::Ge(
                                                                                                            Ge,
                                                                                                        ),
                                                                                                        right: Expr::Lit {
                                                                                                            attrs: [],
                                                                                                            lit: Lit::Int {
                                                                                                                token: 1000,
                                                                                                            },
                                                                                                        },
                                                                                                    },
                                                                                                    then_branch: Block {
                                                                                                        brace_token: Brace,
                                                                                                        stmts: [
                                                                                                            Stmt::Expr(
                                                                                                                Expr::Lit {
                                                                                                                    attrs: [],
                                                                                                                    lit: Lit::Int {
                                                                                                                        token: 4,
                                                                                                                    },
                                                                                                                },
                                                                                                                None,
                                                                                                            ),
                                                                                                        ],
                                                                                                    },
                                                                                                    else_branch: Some(
                                                                                                        (
                                                                                                            Else,
                                                                                                            Expr::If {
                                                                                                                attrs: [],
                                                                                                                if_token: If,
                                                                                                                cond: Expr::Binary {
                                                                                                                    attrs: [],
                                                                                                                    left: Expr::Path {
                                                                                                                        attrs: [],
                                                                                                                        qself: None,
                                                                                                                        path: Path {
                                                                                                                            leading_colon: None,
                                                                                                                            segments: [
                                                                                                                                PathSegment {
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: v,
                                                                                                                                        span: bytes(10402..10403),
                                                                                                                                    },
                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                },
                                                                                                                            ],
                                                                                                                        },
                                                                                                                    },
                                                                                                                    op: BinOp::Ge(
                                                                                                                        Ge,
                                                                                                                    ),
                                                                                                                    right: Expr::Lit {
                                                                                                                        attrs: [],
                                                                                                                        lit: Lit::Int {
                                                                                                                            token: 100,
                                                                                                                        },
                                                                                                                    },
                                                                                                                },
                                                                                                                then_branch: Block {
                                                                                                                    brace_token: Brace,
                                                                                                                    stmts: [
                                                                                                                        Stmt::Expr(
                                                                                                                            Expr::Lit {
                                                                                                                                attrs: [],
                                                                                                                                lit: Lit::Int {
                                                                                                                                    token: 3,
                                                                                                                                },
                                                                                                                            },
                                                                                                                            None,
                                                                                                                        ),
                                                                                                                    ],
                                                                                                                },
                                                                                                                else_branch: Some(
                                                                                                                    (
                                                                                                                        Else,
                                                                                                                        Expr::If {
                                                                                                                            attrs: [],
                                                                                                                            if_token: If,
                                                                                                                            cond: Expr::Binary {
                                                                                                                                attrs: [],
                                                                                                                                left: Expr::Path {
                                                                                                                                    attrs: [],
                                                                                                                                    qself: None,
                                                                                                                                    path: Path {
                                                                                                                                        leading_colon: None,
                                                                                                                                        segments: [
                                                                                                                                            PathSegment {
                                                                                                                                                ident: Ident {
                                                                                                                                                    sym: v,
                                                                                                                                                    span: bytes(10437..10438),
                                                                                                                                                },
                                                                                                                                                arguments: PathArguments::None,
                                                                                                                                            },
                                                                                                                                        ],
                                                                                                                                    },
                                                                                                                                },
                                                                                                                                op: BinOp::Ge(
                                                                                                                                    Ge,
                                                                                                                                ),
                                                                                                                                right: Expr::Lit {
                                                                                                                                    attrs: [],
                                                                                                                                    lit: Lit::Int {
                                                                                                                                        token: 10,
                                                                                                                                    },
                                                                                                                                },
                                                                                                                            },
                                                                                                                            then_branch: Block {
                                                                                                                                brace_token: Brace,
                                                                                                                                stmts: [
                                                                                                                                    Stmt::Expr(
                                                                                                                                        Expr::Lit {
                                                                                                                                            attrs: [],
                                                                                                                                            lit: Lit::Int {
                                                                                                                                                token: 2,
                                                                                                                                            },
                                                                                                                                        },
                                                                                                                                        None,
                                                                                                                                    ),
                                                                                                                                ],
                                                                                                                            },
                                                                                                                            else_branch: Some(
                                                                                                                                (
                                                                                                                                    Else,
                                                                                                                                    Expr::Block {
                                                                                                                                        attrs: [],
                                                                                                                                        label: None,
                                                                                                                                        block: Block {
                                                                                                                                            brace_token: Brace,
                                                                                                                                            stmts: [
                                                                                                                                                Stmt::Expr(
                                                                                                                                                    Expr::Lit {
                                                                                                                                                        attrs: [],
                                                                                                                                                        lit: Lit::Int {
                                                                                                                                                            token: 1,
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    None,
                                                                                                                                                ),
                                                                                                                                            ],
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                ),
                                                                                                                            ),
                                                                                                                        },
                                                                                                                    ),
                                                                                                                ),
                                                                                                            },
                                                                                                        ),
                                                                                                    ),
                                                                                                },
                                                                                            ),
                                                                                        ),
                                                                                    },
                                                                                ),
                                                                            ),
                                                                        },
                                                                    ),
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                },
                                            ),
                                        ),
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: PubT,
            },
        ),
    },
    "ryu::common::log2_pow5": FnData {
        fn_name: "log2_pow5",
        complete_fn_name: "ryu::common::log2_pow5",
        fn_type: Fn(
            FnItem {
                fn_name: Name {
                    name: "log2_pow5",
                    complete_name: "ryu::common::log2_pow5",
                    import_name: MyPath {
                        name: "ryu",
                        next: Some(
                            MyPath {
                                name: "common",
                                next: Some(
                                    MyPath {
                                        name: "log2_pow5",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "log2_pow5",
                item: Some(
                    ItemFn {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::List {
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: cfg_attr,
                                                    span: bytes(10554..10562),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                    delimiter: MacroDelimiter::Paren(
                                        Paren,
                                    ),
                                    tokens: TokenStream [
                                        Ident {
                                            sym: feature,
                                            span: bytes(10563..10570),
                                        },
                                        Punct {
                                            char: '=',
                                            spacing: Alone,
                                            span: bytes(10571..10572),
                                        },
                                        Literal {
                                            lit: "no-panic",
                                            span: bytes(10573..10583),
                                        },
                                        Punct {
                                            char: ',',
                                            spacing: Alone,
                                            span: bytes(10583..10584),
                                        },
                                        Ident {
                                            sym: inline,
                                            span: bytes(10585..10591),
                                        },
                                    ],
                                },
                            },
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::List {
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: allow,
                                                    span: bytes(10596..10601),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                    delimiter: MacroDelimiter::Paren(
                                        Paren,
                                    ),
                                    tokens: TokenStream [
                                        Ident {
                                            sym: dead_code,
                                            span: bytes(10602..10611),
                                        },
                                    ],
                                },
                            },
                        ],
                        vis: Visibility::Public(
                            Pub,
                        ),
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: log2_pow5,
                                span: bytes(10621..10630),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: e,
                                                span: bytes(10631..10632),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: i32,
                                                            span: bytes(10634..10637),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: i32,
                                                    span: bytes(10642..10645),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Macro {
                                    attrs: [],
                                    mac: Macro {
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: debug_assert,
                                                        span: bytes(10884..10896),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                        bang_token: Not,
                                        delimiter: MacroDelimiter::Paren(
                                            Paren,
                                        ),
                                        tokens: TokenStream [
                                            Ident {
                                                sym: e,
                                                span: bytes(10898..10899),
                                            },
                                            Punct {
                                                char: '>',
                                                spacing: Joint,
                                                span: bytes(10900..10901),
                                            },
                                            Punct {
                                                char: '=',
                                                spacing: Alone,
                                                span: bytes(10901..10902),
                                            },
                                            Literal {
                                                lit: 0,
                                                span: bytes(10903..10904),
                                            },
                                        ],
                                    },
                                    semi_token: Some(
                                        Semi,
                                    ),
                                },
                                Stmt::Macro {
                                    attrs: [],
                                    mac: Macro {
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: debug_assert,
                                                        span: bytes(10911..10923),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                        bang_token: Not,
                                        delimiter: MacroDelimiter::Paren(
                                            Paren,
                                        ),
                                        tokens: TokenStream [
                                            Ident {
                                                sym: e,
                                                span: bytes(10925..10926),
                                            },
                                            Punct {
                                                char: '<',
                                                spacing: Joint,
                                                span: bytes(10927..10928),
                                            },
                                            Punct {
                                                char: '=',
                                                spacing: Alone,
                                                span: bytes(10928..10929),
                                            },
                                            Literal {
                                                lit: 3528,
                                                span: bytes(10930..10934),
                                            },
                                        ],
                                    },
                                    semi_token: Some(
                                        Semi,
                                    ),
                                },
                                Stmt::Expr(
                                    Expr::Cast {
                                        attrs: [],
                                        expr: Expr::Paren {
                                            attrs: [],
                                            paren_token: Paren,
                                            expr: Expr::Binary {
                                                attrs: [],
                                                left: Expr::Paren {
                                                    attrs: [],
                                                    paren_token: Paren,
                                                    expr: Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Cast {
                                                            attrs: [],
                                                            expr: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: e,
                                                                                span: bytes(10943..10944),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            as_token: As,
                                                            ty: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: u32,
                                                                                span: bytes(10948..10951),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                        op: BinOp::Mul(
                                                            Star,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 1217359,
                                                            },
                                                        },
                                                    },
                                                },
                                                op: BinOp::Shr(
                                                    Shr,
                                                ),
                                                right: Expr::Lit {
                                                    attrs: [],
                                                    lit: Lit::Int {
                                                        token: 19,
                                                    },
                                                },
                                            },
                                        },
                                        as_token: As,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: i32,
                                                            span: bytes(10973..10976),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: PubT,
            },
        ),
    },
    "< as ryu::buffer::Sealed>::write_to_ryu_buffer": FnData {
        fn_name: "write_to_ryu_buffer",
        complete_fn_name: "< as ryu::buffer::Sealed>::write_to_ryu_buffer",
        fn_type: ImplFn(
            ImplFnItem {
                fn_name: Name {
                    name: "write_to_ryu_buffer",
                    complete_name: "< as ryu::buffer::Sealed>::write_to_ryu_buffer",
                    import_name: MyPath {
                        name: "< as ryu",
                        next: Some(
                            MyPath {
                                name: "buffer",
                                next: Some(
                                    MyPath {
                                        name: "Sealed>",
                                        next: Some(
                                            MyPath {
                                                name: "write_to_ryu_buffer",
                                                next: None,
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "{impl#7}::write_to_ryu_buffer",
                item: Some(
                    ImplItemFn {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident {
                                                sym: inline,
                                                span: bytes(8927..8933),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                    ],
                                },
                            },
                        ],
                        vis: Visibility::Inherited,
                        defaultness: None,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: Some(
                                Unsafe,
                            ),
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: write_to_ryu_buffer,
                                span: bytes(8949..8968),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Receiver(
                                    Receiver {
                                        attrs: [],
                                        reference: None,
                                        mutability: None,
                                        self_token: SelfValue,
                                        colon_token: None,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Self,
                                                            span: bytes(8969..8973),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                                Comma,
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: result,
                                                span: bytes(8975..8981),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Ptr {
                                            star_token: Star,
                                            const_token: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: u8,
                                                                span: bytes(8988..8990),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: usize,
                                                    span: bytes(8995..9000),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Expr(
                                    Expr::Call {
                                        attrs: [],
                                        func: Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: raw,
                                                            span: bytes(9011..9014),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                    PathSep,
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: format64,
                                                            span: bytes(9016..9024),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        paren_token: Paren,
                                        args: [
                                            Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: self,
                                                                span: bytes(9025..9029),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            Comma,
                                            Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: result,
                                                                span: bytes(9031..9037),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: Pri,
                is_constructor: false,
            },
            ImplItem {
                impl_num: 7,
                struct_name: Name {
                    name: "",
                    complete_name: "",
                    import_name: MyPath {
                        name: "",
                        next: None,
                    },
                },
                trait_name: Some(
                    Name {
                        name: "Sealed",
                        complete_name: "ryu::buffer::Sealed",
                        import_name: MyPath {
                            name: "ryu",
                            next: Some(
                                MyPath {
                                    name: "buffer",
                                    next: Some(
                                        MyPath {
                                            name: "Sealed",
                                            next: None,
                                        },
                                    ),
                                },
                            ),
                        },
                    },
                ),
                item: Some(
                    ItemImpl {
                        attrs: [],
                        defaultness: None,
                        unsafety: None,
                        impl_token: Impl,
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        trait_: Some(
                            (
                                None,
                                Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident {
                                                sym: Sealed,
                                                span: bytes(8302..8308),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                    ],
                                },
                                For,
                            ),
                        ),
                        self_ty: Type::Path {
                            qself: None,
                            path: Path {
                                leading_colon: None,
                                segments: [
                                    PathSegment {
                                        ident: Ident {
                                            sym: f64,
                                            span: bytes(8313..8316),
                                        },
                                        arguments: PathArguments::None,
                                    },
                                ],
                            },
                        },
                        brace_token: Brace,
                        items: [],
                    },
                ),
                types: [],
                consts: [],
                functions: [
                    ImplFnItem {
                        fn_name: Name {
                            name: "is_nonfinite",
                            complete_name: "< as ryu::buffer::Sealed>::is_nonfinite",
                            import_name: MyPath {
                                name: "< as ryu",
                                next: Some(
                                    MyPath {
                                        name: "buffer",
                                        next: Some(
                                            MyPath {
                                                name: "Sealed>",
                                                next: Some(
                                                    MyPath {
                                                        name: "is_nonfinite",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#7}::is_nonfinite",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(8325..8331),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: is_nonfinite,
                                        span: bytes(8340..8352),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: None,
                                                mutability: None,
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Self,
                                                                    span: bytes(8353..8357),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: bool,
                                                            span: bytes(8362..8366),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [
                            Item::Const {
                                attrs: [],
                                vis: Visibility::Inherited,
                                const_token: Const,
                                ident: Ident {
                                    sym: EXP_MASK,
                                    span: bytes(8383..8391),
                                },
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                colon_token: Colon,
                                ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: u64,
                                                    span: bytes(8393..8396),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                                eq_token: Eq,
                                expr: Expr::Lit {
                                    attrs: [],
                                    lit: Lit::Int {
                                        token: 0x7ff0000000000000,
                                    },
                                },
                                semi_token: Semi,
                            },
                        ],
                        visibility: Pri,
                        is_constructor: false,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "format_nonfinite",
                            complete_name: "< as ryu::buffer::Sealed>::format_nonfinite",
                            import_name: MyPath {
                                name: "< as ryu",
                                next: Some(
                                    MyPath {
                                        name: "buffer",
                                        next: Some(
                                            MyPath {
                                                name: "Sealed>",
                                                next: Some(
                                                    MyPath {
                                                        name: "format_nonfinite",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#7}::format_nonfinite",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: cold,
                                                        span: bytes(8503..8507),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::List {
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: cfg_attr,
                                                            span: bytes(8515..8523),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                            delimiter: MacroDelimiter::Paren(
                                                Paren,
                                            ),
                                            tokens: TokenStream [
                                                Ident {
                                                    sym: feature,
                                                    span: bytes(8524..8531),
                                                },
                                                Punct {
                                                    char: '=',
                                                    spacing: Alone,
                                                    span: bytes(8532..8533),
                                                },
                                                Literal {
                                                    lit: "no-panic",
                                                    span: bytes(8534..8544),
                                                },
                                                Punct {
                                                    char: ',',
                                                    spacing: Alone,
                                                    span: bytes(8544..8545),
                                                },
                                                Ident {
                                                    sym: inline,
                                                    span: bytes(8546..8552),
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: format_nonfinite,
                                        span: bytes(8562..8578),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: None,
                                                mutability: None,
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Self,
                                                                    span: bytes(8579..8583),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Reference {
                                            and_token: And,
                                            lifetime: Some(
                                                Lifetime {
                                                    apostrophe: bytes(8589..8590),
                                                    ident: Ident {
                                                        sym: static,
                                                        span: bytes(8590..8596),
                                                    },
                                                },
                                            ),
                                            mutability: None,
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: str,
                                                                span: bytes(8597..8600),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [
                            Item::Const {
                                attrs: [],
                                vis: Visibility::Inherited,
                                const_token: Const,
                                ident: Ident {
                                    sym: MANTISSA_MASK,
                                    span: bytes(8617..8630),
                                },
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                colon_token: Colon,
                                ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: u64,
                                                    span: bytes(8632..8635),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                                eq_token: Eq,
                                expr: Expr::Lit {
                                    attrs: [],
                                    lit: Lit::Int {
                                        token: 0x000fffffffffffff,
                                    },
                                },
                                semi_token: Semi,
                            },
                            Item::Const {
                                attrs: [],
                                vis: Visibility::Inherited,
                                const_token: Const,
                                ident: Ident {
                                    sym: SIGN_MASK,
                                    span: bytes(8672..8681),
                                },
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                colon_token: Colon,
                                ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: u64,
                                                    span: bytes(8683..8686),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                                eq_token: Eq,
                                expr: Expr::Lit {
                                    attrs: [],
                                    lit: Lit::Int {
                                        token: 0x8000000000000000,
                                    },
                                },
                                semi_token: Semi,
                            },
                        ],
                        visibility: Pri,
                        is_constructor: false,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "write_to_ryu_buffer",
                            complete_name: "< as ryu::buffer::Sealed>::write_to_ryu_buffer",
                            import_name: MyPath {
                                name: "< as ryu",
                                next: Some(
                                    MyPath {
                                        name: "buffer",
                                        next: Some(
                                            MyPath {
                                                name: "Sealed>",
                                                next: Some(
                                                    MyPath {
                                                        name: "write_to_ryu_buffer",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#7}::write_to_ryu_buffer",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(8927..8933),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: Some(
                                        Unsafe,
                                    ),
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: write_to_ryu_buffer,
                                        span: bytes(8949..8968),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: None,
                                                mutability: None,
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Self,
                                                                    span: bytes(8969..8973),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: result,
                                                        span: bytes(8975..8981),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Ptr {
                                                    star_token: Star,
                                                    const_token: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: u8,
                                                                        span: bytes(8988..8990),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: usize,
                                                            span: bytes(8995..9000),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: false,
                    },
                ],
                relative_types: [],
            },
        ),
    },
    "ryu::buffer::Buffer::format": FnData {
        fn_name: "format",
        complete_fn_name: "ryu::buffer::Buffer::format",
        fn_type: ImplFn(
            ImplFnItem {
                fn_name: Name {
                    name: "format",
                    complete_name: "ryu::buffer::Buffer::format",
                    import_name: MyPath {
                        name: "ryu",
                        next: Some(
                            MyPath {
                                name: "buffer",
                                next: Some(
                                    MyPath {
                                        name: "Buffer",
                                        next: Some(
                                            MyPath {
                                                name: "format",
                                                next: None,
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "{impl#0}::format",
                item: Some(
                    ImplItemFn {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::List {
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: cfg_attr,
                                                    span: bytes(5376..5384),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                    delimiter: MacroDelimiter::Paren(
                                        Paren,
                                    ),
                                    tokens: TokenStream [
                                        Ident {
                                            sym: feature,
                                            span: bytes(5385..5392),
                                        },
                                        Punct {
                                            char: '=',
                                            spacing: Alone,
                                            span: bytes(5393..5394),
                                        },
                                        Literal {
                                            lit: "no-panic",
                                            span: bytes(5395..5405),
                                        },
                                        Punct {
                                            char: ',',
                                            spacing: Alone,
                                            span: bytes(5405..5406),
                                        },
                                        Ident {
                                            sym: inline,
                                            span: bytes(5407..5413),
                                        },
                                    ],
                                },
                            },
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::List {
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: cfg_attr,
                                                    span: bytes(5422..5430),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                    delimiter: MacroDelimiter::Paren(
                                        Paren,
                                    ),
                                    tokens: TokenStream [
                                        Ident {
                                            sym: feature,
                                            span: bytes(5431..5438),
                                        },
                                        Punct {
                                            char: '=',
                                            spacing: Alone,
                                            span: bytes(5439..5440),
                                        },
                                        Literal {
                                            lit: "no-panic",
                                            span: bytes(5441..5451),
                                        },
                                        Punct {
                                            char: ',',
                                            spacing: Alone,
                                            span: bytes(5451..5452),
                                        },
                                        Ident {
                                            sym: no_panic,
                                            span: bytes(5453..5461),
                                        },
                                    ],
                                },
                            },
                        ],
                        vis: Visibility::Public(
                            Pub,
                        ),
                        defaultness: None,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: format,
                                span: bytes(5475..5481),
                            },
                            generics: Generics {
                                lt_token: Some(
                                    Lt,
                                ),
                                params: [
                                    GenericParam::Type(
                                        TypeParam {
                                            attrs: [],
                                            ident: Ident {
                                                sym: F,
                                                span: bytes(5482..5483),
                                            },
                                            colon_token: Some(
                                                Colon,
                                            ),
                                            bounds: [
                                                TypeParamBound::Trait(
                                                    TraitBound {
                                                        paren_token: None,
                                                        modifier: TraitBoundModifier::None,
                                                        lifetimes: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Float,
                                                                        span: bytes(5485..5490),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                            ],
                                            eq_token: None,
                                            default: None,
                                        },
                                    ),
                                ],
                                gt_token: Some(
                                    Gt,
                                ),
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Receiver(
                                    Receiver {
                                        attrs: [],
                                        reference: Some(
                                            (
                                                And,
                                                None,
                                            ),
                                        ),
                                        mutability: Some(
                                            Mut,
                                        ),
                                        self_token: SelfValue,
                                        colon_token: None,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Self,
                                                                span: bytes(5497..5501),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    },
                                ),
                                Comma,
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: f,
                                                span: bytes(5503..5504),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: F,
                                                            span: bytes(5506..5507),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Reference {
                                    and_token: And,
                                    lifetime: None,
                                    mutability: None,
                                    elem: Type::Path {
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: str,
                                                        span: bytes(5513..5516),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Expr(
                                    Expr::If {
                                        attrs: [],
                                        if_token: If,
                                        cond: Expr::MethodCall {
                                            attrs: [],
                                            receiver: Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: f,
                                                                span: bytes(5530..5531),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            dot_token: Dot,
                                            method: Ident {
                                                sym: is_nonfinite,
                                                span: bytes(5532..5544),
                                            },
                                            turbofish: None,
                                            paren_token: Paren,
                                            args: [],
                                        },
                                        then_branch: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: f,
                                                                            span: bytes(5561..5562),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: format_nonfinite,
                                                            span: bytes(5563..5579),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [],
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                        else_branch: Some(
                                            (
                                                Else,
                                                Expr::Block {
                                                    attrs: [],
                                                    label: None,
                                                    block: Block {
                                                        brace_token: Brace,
                                                        stmts: [
                                                            Stmt::Expr(
                                                                Expr::MethodCall {
                                                                    attrs: [],
                                                                    receiver: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: self,
                                                                                        span: bytes(5611..5615),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    method: Ident {
                                                                        sym: format_finite,
                                                                        span: bytes(5616..5629),
                                                                    },
                                                                    turbofish: None,
                                                                    paren_token: Paren,
                                                                    args: [
                                                                        Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: f,
                                                                                            span: bytes(5630..5631),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                                None,
                                                            ),
                                                        ],
                                                    },
                                                },
                                            ),
                                        ),
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: PubT,
                is_constructor: false,
            },
            ImplItem {
                impl_num: 0,
                struct_name: Name {
                    name: "Buffer",
                    complete_name: "ryu::buffer::Buffer",
                    import_name: MyPath {
                        name: "ryu",
                        next: Some(
                            MyPath {
                                name: "buffer",
                                next: Some(
                                    MyPath {
                                        name: "Buffer",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                trait_name: None,
                item: Some(
                    ItemImpl {
                        attrs: [],
                        defaultness: None,
                        unsafety: None,
                        impl_token: Impl,
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        trait_: None,
                        self_ty: Type::Path {
                            qself: None,
                            path: Path {
                                leading_colon: None,
                                segments: [
                                    PathSegment {
                                        ident: Ident {
                                            sym: Buffer,
                                            span: bytes(4567..4573),
                                        },
                                        arguments: PathArguments::None,
                                    },
                                ],
                            },
                        },
                        brace_token: Brace,
                        items: [],
                    },
                ),
                types: [],
                consts: [],
                functions: [
                    ImplFnItem {
                        fn_name: Name {
                            name: "new",
                            complete_name: "ryu::buffer::Buffer::new",
                            import_name: MyPath {
                                name: "ryu",
                                next: Some(
                                    MyPath {
                                        name: "buffer",
                                        next: Some(
                                            MyPath {
                                                name: "Buffer",
                                                next: Some(
                                                    MyPath {
                                                        name: "new",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#0}::new",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(4687..4693),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::List {
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: cfg_attr,
                                                            span: bytes(4701..4709),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                            delimiter: MacroDelimiter::Paren(
                                                Paren,
                                            ),
                                            tokens: TokenStream [
                                                Ident {
                                                    sym: feature,
                                                    span: bytes(4710..4717),
                                                },
                                                Punct {
                                                    char: '=',
                                                    spacing: Alone,
                                                    span: bytes(4718..4719),
                                                },
                                                Literal {
                                                    lit: "no-panic",
                                                    span: bytes(4720..4730),
                                                },
                                                Punct {
                                                    char: ',',
                                                    spacing: Alone,
                                                    span: bytes(4730..4731),
                                                },
                                                Ident {
                                                    sym: no_panic,
                                                    span: bytes(4732..4740),
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: new,
                                        span: bytes(4754..4757),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Self,
                                                            span: bytes(4763..4767),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: None,
                                                ident: Ident {
                                                    sym: bytes,
                                                    span: bytes(4782..4787),
                                                },
                                                subpat: None,
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Repeat {
                                                        attrs: [],
                                                        bracket_token: Bracket,
                                                        expr: Expr::Call {
                                                            attrs: [],
                                                            func: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: MaybeUninit,
                                                                                span: bytes(4791..4802),
                                                                            },
                                                                            arguments: PathArguments::AngleBracketed {
                                                                                colon2_token: Some(
                                                                                    PathSep,
                                                                                ),
                                                                                lt_token: Lt,
                                                                                args: [
                                                                                    GenericArgument::Type(
                                                                                        Type::Path {
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: u8,
                                                                                                            span: bytes(4805..4807),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                                gt_token: Gt,
                                                                            },
                                                                        },
                                                                        PathSep,
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: uninit,
                                                                                span: bytes(4810..4816),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            paren_token: Paren,
                                                            args: [],
                                                        },
                                                        semi_token: Semi,
                                                        len: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 24,
                                                            },
                                                        },
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Expr(
                                            Expr::Struct {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Buffer,
                                                                span: bytes(4833..4839),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                brace_token: Brace,
                                                fields: [
                                                    FieldValue {
                                                        attrs: [],
                                                        member: Member::Named(
                                                            Ident {
                                                                sym: bytes,
                                                                span: bytes(4842..4847),
                                                            },
                                                        ),
                                                        colon_token: None,
                                                        expr: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: bytes,
                                                                            span: bytes(4842..4847),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                ],
                                                dot2_token: None,
                                                rest: None,
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                        is_constructor: true,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "format",
                            complete_name: "ryu::buffer::Buffer::format",
                            import_name: MyPath {
                                name: "ryu",
                                next: Some(
                                    MyPath {
                                        name: "buffer",
                                        next: Some(
                                            MyPath {
                                                name: "Buffer",
                                                next: Some(
                                                    MyPath {
                                                        name: "format",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#0}::format",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::List {
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: cfg_attr,
                                                            span: bytes(5376..5384),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                            delimiter: MacroDelimiter::Paren(
                                                Paren,
                                            ),
                                            tokens: TokenStream [
                                                Ident {
                                                    sym: feature,
                                                    span: bytes(5385..5392),
                                                },
                                                Punct {
                                                    char: '=',
                                                    spacing: Alone,
                                                    span: bytes(5393..5394),
                                                },
                                                Literal {
                                                    lit: "no-panic",
                                                    span: bytes(5395..5405),
                                                },
                                                Punct {
                                                    char: ',',
                                                    spacing: Alone,
                                                    span: bytes(5405..5406),
                                                },
                                                Ident {
                                                    sym: inline,
                                                    span: bytes(5407..5413),
                                                },
                                            ],
                                        },
                                    },
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::List {
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: cfg_attr,
                                                            span: bytes(5422..5430),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                            delimiter: MacroDelimiter::Paren(
                                                Paren,
                                            ),
                                            tokens: TokenStream [
                                                Ident {
                                                    sym: feature,
                                                    span: bytes(5431..5438),
                                                },
                                                Punct {
                                                    char: '=',
                                                    spacing: Alone,
                                                    span: bytes(5439..5440),
                                                },
                                                Literal {
                                                    lit: "no-panic",
                                                    span: bytes(5441..5451),
                                                },
                                                Punct {
                                                    char: ',',
                                                    spacing: Alone,
                                                    span: bytes(5451..5452),
                                                },
                                                Ident {
                                                    sym: no_panic,
                                                    span: bytes(5453..5461),
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: format,
                                        span: bytes(5475..5481),
                                    },
                                    generics: Generics {
                                        lt_token: Some(
                                            Lt,
                                        ),
                                        params: [
                                            GenericParam::Type(
                                                TypeParam {
                                                    attrs: [],
                                                    ident: Ident {
                                                        sym: F,
                                                        span: bytes(5482..5483),
                                                    },
                                                    colon_token: Some(
                                                        Colon,
                                                    ),
                                                    bounds: [
                                                        TypeParamBound::Trait(
                                                            TraitBound {
                                                                paren_token: None,
                                                                modifier: TraitBoundModifier::None,
                                                                lifetimes: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Float,
                                                                                span: bytes(5485..5490),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    eq_token: None,
                                                    default: None,
                                                },
                                            ),
                                        ],
                                        gt_token: Some(
                                            Gt,
                                        ),
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(5497..5501),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: f,
                                                        span: bytes(5503..5504),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: F,
                                                                    span: bytes(5506..5507),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: None,
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: str,
                                                                span: bytes(5513..5516),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                        is_constructor: false,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "format_finite",
                            complete_name: "ryu::buffer::Buffer::format_finite",
                            import_name: MyPath {
                                name: "ryu",
                                next: Some(
                                    MyPath {
                                        name: "buffer",
                                        next: Some(
                                            MyPath {
                                                name: "Buffer",
                                                next: Some(
                                                    MyPath {
                                                        name: "format_finite",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#0}::format_finite",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(6327..6333),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::List {
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: cfg_attr,
                                                            span: bytes(6341..6349),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                            delimiter: MacroDelimiter::Paren(
                                                Paren,
                                            ),
                                            tokens: TokenStream [
                                                Ident {
                                                    sym: feature,
                                                    span: bytes(6350..6357),
                                                },
                                                Punct {
                                                    char: '=',
                                                    spacing: Alone,
                                                    span: bytes(6358..6359),
                                                },
                                                Literal {
                                                    lit: "no-panic",
                                                    span: bytes(6360..6370),
                                                },
                                                Punct {
                                                    char: ',',
                                                    spacing: Alone,
                                                    span: bytes(6370..6371),
                                                },
                                                Ident {
                                                    sym: no_panic,
                                                    span: bytes(6372..6380),
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: format_finite,
                                        span: bytes(6394..6407),
                                    },
                                    generics: Generics {
                                        lt_token: Some(
                                            Lt,
                                        ),
                                        params: [
                                            GenericParam::Type(
                                                TypeParam {
                                                    attrs: [],
                                                    ident: Ident {
                                                        sym: F,
                                                        span: bytes(6408..6409),
                                                    },
                                                    colon_token: Some(
                                                        Colon,
                                                    ),
                                                    bounds: [
                                                        TypeParamBound::Trait(
                                                            TraitBound {
                                                                paren_token: None,
                                                                modifier: TraitBoundModifier::None,
                                                                lifetimes: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Float,
                                                                                span: bytes(6411..6416),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    eq_token: None,
                                                    default: None,
                                                },
                                            ),
                                        ],
                                        gt_token: Some(
                                            Gt,
                                        ),
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(6423..6427),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: f,
                                                        span: bytes(6429..6430),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: F,
                                                                    span: bytes(6432..6433),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: None,
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: str,
                                                                span: bytes(6439..6442),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                        is_constructor: false,
                    },
                ],
                relative_types: [],
            },
        ),
    },
    "ryu::d2s_intrinsics::div100": FnData {
        fn_name: "div100",
        complete_fn_name: "ryu::d2s_intrinsics::div100",
        fn_type: Fn(
            FnItem {
                fn_name: Name {
                    name: "div100",
                    complete_name: "ryu::d2s_intrinsics::div100",
                    import_name: MyPath {
                        name: "ryu",
                        next: Some(
                            MyPath {
                                name: "d2s_intrinsics",
                                next: Some(
                                    MyPath {
                                        name: "div100",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "div100",
                item: Some(
                    ItemFn {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::List {
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: cfg_attr,
                                                    span: bytes(57631..57639),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                    delimiter: MacroDelimiter::Paren(
                                        Paren,
                                    ),
                                    tokens: TokenStream [
                                        Ident {
                                            sym: feature,
                                            span: bytes(57640..57647),
                                        },
                                        Punct {
                                            char: '=',
                                            spacing: Alone,
                                            span: bytes(57648..57649),
                                        },
                                        Literal {
                                            lit: "no-panic",
                                            span: bytes(57650..57660),
                                        },
                                        Punct {
                                            char: ',',
                                            spacing: Alone,
                                            span: bytes(57660..57661),
                                        },
                                        Ident {
                                            sym: inline,
                                            span: bytes(57662..57668),
                                        },
                                    ],
                                },
                            },
                        ],
                        vis: Visibility::Public(
                            Pub,
                        ),
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: div100,
                                span: bytes(57678..57684),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: x,
                                                span: bytes(57685..57686),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u64,
                                                            span: bytes(57688..57691),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: u64,
                                                    span: bytes(57696..57699),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Expr(
                                    Expr::Binary {
                                        attrs: [],
                                        left: Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: x,
                                                            span: bytes(57706..57707),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        op: BinOp::Div(
                                            Slash,
                                        ),
                                        right: Expr::Lit {
                                            attrs: [],
                                            lit: Lit::Int {
                                                token: 100,
                                            },
                                        },
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: PubT,
            },
        ),
    },
    "ryu::d2s_intrinsics::multiple_of_power_of_5": FnData {
        fn_name: "multiple_of_power_of_5",
        complete_fn_name: "ryu::d2s_intrinsics::multiple_of_power_of_5",
        fn_type: Fn(
            FnItem {
                fn_name: Name {
                    name: "multiple_of_power_of_5",
                    complete_name: "ryu::d2s_intrinsics::multiple_of_power_of_5",
                    import_name: MyPath {
                        name: "ryu",
                        next: Some(
                            MyPath {
                                name: "d2s_intrinsics",
                                next: Some(
                                    MyPath {
                                        name: "multiple_of_power_of_5",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "multiple_of_power_of_5",
                item: Some(
                    ItemFn {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::List {
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: cfg_attr,
                                                    span: bytes(58235..58243),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                    delimiter: MacroDelimiter::Paren(
                                        Paren,
                                    ),
                                    tokens: TokenStream [
                                        Ident {
                                            sym: feature,
                                            span: bytes(58244..58251),
                                        },
                                        Punct {
                                            char: '=',
                                            spacing: Alone,
                                            span: bytes(58252..58253),
                                        },
                                        Literal {
                                            lit: "no-panic",
                                            span: bytes(58254..58264),
                                        },
                                        Punct {
                                            char: ',',
                                            spacing: Alone,
                                            span: bytes(58264..58265),
                                        },
                                        Ident {
                                            sym: inline,
                                            span: bytes(58266..58272),
                                        },
                                    ],
                                },
                            },
                        ],
                        vis: Visibility::Public(
                            Pub,
                        ),
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: multiple_of_power_of_5,
                                span: bytes(58282..58304),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: value,
                                                span: bytes(58305..58310),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u64,
                                                            span: bytes(58312..58315),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                                Comma,
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: p,
                                                span: bytes(58317..58318),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u32,
                                                            span: bytes(58320..58323),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: bool,
                                                    span: bytes(58328..58332),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Expr(
                                    Expr::Binary {
                                        attrs: [],
                                        left: Expr::Call {
                                            attrs: [],
                                            func: Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: pow5_factor,
                                                                span: bytes(58420..58431),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            paren_token: Paren,
                                            args: [
                                                Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: value,
                                                                    span: bytes(58432..58437),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                        op: BinOp::Ge(
                                            Ge,
                                        ),
                                        right: Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: p,
                                                            span: bytes(58442..58443),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: PubT,
            },
        ),
    },
    "ryu::d2s::decimal_length17": FnData {
        fn_name: "decimal_length17",
        complete_fn_name: "ryu::d2s::decimal_length17",
        fn_type: Fn(
            FnItem {
                fn_name: Name {
                    name: "decimal_length17",
                    complete_name: "ryu::d2s::decimal_length17",
                    import_name: MyPath {
                        name: "ryu",
                        next: Some(
                            MyPath {
                                name: "d2s",
                                next: Some(
                                    MyPath {
                                        name: "decimal_length17",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "decimal_length17",
                item: Some(
                    ItemFn {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::List {
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: cfg_attr,
                                                    span: bytes(13692..13700),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                    delimiter: MacroDelimiter::Paren(
                                        Paren,
                                    ),
                                    tokens: TokenStream [
                                        Ident {
                                            sym: feature,
                                            span: bytes(13701..13708),
                                        },
                                        Punct {
                                            char: '=',
                                            spacing: Alone,
                                            span: bytes(13709..13710),
                                        },
                                        Literal {
                                            lit: "no-panic",
                                            span: bytes(13711..13721),
                                        },
                                        Punct {
                                            char: ',',
                                            spacing: Alone,
                                            span: bytes(13721..13722),
                                        },
                                        Ident {
                                            sym: inline,
                                            span: bytes(13723..13729),
                                        },
                                    ],
                                },
                            },
                        ],
                        vis: Visibility::Public(
                            Pub,
                        ),
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: decimal_length17,
                                span: bytes(13739..13755),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: v,
                                                span: bytes(13756..13757),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u64,
                                                            span: bytes(13759..13762),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: u32,
                                                    span: bytes(13767..13770),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Macro {
                                    attrs: [],
                                    mac: Macro {
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: debug_assert,
                                                        span: bytes(14020..14032),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                        bang_token: Not,
                                        delimiter: MacroDelimiter::Paren(
                                            Paren,
                                        ),
                                        tokens: TokenStream [
                                            Ident {
                                                sym: v,
                                                span: bytes(14034..14035),
                                            },
                                            Punct {
                                                char: '<',
                                                spacing: Alone,
                                                span: bytes(14036..14037),
                                            },
                                            Literal {
                                                lit: 100000000000000000,
                                                span: bytes(14038..14056),
                                            },
                                        ],
                                    },
                                    semi_token: Some(
                                        Semi,
                                    ),
                                },
                                Stmt::Expr(
                                    Expr::If {
                                        attrs: [],
                                        if_token: If,
                                        cond: Expr::Binary {
                                            attrs: [],
                                            left: Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: v,
                                                                span: bytes(14067..14068),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            op: BinOp::Ge(
                                                Ge,
                                            ),
                                            right: Expr::Lit {
                                                attrs: [],
                                                lit: Lit::Int {
                                                    token: 10000000000000000,
                                                },
                                            },
                                        },
                                        then_branch: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::Lit {
                                                        attrs: [],
                                                        lit: Lit::Int {
                                                            token: 17,
                                                        },
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                        else_branch: Some(
                                            (
                                                Else,
                                                Expr::If {
                                                    attrs: [],
                                                    if_token: If,
                                                    cond: Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: v,
                                                                            span: bytes(14117..14118),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        op: BinOp::Ge(
                                                            Ge,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 1000000000000000,
                                                            },
                                                        },
                                                    },
                                                    then_branch: Block {
                                                        brace_token: Brace,
                                                        stmts: [
                                                            Stmt::Expr(
                                                                Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 16,
                                                                    },
                                                                },
                                                                None,
                                                            ),
                                                        ],
                                                    },
                                                    else_branch: Some(
                                                        (
                                                            Else,
                                                            Expr::If {
                                                                attrs: [],
                                                                if_token: If,
                                                                cond: Expr::Binary {
                                                                    attrs: [],
                                                                    left: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: v,
                                                                                        span: bytes(14166..14167),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    op: BinOp::Ge(
                                                                        Ge,
                                                                    ),
                                                                    right: Expr::Lit {
                                                                        attrs: [],
                                                                        lit: Lit::Int {
                                                                            token: 100000000000000,
                                                                        },
                                                                    },
                                                                },
                                                                then_branch: Block {
                                                                    brace_token: Brace,
                                                                    stmts: [
                                                                        Stmt::Expr(
                                                                            Expr::Lit {
                                                                                attrs: [],
                                                                                lit: Lit::Int {
                                                                                    token: 15,
                                                                                },
                                                                            },
                                                                            None,
                                                                        ),
                                                                    ],
                                                                },
                                                                else_branch: Some(
                                                                    (
                                                                        Else,
                                                                        Expr::If {
                                                                            attrs: [],
                                                                            if_token: If,
                                                                            cond: Expr::Binary {
                                                                                attrs: [],
                                                                                left: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: v,
                                                                                                    span: bytes(14214..14215),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                op: BinOp::Ge(
                                                                                    Ge,
                                                                                ),
                                                                                right: Expr::Lit {
                                                                                    attrs: [],
                                                                                    lit: Lit::Int {
                                                                                        token: 10000000000000,
                                                                                    },
                                                                                },
                                                                            },
                                                                            then_branch: Block {
                                                                                brace_token: Brace,
                                                                                stmts: [
                                                                                    Stmt::Expr(
                                                                                        Expr::Lit {
                                                                                            attrs: [],
                                                                                            lit: Lit::Int {
                                                                                                token: 14,
                                                                                            },
                                                                                        },
                                                                                        None,
                                                                                    ),
                                                                                ],
                                                                            },
                                                                            else_branch: Some(
                                                                                (
                                                                                    Else,
                                                                                    Expr::If {
                                                                                        attrs: [],
                                                                                        if_token: If,
                                                                                        cond: Expr::Binary {
                                                                                            attrs: [],
                                                                                            left: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: v,
                                                                                                                span: bytes(14261..14262),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            op: BinOp::Ge(
                                                                                                Ge,
                                                                                            ),
                                                                                            right: Expr::Lit {
                                                                                                attrs: [],
                                                                                                lit: Lit::Int {
                                                                                                    token: 1000000000000,
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                        then_branch: Block {
                                                                                            brace_token: Brace,
                                                                                            stmts: [
                                                                                                Stmt::Expr(
                                                                                                    Expr::Lit {
                                                                                                        attrs: [],
                                                                                                        lit: Lit::Int {
                                                                                                            token: 13,
                                                                                                        },
                                                                                                    },
                                                                                                    None,
                                                                                                ),
                                                                                            ],
                                                                                        },
                                                                                        else_branch: Some(
                                                                                            (
                                                                                                Else,
                                                                                                Expr::If {
                                                                                                    attrs: [],
                                                                                                    if_token: If,
                                                                                                    cond: Expr::Binary {
                                                                                                        attrs: [],
                                                                                                        left: Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: v,
                                                                                                                            span: bytes(14307..14308),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                        op: BinOp::Ge(
                                                                                                            Ge,
                                                                                                        ),
                                                                                                        right: Expr::Lit {
                                                                                                            attrs: [],
                                                                                                            lit: Lit::Int {
                                                                                                                token: 100000000000,
                                                                                                            },
                                                                                                        },
                                                                                                    },
                                                                                                    then_branch: Block {
                                                                                                        brace_token: Brace,
                                                                                                        stmts: [
                                                                                                            Stmt::Expr(
                                                                                                                Expr::Lit {
                                                                                                                    attrs: [],
                                                                                                                    lit: Lit::Int {
                                                                                                                        token: 12,
                                                                                                                    },
                                                                                                                },
                                                                                                                None,
                                                                                                            ),
                                                                                                        ],
                                                                                                    },
                                                                                                    else_branch: Some(
                                                                                                        (
                                                                                                            Else,
                                                                                                            Expr::If {
                                                                                                                attrs: [],
                                                                                                                if_token: If,
                                                                                                                cond: Expr::Binary {
                                                                                                                    attrs: [],
                                                                                                                    left: Expr::Path {
                                                                                                                        attrs: [],
                                                                                                                        qself: None,
                                                                                                                        path: Path {
                                                                                                                            leading_colon: None,
                                                                                                                            segments: [
                                                                                                                                PathSegment {
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: v,
                                                                                                                                        span: bytes(14352..14353),
                                                                                                                                    },
                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                },
                                                                                                                            ],
                                                                                                                        },
                                                                                                                    },
                                                                                                                    op: BinOp::Ge(
                                                                                                                        Ge,
                                                                                                                    ),
                                                                                                                    right: Expr::Lit {
                                                                                                                        attrs: [],
                                                                                                                        lit: Lit::Int {
                                                                                                                            token: 10000000000,
                                                                                                                        },
                                                                                                                    },
                                                                                                                },
                                                                                                                then_branch: Block {
                                                                                                                    brace_token: Brace,
                                                                                                                    stmts: [
                                                                                                                        Stmt::Expr(
                                                                                                                            Expr::Lit {
                                                                                                                                attrs: [],
                                                                                                                                lit: Lit::Int {
                                                                                                                                    token: 11,
                                                                                                                                },
                                                                                                                            },
                                                                                                                            None,
                                                                                                                        ),
                                                                                                                    ],
                                                                                                                },
                                                                                                                else_branch: Some(
                                                                                                                    (
                                                                                                                        Else,
                                                                                                                        Expr::If {
                                                                                                                            attrs: [],
                                                                                                                            if_token: If,
                                                                                                                            cond: Expr::Binary {
                                                                                                                                attrs: [],
                                                                                                                                left: Expr::Path {
                                                                                                                                    attrs: [],
                                                                                                                                    qself: None,
                                                                                                                                    path: Path {
                                                                                                                                        leading_colon: None,
                                                                                                                                        segments: [
                                                                                                                                            PathSegment {
                                                                                                                                                ident: Ident {
                                                                                                                                                    sym: v,
                                                                                                                                                    span: bytes(14396..14397),
                                                                                                                                                },
                                                                                                                                                arguments: PathArguments::None,
                                                                                                                                            },
                                                                                                                                        ],
                                                                                                                                    },
                                                                                                                                },
                                                                                                                                op: BinOp::Ge(
                                                                                                                                    Ge,
                                                                                                                                ),
                                                                                                                                right: Expr::Lit {
                                                                                                                                    attrs: [],
                                                                                                                                    lit: Lit::Int {
                                                                                                                                        token: 1000000000,
                                                                                                                                    },
                                                                                                                                },
                                                                                                                            },
                                                                                                                            then_branch: Block {
                                                                                                                                brace_token: Brace,
                                                                                                                                stmts: [
                                                                                                                                    Stmt::Expr(
                                                                                                                                        Expr::Lit {
                                                                                                                                            attrs: [],
                                                                                                                                            lit: Lit::Int {
                                                                                                                                                token: 10,
                                                                                                                                            },
                                                                                                                                        },
                                                                                                                                        None,
                                                                                                                                    ),
                                                                                                                                ],
                                                                                                                            },
                                                                                                                            else_branch: Some(
                                                                                                                                (
                                                                                                                                    Else,
                                                                                                                                    Expr::If {
                                                                                                                                        attrs: [],
                                                                                                                                        if_token: If,
                                                                                                                                        cond: Expr::Binary {
                                                                                                                                            attrs: [],
                                                                                                                                            left: Expr::Path {
                                                                                                                                                attrs: [],
                                                                                                                                                qself: None,
                                                                                                                                                path: Path {
                                                                                                                                                    leading_colon: None,
                                                                                                                                                    segments: [
                                                                                                                                                        PathSegment {
                                                                                                                                                            ident: Ident {
                                                                                                                                                                sym: v,
                                                                                                                                                                span: bytes(14439..14440),
                                                                                                                                                            },
                                                                                                                                                            arguments: PathArguments::None,
                                                                                                                                                        },
                                                                                                                                                    ],
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            op: BinOp::Ge(
                                                                                                                                                Ge,
                                                                                                                                            ),
                                                                                                                                            right: Expr::Lit {
                                                                                                                                                attrs: [],
                                                                                                                                                lit: Lit::Int {
                                                                                                                                                    token: 100000000,
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                        },
                                                                                                                                        then_branch: Block {
                                                                                                                                            brace_token: Brace,
                                                                                                                                            stmts: [
                                                                                                                                                Stmt::Expr(
                                                                                                                                                    Expr::Lit {
                                                                                                                                                        attrs: [],
                                                                                                                                                        lit: Lit::Int {
                                                                                                                                                            token: 9,
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    None,
                                                                                                                                                ),
                                                                                                                                            ],
                                                                                                                                        },
                                                                                                                                        else_branch: Some(
                                                                                                                                            (
                                                                                                                                                Else,
                                                                                                                                                Expr::If {
                                                                                                                                                    attrs: [],
                                                                                                                                                    if_token: If,
                                                                                                                                                    cond: Expr::Binary {
                                                                                                                                                        attrs: [],
                                                                                                                                                        left: Expr::Path {
                                                                                                                                                            attrs: [],
                                                                                                                                                            qself: None,
                                                                                                                                                            path: Path {
                                                                                                                                                                leading_colon: None,
                                                                                                                                                                segments: [
                                                                                                                                                                    PathSegment {
                                                                                                                                                                        ident: Ident {
                                                                                                                                                                            sym: v,
                                                                                                                                                                            span: bytes(14480..14481),
                                                                                                                                                                        },
                                                                                                                                                                        arguments: PathArguments::None,
                                                                                                                                                                    },
                                                                                                                                                                ],
                                                                                                                                                            },
                                                                                                                                                        },
                                                                                                                                                        op: BinOp::Ge(
                                                                                                                                                            Ge,
                                                                                                                                                        ),
                                                                                                                                                        right: Expr::Lit {
                                                                                                                                                            attrs: [],
                                                                                                                                                            lit: Lit::Int {
                                                                                                                                                                token: 10000000,
                                                                                                                                                            },
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    then_branch: Block {
                                                                                                                                                        brace_token: Brace,
                                                                                                                                                        stmts: [
                                                                                                                                                            Stmt::Expr(
                                                                                                                                                                Expr::Lit {
                                                                                                                                                                    attrs: [],
                                                                                                                                                                    lit: Lit::Int {
                                                                                                                                                                        token: 8,
                                                                                                                                                                    },
                                                                                                                                                                },
                                                                                                                                                                None,
                                                                                                                                                            ),
                                                                                                                                                        ],
                                                                                                                                                    },
                                                                                                                                                    else_branch: Some(
                                                                                                                                                        (
                                                                                                                                                            Else,
                                                                                                                                                            Expr::If {
                                                                                                                                                                attrs: [],
                                                                                                                                                                if_token: If,
                                                                                                                                                                cond: Expr::Binary {
                                                                                                                                                                    attrs: [],
                                                                                                                                                                    left: Expr::Path {
                                                                                                                                                                        attrs: [],
                                                                                                                                                                        qself: None,
                                                                                                                                                                        path: Path {
                                                                                                                                                                            leading_colon: None,
                                                                                                                                                                            segments: [
                                                                                                                                                                                PathSegment {
                                                                                                                                                                                    ident: Ident {
                                                                                                                                                                                        sym: v,
                                                                                                                                                                                        span: bytes(14520..14521),
                                                                                                                                                                                    },
                                                                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                                                                },
                                                                                                                                                                            ],
                                                                                                                                                                        },
                                                                                                                                                                    },
                                                                                                                                                                    op: BinOp::Ge(
                                                                                                                                                                        Ge,
                                                                                                                                                                    ),
                                                                                                                                                                    right: Expr::Lit {
                                                                                                                                                                        attrs: [],
                                                                                                                                                                        lit: Lit::Int {
                                                                                                                                                                            token: 1000000,
                                                                                                                                                                        },
                                                                                                                                                                    },
                                                                                                                                                                },
                                                                                                                                                                then_branch: Block {
                                                                                                                                                                    brace_token: Brace,
                                                                                                                                                                    stmts: [
                                                                                                                                                                        Stmt::Expr(
                                                                                                                                                                            Expr::Lit {
                                                                                                                                                                                attrs: [],
                                                                                                                                                                                lit: Lit::Int {
                                                                                                                                                                                    token: 7,
                                                                                                                                                                                },
                                                                                                                                                                            },
                                                                                                                                                                            None,
                                                                                                                                                                        ),
                                                                                                                                                                    ],
                                                                                                                                                                },
                                                                                                                                                                else_branch: Some(
                                                                                                                                                                    (
                                                                                                                                                                        Else,
                                                                                                                                                                        Expr::If {
                                                                                                                                                                            attrs: [],
                                                                                                                                                                            if_token: If,
                                                                                                                                                                            cond: Expr::Binary {
                                                                                                                                                                                attrs: [],
                                                                                                                                                                                left: Expr::Path {
                                                                                                                                                                                    attrs: [],
                                                                                                                                                                                    qself: None,
                                                                                                                                                                                    path: Path {
                                                                                                                                                                                        leading_colon: None,
                                                                                                                                                                                        segments: [
                                                                                                                                                                                            PathSegment {
                                                                                                                                                                                                ident: Ident {
                                                                                                                                                                                                    sym: v,
                                                                                                                                                                                                    span: bytes(14559..14560),
                                                                                                                                                                                                },
                                                                                                                                                                                                arguments: PathArguments::None,
                                                                                                                                                                                            },
                                                                                                                                                                                        ],
                                                                                                                                                                                    },
                                                                                                                                                                                },
                                                                                                                                                                                op: BinOp::Ge(
                                                                                                                                                                                    Ge,
                                                                                                                                                                                ),
                                                                                                                                                                                right: Expr::Lit {
                                                                                                                                                                                    attrs: [],
                                                                                                                                                                                    lit: Lit::Int {
                                                                                                                                                                                        token: 100000,
                                                                                                                                                                                    },
                                                                                                                                                                                },
                                                                                                                                                                            },
                                                                                                                                                                            then_branch: Block {
                                                                                                                                                                                brace_token: Brace,
                                                                                                                                                                                stmts: [
                                                                                                                                                                                    Stmt::Expr(
                                                                                                                                                                                        Expr::Lit {
                                                                                                                                                                                            attrs: [],
                                                                                                                                                                                            lit: Lit::Int {
                                                                                                                                                                                                token: 6,
                                                                                                                                                                                            },
                                                                                                                                                                                        },
                                                                                                                                                                                        None,
                                                                                                                                                                                    ),
                                                                                                                                                                                ],
                                                                                                                                                                            },
                                                                                                                                                                            else_branch: Some(
                                                                                                                                                                                (
                                                                                                                                                                                    Else,
                                                                                                                                                                                    Expr::If {
                                                                                                                                                                                        attrs: [],
                                                                                                                                                                                        if_token: If,
                                                                                                                                                                                        cond: Expr::Binary {
                                                                                                                                                                                            attrs: [],
                                                                                                                                                                                            left: Expr::Path {
                                                                                                                                                                                                attrs: [],
                                                                                                                                                                                                qself: None,
                                                                                                                                                                                                path: Path {
                                                                                                                                                                                                    leading_colon: None,
                                                                                                                                                                                                    segments: [
                                                                                                                                                                                                        PathSegment {
                                                                                                                                                                                                            ident: Ident {
                                                                                                                                                                                                                sym: v,
                                                                                                                                                                                                                span: bytes(14597..14598),
                                                                                                                                                                                                            },
                                                                                                                                                                                                            arguments: PathArguments::None,
                                                                                                                                                                                                        },
                                                                                                                                                                                                    ],
                                                                                                                                                                                                },
                                                                                                                                                                                            },
                                                                                                                                                                                            op: BinOp::Ge(
                                                                                                                                                                                                Ge,
                                                                                                                                                                                            ),
                                                                                                                                                                                            right: Expr::Lit {
                                                                                                                                                                                                attrs: [],
                                                                                                                                                                                                lit: Lit::Int {
                                                                                                                                                                                                    token: 10000,
                                                                                                                                                                                                },
                                                                                                                                                                                            },
                                                                                                                                                                                        },
                                                                                                                                                                                        then_branch: Block {
                                                                                                                                                                                            brace_token: Brace,
                                                                                                                                                                                            stmts: [
                                                                                                                                                                                                Stmt::Expr(
                                                                                                                                                                                                    Expr::Lit {
                                                                                                                                                                                                        attrs: [],
                                                                                                                                                                                                        lit: Lit::Int {
                                                                                                                                                                                                            token: 5,
                                                                                                                                                                                                        },
                                                                                                                                                                                                    },
                                                                                                                                                                                                    None,
                                                                                                                                                                                                ),
                                                                                                                                                                                            ],
                                                                                                                                                                                        },
                                                                                                                                                                                        else_branch: Some(
                                                                                                                                                                                            (
                                                                                                                                                                                                Else,
                                                                                                                                                                                                Expr::If {
                                                                                                                                                                                                    attrs: [],
                                                                                                                                                                                                    if_token: If,
                                                                                                                                                                                                    cond: Expr::Binary {
                                                                                                                                                                                                        attrs: [],
                                                                                                                                                                                                        left: Expr::Path {
                                                                                                                                                                                                            attrs: [],
                                                                                                                                                                                                            qself: None,
                                                                                                                                                                                                            path: Path {
                                                                                                                                                                                                                leading_colon: None,
                                                                                                                                                                                                                segments: [
                                                                                                                                                                                                                    PathSegment {
                                                                                                                                                                                                                        ident: Ident {
                                                                                                                                                                                                                            sym: v,
                                                                                                                                                                                                                            span: bytes(14634..14635),
                                                                                                                                                                                                                        },
                                                                                                                                                                                                                        arguments: PathArguments::None,
                                                                                                                                                                                                                    },
                                                                                                                                                                                                                ],
                                                                                                                                                                                                            },
                                                                                                                                                                                                        },
                                                                                                                                                                                                        op: BinOp::Ge(
                                                                                                                                                                                                            Ge,
                                                                                                                                                                                                        ),
                                                                                                                                                                                                        right: Expr::Lit {
                                                                                                                                                                                                            attrs: [],
                                                                                                                                                                                                            lit: Lit::Int {
                                                                                                                                                                                                                token: 1000,
                                                                                                                                                                                                            },
                                                                                                                                                                                                        },
                                                                                                                                                                                                    },
                                                                                                                                                                                                    then_branch: Block {
                                                                                                                                                                                                        brace_token: Brace,
                                                                                                                                                                                                        stmts: [
                                                                                                                                                                                                            Stmt::Expr(
                                                                                                                                                                                                                Expr::Lit {
                                                                                                                                                                                                                    attrs: [],
                                                                                                                                                                                                                    lit: Lit::Int {
                                                                                                                                                                                                                        token: 4,
                                                                                                                                                                                                                    },
                                                                                                                                                                                                                },
                                                                                                                                                                                                                None,
                                                                                                                                                                                                            ),
                                                                                                                                                                                                        ],
                                                                                                                                                                                                    },
                                                                                                                                                                                                    else_branch: Some(
                                                                                                                                                                                                        (
                                                                                                                                                                                                            Else,
                                                                                                                                                                                                            Expr::If {
                                                                                                                                                                                                                attrs: [],
                                                                                                                                                                                                                if_token: If,
                                                                                                                                                                                                                cond: Expr::Binary {
                                                                                                                                                                                                                    attrs: [],
                                                                                                                                                                                                                    left: Expr::Path {
                                                                                                                                                                                                                        attrs: [],
                                                                                                                                                                                                                        qself: None,
                                                                                                                                                                                                                        path: Path {
                                                                                                                                                                                                                            leading_colon: None,
                                                                                                                                                                                                                            segments: [
                                                                                                                                                                                                                                PathSegment {
                                                                                                                                                                                                                                    ident: Ident {
                                                                                                                                                                                                                                        sym: v,
                                                                                                                                                                                                                                        span: bytes(14670..14671),
                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                                                                                                                },
                                                                                                                                                                                                                            ],
                                                                                                                                                                                                                        },
                                                                                                                                                                                                                    },
                                                                                                                                                                                                                    op: BinOp::Ge(
                                                                                                                                                                                                                        Ge,
                                                                                                                                                                                                                    ),
                                                                                                                                                                                                                    right: Expr::Lit {
                                                                                                                                                                                                                        attrs: [],
                                                                                                                                                                                                                        lit: Lit::Int {
                                                                                                                                                                                                                            token: 100,
                                                                                                                                                                                                                        },
                                                                                                                                                                                                                    },
                                                                                                                                                                                                                },
                                                                                                                                                                                                                then_branch: Block {
                                                                                                                                                                                                                    brace_token: Brace,
                                                                                                                                                                                                                    stmts: [
                                                                                                                                                                                                                        Stmt::Expr(
                                                                                                                                                                                                                            Expr::Lit {
                                                                                                                                                                                                                                attrs: [],
                                                                                                                                                                                                                                lit: Lit::Int {
                                                                                                                                                                                                                                    token: 3,
                                                                                                                                                                                                                                },
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            None,
                                                                                                                                                                                                                        ),
                                                                                                                                                                                                                    ],
                                                                                                                                                                                                                },
                                                                                                                                                                                                                else_branch: Some(
                                                                                                                                                                                                                    (
                                                                                                                                                                                                                        Else,
                                                                                                                                                                                                                        Expr::If {
                                                                                                                                                                                                                            attrs: [],
                                                                                                                                                                                                                            if_token: If,
                                                                                                                                                                                                                            cond: Expr::Binary {
                                                                                                                                                                                                                                attrs: [],
                                                                                                                                                                                                                                left: Expr::Path {
                                                                                                                                                                                                                                    attrs: [],
                                                                                                                                                                                                                                    qself: None,
                                                                                                                                                                                                                                    path: Path {
                                                                                                                                                                                                                                        leading_colon: None,
                                                                                                                                                                                                                                        segments: [
                                                                                                                                                                                                                                            PathSegment {
                                                                                                                                                                                                                                                ident: Ident {
                                                                                                                                                                                                                                                    sym: v,
                                                                                                                                                                                                                                                    span: bytes(14705..14706),
                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                arguments: PathArguments::None,
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                        ],
                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                op: BinOp::Ge(
                                                                                                                                                                                                                                    Ge,
                                                                                                                                                                                                                                ),
                                                                                                                                                                                                                                right: Expr::Lit {
                                                                                                                                                                                                                                    attrs: [],
                                                                                                                                                                                                                                    lit: Lit::Int {
                                                                                                                                                                                                                                        token: 10,
                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                },
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            then_branch: Block {
                                                                                                                                                                                                                                brace_token: Brace,
                                                                                                                                                                                                                                stmts: [
                                                                                                                                                                                                                                    Stmt::Expr(
                                                                                                                                                                                                                                        Expr::Lit {
                                                                                                                                                                                                                                            attrs: [],
                                                                                                                                                                                                                                            lit: Lit::Int {
                                                                                                                                                                                                                                                token: 2,
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                        },
                                                                                                                                                                                                                                        None,
                                                                                                                                                                                                                                    ),
                                                                                                                                                                                                                                ],
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            else_branch: Some(
                                                                                                                                                                                                                                (
                                                                                                                                                                                                                                    Else,
                                                                                                                                                                                                                                    Expr::Block {
                                                                                                                                                                                                                                        attrs: [],
                                                                                                                                                                                                                                        label: None,
                                                                                                                                                                                                                                        block: Block {
                                                                                                                                                                                                                                            brace_token: Brace,
                                                                                                                                                                                                                                            stmts: [
                                                                                                                                                                                                                                                Stmt::Expr(
                                                                                                                                                                                                                                                    Expr::Lit {
                                                                                                                                                                                                                                                        attrs: [],
                                                                                                                                                                                                                                                        lit: Lit::Int {
                                                                                                                                                                                                                                                            token: 1,
                                                                                                                                                                                                                                                        },
                                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                                    None,
                                                                                                                                                                                                                                                ),
                                                                                                                                                                                                                                            ],
                                                                                                                                                                                                                                        },
                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                ),
                                                                                                                                                                                                                            ),
                                                                                                                                                                                                                        },
                                                                                                                                                                                                                    ),
                                                                                                                                                                                                                ),
                                                                                                                                                                                                            },
                                                                                                                                                                                                        ),
                                                                                                                                                                                                    ),
                                                                                                                                                                                                },
                                                                                                                                                                                            ),
                                                                                                                                                                                        ),
                                                                                                                                                                                    },
                                                                                                                                                                                ),
                                                                                                                                                                            ),
                                                                                                                                                                        },
                                                                                                                                                                    ),
                                                                                                                                                                ),
                                                                                                                                                            },
                                                                                                                                                        ),
                                                                                                                                                    ),
                                                                                                                                                },
                                                                                                                                            ),
                                                                                                                                        ),
                                                                                                                                    },
                                                                                                                                ),
                                                                                                                            ),
                                                                                                                        },
                                                                                                                    ),
                                                                                                                ),
                                                                                                            },
                                                                                                        ),
                                                                                                    ),
                                                                                                },
                                                                                            ),
                                                                                        ),
                                                                                    },
                                                                                ),
                                                                            ),
                                                                        },
                                                                    ),
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                },
                                            ),
                                        ),
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: PubT,
            },
        ),
    },
    "ryu::d2s_intrinsics::pow5_factor": FnData {
        fn_name: "pow5_factor",
        complete_fn_name: "ryu::d2s_intrinsics::pow5_factor",
        fn_type: Fn(
            FnItem {
                fn_name: Name {
                    name: "pow5_factor",
                    complete_name: "ryu::d2s_intrinsics::pow5_factor",
                    import_name: MyPath {
                        name: "ryu",
                        next: Some(
                            MyPath {
                                name: "d2s_intrinsics",
                                next: Some(
                                    MyPath {
                                        name: "pow5_factor",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "pow5_factor",
                item: Some(
                    ItemFn {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::List {
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: cfg_attr,
                                                    span: bytes(57719..57727),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                    delimiter: MacroDelimiter::Paren(
                                        Paren,
                                    ),
                                    tokens: TokenStream [
                                        Ident {
                                            sym: feature,
                                            span: bytes(57728..57735),
                                        },
                                        Punct {
                                            char: '=',
                                            spacing: Alone,
                                            span: bytes(57736..57737),
                                        },
                                        Literal {
                                            lit: "no-panic",
                                            span: bytes(57738..57748),
                                        },
                                        Punct {
                                            char: ',',
                                            spacing: Alone,
                                            span: bytes(57748..57749),
                                        },
                                        Ident {
                                            sym: inline,
                                            span: bytes(57750..57756),
                                        },
                                    ],
                                },
                            },
                        ],
                        vis: Visibility::Restricted {
                            pub_token: Pub,
                            paren_token: Paren,
                            in_token: None,
                            path: Path {
                                leading_colon: None,
                                segments: [
                                    PathSegment {
                                        ident: Ident {
                                            sym: crate,
                                            span: bytes(57763..57768),
                                        },
                                        arguments: PathArguments::None,
                                    },
                                ],
                            },
                        },
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: pow5_factor,
                                span: bytes(57773..57784),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            ident: Ident {
                                                sym: value,
                                                span: bytes(57789..57794),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u64,
                                                            span: bytes(57796..57799),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: u32,
                                                    span: bytes(57804..57807),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Item(
                                    Item::Const {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        const_token: Const,
                                        ident: Ident {
                                            sym: M_INV_5,
                                            span: bytes(57820..57827),
                                        },
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u64,
                                                            span: bytes(57829..57832),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        eq_token: Eq,
                                        expr: Expr::Lit {
                                            attrs: [],
                                            lit: Lit::Int {
                                                token: 14757395258967641293,
                                            },
                                        },
                                        semi_token: Semi,
                                    },
                                ),
                                Stmt::Item(
                                    Item::Const {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        const_token: Const,
                                        ident: Ident {
                                            sym: N_DIV_5,
                                            span: bytes(57897..57904),
                                        },
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u64,
                                                            span: bytes(57906..57909),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        eq_token: Eq,
                                        expr: Expr::Lit {
                                            attrs: [],
                                            lit: Lit::Int {
                                                token: 3689348814741910323,
                                            },
                                        },
                                        semi_token: Semi,
                                    },
                                ),
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: Some(
                                            Mut,
                                        ),
                                        ident: Ident {
                                            sym: count,
                                            span: bytes(57985..57990),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Lit {
                                                attrs: [],
                                                lit: Lit::Int {
                                                    token: 0u32,
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Expr(
                                    Expr::Loop {
                                        attrs: [],
                                        label: None,
                                        loop_token: Loop,
                                        body: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Macro {
                                                    attrs: [],
                                                    mac: Macro {
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: debug_assert,
                                                                        span: bytes(58018..58030),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                        bang_token: Not,
                                                        delimiter: MacroDelimiter::Paren(
                                                            Paren,
                                                        ),
                                                        tokens: TokenStream [
                                                            Ident {
                                                                sym: value,
                                                                span: bytes(58032..58037),
                                                            },
                                                            Punct {
                                                                char: '!',
                                                                spacing: Joint,
                                                                span: bytes(58038..58039),
                                                            },
                                                            Punct {
                                                                char: '=',
                                                                spacing: Alone,
                                                                span: bytes(58039..58040),
                                                            },
                                                            Literal {
                                                                lit: 0,
                                                                span: bytes(58041..58042),
                                                            },
                                                        ],
                                                    },
                                                    semi_token: Some(
                                                        Semi,
                                                    ),
                                                },
                                                Stmt::Expr(
                                                    Expr::Assign {
                                                        attrs: [],
                                                        left: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: value,
                                                                            span: bytes(58053..58058),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        eq_token: Eq,
                                                        right: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: value,
                                                                                span: bytes(58061..58066),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: wrapping_mul,
                                                                span: bytes(58067..58079),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: M_INV_5,
                                                                                    span: bytes(58080..58087),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                                Stmt::Expr(
                                                    Expr::If {
                                                        attrs: [],
                                                        if_token: If,
                                                        cond: Expr::Binary {
                                                            attrs: [],
                                                            left: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: value,
                                                                                span: bytes(58101..58106),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            op: BinOp::Gt(
                                                                Gt,
                                                            ),
                                                            right: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: N_DIV_5,
                                                                                span: bytes(58109..58116),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                        then_branch: Block {
                                                            brace_token: Brace,
                                                            stmts: [
                                                                Stmt::Expr(
                                                                    Expr::Break {
                                                                        attrs: [],
                                                                        break_token: Break,
                                                                        label: None,
                                                                        expr: None,
                                                                    },
                                                                    Some(
                                                                        Semi,
                                                                    ),
                                                                ),
                                                            ],
                                                        },
                                                        else_branch: None,
                                                    },
                                                    None,
                                                ),
                                                Stmt::Expr(
                                                    Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: count,
                                                                            span: bytes(58156..58161),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        op: BinOp::AddAssign(
                                                            PlusEq,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 1,
                                                            },
                                                        },
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                            ],
                                        },
                                    },
                                    None,
                                ),
                                Stmt::Expr(
                                    Expr::Path {
                                        attrs: [],
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: count,
                                                        span: bytes(58178..58183),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [
                    Item::Const {
                        attrs: [],
                        vis: Visibility::Inherited,
                        const_token: Const,
                        ident: Ident {
                            sym: M_INV_5,
                            span: bytes(57820..57827),
                        },
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        colon_token: Colon,
                        ty: Type::Path {
                            qself: None,
                            path: Path {
                                leading_colon: None,
                                segments: [
                                    PathSegment {
                                        ident: Ident {
                                            sym: u64,
                                            span: bytes(57829..57832),
                                        },
                                        arguments: PathArguments::None,
                                    },
                                ],
                            },
                        },
                        eq_token: Eq,
                        expr: Expr::Lit {
                            attrs: [],
                            lit: Lit::Int {
                                token: 14757395258967641293,
                            },
                        },
                        semi_token: Semi,
                    },
                    Item::Const {
                        attrs: [],
                        vis: Visibility::Inherited,
                        const_token: Const,
                        ident: Ident {
                            sym: N_DIV_5,
                            span: bytes(57897..57904),
                        },
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        colon_token: Colon,
                        ty: Type::Path {
                            qself: None,
                            path: Path {
                                leading_colon: None,
                                segments: [
                                    PathSegment {
                                        ident: Ident {
                                            sym: u64,
                                            span: bytes(57906..57909),
                                        },
                                        arguments: PathArguments::None,
                                    },
                                ],
                            },
                        },
                        eq_token: Eq,
                        expr: Expr::Lit {
                            attrs: [],
                            lit: Lit::Int {
                                token: 3689348814741910323,
                            },
                        },
                        semi_token: Semi,
                    },
                ],
                visibility: PubS,
            },
        ),
    },
    "ryu::d2s_small_table::compute_inv_pow5": FnData {
        fn_name: "compute_inv_pow5",
        complete_fn_name: "ryu::d2s_small_table::compute_inv_pow5",
        fn_type: Fn(
            FnItem {
                fn_name: Name {
                    name: "compute_inv_pow5",
                    complete_name: "ryu::d2s_small_table::compute_inv_pow5",
                    import_name: MyPath {
                        name: "ryu",
                        next: Some(
                            MyPath {
                                name: "d2s_small_table",
                                next: Some(
                                    MyPath {
                                        name: "compute_inv_pow5",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "compute_inv_pow5",
                item: Some(
                    ItemFn {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::List {
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: cfg_attr,
                                                    span: bytes(63624..63632),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                    delimiter: MacroDelimiter::Paren(
                                        Paren,
                                    ),
                                    tokens: TokenStream [
                                        Ident {
                                            sym: feature,
                                            span: bytes(63633..63640),
                                        },
                                        Punct {
                                            char: '=',
                                            spacing: Alone,
                                            span: bytes(63641..63642),
                                        },
                                        Literal {
                                            lit: "no-panic",
                                            span: bytes(63643..63653),
                                        },
                                        Punct {
                                            char: ',',
                                            spacing: Alone,
                                            span: bytes(63653..63654),
                                        },
                                        Ident {
                                            sym: inline,
                                            span: bytes(63655..63661),
                                        },
                                    ],
                                },
                            },
                        ],
                        vis: Visibility::Public(
                            Pub,
                        ),
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: Some(
                                Unsafe,
                            ),
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: compute_inv_pow5,
                                span: bytes(63678..63694),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: i,
                                                span: bytes(63695..63696),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u32,
                                                            span: bytes(63698..63701),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Tuple {
                                    paren_token: Paren,
                                    elems: [
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u64,
                                                            span: bytes(63707..63710),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        Comma,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u64,
                                                            span: bytes(63712..63715),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: base,
                                            span: bytes(63727..63731),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Binary {
                                                attrs: [],
                                                left: Expr::Paren {
                                                    attrs: [],
                                                    paren_token: Paren,
                                                    expr: Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Binary {
                                                            attrs: [],
                                                            left: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: i,
                                                                                span: bytes(63735..63736),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            op: BinOp::Add(
                                                                Plus,
                                                            ),
                                                            right: Expr::Cast {
                                                                attrs: [],
                                                                expr: Expr::MethodCall {
                                                                    attrs: [],
                                                                    receiver: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: DOUBLE_POW5_TABLE,
                                                                                        span: bytes(63739..63756),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    method: Ident {
                                                                        sym: len,
                                                                        span: bytes(63757..63760),
                                                                    },
                                                                    turbofish: None,
                                                                    paren_token: Paren,
                                                                    args: [],
                                                                },
                                                                as_token: As,
                                                                ty: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: u32,
                                                                                    span: bytes(63766..63769),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        },
                                                        op: BinOp::Sub(
                                                            Minus,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 1,
                                                            },
                                                        },
                                                    },
                                                },
                                                op: BinOp::Div(
                                                    Slash,
                                                ),
                                                right: Expr::Cast {
                                                    attrs: [],
                                                    expr: Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: DOUBLE_POW5_TABLE,
                                                                            span: bytes(63777..63794),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: len,
                                                            span: bytes(63795..63798),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [],
                                                    },
                                                    as_token: As,
                                                    ty: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: u32,
                                                                        span: bytes(63804..63807),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: base2,
                                            span: bytes(63817..63822),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Binary {
                                                attrs: [],
                                                left: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: base,
                                                                    span: bytes(63825..63829),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                op: BinOp::Mul(
                                                    Star,
                                                ),
                                                right: Expr::Cast {
                                                    attrs: [],
                                                    expr: Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: DOUBLE_POW5_TABLE,
                                                                            span: bytes(63832..63849),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: len,
                                                            span: bytes(63850..63853),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [],
                                                    },
                                                    as_token: As,
                                                    ty: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: u32,
                                                                        span: bytes(63859..63862),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: offset,
                                            span: bytes(63872..63878),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Binary {
                                                attrs: [],
                                                left: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: base2,
                                                                    span: bytes(63881..63886),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                op: BinOp::Sub(
                                                    Minus,
                                                ),
                                                right: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: i,
                                                                    span: bytes(63889..63890),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Macro {
                                    attrs: [],
                                    mac: Macro {
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: debug_assert,
                                                        span: bytes(63896..63908),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                        bang_token: Not,
                                        delimiter: MacroDelimiter::Paren(
                                            Paren,
                                        ),
                                        tokens: TokenStream [
                                            Ident {
                                                sym: base,
                                                span: bytes(63910..63914),
                                            },
                                            Punct {
                                                char: '<',
                                                spacing: Alone,
                                                span: bytes(63915..63916),
                                            },
                                            Ident {
                                                sym: DOUBLE_POW5_INV_SPLIT2,
                                                span: bytes(63917..63939),
                                            },
                                            Punct {
                                                char: '.',
                                                spacing: Alone,
                                                span: bytes(63939..63940),
                                            },
                                            Ident {
                                                sym: len,
                                                span: bytes(63940..63943),
                                            },
                                            Group {
                                                delimiter: Parenthesis,
                                                stream: TokenStream [],
                                                span: bytes(63943..63945),
                                            },
                                            Ident {
                                                sym: as,
                                                span: bytes(63946..63948),
                                            },
                                            Ident {
                                                sym: u32,
                                                span: bytes(63949..63952),
                                            },
                                        ],
                                    },
                                    semi_token: Some(
                                        Semi,
                                    ),
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: mul,
                                            span: bytes(63963..63966),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Unary {
                                                attrs: [],
                                                op: UnOp::Deref(
                                                    Star,
                                                ),
                                                expr: Expr::MethodCall {
                                                    attrs: [],
                                                    receiver: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: DOUBLE_POW5_INV_SPLIT2,
                                                                        span: bytes(63970..63992),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    dot_token: Dot,
                                                    method: Ident {
                                                        sym: get_unchecked,
                                                        span: bytes(63993..64006),
                                                    },
                                                    turbofish: None,
                                                    paren_token: Paren,
                                                    args: [
                                                        Expr::Cast {
                                                            attrs: [],
                                                            expr: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: base,
                                                                                span: bytes(64007..64011),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            as_token: As,
                                                            ty: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: usize,
                                                                                span: bytes(64015..64020),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    ],
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Expr(
                                    Expr::If {
                                        attrs: [],
                                        if_token: If,
                                        cond: Expr::Binary {
                                            attrs: [],
                                            left: Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: offset,
                                                                span: bytes(64043..64049),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            op: BinOp::Eq(
                                                EqEq,
                                            ),
                                            right: Expr::Lit {
                                                attrs: [],
                                                lit: Lit::Int {
                                                    token: 0,
                                                },
                                            },
                                        },
                                        then_branch: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::Return {
                                                        attrs: [],
                                                        return_token: Return,
                                                        expr: Some(
                                                            Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: mul,
                                                                                span: bytes(64072..64075),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                            ],
                                        },
                                        else_branch: None,
                                    },
                                    None,
                                ),
                                Stmt::Macro {
                                    attrs: [],
                                    mac: Macro {
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: debug_assert,
                                                        span: bytes(64087..64099),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                        bang_token: Not,
                                        delimiter: MacroDelimiter::Paren(
                                            Paren,
                                        ),
                                        tokens: TokenStream [
                                            Ident {
                                                sym: offset,
                                                span: bytes(64101..64107),
                                            },
                                            Punct {
                                                char: '<',
                                                spacing: Alone,
                                                span: bytes(64108..64109),
                                            },
                                            Ident {
                                                sym: DOUBLE_POW5_TABLE,
                                                span: bytes(64110..64127),
                                            },
                                            Punct {
                                                char: '.',
                                                spacing: Alone,
                                                span: bytes(64127..64128),
                                            },
                                            Ident {
                                                sym: len,
                                                span: bytes(64128..64131),
                                            },
                                            Group {
                                                delimiter: Parenthesis,
                                                stream: TokenStream [],
                                                span: bytes(64131..64133),
                                            },
                                            Ident {
                                                sym: as,
                                                span: bytes(64134..64136),
                                            },
                                            Ident {
                                                sym: u32,
                                                span: bytes(64137..64140),
                                            },
                                        ],
                                    },
                                    semi_token: Some(
                                        Semi,
                                    ),
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: m,
                                            span: bytes(64151..64152),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Unary {
                                                attrs: [],
                                                op: UnOp::Deref(
                                                    Star,
                                                ),
                                                expr: Expr::MethodCall {
                                                    attrs: [],
                                                    receiver: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: DOUBLE_POW5_TABLE,
                                                                        span: bytes(64156..64173),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    dot_token: Dot,
                                                    method: Ident {
                                                        sym: get_unchecked,
                                                        span: bytes(64174..64187),
                                                    },
                                                    turbofish: None,
                                                    paren_token: Paren,
                                                    args: [
                                                        Expr::Cast {
                                                            attrs: [],
                                                            expr: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: offset,
                                                                                span: bytes(64188..64194),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            as_token: As,
                                                            ty: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: usize,
                                                                                span: bytes(64198..64203),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    ],
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: b0,
                                            span: bytes(64226..64228),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Binary {
                                                attrs: [],
                                                left: Expr::Cast {
                                                    attrs: [],
                                                    expr: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: m,
                                                                        span: bytes(64231..64232),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    as_token: As,
                                                    ty: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: u128,
                                                                        span: bytes(64236..64240),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                                op: BinOp::Mul(
                                                    Star,
                                                ),
                                                right: Expr::Cast {
                                                    attrs: [],
                                                    expr: Expr::Paren {
                                                        attrs: [],
                                                        paren_token: Paren,
                                                        expr: Expr::Binary {
                                                            attrs: [],
                                                            left: Expr::Field {
                                                                attrs: [],
                                                                base: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: mul,
                                                                                    span: bytes(64244..64247),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                member: Member::Unnamed(
                                                                    Index {
                                                                        index: 0,
                                                                        span: bytes(64248..64249),
                                                                    },
                                                                ),
                                                            },
                                                            op: BinOp::Sub(
                                                                Minus,
                                                            ),
                                                            right: Expr::Lit {
                                                                attrs: [],
                                                                lit: Lit::Int {
                                                                    token: 1,
                                                                },
                                                            },
                                                        },
                                                    },
                                                    as_token: As,
                                                    ty: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: u128,
                                                                        span: bytes(64258..64262),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: b2,
                                            span: bytes(64272..64274),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Binary {
                                                attrs: [],
                                                left: Expr::Cast {
                                                    attrs: [],
                                                    expr: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: m,
                                                                        span: bytes(64277..64278),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    as_token: As,
                                                    ty: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: u128,
                                                                        span: bytes(64282..64286),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                                op: BinOp::Mul(
                                                    Star,
                                                ),
                                                right: Expr::Cast {
                                                    attrs: [],
                                                    expr: Expr::Field {
                                                        attrs: [],
                                                        base: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: mul,
                                                                            span: bytes(64289..64292),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        member: Member::Unnamed(
                                                            Index {
                                                                index: 1,
                                                                span: bytes(64293..64294),
                                                            },
                                                        ),
                                                    },
                                                    as_token: As,
                                                    ty: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: u128,
                                                                        span: bytes(64298..64302),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: delta,
                                            span: bytes(64365..64370),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Binary {
                                                attrs: [],
                                                left: Expr::Call {
                                                    attrs: [],
                                                    func: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: pow5bits,
                                                                        span: bytes(64373..64381),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    paren_token: Paren,
                                                    args: [
                                                        Expr::Cast {
                                                            attrs: [],
                                                            expr: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: base2,
                                                                                span: bytes(64382..64387),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            as_token: As,
                                                            ty: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: i32,
                                                                                span: bytes(64391..64394),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    ],
                                                },
                                                op: BinOp::Sub(
                                                    Minus,
                                                ),
                                                right: Expr::Call {
                                                    attrs: [],
                                                    func: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: pow5bits,
                                                                        span: bytes(64398..64406),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    paren_token: Paren,
                                                    args: [
                                                        Expr::Cast {
                                                            attrs: [],
                                                            expr: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: i,
                                                                                span: bytes(64407..64408),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            as_token: As,
                                                            ty: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: i32,
                                                                                span: bytes(64412..64415),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    ],
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Macro {
                                    attrs: [],
                                    mac: Macro {
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: debug_assert,
                                                        span: bytes(64422..64434),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                        bang_token: Not,
                                        delimiter: MacroDelimiter::Paren(
                                            Paren,
                                        ),
                                        tokens: TokenStream [
                                            Ident {
                                                sym: base,
                                                span: bytes(64436..64440),
                                            },
                                            Punct {
                                                char: '<',
                                                spacing: Alone,
                                                span: bytes(64441..64442),
                                            },
                                            Ident {
                                                sym: POW5_INV_OFFSETS,
                                                span: bytes(64443..64459),
                                            },
                                            Punct {
                                                char: '.',
                                                spacing: Alone,
                                                span: bytes(64459..64460),
                                            },
                                            Ident {
                                                sym: len,
                                                span: bytes(64460..64463),
                                            },
                                            Group {
                                                delimiter: Parenthesis,
                                                stream: TokenStream [],
                                                span: bytes(64463..64465),
                                            },
                                            Ident {
                                                sym: as,
                                                span: bytes(64466..64468),
                                            },
                                            Ident {
                                                sym: u32,
                                                span: bytes(64469..64472),
                                            },
                                        ],
                                    },
                                    semi_token: Some(
                                        Semi,
                                    ),
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: shifted_sum,
                                            span: bytes(64483..64494),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Binary {
                                                attrs: [],
                                                left: Expr::Binary {
                                                    attrs: [],
                                                    left: Expr::Paren {
                                                        attrs: [],
                                                        paren_token: Paren,
                                                        expr: Expr::Binary {
                                                            attrs: [],
                                                            left: Expr::Paren {
                                                                attrs: [],
                                                                paren_token: Paren,
                                                                expr: Expr::Binary {
                                                                    attrs: [],
                                                                    left: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: b0,
                                                                                        span: bytes(64499..64501),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    op: BinOp::Shr(
                                                                        Shr,
                                                                    ),
                                                                    right: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: delta,
                                                                                        span: bytes(64505..64510),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                            op: BinOp::Add(
                                                                Plus,
                                                            ),
                                                            right: Expr::Paren {
                                                                attrs: [],
                                                                paren_token: Paren,
                                                                expr: Expr::Binary {
                                                                    attrs: [],
                                                                    left: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: b2,
                                                                                        span: bytes(64515..64517),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    op: BinOp::Shl(
                                                                        Shl,
                                                                    ),
                                                                    right: Expr::Paren {
                                                                        attrs: [],
                                                                        paren_token: Paren,
                                                                        expr: Expr::Binary {
                                                                            attrs: [],
                                                                            left: Expr::Lit {
                                                                                attrs: [],
                                                                                lit: Lit::Int {
                                                                                    token: 64,
                                                                                },
                                                                            },
                                                                            op: BinOp::Sub(
                                                                                Minus,
                                                                            ),
                                                                            right: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: delta,
                                                                                                span: bytes(64527..64532),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        },
                                                    },
                                                    op: BinOp::Add(
                                                        Plus,
                                                    ),
                                                    right: Expr::Lit {
                                                        attrs: [],
                                                        lit: Lit::Int {
                                                            token: 1,
                                                        },
                                                    },
                                                },
                                                op: BinOp::Add(
                                                    Plus,
                                                ),
                                                right: Expr::Cast {
                                                    attrs: [],
                                                    expr: Expr::Paren {
                                                        attrs: [],
                                                        paren_token: Paren,
                                                        expr: Expr::Binary {
                                                            attrs: [],
                                                            left: Expr::Paren {
                                                                attrs: [],
                                                                paren_token: Paren,
                                                                expr: Expr::Binary {
                                                                    attrs: [],
                                                                    left: Expr::Unary {
                                                                        attrs: [],
                                                                        op: UnOp::Deref(
                                                                            Star,
                                                                        ),
                                                                        expr: Expr::MethodCall {
                                                                            attrs: [],
                                                                            receiver: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: POW5_INV_OFFSETS,
                                                                                                span: bytes(64561..64577),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            dot_token: Dot,
                                                                            method: Ident {
                                                                                sym: get_unchecked,
                                                                                span: bytes(64578..64591),
                                                                            },
                                                                            turbofish: None,
                                                                            paren_token: Paren,
                                                                            args: [
                                                                                Expr::Cast {
                                                                                    attrs: [],
                                                                                    expr: Expr::Paren {
                                                                                        attrs: [],
                                                                                        paren_token: Paren,
                                                                                        expr: Expr::Binary {
                                                                                            attrs: [],
                                                                                            left: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: i,
                                                                                                                span: bytes(64593..64594),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            op: BinOp::Div(
                                                                                                Slash,
                                                                                            ),
                                                                                            right: Expr::Lit {
                                                                                                attrs: [],
                                                                                                lit: Lit::Int {
                                                                                                    token: 16,
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                    as_token: As,
                                                                                    ty: Type::Path {
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: usize,
                                                                                                        span: bytes(64604..64609),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    op: BinOp::Shr(
                                                                        Shr,
                                                                    ),
                                                                    right: Expr::Paren {
                                                                        attrs: [],
                                                                        paren_token: Paren,
                                                                        expr: Expr::Binary {
                                                                            attrs: [],
                                                                            left: Expr::Paren {
                                                                                attrs: [],
                                                                                paren_token: Paren,
                                                                                expr: Expr::Binary {
                                                                                    attrs: [],
                                                                                    left: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: i,
                                                                                                        span: bytes(64616..64617),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    op: BinOp::Rem(
                                                                                        Percent,
                                                                                    ),
                                                                                    right: Expr::Lit {
                                                                                        attrs: [],
                                                                                        lit: Lit::Int {
                                                                                            token: 16,
                                                                                        },
                                                                                    },
                                                                                },
                                                                            },
                                                                            op: BinOp::Shl(
                                                                                Shl,
                                                                            ),
                                                                            right: Expr::Lit {
                                                                                attrs: [],
                                                                                lit: Lit::Int {
                                                                                    token: 1,
                                                                                },
                                                                            },
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                            op: BinOp::BitAnd(
                                                                And,
                                                            ),
                                                            right: Expr::Lit {
                                                                attrs: [],
                                                                lit: Lit::Int {
                                                                    token: 3,
                                                                },
                                                            },
                                                        },
                                                    },
                                                    as_token: As,
                                                    ty: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: u128,
                                                                        span: bytes(64639..64643),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Expr(
                                    Expr::Tuple {
                                        attrs: [],
                                        paren_token: Paren,
                                        elems: [
                                            Expr::Cast {
                                                attrs: [],
                                                expr: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: shifted_sum,
                                                                    span: bytes(64650..64661),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                as_token: As,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u64,
                                                                    span: bytes(64665..64668),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                            Comma,
                                            Expr::Cast {
                                                attrs: [],
                                                expr: Expr::Paren {
                                                    attrs: [],
                                                    paren_token: Paren,
                                                    expr: Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: shifted_sum,
                                                                            span: bytes(64671..64682),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        op: BinOp::Shr(
                                                            Shr,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 64,
                                                            },
                                                        },
                                                    },
                                                },
                                                as_token: As,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u64,
                                                                    span: bytes(64693..64696),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ],
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: PubT,
            },
        ),
    },
    "ryu::d2s_small_table::compute_pow5": FnData {
        fn_name: "compute_pow5",
        complete_fn_name: "ryu::d2s_small_table::compute_pow5",
        fn_type: Fn(
            FnItem {
                fn_name: Name {
                    name: "compute_pow5",
                    complete_name: "ryu::d2s_small_table::compute_pow5",
                    import_name: MyPath {
                        name: "ryu",
                        next: Some(
                            MyPath {
                                name: "d2s_small_table",
                                next: Some(
                                    MyPath {
                                        name: "compute_pow5",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "compute_pow5",
                item: Some(
                    ItemFn {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::List {
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: cfg_attr,
                                                    span: bytes(62646..62654),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                    delimiter: MacroDelimiter::Paren(
                                        Paren,
                                    ),
                                    tokens: TokenStream [
                                        Ident {
                                            sym: feature,
                                            span: bytes(62655..62662),
                                        },
                                        Punct {
                                            char: '=',
                                            spacing: Alone,
                                            span: bytes(62663..62664),
                                        },
                                        Literal {
                                            lit: "no-panic",
                                            span: bytes(62665..62675),
                                        },
                                        Punct {
                                            char: ',',
                                            spacing: Alone,
                                            span: bytes(62675..62676),
                                        },
                                        Ident {
                                            sym: inline,
                                            span: bytes(62677..62683),
                                        },
                                    ],
                                },
                            },
                        ],
                        vis: Visibility::Public(
                            Pub,
                        ),
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: Some(
                                Unsafe,
                            ),
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: compute_pow5,
                                span: bytes(62700..62712),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: i,
                                                span: bytes(62713..62714),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u32,
                                                            span: bytes(62716..62719),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Tuple {
                                    paren_token: Paren,
                                    elems: [
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u64,
                                                            span: bytes(62725..62728),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        Comma,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u64,
                                                            span: bytes(62730..62733),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: base,
                                            span: bytes(62745..62749),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Binary {
                                                attrs: [],
                                                left: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: i,
                                                                    span: bytes(62752..62753),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                op: BinOp::Div(
                                                    Slash,
                                                ),
                                                right: Expr::Cast {
                                                    attrs: [],
                                                    expr: Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: DOUBLE_POW5_TABLE,
                                                                            span: bytes(62756..62773),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: len,
                                                            span: bytes(62774..62777),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [],
                                                    },
                                                    as_token: As,
                                                    ty: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: u32,
                                                                        span: bytes(62783..62786),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: base2,
                                            span: bytes(62796..62801),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Binary {
                                                attrs: [],
                                                left: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: base,
                                                                    span: bytes(62804..62808),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                op: BinOp::Mul(
                                                    Star,
                                                ),
                                                right: Expr::Cast {
                                                    attrs: [],
                                                    expr: Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: DOUBLE_POW5_TABLE,
                                                                            span: bytes(62811..62828),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: len,
                                                            span: bytes(62829..62832),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [],
                                                    },
                                                    as_token: As,
                                                    ty: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: u32,
                                                                        span: bytes(62838..62841),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: offset,
                                            span: bytes(62851..62857),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Binary {
                                                attrs: [],
                                                left: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: i,
                                                                    span: bytes(62860..62861),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                op: BinOp::Sub(
                                                    Minus,
                                                ),
                                                right: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: base2,
                                                                    span: bytes(62864..62869),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Macro {
                                    attrs: [],
                                    mac: Macro {
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: debug_assert,
                                                        span: bytes(62875..62887),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                        bang_token: Not,
                                        delimiter: MacroDelimiter::Paren(
                                            Paren,
                                        ),
                                        tokens: TokenStream [
                                            Ident {
                                                sym: base,
                                                span: bytes(62889..62893),
                                            },
                                            Punct {
                                                char: '<',
                                                spacing: Alone,
                                                span: bytes(62894..62895),
                                            },
                                            Ident {
                                                sym: DOUBLE_POW5_SPLIT2,
                                                span: bytes(62896..62914),
                                            },
                                            Punct {
                                                char: '.',
                                                spacing: Alone,
                                                span: bytes(62914..62915),
                                            },
                                            Ident {
                                                sym: len,
                                                span: bytes(62915..62918),
                                            },
                                            Group {
                                                delimiter: Parenthesis,
                                                stream: TokenStream [],
                                                span: bytes(62918..62920),
                                            },
                                            Ident {
                                                sym: as,
                                                span: bytes(62921..62923),
                                            },
                                            Ident {
                                                sym: u32,
                                                span: bytes(62924..62927),
                                            },
                                        ],
                                    },
                                    semi_token: Some(
                                        Semi,
                                    ),
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: mul,
                                            span: bytes(62938..62941),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Unary {
                                                attrs: [],
                                                op: UnOp::Deref(
                                                    Star,
                                                ),
                                                expr: Expr::MethodCall {
                                                    attrs: [],
                                                    receiver: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: DOUBLE_POW5_SPLIT2,
                                                                        span: bytes(62945..62963),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    dot_token: Dot,
                                                    method: Ident {
                                                        sym: get_unchecked,
                                                        span: bytes(62964..62977),
                                                    },
                                                    turbofish: None,
                                                    paren_token: Paren,
                                                    args: [
                                                        Expr::Cast {
                                                            attrs: [],
                                                            expr: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: base,
                                                                                span: bytes(62978..62982),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            as_token: As,
                                                            ty: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: usize,
                                                                                span: bytes(62986..62991),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    ],
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Expr(
                                    Expr::If {
                                        attrs: [],
                                        if_token: If,
                                        cond: Expr::Binary {
                                            attrs: [],
                                            left: Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: offset,
                                                                span: bytes(63001..63007),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            op: BinOp::Eq(
                                                EqEq,
                                            ),
                                            right: Expr::Lit {
                                                attrs: [],
                                                lit: Lit::Int {
                                                    token: 0,
                                                },
                                            },
                                        },
                                        then_branch: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::Return {
                                                        attrs: [],
                                                        return_token: Return,
                                                        expr: Some(
                                                            Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: mul,
                                                                                span: bytes(63030..63033),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                            ],
                                        },
                                        else_branch: None,
                                    },
                                    None,
                                ),
                                Stmt::Macro {
                                    attrs: [],
                                    mac: Macro {
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: debug_assert,
                                                        span: bytes(63045..63057),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                        bang_token: Not,
                                        delimiter: MacroDelimiter::Paren(
                                            Paren,
                                        ),
                                        tokens: TokenStream [
                                            Ident {
                                                sym: offset,
                                                span: bytes(63059..63065),
                                            },
                                            Punct {
                                                char: '<',
                                                spacing: Alone,
                                                span: bytes(63066..63067),
                                            },
                                            Ident {
                                                sym: DOUBLE_POW5_TABLE,
                                                span: bytes(63068..63085),
                                            },
                                            Punct {
                                                char: '.',
                                                spacing: Alone,
                                                span: bytes(63085..63086),
                                            },
                                            Ident {
                                                sym: len,
                                                span: bytes(63086..63089),
                                            },
                                            Group {
                                                delimiter: Parenthesis,
                                                stream: TokenStream [],
                                                span: bytes(63089..63091),
                                            },
                                            Ident {
                                                sym: as,
                                                span: bytes(63092..63094),
                                            },
                                            Ident {
                                                sym: u32,
                                                span: bytes(63095..63098),
                                            },
                                        ],
                                    },
                                    semi_token: Some(
                                        Semi,
                                    ),
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: m,
                                            span: bytes(63109..63110),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Unary {
                                                attrs: [],
                                                op: UnOp::Deref(
                                                    Star,
                                                ),
                                                expr: Expr::MethodCall {
                                                    attrs: [],
                                                    receiver: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: DOUBLE_POW5_TABLE,
                                                                        span: bytes(63114..63131),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    dot_token: Dot,
                                                    method: Ident {
                                                        sym: get_unchecked,
                                                        span: bytes(63132..63145),
                                                    },
                                                    turbofish: None,
                                                    paren_token: Paren,
                                                    args: [
                                                        Expr::Cast {
                                                            attrs: [],
                                                            expr: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: offset,
                                                                                span: bytes(63146..63152),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            as_token: As,
                                                            ty: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: usize,
                                                                                span: bytes(63156..63161),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    ],
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: b0,
                                            span: bytes(63172..63174),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Binary {
                                                attrs: [],
                                                left: Expr::Cast {
                                                    attrs: [],
                                                    expr: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: m,
                                                                        span: bytes(63177..63178),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    as_token: As,
                                                    ty: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: u128,
                                                                        span: bytes(63182..63186),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                                op: BinOp::Mul(
                                                    Star,
                                                ),
                                                right: Expr::Cast {
                                                    attrs: [],
                                                    expr: Expr::Field {
                                                        attrs: [],
                                                        base: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: mul,
                                                                            span: bytes(63189..63192),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        member: Member::Unnamed(
                                                            Index {
                                                                index: 0,
                                                                span: bytes(63193..63194),
                                                            },
                                                        ),
                                                    },
                                                    as_token: As,
                                                    ty: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: u128,
                                                                        span: bytes(63198..63202),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: b2,
                                            span: bytes(63212..63214),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Binary {
                                                attrs: [],
                                                left: Expr::Cast {
                                                    attrs: [],
                                                    expr: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: m,
                                                                        span: bytes(63217..63218),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    as_token: As,
                                                    ty: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: u128,
                                                                        span: bytes(63222..63226),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                                op: BinOp::Mul(
                                                    Star,
                                                ),
                                                right: Expr::Cast {
                                                    attrs: [],
                                                    expr: Expr::Field {
                                                        attrs: [],
                                                        base: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: mul,
                                                                            span: bytes(63229..63232),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        member: Member::Unnamed(
                                                            Index {
                                                                index: 1,
                                                                span: bytes(63233..63234),
                                                            },
                                                        ),
                                                    },
                                                    as_token: As,
                                                    ty: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: u128,
                                                                        span: bytes(63238..63242),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: delta,
                                            span: bytes(63252..63257),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Binary {
                                                attrs: [],
                                                left: Expr::Call {
                                                    attrs: [],
                                                    func: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: pow5bits,
                                                                        span: bytes(63260..63268),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    paren_token: Paren,
                                                    args: [
                                                        Expr::Cast {
                                                            attrs: [],
                                                            expr: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: i,
                                                                                span: bytes(63269..63270),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            as_token: As,
                                                            ty: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: i32,
                                                                                span: bytes(63274..63277),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    ],
                                                },
                                                op: BinOp::Sub(
                                                    Minus,
                                                ),
                                                right: Expr::Call {
                                                    attrs: [],
                                                    func: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: pow5bits,
                                                                        span: bytes(63281..63289),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    paren_token: Paren,
                                                    args: [
                                                        Expr::Cast {
                                                            attrs: [],
                                                            expr: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: base2,
                                                                                span: bytes(63290..63295),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            as_token: As,
                                                            ty: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: i32,
                                                                                span: bytes(63299..63302),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    ],
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Macro {
                                    attrs: [],
                                    mac: Macro {
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: debug_assert,
                                                        span: bytes(63309..63321),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                        bang_token: Not,
                                        delimiter: MacroDelimiter::Paren(
                                            Paren,
                                        ),
                                        tokens: TokenStream [
                                            Ident {
                                                sym: i,
                                                span: bytes(63323..63324),
                                            },
                                            Punct {
                                                char: '/',
                                                spacing: Alone,
                                                span: bytes(63325..63326),
                                            },
                                            Literal {
                                                lit: 16,
                                                span: bytes(63327..63329),
                                            },
                                            Punct {
                                                char: '<',
                                                spacing: Alone,
                                                span: bytes(63330..63331),
                                            },
                                            Ident {
                                                sym: POW5_OFFSETS,
                                                span: bytes(63332..63344),
                                            },
                                            Punct {
                                                char: '.',
                                                spacing: Alone,
                                                span: bytes(63344..63345),
                                            },
                                            Ident {
                                                sym: len,
                                                span: bytes(63345..63348),
                                            },
                                            Group {
                                                delimiter: Parenthesis,
                                                stream: TokenStream [],
                                                span: bytes(63348..63350),
                                            },
                                            Ident {
                                                sym: as,
                                                span: bytes(63351..63353),
                                            },
                                            Ident {
                                                sym: u32,
                                                span: bytes(63354..63357),
                                            },
                                        ],
                                    },
                                    semi_token: Some(
                                        Semi,
                                    ),
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: shifted_sum,
                                            span: bytes(63368..63379),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Binary {
                                                attrs: [],
                                                left: Expr::Binary {
                                                    attrs: [],
                                                    left: Expr::Paren {
                                                        attrs: [],
                                                        paren_token: Paren,
                                                        expr: Expr::Binary {
                                                            attrs: [],
                                                            left: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: b0,
                                                                                span: bytes(63383..63385),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            op: BinOp::Shr(
                                                                Shr,
                                                            ),
                                                            right: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: delta,
                                                                                span: bytes(63389..63394),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                    op: BinOp::Add(
                                                        Plus,
                                                    ),
                                                    right: Expr::Paren {
                                                        attrs: [],
                                                        paren_token: Paren,
                                                        expr: Expr::Binary {
                                                            attrs: [],
                                                            left: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: b2,
                                                                                span: bytes(63407..63409),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            op: BinOp::Shl(
                                                                Shl,
                                                            ),
                                                            right: Expr::Paren {
                                                                attrs: [],
                                                                paren_token: Paren,
                                                                expr: Expr::Binary {
                                                                    attrs: [],
                                                                    left: Expr::Lit {
                                                                        attrs: [],
                                                                        lit: Lit::Int {
                                                                            token: 64,
                                                                        },
                                                                    },
                                                                    op: BinOp::Sub(
                                                                        Minus,
                                                                    ),
                                                                    right: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: delta,
                                                                                        span: bytes(63419..63424),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        },
                                                    },
                                                },
                                                op: BinOp::Add(
                                                    Plus,
                                                ),
                                                right: Expr::Cast {
                                                    attrs: [],
                                                    expr: Expr::Paren {
                                                        attrs: [],
                                                        paren_token: Paren,
                                                        expr: Expr::Binary {
                                                            attrs: [],
                                                            left: Expr::Paren {
                                                                attrs: [],
                                                                paren_token: Paren,
                                                                expr: Expr::Binary {
                                                                    attrs: [],
                                                                    left: Expr::Unary {
                                                                        attrs: [],
                                                                        op: UnOp::Deref(
                                                                            Star,
                                                                        ),
                                                                        expr: Expr::MethodCall {
                                                                            attrs: [],
                                                                            receiver: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: POW5_OFFSETS,
                                                                                                span: bytes(63440..63452),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            dot_token: Dot,
                                                                            method: Ident {
                                                                                sym: get_unchecked,
                                                                                span: bytes(63453..63466),
                                                                            },
                                                                            turbofish: None,
                                                                            paren_token: Paren,
                                                                            args: [
                                                                                Expr::Cast {
                                                                                    attrs: [],
                                                                                    expr: Expr::Paren {
                                                                                        attrs: [],
                                                                                        paren_token: Paren,
                                                                                        expr: Expr::Binary {
                                                                                            attrs: [],
                                                                                            left: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: i,
                                                                                                                span: bytes(63468..63469),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            op: BinOp::Div(
                                                                                                Slash,
                                                                                            ),
                                                                                            right: Expr::Lit {
                                                                                                attrs: [],
                                                                                                lit: Lit::Int {
                                                                                                    token: 16,
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                    as_token: As,
                                                                                    ty: Type::Path {
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: usize,
                                                                                                        span: bytes(63479..63484),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    op: BinOp::Shr(
                                                                        Shr,
                                                                    ),
                                                                    right: Expr::Paren {
                                                                        attrs: [],
                                                                        paren_token: Paren,
                                                                        expr: Expr::Binary {
                                                                            attrs: [],
                                                                            left: Expr::Paren {
                                                                                attrs: [],
                                                                                paren_token: Paren,
                                                                                expr: Expr::Binary {
                                                                                    attrs: [],
                                                                                    left: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: i,
                                                                                                        span: bytes(63491..63492),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    op: BinOp::Rem(
                                                                                        Percent,
                                                                                    ),
                                                                                    right: Expr::Lit {
                                                                                        attrs: [],
                                                                                        lit: Lit::Int {
                                                                                            token: 16,
                                                                                        },
                                                                                    },
                                                                                },
                                                                            },
                                                                            op: BinOp::Shl(
                                                                                Shl,
                                                                            ),
                                                                            right: Expr::Lit {
                                                                                attrs: [],
                                                                                lit: Lit::Int {
                                                                                    token: 1,
                                                                                },
                                                                            },
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                            op: BinOp::BitAnd(
                                                                And,
                                                            ),
                                                            right: Expr::Lit {
                                                                attrs: [],
                                                                lit: Lit::Int {
                                                                    token: 3,
                                                                },
                                                            },
                                                        },
                                                    },
                                                    as_token: As,
                                                    ty: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: u128,
                                                                        span: bytes(63514..63518),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Expr(
                                    Expr::Tuple {
                                        attrs: [],
                                        paren_token: Paren,
                                        elems: [
                                            Expr::Cast {
                                                attrs: [],
                                                expr: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: shifted_sum,
                                                                    span: bytes(63525..63536),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                as_token: As,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u64,
                                                                    span: bytes(63540..63543),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                            Comma,
                                            Expr::Cast {
                                                attrs: [],
                                                expr: Expr::Paren {
                                                    attrs: [],
                                                    paren_token: Paren,
                                                    expr: Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: shifted_sum,
                                                                            span: bytes(63546..63557),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        op: BinOp::Shr(
                                                            Shr,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 64,
                                                            },
                                                        },
                                                    },
                                                },
                                                as_token: As,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u64,
                                                                    span: bytes(63568..63571),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ],
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: PubT,
            },
        ),
    },
    "ryu::f2s_intrinsics::multiple_of_power_of_5_32": FnData {
        fn_name: "multiple_of_power_of_5_32",
        complete_fn_name: "ryu::f2s_intrinsics::multiple_of_power_of_5_32",
        fn_type: Fn(
            FnItem {
                fn_name: Name {
                    name: "multiple_of_power_of_5_32",
                    complete_name: "ryu::f2s_intrinsics::multiple_of_power_of_5_32",
                    import_name: MyPath {
                        name: "ryu",
                        next: Some(
                            MyPath {
                                name: "f2s_intrinsics",
                                next: Some(
                                    MyPath {
                                        name: "multiple_of_power_of_5_32",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "multiple_of_power_of_5_32",
                item: Some(
                    ItemFn {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::List {
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: cfg_attr,
                                                    span: bytes(74317..74325),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                    delimiter: MacroDelimiter::Paren(
                                        Paren,
                                    ),
                                    tokens: TokenStream [
                                        Ident {
                                            sym: feature,
                                            span: bytes(74326..74333),
                                        },
                                        Punct {
                                            char: '=',
                                            spacing: Alone,
                                            span: bytes(74334..74335),
                                        },
                                        Literal {
                                            lit: "no-panic",
                                            span: bytes(74336..74346),
                                        },
                                        Punct {
                                            char: ',',
                                            spacing: Alone,
                                            span: bytes(74346..74347),
                                        },
                                        Ident {
                                            sym: inline,
                                            span: bytes(74348..74354),
                                        },
                                    ],
                                },
                            },
                        ],
                        vis: Visibility::Public(
                            Pub,
                        ),
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: multiple_of_power_of_5_32,
                                span: bytes(74364..74389),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: value,
                                                span: bytes(74390..74395),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u32,
                                                            span: bytes(74397..74400),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                                Comma,
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: p,
                                                span: bytes(74402..74403),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u32,
                                                            span: bytes(74405..74408),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: bool,
                                                    span: bytes(74413..74417),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Expr(
                                    Expr::Binary {
                                        attrs: [],
                                        left: Expr::Call {
                                            attrs: [],
                                            func: Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: pow5factor_32,
                                                                span: bytes(74424..74437),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            paren_token: Paren,
                                            args: [
                                                Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: value,
                                                                    span: bytes(74438..74443),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                        op: BinOp::Ge(
                                            Ge,
                                        ),
                                        right: Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: p,
                                                            span: bytes(74448..74449),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: PubT,
            },
        ),
    },
    "ryu::f2s_intrinsics::multiple_of_power_of_2_32": FnData {
        fn_name: "multiple_of_power_of_2_32",
        complete_fn_name: "ryu::f2s_intrinsics::multiple_of_power_of_2_32",
        fn_type: Fn(
            FnItem {
                fn_name: Name {
                    name: "multiple_of_power_of_2_32",
                    complete_name: "ryu::f2s_intrinsics::multiple_of_power_of_2_32",
                    import_name: MyPath {
                        name: "ryu",
                        next: Some(
                            MyPath {
                                name: "f2s_intrinsics",
                                next: Some(
                                    MyPath {
                                        name: "multiple_of_power_of_2_32",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "multiple_of_power_of_2_32",
                item: Some(
                    ItemFn {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::List {
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: cfg_attr,
                                                    span: bytes(74501..74509),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                    delimiter: MacroDelimiter::Paren(
                                        Paren,
                                    ),
                                    tokens: TokenStream [
                                        Ident {
                                            sym: feature,
                                            span: bytes(74510..74517),
                                        },
                                        Punct {
                                            char: '=',
                                            spacing: Alone,
                                            span: bytes(74518..74519),
                                        },
                                        Literal {
                                            lit: "no-panic",
                                            span: bytes(74520..74530),
                                        },
                                        Punct {
                                            char: ',',
                                            spacing: Alone,
                                            span: bytes(74530..74531),
                                        },
                                        Ident {
                                            sym: inline,
                                            span: bytes(74532..74538),
                                        },
                                    ],
                                },
                            },
                        ],
                        vis: Visibility::Public(
                            Pub,
                        ),
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: multiple_of_power_of_2_32,
                                span: bytes(74548..74573),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: value,
                                                span: bytes(74574..74579),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u32,
                                                            span: bytes(74581..74584),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                                Comma,
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: p,
                                                span: bytes(74586..74587),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u32,
                                                            span: bytes(74589..74592),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: bool,
                                                    span: bytes(74597..74601),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Expr(
                                    Expr::Binary {
                                        attrs: [],
                                        left: Expr::Paren {
                                            attrs: [],
                                            paren_token: Paren,
                                            expr: Expr::Binary {
                                                attrs: [],
                                                left: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: value,
                                                                    span: bytes(74664..74669),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                op: BinOp::BitAnd(
                                                    And,
                                                ),
                                                right: Expr::Paren {
                                                    attrs: [],
                                                    paren_token: Paren,
                                                    expr: Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Paren {
                                                            attrs: [],
                                                            paren_token: Paren,
                                                            expr: Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 1u32,
                                                                    },
                                                                },
                                                                op: BinOp::Shl(
                                                                    Shl,
                                                                ),
                                                                right: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: p,
                                                                                    span: bytes(74682..74683),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        },
                                                        op: BinOp::Sub(
                                                            Minus,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 1,
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                        },
                                        op: BinOp::Eq(
                                            EqEq,
                                        ),
                                        right: Expr::Lit {
                                            attrs: [],
                                            lit: Lit::Int {
                                                token: 0,
                                            },
                                        },
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: PubT,
            },
        ),
    },
    "ryu::f2s_intrinsics::mul_pow5_div_pow2": FnData {
        fn_name: "mul_pow5_div_pow2",
        complete_fn_name: "ryu::f2s_intrinsics::mul_pow5_div_pow2",
        fn_type: Fn(
            FnItem {
                fn_name: Name {
                    name: "mul_pow5_div_pow2",
                    complete_name: "ryu::f2s_intrinsics::mul_pow5_div_pow2",
                    import_name: MyPath {
                        name: "ryu",
                        next: Some(
                            MyPath {
                                name: "f2s_intrinsics",
                                next: Some(
                                    MyPath {
                                        name: "mul_pow5_div_pow2",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "mul_pow5_div_pow2",
                item: Some(
                    ItemFn {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::List {
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: cfg_attr,
                                                    span: bytes(76266..76274),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                    delimiter: MacroDelimiter::Paren(
                                        Paren,
                                    ),
                                    tokens: TokenStream [
                                        Ident {
                                            sym: feature,
                                            span: bytes(76275..76282),
                                        },
                                        Punct {
                                            char: '=',
                                            spacing: Alone,
                                            span: bytes(76283..76284),
                                        },
                                        Literal {
                                            lit: "no-panic",
                                            span: bytes(76285..76295),
                                        },
                                        Punct {
                                            char: ',',
                                            spacing: Alone,
                                            span: bytes(76295..76296),
                                        },
                                        Ident {
                                            sym: inline,
                                            span: bytes(76297..76303),
                                        },
                                    ],
                                },
                            },
                        ],
                        vis: Visibility::Public(
                            Pub,
                        ),
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: mul_pow5_div_pow2,
                                span: bytes(76313..76330),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: m,
                                                span: bytes(76331..76332),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u32,
                                                            span: bytes(76334..76337),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                                Comma,
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: i,
                                                span: bytes(76339..76340),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u32,
                                                            span: bytes(76342..76345),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                                Comma,
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: j,
                                                span: bytes(76347..76348),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: i32,
                                                            span: bytes(76350..76353),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: u32,
                                                    span: bytes(76358..76361),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Expr(
                                    Expr::Block {
                                        attrs: [
                                            Attribute {
                                                pound_token: Pound,
                                                style: AttrStyle::Outer,
                                                bracket_token: Bracket,
                                                meta: Meta::List {
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: cfg,
                                                                    span: bytes(76370..76373),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                    delimiter: MacroDelimiter::Paren(
                                                        Paren,
                                                    ),
                                                    tokens: TokenStream [
                                                        Ident {
                                                            sym: feature,
                                                            span: bytes(76374..76381),
                                                        },
                                                        Punct {
                                                            char: '=',
                                                            spacing: Alone,
                                                            span: bytes(76382..76383),
                                                        },
                                                        Literal {
                                                            lit: "small",
                                                            span: bytes(76384..76391),
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                        label: None,
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: pow5,
                                                            span: bytes(76412..76416),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::Unsafe {
                                                                attrs: [],
                                                                unsafe_token: Unsafe,
                                                                block: Block {
                                                                    brace_token: Brace,
                                                                    stmts: [
                                                                        Stmt::Expr(
                                                                            Expr::Call {
                                                                                attrs: [],
                                                                                func: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: d2s,
                                                                                                    span: bytes(76428..76431),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                            PathSep,
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: compute_pow5,
                                                                                                    span: bytes(76433..76445),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                paren_token: Paren,
                                                                                args: [
                                                                                    Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: i,
                                                                                                        span: bytes(76446..76447),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ],
                                                                            },
                                                                            None,
                                                                        ),
                                                                    ],
                                                                },
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Expr(
                                                    Expr::Call {
                                                        attrs: [],
                                                        func: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: mul_shift_32,
                                                                            span: bytes(76460..76472),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        paren_token: Paren,
                                                        args: [
                                                            Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: m,
                                                                                span: bytes(76473..76474),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            Comma,
                                                            Expr::Field {
                                                                attrs: [],
                                                                base: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: pow5,
                                                                                    span: bytes(76476..76480),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                member: Member::Unnamed(
                                                                    Index {
                                                                        index: 1,
                                                                        span: bytes(76481..76482),
                                                                    },
                                                                ),
                                                            },
                                                            Comma,
                                                            Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: j,
                                                                                span: bytes(76484..76485),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                    None,
                                ),
                                Stmt::Expr(
                                    Expr::Block {
                                        attrs: [
                                            Attribute {
                                                pound_token: Pound,
                                                style: AttrStyle::Outer,
                                                bracket_token: Bracket,
                                                meta: Meta::List {
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: cfg,
                                                                    span: bytes(76500..76503),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                    delimiter: MacroDelimiter::Paren(
                                                        Paren,
                                                    ),
                                                    tokens: TokenStream [
                                                        Ident {
                                                            sym: not,
                                                            span: bytes(76504..76507),
                                                        },
                                                        Group {
                                                            delimiter: Parenthesis,
                                                            stream: TokenStream [
                                                                Ident {
                                                                    sym: feature,
                                                                    span: bytes(76508..76515),
                                                                },
                                                                Punct {
                                                                    char: '=',
                                                                    spacing: Alone,
                                                                    span: bytes(76516..76517),
                                                                },
                                                                Literal {
                                                                    lit: "small",
                                                                    span: bytes(76518..76525),
                                                                },
                                                            ],
                                                            span: bytes(76507..76526),
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                        label: None,
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Macro {
                                                    attrs: [],
                                                    mac: Macro {
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: debug_assert,
                                                                        span: bytes(76543..76555),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                        bang_token: Not,
                                                        delimiter: MacroDelimiter::Paren(
                                                            Paren,
                                                        ),
                                                        tokens: TokenStream [
                                                            Ident {
                                                                sym: i,
                                                                span: bytes(76557..76558),
                                                            },
                                                            Punct {
                                                                char: '<',
                                                                spacing: Alone,
                                                                span: bytes(76559..76560),
                                                            },
                                                            Ident {
                                                                sym: d2s,
                                                                span: bytes(76561..76564),
                                                            },
                                                            Punct {
                                                                char: ':',
                                                                spacing: Joint,
                                                                span: bytes(76564..76565),
                                                            },
                                                            Punct {
                                                                char: ':',
                                                                spacing: Alone,
                                                                span: bytes(76565..76566),
                                                            },
                                                            Ident {
                                                                sym: DOUBLE_POW5_SPLIT,
                                                                span: bytes(76566..76583),
                                                            },
                                                            Punct {
                                                                char: '.',
                                                                spacing: Alone,
                                                                span: bytes(76583..76584),
                                                            },
                                                            Ident {
                                                                sym: len,
                                                                span: bytes(76584..76587),
                                                            },
                                                            Group {
                                                                delimiter: Parenthesis,
                                                                stream: TokenStream [],
                                                                span: bytes(76587..76589),
                                                            },
                                                            Ident {
                                                                sym: as,
                                                                span: bytes(76590..76592),
                                                            },
                                                            Ident {
                                                                sym: u32,
                                                                span: bytes(76593..76596),
                                                            },
                                                        ],
                                                    },
                                                    semi_token: Some(
                                                        Semi,
                                                    ),
                                                },
                                                Stmt::Expr(
                                                    Expr::Unsafe {
                                                        attrs: [],
                                                        unsafe_token: Unsafe,
                                                        block: Block {
                                                            brace_token: Brace,
                                                            stmts: [
                                                                Stmt::Expr(
                                                                    Expr::Call {
                                                                        attrs: [],
                                                                        func: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: mul_shift_32,
                                                                                            span: bytes(76616..76628),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        paren_token: Paren,
                                                                        args: [
                                                                            Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: m,
                                                                                                span: bytes(76629..76630),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            Comma,
                                                                            Expr::Field {
                                                                                attrs: [],
                                                                                base: Expr::MethodCall {
                                                                                    attrs: [],
                                                                                    receiver: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: d2s,
                                                                                                        span: bytes(76632..76635),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                                PathSep,
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: DOUBLE_POW5_SPLIT,
                                                                                                        span: bytes(76637..76654),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    dot_token: Dot,
                                                                                    method: Ident {
                                                                                        sym: get_unchecked,
                                                                                        span: bytes(76655..76668),
                                                                                    },
                                                                                    turbofish: None,
                                                                                    paren_token: Paren,
                                                                                    args: [
                                                                                        Expr::Cast {
                                                                                            attrs: [],
                                                                                            expr: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: i,
                                                                                                                span: bytes(76669..76670),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            as_token: As,
                                                                                            ty: Type::Path {
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: usize,
                                                                                                                span: bytes(76674..76679),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                    ],
                                                                                },
                                                                                dot_token: Dot,
                                                                                member: Member::Unnamed(
                                                                                    Index {
                                                                                        index: 1,
                                                                                        span: bytes(76681..76682),
                                                                                    },
                                                                                ),
                                                                            },
                                                                            Comma,
                                                                            Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: j,
                                                                                                span: bytes(76684..76685),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                    None,
                                                                ),
                                                            ],
                                                        },
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: PubT,
            },
        ),
    },
    "ryu::pretty::exponent::write_exponent3": FnData {
        fn_name: "write_exponent3",
        complete_fn_name: "ryu::pretty::exponent::write_exponent3",
        fn_type: Fn(
            FnItem {
                fn_name: Name {
                    name: "write_exponent3",
                    complete_name: "ryu::pretty::exponent::write_exponent3",
                    import_name: MyPath {
                        name: "ryu",
                        next: Some(
                            MyPath {
                                name: "pretty",
                                next: Some(
                                    MyPath {
                                        name: "exponent",
                                        next: Some(
                                            MyPath {
                                                name: "write_exponent3",
                                                next: None,
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "write_exponent3",
                item: Some(
                    ItemFn {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::List {
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: cfg_attr,
                                                    span: bytes(84620..84628),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                    delimiter: MacroDelimiter::Paren(
                                        Paren,
                                    ),
                                    tokens: TokenStream [
                                        Ident {
                                            sym: feature,
                                            span: bytes(84629..84636),
                                        },
                                        Punct {
                                            char: '=',
                                            spacing: Alone,
                                            span: bytes(84637..84638),
                                        },
                                        Literal {
                                            lit: "no-panic",
                                            span: bytes(84639..84649),
                                        },
                                        Punct {
                                            char: ',',
                                            spacing: Alone,
                                            span: bytes(84649..84650),
                                        },
                                        Ident {
                                            sym: inline,
                                            span: bytes(84651..84657),
                                        },
                                    ],
                                },
                            },
                        ],
                        vis: Visibility::Public(
                            Pub,
                        ),
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: Some(
                                Unsafe,
                            ),
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: write_exponent3,
                                span: bytes(84674..84689),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            ident: Ident {
                                                sym: k,
                                                span: bytes(84694..84695),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: isize,
                                                            span: bytes(84697..84702),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                                Comma,
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            ident: Ident {
                                                sym: result,
                                                span: bytes(84708..84714),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Ptr {
                                            star_token: Star,
                                            const_token: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: u8,
                                                                span: bytes(84721..84723),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: usize,
                                                    span: bytes(84728..84733),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: sign,
                                            span: bytes(84744..84748),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Binary {
                                                attrs: [],
                                                left: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: k,
                                                                    span: bytes(84751..84752),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                op: BinOp::Lt(
                                                    Lt,
                                                ),
                                                right: Expr::Lit {
                                                    attrs: [],
                                                    lit: Lit::Int {
                                                        token: 0,
                                                    },
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Expr(
                                    Expr::If {
                                        attrs: [],
                                        if_token: If,
                                        cond: Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: sign,
                                                            span: bytes(84765..84769),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        then_branch: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::Assign {
                                                        attrs: [],
                                                        left: Expr::Unary {
                                                            attrs: [],
                                                            op: UnOp::Deref(
                                                                Star,
                                                            ),
                                                            expr: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: result,
                                                                                span: bytes(84781..84787),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                        eq_token: Eq,
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Byte {
                                                                token: b'-',
                                                            },
                                                        },
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                                Stmt::Expr(
                                                    Expr::Assign {
                                                        attrs: [],
                                                        left: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: result,
                                                                            span: bytes(84804..84810),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        eq_token: Eq,
                                                        right: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: result,
                                                                                span: bytes(84813..84819),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: offset,
                                                                span: bytes(84820..84826),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 1,
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                                Stmt::Expr(
                                                    Expr::Assign {
                                                        attrs: [],
                                                        left: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: k,
                                                                            span: bytes(84839..84840),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        eq_token: Eq,
                                                        right: Expr::Unary {
                                                            attrs: [],
                                                            op: UnOp::Neg(
                                                                Minus,
                                                            ),
                                                            expr: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: k,
                                                                                span: bytes(84844..84845),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                            ],
                                        },
                                        else_branch: None,
                                    },
                                    None,
                                ),
                                Stmt::Macro {
                                    attrs: [],
                                    mac: Macro {
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: debug_assert,
                                                        span: bytes(84858..84870),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                        bang_token: Not,
                                        delimiter: MacroDelimiter::Paren(
                                            Paren,
                                        ),
                                        tokens: TokenStream [
                                            Ident {
                                                sym: k,
                                                span: bytes(84872..84873),
                                            },
                                            Punct {
                                                char: '<',
                                                spacing: Alone,
                                                span: bytes(84874..84875),
                                            },
                                            Literal {
                                                lit: 1000,
                                                span: bytes(84876..84880),
                                            },
                                        ],
                                    },
                                    semi_token: Some(
                                        Semi,
                                    ),
                                },
                                Stmt::Expr(
                                    Expr::If {
                                        attrs: [],
                                        if_token: If,
                                        cond: Expr::Binary {
                                            attrs: [],
                                            left: Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: k,
                                                                span: bytes(84890..84891),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            op: BinOp::Ge(
                                                Ge,
                                            ),
                                            right: Expr::Lit {
                                                attrs: [],
                                                lit: Lit::Int {
                                                    token: 100,
                                                },
                                            },
                                        },
                                        then_branch: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::Assign {
                                                        attrs: [],
                                                        left: Expr::Unary {
                                                            attrs: [],
                                                            op: UnOp::Deref(
                                                                Star,
                                                            ),
                                                            expr: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: result,
                                                                                span: bytes(84910..84916),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                        eq_token: Eq,
                                                        right: Expr::Binary {
                                                            attrs: [],
                                                            left: Expr::Lit {
                                                                attrs: [],
                                                                lit: Lit::Byte {
                                                                    token: b'0',
                                                                },
                                                            },
                                                            op: BinOp::Add(
                                                                Plus,
                                                            ),
                                                            right: Expr::Cast {
                                                                attrs: [],
                                                                expr: Expr::Paren {
                                                                    attrs: [],
                                                                    paren_token: Paren,
                                                                    expr: Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: k,
                                                                                            span: bytes(84927..84928),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        op: BinOp::Div(
                                                                            Slash,
                                                                        ),
                                                                        right: Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Int {
                                                                                token: 100,
                                                                            },
                                                                        },
                                                                    },
                                                                },
                                                                as_token: As,
                                                                ty: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: u8,
                                                                                    span: bytes(84939..84941),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        },
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                                Stmt::Expr(
                                                    Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: k,
                                                                            span: bytes(84951..84952),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        op: BinOp::RemAssign(
                                                            PercentEq,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 100,
                                                            },
                                                        },
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: d,
                                                            span: bytes(84973..84974),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::MethodCall {
                                                                    attrs: [],
                                                                    receiver: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: DIGIT_TABLE,
                                                                                        span: bytes(84977..84988),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    method: Ident {
                                                                        sym: as_ptr,
                                                                        span: bytes(84989..84995),
                                                                    },
                                                                    turbofish: None,
                                                                    paren_token: Paren,
                                                                    args: [],
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: offset,
                                                                    span: bytes(84998..85004),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: k,
                                                                                            span: bytes(85005..85006),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        op: BinOp::Mul(
                                                                            Star,
                                                                        ),
                                                                        right: Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Int {
                                                                                token: 2,
                                                                            },
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Expr(
                                                    Expr::Call {
                                                        attrs: [],
                                                        func: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: ptr,
                                                                            span: bytes(85021..85024),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: copy_nonoverlapping,
                                                                            span: bytes(85026..85045),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        paren_token: Paren,
                                                        args: [
                                                            Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: d,
                                                                                span: bytes(85046..85047),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            Comma,
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: result,
                                                                                    span: bytes(85049..85055),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: offset,
                                                                    span: bytes(85056..85062),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Lit {
                                                                        attrs: [],
                                                                        lit: Lit::Int {
                                                                            token: 1,
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            Comma,
                                                            Expr::Lit {
                                                                attrs: [],
                                                                lit: Lit::Int {
                                                                    token: 2,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                                Stmt::Expr(
                                                    Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Cast {
                                                            attrs: [],
                                                            expr: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: sign,
                                                                                span: bytes(85079..85083),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            as_token: As,
                                                            ty: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: usize,
                                                                                span: bytes(85087..85092),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                        op: BinOp::Add(
                                                            Plus,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 3,
                                                            },
                                                        },
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                        else_branch: Some(
                                            (
                                                Else,
                                                Expr::If {
                                                    attrs: [],
                                                    if_token: If,
                                                    cond: Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: k,
                                                                            span: bytes(85111..85112),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        op: BinOp::Ge(
                                                            Ge,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 10,
                                                            },
                                                        },
                                                    },
                                                    then_branch: Block {
                                                        brace_token: Brace,
                                                        stmts: [
                                                            Stmt::Local {
                                                                attrs: [],
                                                                let_token: Let,
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: d,
                                                                        span: bytes(85133..85134),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                init: Some(
                                                                    LocalInit {
                                                                        eq_token: Eq,
                                                                        expr: Expr::MethodCall {
                                                                            attrs: [],
                                                                            receiver: Expr::MethodCall {
                                                                                attrs: [],
                                                                                receiver: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: DIGIT_TABLE,
                                                                                                    span: bytes(85137..85148),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                dot_token: Dot,
                                                                                method: Ident {
                                                                                    sym: as_ptr,
                                                                                    span: bytes(85149..85155),
                                                                                },
                                                                                turbofish: None,
                                                                                paren_token: Paren,
                                                                                args: [],
                                                                            },
                                                                            dot_token: Dot,
                                                                            method: Ident {
                                                                                sym: offset,
                                                                                span: bytes(85158..85164),
                                                                            },
                                                                            turbofish: None,
                                                                            paren_token: Paren,
                                                                            args: [
                                                                                Expr::Binary {
                                                                                    attrs: [],
                                                                                    left: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: k,
                                                                                                        span: bytes(85165..85166),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    op: BinOp::Mul(
                                                                                        Star,
                                                                                    ),
                                                                                    right: Expr::Lit {
                                                                                        attrs: [],
                                                                                        lit: Lit::Int {
                                                                                            token: 2,
                                                                                        },
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                        diverge: None,
                                                                    },
                                                                ),
                                                                semi_token: Semi,
                                                            },
                                                            Stmt::Expr(
                                                                Expr::Call {
                                                                    attrs: [],
                                                                    func: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: ptr,
                                                                                        span: bytes(85181..85184),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                                PathSep,
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: copy_nonoverlapping,
                                                                                        span: bytes(85186..85205),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    paren_token: Paren,
                                                                    args: [
                                                                        Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: d,
                                                                                            span: bytes(85206..85207),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        Comma,
                                                                        Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: result,
                                                                                            span: bytes(85209..85215),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        Comma,
                                                                        Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Int {
                                                                                token: 2,
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                                Some(
                                                                    Semi,
                                                                ),
                                                            ),
                                                            Stmt::Expr(
                                                                Expr::Binary {
                                                                    attrs: [],
                                                                    left: Expr::Cast {
                                                                        attrs: [],
                                                                        expr: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: sign,
                                                                                            span: bytes(85229..85233),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        as_token: As,
                                                                        ty: Type::Path {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: usize,
                                                                                            span: bytes(85237..85242),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                    op: BinOp::Add(
                                                                        Plus,
                                                                    ),
                                                                    right: Expr::Lit {
                                                                        attrs: [],
                                                                        lit: Lit::Int {
                                                                            token: 2,
                                                                        },
                                                                    },
                                                                },
                                                                None,
                                                            ),
                                                        ],
                                                    },
                                                    else_branch: Some(
                                                        (
                                                            Else,
                                                            Expr::Block {
                                                                attrs: [],
                                                                label: None,
                                                                block: Block {
                                                                    brace_token: Brace,
                                                                    stmts: [
                                                                        Stmt::Expr(
                                                                            Expr::Assign {
                                                                                attrs: [],
                                                                                left: Expr::Unary {
                                                                                    attrs: [],
                                                                                    op: UnOp::Deref(
                                                                                        Star,
                                                                                    ),
                                                                                    expr: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: result,
                                                                                                        span: bytes(85269..85275),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                },
                                                                                eq_token: Eq,
                                                                                right: Expr::Binary {
                                                                                    attrs: [],
                                                                                    left: Expr::Lit {
                                                                                        attrs: [],
                                                                                        lit: Lit::Byte {
                                                                                            token: b'0',
                                                                                        },
                                                                                    },
                                                                                    op: BinOp::Add(
                                                                                        Plus,
                                                                                    ),
                                                                                    right: Expr::Cast {
                                                                                        attrs: [],
                                                                                        expr: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: k,
                                                                                                            span: bytes(85285..85286),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        as_token: As,
                                                                                        ty: Type::Path {
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: u8,
                                                                                                            span: bytes(85290..85292),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                },
                                                                            },
                                                                            Some(
                                                                                Semi,
                                                                            ),
                                                                        ),
                                                                        Stmt::Expr(
                                                                            Expr::Binary {
                                                                                attrs: [],
                                                                                left: Expr::Cast {
                                                                                    attrs: [],
                                                                                    expr: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: sign,
                                                                                                        span: bytes(85302..85306),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    as_token: As,
                                                                                    ty: Type::Path {
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: usize,
                                                                                                        span: bytes(85310..85315),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                },
                                                                                op: BinOp::Add(
                                                                                    Plus,
                                                                                ),
                                                                                right: Expr::Lit {
                                                                                    attrs: [],
                                                                                    lit: Lit::Int {
                                                                                        token: 1,
                                                                                    },
                                                                                },
                                                                            },
                                                                            None,
                                                                        ),
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                    ),
                                                },
                                            ),
                                        ),
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: PubT,
            },
        ),
    },
    "ryu::d2s::d2d": FnData {
        fn_name: "d2d",
        complete_fn_name: "ryu::d2s::d2d",
        fn_type: Fn(
            FnItem {
                fn_name: Name {
                    name: "d2d",
                    complete_name: "ryu::d2s::d2d",
                    import_name: MyPath {
                        name: "ryu",
                        next: Some(
                            MyPath {
                                name: "d2s",
                                next: Some(
                                    MyPath {
                                        name: "d2d",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "d2d",
                item: Some(
                    ItemFn {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::List {
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: cfg_attr,
                                                    span: bytes(14979..14987),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                    delimiter: MacroDelimiter::Paren(
                                        Paren,
                                    ),
                                    tokens: TokenStream [
                                        Ident {
                                            sym: feature,
                                            span: bytes(14988..14995),
                                        },
                                        Punct {
                                            char: '=',
                                            spacing: Alone,
                                            span: bytes(14996..14997),
                                        },
                                        Literal {
                                            lit: "no-panic",
                                            span: bytes(14998..15008),
                                        },
                                        Punct {
                                            char: ',',
                                            spacing: Alone,
                                            span: bytes(15008..15009),
                                        },
                                        Ident {
                                            sym: inline,
                                            span: bytes(15010..15016),
                                        },
                                    ],
                                },
                            },
                        ],
                        vis: Visibility::Public(
                            Pub,
                        ),
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: d2d,
                                span: bytes(15026..15029),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: ieee_mantissa,
                                                span: bytes(15030..15043),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u64,
                                                            span: bytes(15045..15048),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                                Comma,
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: ieee_exponent,
                                                span: bytes(15050..15063),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u32,
                                                            span: bytes(15065..15068),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: FloatingDecimal64,
                                                    span: bytes(15073..15090),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Tuple {
                                        attrs: [],
                                        paren_token: Paren,
                                        elems: [
                                            Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: None,
                                                ident: Ident {
                                                    sym: e2,
                                                    span: bytes(15102..15104),
                                                },
                                                subpat: None,
                                            },
                                            Comma,
                                            Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: None,
                                                ident: Ident {
                                                    sym: m2,
                                                    span: bytes(15106..15108),
                                                },
                                                subpat: None,
                                            },
                                        ],
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::If {
                                                attrs: [],
                                                if_token: If,
                                                cond: Expr::Binary {
                                                    attrs: [],
                                                    left: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: ieee_exponent,
                                                                        span: bytes(15115..15128),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    op: BinOp::Eq(
                                                        EqEq,
                                                    ),
                                                    right: Expr::Lit {
                                                        attrs: [],
                                                        lit: Lit::Int {
                                                            token: 0,
                                                        },
                                                    },
                                                },
                                                then_branch: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::Tuple {
                                                                attrs: [],
                                                                paren_token: Paren,
                                                                elems: [
                                                                    Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Binary {
                                                                            attrs: [],
                                                                            left: Expr::Binary {
                                                                                attrs: [],
                                                                                left: Expr::Lit {
                                                                                    attrs: [],
                                                                                    lit: Lit::Int {
                                                                                        token: 1,
                                                                                    },
                                                                                },
                                                                                op: BinOp::Sub(
                                                                                    Minus,
                                                                                ),
                                                                                right: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: DOUBLE_BIAS,
                                                                                                    span: bytes(15245..15256),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            },
                                                                            op: BinOp::Sub(
                                                                                Minus,
                                                                            ),
                                                                            right: Expr::Cast {
                                                                                attrs: [],
                                                                                expr: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: DOUBLE_MANTISSA_BITS,
                                                                                                    span: bytes(15259..15279),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                as_token: As,
                                                                                ty: Type::Path {
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: i32,
                                                                                                    span: bytes(15283..15286),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            },
                                                                        },
                                                                        op: BinOp::Sub(
                                                                            Minus,
                                                                        ),
                                                                        right: Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Int {
                                                                                token: 2,
                                                                            },
                                                                        },
                                                                    },
                                                                    Comma,
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: ieee_mantissa,
                                                                                        span: bytes(15304..15317),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    Comma,
                                                                ],
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                                else_branch: Some(
                                                    (
                                                        Else,
                                                        Expr::Block {
                                                            attrs: [],
                                                            label: None,
                                                            block: Block {
                                                                brace_token: Brace,
                                                                stmts: [
                                                                    Stmt::Expr(
                                                                        Expr::Tuple {
                                                                            attrs: [],
                                                                            paren_token: Paren,
                                                                            elems: [
                                                                                Expr::Binary {
                                                                                    attrs: [],
                                                                                    left: Expr::Binary {
                                                                                        attrs: [],
                                                                                        left: Expr::Binary {
                                                                                            attrs: [],
                                                                                            left: Expr::Cast {
                                                                                                attrs: [],
                                                                                                expr: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: ieee_exponent,
                                                                                                                    span: bytes(15364..15377),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                as_token: As,
                                                                                                ty: Type::Path {
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: i32,
                                                                                                                    span: bytes(15381..15384),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                            op: BinOp::Sub(
                                                                                                Minus,
                                                                                            ),
                                                                                            right: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: DOUBLE_BIAS,
                                                                                                                span: bytes(15387..15398),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                        op: BinOp::Sub(
                                                                                            Minus,
                                                                                        ),
                                                                                        right: Expr::Cast {
                                                                                            attrs: [],
                                                                                            expr: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: DOUBLE_MANTISSA_BITS,
                                                                                                                span: bytes(15401..15421),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            as_token: As,
                                                                                            ty: Type::Path {
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: i32,
                                                                                                                span: bytes(15425..15428),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                    op: BinOp::Sub(
                                                                                        Minus,
                                                                                    ),
                                                                                    right: Expr::Lit {
                                                                                        attrs: [],
                                                                                        lit: Lit::Int {
                                                                                            token: 2,
                                                                                        },
                                                                                    },
                                                                                },
                                                                                Comma,
                                                                                Expr::Binary {
                                                                                    attrs: [],
                                                                                    left: Expr::Paren {
                                                                                        attrs: [],
                                                                                        paren_token: Paren,
                                                                                        expr: Expr::Binary {
                                                                                            attrs: [],
                                                                                            left: Expr::Lit {
                                                                                                attrs: [],
                                                                                                lit: Lit::Int {
                                                                                                    token: 1u64,
                                                                                                },
                                                                                            },
                                                                                            op: BinOp::Shl(
                                                                                                Shl,
                                                                                            ),
                                                                                            right: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: DOUBLE_MANTISSA_BITS,
                                                                                                                span: bytes(15455..15475),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                    op: BinOp::BitOr(
                                                                                        Or,
                                                                                    ),
                                                                                    right: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: ieee_mantissa,
                                                                                                        span: bytes(15479..15492),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                },
                                                                                Comma,
                                                                            ],
                                                                        },
                                                                        None,
                                                                    ),
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                ),
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: even,
                                            span: bytes(15519..15523),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Binary {
                                                attrs: [],
                                                left: Expr::Paren {
                                                    attrs: [],
                                                    paren_token: Paren,
                                                    expr: Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: m2,
                                                                            span: bytes(15527..15529),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        op: BinOp::BitAnd(
                                                            And,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 1,
                                                            },
                                                        },
                                                    },
                                                },
                                                op: BinOp::Eq(
                                                    EqEq,
                                                ),
                                                right: Expr::Lit {
                                                    attrs: [],
                                                    lit: Lit::Int {
                                                        token: 0,
                                                    },
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: accept_bounds,
                                            span: bytes(15549..15562),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: even,
                                                                span: bytes(15565..15569),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: mv,
                                            span: bytes(15652..15654),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Binary {
                                                attrs: [],
                                                left: Expr::Lit {
                                                    attrs: [],
                                                    lit: Lit::Int {
                                                        token: 4,
                                                    },
                                                },
                                                op: BinOp::Mul(
                                                    Star,
                                                ),
                                                right: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: m2,
                                                                    span: bytes(15661..15663),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: mm_shift,
                                            span: bytes(15736..15744),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Cast {
                                                attrs: [],
                                                expr: Expr::Paren {
                                                    attrs: [],
                                                    paren_token: Paren,
                                                    expr: Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Binary {
                                                            attrs: [],
                                                            left: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: ieee_mantissa,
                                                                                span: bytes(15748..15761),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            op: BinOp::Ne(
                                                                Ne,
                                                            ),
                                                            right: Expr::Lit {
                                                                attrs: [],
                                                                lit: Lit::Int {
                                                                    token: 0,
                                                                },
                                                            },
                                                        },
                                                        op: BinOp::Or(
                                                            OrOr,
                                                        ),
                                                        right: Expr::Binary {
                                                            attrs: [],
                                                            left: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: ieee_exponent,
                                                                                span: bytes(15770..15783),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            op: BinOp::Le(
                                                                Le,
                                                            ),
                                                            right: Expr::Lit {
                                                                attrs: [],
                                                                lit: Lit::Int {
                                                                    token: 1,
                                                                },
                                                            },
                                                        },
                                                    },
                                                },
                                                as_token: As,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u32,
                                                                    span: bytes(15793..15796),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Type {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            ident: Ident {
                                                sym: vr,
                                                span: bytes(16002..16004),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u64,
                                                            span: bytes(16006..16009),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                    init: None,
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Type {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            ident: Ident {
                                                sym: vp,
                                                span: bytes(16023..16025),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u64,
                                                            span: bytes(16027..16030),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                    init: None,
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Type {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            ident: Ident {
                                                sym: vm,
                                                span: bytes(16044..16046),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u64,
                                                            span: bytes(16048..16051),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                    init: None,
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Type {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            ident: Ident {
                                                sym: vp_uninit,
                                                span: bytes(16065..16074),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: MaybeUninit,
                                                            span: bytes(16076..16087),
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: None,
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Type(
                                                                    Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: u64,
                                                                                        span: bytes(16088..16091),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Call {
                                                attrs: [],
                                                func: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: MaybeUninit,
                                                                    span: bytes(16095..16106),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: uninit,
                                                                    span: bytes(16108..16114),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                paren_token: Paren,
                                                args: [],
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Type {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            ident: Ident {
                                                sym: vm_uninit,
                                                span: bytes(16130..16139),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: MaybeUninit,
                                                            span: bytes(16141..16152),
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: None,
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Type(
                                                                    Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: u64,
                                                                                        span: bytes(16153..16156),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Call {
                                                attrs: [],
                                                func: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: MaybeUninit,
                                                                    span: bytes(16160..16171),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: uninit,
                                                                    span: bytes(16173..16179),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                paren_token: Paren,
                                                args: [],
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Type {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: e10,
                                                span: bytes(16191..16194),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: i32,
                                                            span: bytes(16196..16199),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                    init: None,
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: Some(
                                            Mut,
                                        ),
                                        ident: Ident {
                                            sym: vm_is_trailing_zeros,
                                            span: bytes(16213..16233),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Lit {
                                                attrs: [],
                                                lit: Lit::Bool {
                                                    value: false,
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: Some(
                                            Mut,
                                        ),
                                        ident: Ident {
                                            sym: vr_is_trailing_zeros,
                                            span: bytes(16255..16275),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Lit {
                                                attrs: [],
                                                lit: Lit::Bool {
                                                    value: false,
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Expr(
                                    Expr::If {
                                        attrs: [],
                                        if_token: If,
                                        cond: Expr::Binary {
                                            attrs: [],
                                            left: Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: e2,
                                                                span: bytes(16292..16294),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            op: BinOp::Ge(
                                                Ge,
                                            ),
                                            right: Expr::Lit {
                                                attrs: [],
                                                lit: Lit::Int {
                                                    token: 0,
                                                },
                                            },
                                        },
                                        then_branch: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: q,
                                                            span: bytes(16475..16476),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Call {
                                                                    attrs: [],
                                                                    func: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: log10_pow2,
                                                                                        span: bytes(16479..16489),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    paren_token: Paren,
                                                                    args: [
                                                                        Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: e2,
                                                                                            span: bytes(16490..16492),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                                op: BinOp::Sub(
                                                                    Minus,
                                                                ),
                                                                right: Expr::Cast {
                                                                    attrs: [],
                                                                    expr: Expr::Paren {
                                                                        attrs: [],
                                                                        paren_token: Paren,
                                                                        expr: Expr::Binary {
                                                                            attrs: [],
                                                                            left: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: e2,
                                                                                                span: bytes(16497..16499),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            op: BinOp::Gt(
                                                                                Gt,
                                                                            ),
                                                                            right: Expr::Lit {
                                                                                attrs: [],
                                                                                lit: Lit::Int {
                                                                                    token: 3,
                                                                                },
                                                                            },
                                                                        },
                                                                    },
                                                                    as_token: As,
                                                                    ty: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: u32,
                                                                                        span: bytes(16508..16511),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Expr(
                                                    Expr::Assign {
                                                        attrs: [],
                                                        left: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: e10,
                                                                            span: bytes(16521..16524),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        eq_token: Eq,
                                                        right: Expr::Cast {
                                                            attrs: [],
                                                            expr: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: q,
                                                                                span: bytes(16527..16528),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            as_token: As,
                                                            ty: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: i32,
                                                                                span: bytes(16532..16535),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: k,
                                                            span: bytes(16549..16550),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Binary {
                                                                    attrs: [],
                                                                    left: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: DOUBLE_POW5_INV_BITCOUNT,
                                                                                        span: bytes(16553..16577),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    op: BinOp::Add(
                                                                        Plus,
                                                                    ),
                                                                    right: Expr::Call {
                                                                        attrs: [],
                                                                        func: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: pow5bits,
                                                                                            span: bytes(16580..16588),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        paren_token: Paren,
                                                                        args: [
                                                                            Expr::Cast {
                                                                                attrs: [],
                                                                                expr: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: q,
                                                                                                    span: bytes(16589..16590),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                as_token: As,
                                                                                ty: Type::Path {
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: i32,
                                                                                                    span: bytes(16594..16597),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                op: BinOp::Sub(
                                                                    Minus,
                                                                ),
                                                                right: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 1,
                                                                    },
                                                                },
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: i,
                                                            span: bytes(16616..16617),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Binary {
                                                                    attrs: [],
                                                                    left: Expr::Unary {
                                                                        attrs: [],
                                                                        op: UnOp::Neg(
                                                                            Minus,
                                                                        ),
                                                                        expr: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: e2,
                                                                                            span: bytes(16621..16623),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                    op: BinOp::Add(
                                                                        Plus,
                                                                    ),
                                                                    right: Expr::Cast {
                                                                        attrs: [],
                                                                        expr: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: q,
                                                                                            span: bytes(16626..16627),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        as_token: As,
                                                                        ty: Type::Path {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: i32,
                                                                                            span: bytes(16631..16634),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                },
                                                                op: BinOp::Add(
                                                                    Plus,
                                                                ),
                                                                right: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: k,
                                                                                    span: bytes(16637..16638),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Expr(
                                                    Expr::Assign {
                                                        attrs: [],
                                                        left: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: vr,
                                                                            span: bytes(16648..16650),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        eq_token: Eq,
                                                        right: Expr::Unsafe {
                                                            attrs: [],
                                                            unsafe_token: Unsafe,
                                                            block: Block {
                                                                brace_token: Brace,
                                                                stmts: [
                                                                    Stmt::Expr(
                                                                        Expr::Call {
                                                                            attrs: [],
                                                                            func: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: mul_shift_all_64,
                                                                                                span: bytes(16674..16690),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            paren_token: Paren,
                                                                            args: [
                                                                                Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: m2,
                                                                                                    span: bytes(16708..16710),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                Comma,
                                                                                Expr::Reference {
                                                                                    attrs: [
                                                                                        Attribute {
                                                                                            pound_token: Pound,
                                                                                            style: AttrStyle::Outer,
                                                                                            bracket_token: Bracket,
                                                                                            meta: Meta::List {
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: cfg,
                                                                                                                span: bytes(16730..16733),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                                delimiter: MacroDelimiter::Paren(
                                                                                                    Paren,
                                                                                                ),
                                                                                                tokens: TokenStream [
                                                                                                    Ident {
                                                                                                        sym: feature,
                                                                                                        span: bytes(16734..16741),
                                                                                                    },
                                                                                                    Punct {
                                                                                                        char: '=',
                                                                                                        spacing: Alone,
                                                                                                        span: bytes(16742..16743),
                                                                                                    },
                                                                                                    Literal {
                                                                                                        lit: "small",
                                                                                                        span: bytes(16744..16751),
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    ],
                                                                                    and_token: And,
                                                                                    mutability: None,
                                                                                    expr: Expr::Call {
                                                                                        attrs: [],
                                                                                        func: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: compute_inv_pow5,
                                                                                                            span: bytes(16771..16787),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        paren_token: Paren,
                                                                                        args: [
                                                                                            Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: q,
                                                                                                                span: bytes(16788..16789),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                Comma,
                                                                                Expr::Block {
                                                                                    attrs: [
                                                                                        Attribute {
                                                                                            pound_token: Pound,
                                                                                            style: AttrStyle::Outer,
                                                                                            bracket_token: Bracket,
                                                                                            meta: Meta::List {
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: cfg,
                                                                                                                span: bytes(16810..16813),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                                delimiter: MacroDelimiter::Paren(
                                                                                                    Paren,
                                                                                                ),
                                                                                                tokens: TokenStream [
                                                                                                    Ident {
                                                                                                        sym: not,
                                                                                                        span: bytes(16814..16817),
                                                                                                    },
                                                                                                    Group {
                                                                                                        delimiter: Parenthesis,
                                                                                                        stream: TokenStream [
                                                                                                            Ident {
                                                                                                                sym: feature,
                                                                                                                span: bytes(16818..16825),
                                                                                                            },
                                                                                                            Punct {
                                                                                                                char: '=',
                                                                                                                spacing: Alone,
                                                                                                                span: bytes(16826..16827),
                                                                                                            },
                                                                                                            Literal {
                                                                                                                lit: "small",
                                                                                                                span: bytes(16828..16835),
                                                                                                            },
                                                                                                        ],
                                                                                                        span: bytes(16817..16836),
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    ],
                                                                                    label: None,
                                                                                    block: Block {
                                                                                        brace_token: Brace,
                                                                                        stmts: [
                                                                                            Stmt::Macro {
                                                                                                attrs: [],
                                                                                                mac: Macro {
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: debug_assert,
                                                                                                                    span: bytes(16877..16889),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                    bang_token: Not,
                                                                                                    delimiter: MacroDelimiter::Paren(
                                                                                                        Paren,
                                                                                                    ),
                                                                                                    tokens: TokenStream [
                                                                                                        Ident {
                                                                                                            sym: q,
                                                                                                            span: bytes(16891..16892),
                                                                                                        },
                                                                                                        Punct {
                                                                                                            char: '<',
                                                                                                            spacing: Alone,
                                                                                                            span: bytes(16893..16894),
                                                                                                        },
                                                                                                        Ident {
                                                                                                            sym: DOUBLE_POW5_INV_SPLIT,
                                                                                                            span: bytes(16895..16916),
                                                                                                        },
                                                                                                        Punct {
                                                                                                            char: '.',
                                                                                                            spacing: Alone,
                                                                                                            span: bytes(16916..16917),
                                                                                                        },
                                                                                                        Ident {
                                                                                                            sym: len,
                                                                                                            span: bytes(16917..16920),
                                                                                                        },
                                                                                                        Group {
                                                                                                            delimiter: Parenthesis,
                                                                                                            stream: TokenStream [],
                                                                                                            span: bytes(16920..16922),
                                                                                                        },
                                                                                                        Ident {
                                                                                                            sym: as,
                                                                                                            span: bytes(16923..16925),
                                                                                                        },
                                                                                                        Ident {
                                                                                                            sym: u32,
                                                                                                            span: bytes(16926..16929),
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                                semi_token: Some(
                                                                                                    Semi,
                                                                                                ),
                                                                                            },
                                                                                            Stmt::Expr(
                                                                                                Expr::MethodCall {
                                                                                                    attrs: [],
                                                                                                    receiver: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: DOUBLE_POW5_INV_SPLIT,
                                                                                                                        span: bytes(16952..16973),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    dot_token: Dot,
                                                                                                    method: Ident {
                                                                                                        sym: get_unchecked,
                                                                                                        span: bytes(16974..16987),
                                                                                                    },
                                                                                                    turbofish: None,
                                                                                                    paren_token: Paren,
                                                                                                    args: [
                                                                                                        Expr::Cast {
                                                                                                            attrs: [],
                                                                                                            expr: Expr::Path {
                                                                                                                attrs: [],
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: q,
                                                                                                                                span: bytes(16988..16989),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                            as_token: As,
                                                                                                            ty: Type::Path {
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: usize,
                                                                                                                                span: bytes(16993..16998),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                                None,
                                                                                            ),
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                Comma,
                                                                                Expr::Cast {
                                                                                    attrs: [],
                                                                                    expr: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: i,
                                                                                                        span: bytes(17035..17036),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    as_token: As,
                                                                                    ty: Type::Path {
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: u32,
                                                                                                        span: bytes(17040..17043),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                },
                                                                                Comma,
                                                                                Expr::MethodCall {
                                                                                    attrs: [],
                                                                                    receiver: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: vp_uninit,
                                                                                                        span: bytes(17061..17070),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    dot_token: Dot,
                                                                                    method: Ident {
                                                                                        sym: as_mut_ptr,
                                                                                        span: bytes(17071..17081),
                                                                                    },
                                                                                    turbofish: None,
                                                                                    paren_token: Paren,
                                                                                    args: [],
                                                                                },
                                                                                Comma,
                                                                                Expr::MethodCall {
                                                                                    attrs: [],
                                                                                    receiver: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: vm_uninit,
                                                                                                        span: bytes(17101..17110),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    dot_token: Dot,
                                                                                    method: Ident {
                                                                                        sym: as_mut_ptr,
                                                                                        span: bytes(17111..17121),
                                                                                    },
                                                                                    turbofish: None,
                                                                                    paren_token: Paren,
                                                                                    args: [],
                                                                                },
                                                                                Comma,
                                                                                Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: mm_shift,
                                                                                                    span: bytes(17141..17149),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                Comma,
                                                                            ],
                                                                        },
                                                                        None,
                                                                    ),
                                                                ],
                                                            },
                                                        },
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                                Stmt::Expr(
                                                    Expr::Assign {
                                                        attrs: [],
                                                        left: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: vp,
                                                                            span: bytes(17184..17186),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        eq_token: Eq,
                                                        right: Expr::Unsafe {
                                                            attrs: [],
                                                            unsafe_token: Unsafe,
                                                            block: Block {
                                                                brace_token: Brace,
                                                                stmts: [
                                                                    Stmt::Expr(
                                                                        Expr::MethodCall {
                                                                            attrs: [],
                                                                            receiver: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: vp_uninit,
                                                                                                span: bytes(17198..17207),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            dot_token: Dot,
                                                                            method: Ident {
                                                                                sym: assume_init,
                                                                                span: bytes(17208..17219),
                                                                            },
                                                                            turbofish: None,
                                                                            paren_token: Paren,
                                                                            args: [],
                                                                        },
                                                                        None,
                                                                    ),
                                                                ],
                                                            },
                                                        },
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                                Stmt::Expr(
                                                    Expr::Assign {
                                                        attrs: [],
                                                        left: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: vm,
                                                                            span: bytes(17233..17235),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        eq_token: Eq,
                                                        right: Expr::Unsafe {
                                                            attrs: [],
                                                            unsafe_token: Unsafe,
                                                            block: Block {
                                                                brace_token: Brace,
                                                                stmts: [
                                                                    Stmt::Expr(
                                                                        Expr::MethodCall {
                                                                            attrs: [],
                                                                            receiver: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: vm_uninit,
                                                                                                span: bytes(17247..17256),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            dot_token: Dot,
                                                                            method: Ident {
                                                                                sym: assume_init,
                                                                                span: bytes(17257..17268),
                                                                            },
                                                                            turbofish: None,
                                                                            paren_token: Paren,
                                                                            args: [],
                                                                        },
                                                                        None,
                                                                    ),
                                                                ],
                                                            },
                                                        },
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                                Stmt::Expr(
                                                    Expr::If {
                                                        attrs: [],
                                                        if_token: If,
                                                        cond: Expr::Binary {
                                                            attrs: [],
                                                            left: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: q,
                                                                                span: bytes(17285..17286),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            op: BinOp::Le(
                                                                Le,
                                                            ),
                                                            right: Expr::Lit {
                                                                attrs: [],
                                                                lit: Lit::Int {
                                                                    token: 21,
                                                                },
                                                            },
                                                        },
                                                        then_branch: Block {
                                                            brace_token: Brace,
                                                            stmts: [
                                                                Stmt::Local {
                                                                    attrs: [],
                                                                    let_token: Let,
                                                                    pat: Pat::Ident {
                                                                        attrs: [],
                                                                        by_ref: None,
                                                                        mutability: None,
                                                                        ident: Ident {
                                                                            sym: mv_mod5,
                                                                            span: bytes(17549..17556),
                                                                        },
                                                                        subpat: None,
                                                                    },
                                                                    init: Some(
                                                                        LocalInit {
                                                                            eq_token: Eq,
                                                                            expr: Expr::MethodCall {
                                                                                attrs: [],
                                                                                receiver: Expr::Paren {
                                                                                    attrs: [],
                                                                                    paren_token: Paren,
                                                                                    expr: Expr::Cast {
                                                                                        attrs: [],
                                                                                        expr: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: mv,
                                                                                                            span: bytes(17560..17562),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        as_token: As,
                                                                                        ty: Type::Path {
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: u32,
                                                                                                            span: bytes(17566..17569),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                },
                                                                                dot_token: Dot,
                                                                                method: Ident {
                                                                                    sym: wrapping_sub,
                                                                                    span: bytes(17571..17583),
                                                                                },
                                                                                turbofish: None,
                                                                                paren_token: Paren,
                                                                                args: [
                                                                                    Expr::MethodCall {
                                                                                        attrs: [],
                                                                                        receiver: Expr::Lit {
                                                                                            attrs: [],
                                                                                            lit: Lit::Int {
                                                                                                token: 5u32,
                                                                                            },
                                                                                        },
                                                                                        dot_token: Dot,
                                                                                        method: Ident {
                                                                                            sym: wrapping_mul,
                                                                                            span: bytes(17589..17601),
                                                                                        },
                                                                                        turbofish: None,
                                                                                        paren_token: Paren,
                                                                                        args: [
                                                                                            Expr::Cast {
                                                                                                attrs: [],
                                                                                                expr: Expr::Call {
                                                                                                    attrs: [],
                                                                                                    func: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: div5,
                                                                                                                        span: bytes(17602..17606),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    paren_token: Paren,
                                                                                                    args: [
                                                                                                        Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: mv,
                                                                                                                            span: bytes(17607..17609),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                                as_token: As,
                                                                                                ty: Type::Path {
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: u32,
                                                                                                                    span: bytes(17614..17617),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                ],
                                                                            },
                                                                            diverge: None,
                                                                        },
                                                                    ),
                                                                    semi_token: Semi,
                                                                },
                                                                Stmt::Expr(
                                                                    Expr::If {
                                                                        attrs: [],
                                                                        if_token: If,
                                                                        cond: Expr::Binary {
                                                                            attrs: [],
                                                                            left: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: mv_mod5,
                                                                                                span: bytes(17636..17643),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            op: BinOp::Eq(
                                                                                EqEq,
                                                                            ),
                                                                            right: Expr::Lit {
                                                                                attrs: [],
                                                                                lit: Lit::Int {
                                                                                    token: 0,
                                                                                },
                                                                            },
                                                                        },
                                                                        then_branch: Block {
                                                                            brace_token: Brace,
                                                                            stmts: [
                                                                                Stmt::Expr(
                                                                                    Expr::Assign {
                                                                                        attrs: [],
                                                                                        left: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: vr_is_trailing_zeros,
                                                                                                            span: bytes(17667..17687),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        eq_token: Eq,
                                                                                        right: Expr::Call {
                                                                                            attrs: [],
                                                                                            func: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: multiple_of_power_of_5,
                                                                                                                span: bytes(17690..17712),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            paren_token: Paren,
                                                                                            args: [
                                                                                                Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: mv,
                                                                                                                    span: bytes(17713..17715),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                Comma,
                                                                                                Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: q,
                                                                                                                    span: bytes(17717..17718),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    Some(
                                                                                        Semi,
                                                                                    ),
                                                                                ),
                                                                            ],
                                                                        },
                                                                        else_branch: Some(
                                                                            (
                                                                                Else,
                                                                                Expr::If {
                                                                                    attrs: [],
                                                                                    if_token: If,
                                                                                    cond: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: accept_bounds,
                                                                                                        span: bytes(17743..17756),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    then_branch: Block {
                                                                                        brace_token: Brace,
                                                                                        stmts: [
                                                                                            Stmt::Expr(
                                                                                                Expr::Assign {
                                                                                                    attrs: [],
                                                                                                    left: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: vm_is_trailing_zeros,
                                                                                                                        span: bytes(17979..17999),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    eq_token: Eq,
                                                                                                    right: Expr::Call {
                                                                                                        attrs: [],
                                                                                                        func: Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: multiple_of_power_of_5,
                                                                                                                            span: bytes(18002..18024),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                        paren_token: Paren,
                                                                                                        args: [
                                                                                                            Expr::Binary {
                                                                                                                attrs: [],
                                                                                                                left: Expr::Binary {
                                                                                                                    attrs: [],
                                                                                                                    left: Expr::Path {
                                                                                                                        attrs: [],
                                                                                                                        qself: None,
                                                                                                                        path: Path {
                                                                                                                            leading_colon: None,
                                                                                                                            segments: [
                                                                                                                                PathSegment {
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: mv,
                                                                                                                                        span: bytes(18025..18027),
                                                                                                                                    },
                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                },
                                                                                                                            ],
                                                                                                                        },
                                                                                                                    },
                                                                                                                    op: BinOp::Sub(
                                                                                                                        Minus,
                                                                                                                    ),
                                                                                                                    right: Expr::Lit {
                                                                                                                        attrs: [],
                                                                                                                        lit: Lit::Int {
                                                                                                                            token: 1,
                                                                                                                        },
                                                                                                                    },
                                                                                                                },
                                                                                                                op: BinOp::Sub(
                                                                                                                    Minus,
                                                                                                                ),
                                                                                                                right: Expr::Cast {
                                                                                                                    attrs: [],
                                                                                                                    expr: Expr::Path {
                                                                                                                        attrs: [],
                                                                                                                        qself: None,
                                                                                                                        path: Path {
                                                                                                                            leading_colon: None,
                                                                                                                            segments: [
                                                                                                                                PathSegment {
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: mm_shift,
                                                                                                                                        span: bytes(18034..18042),
                                                                                                                                    },
                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                },
                                                                                                                            ],
                                                                                                                        },
                                                                                                                    },
                                                                                                                    as_token: As,
                                                                                                                    ty: Type::Path {
                                                                                                                        qself: None,
                                                                                                                        path: Path {
                                                                                                                            leading_colon: None,
                                                                                                                            segments: [
                                                                                                                                PathSegment {
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: u64,
                                                                                                                                        span: bytes(18046..18049),
                                                                                                                                    },
                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                },
                                                                                                                            ],
                                                                                                                        },
                                                                                                                    },
                                                                                                                },
                                                                                                            },
                                                                                                            Comma,
                                                                                                            Expr::Path {
                                                                                                                attrs: [],
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: q,
                                                                                                                                span: bytes(18051..18052),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                Some(
                                                                                                    Semi,
                                                                                                ),
                                                                                            ),
                                                                                        ],
                                                                                    },
                                                                                    else_branch: Some(
                                                                                        (
                                                                                            Else,
                                                                                            Expr::Block {
                                                                                                attrs: [],
                                                                                                label: None,
                                                                                                block: Block {
                                                                                                    brace_token: Brace,
                                                                                                    stmts: [
                                                                                                        Stmt::Expr(
                                                                                                            Expr::Binary {
                                                                                                                attrs: [],
                                                                                                                left: Expr::Path {
                                                                                                                    attrs: [],
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: vp,
                                                                                                                                    span: bytes(18154..18156),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                                op: BinOp::SubAssign(
                                                                                                                    MinusEq,
                                                                                                                ),
                                                                                                                right: Expr::Cast {
                                                                                                                    attrs: [],
                                                                                                                    expr: Expr::Call {
                                                                                                                        attrs: [],
                                                                                                                        func: Expr::Path {
                                                                                                                            attrs: [],
                                                                                                                            qself: None,
                                                                                                                            path: Path {
                                                                                                                                leading_colon: None,
                                                                                                                                segments: [
                                                                                                                                    PathSegment {
                                                                                                                                        ident: Ident {
                                                                                                                                            sym: multiple_of_power_of_5,
                                                                                                                                            span: bytes(18160..18182),
                                                                                                                                        },
                                                                                                                                        arguments: PathArguments::None,
                                                                                                                                    },
                                                                                                                                ],
                                                                                                                            },
                                                                                                                        },
                                                                                                                        paren_token: Paren,
                                                                                                                        args: [
                                                                                                                            Expr::Binary {
                                                                                                                                attrs: [],
                                                                                                                                left: Expr::Path {
                                                                                                                                    attrs: [],
                                                                                                                                    qself: None,
                                                                                                                                    path: Path {
                                                                                                                                        leading_colon: None,
                                                                                                                                        segments: [
                                                                                                                                            PathSegment {
                                                                                                                                                ident: Ident {
                                                                                                                                                    sym: mv,
                                                                                                                                                    span: bytes(18183..18185),
                                                                                                                                                },
                                                                                                                                                arguments: PathArguments::None,
                                                                                                                                            },
                                                                                                                                        ],
                                                                                                                                    },
                                                                                                                                },
                                                                                                                                op: BinOp::Add(
                                                                                                                                    Plus,
                                                                                                                                ),
                                                                                                                                right: Expr::Lit {
                                                                                                                                    attrs: [],
                                                                                                                                    lit: Lit::Int {
                                                                                                                                        token: 2,
                                                                                                                                    },
                                                                                                                                },
                                                                                                                            },
                                                                                                                            Comma,
                                                                                                                            Expr::Path {
                                                                                                                                attrs: [],
                                                                                                                                qself: None,
                                                                                                                                path: Path {
                                                                                                                                    leading_colon: None,
                                                                                                                                    segments: [
                                                                                                                                        PathSegment {
                                                                                                                                            ident: Ident {
                                                                                                                                                sym: q,
                                                                                                                                                span: bytes(18191..18192),
                                                                                                                                            },
                                                                                                                                            arguments: PathArguments::None,
                                                                                                                                        },
                                                                                                                                    ],
                                                                                                                                },
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                    as_token: As,
                                                                                                                    ty: Type::Path {
                                                                                                                        qself: None,
                                                                                                                        path: Path {
                                                                                                                            leading_colon: None,
                                                                                                                            segments: [
                                                                                                                                PathSegment {
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: u64,
                                                                                                                                        span: bytes(18197..18200),
                                                                                                                                    },
                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                },
                                                                                                                            ],
                                                                                                                        },
                                                                                                                    },
                                                                                                                },
                                                                                                            },
                                                                                                            Some(
                                                                                                                Semi,
                                                                                                            ),
                                                                                                        ),
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                        ),
                                                                                    ),
                                                                                },
                                                                            ),
                                                                        ),
                                                                    },
                                                                    None,
                                                                ),
                                                            ],
                                                        },
                                                        else_branch: None,
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                        else_branch: Some(
                                            (
                                                Else,
                                                Expr::Block {
                                                    attrs: [],
                                                    label: None,
                                                    block: Block {
                                                        brace_token: Brace,
                                                        stmts: [
                                                            Stmt::Local {
                                                                attrs: [],
                                                                let_token: Let,
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: q,
                                                                        span: bytes(18331..18332),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                init: Some(
                                                                    LocalInit {
                                                                        eq_token: Eq,
                                                                        expr: Expr::Binary {
                                                                            attrs: [],
                                                                            left: Expr::Call {
                                                                                attrs: [],
                                                                                func: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: log10_pow5,
                                                                                                    span: bytes(18335..18345),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                paren_token: Paren,
                                                                                args: [
                                                                                    Expr::Unary {
                                                                                        attrs: [],
                                                                                        op: UnOp::Neg(
                                                                                            Minus,
                                                                                        ),
                                                                                        expr: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: e2,
                                                                                                            span: bytes(18347..18349),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                ],
                                                                            },
                                                                            op: BinOp::Sub(
                                                                                Minus,
                                                                            ),
                                                                            right: Expr::Cast {
                                                                                attrs: [],
                                                                                expr: Expr::Paren {
                                                                                    attrs: [],
                                                                                    paren_token: Paren,
                                                                                    expr: Expr::Binary {
                                                                                        attrs: [],
                                                                                        left: Expr::Unary {
                                                                                            attrs: [],
                                                                                            op: UnOp::Neg(
                                                                                                Minus,
                                                                                            ),
                                                                                            expr: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: e2,
                                                                                                                span: bytes(18355..18357),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                        op: BinOp::Gt(
                                                                                            Gt,
                                                                                        ),
                                                                                        right: Expr::Lit {
                                                                                            attrs: [],
                                                                                            lit: Lit::Int {
                                                                                                token: 1,
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                },
                                                                                as_token: As,
                                                                                ty: Type::Path {
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: u32,
                                                                                                    span: bytes(18366..18369),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            },
                                                                        },
                                                                        diverge: None,
                                                                    },
                                                                ),
                                                                semi_token: Semi,
                                                            },
                                                            Stmt::Expr(
                                                                Expr::Assign {
                                                                    attrs: [],
                                                                    left: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: e10,
                                                                                        span: bytes(18379..18382),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    eq_token: Eq,
                                                                    right: Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Cast {
                                                                            attrs: [],
                                                                            expr: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: q,
                                                                                                span: bytes(18385..18386),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            as_token: As,
                                                                            ty: Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: i32,
                                                                                                span: bytes(18390..18393),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        },
                                                                        op: BinOp::Add(
                                                                            Plus,
                                                                        ),
                                                                        right: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: e2,
                                                                                            span: bytes(18396..18398),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                },
                                                                Some(
                                                                    Semi,
                                                                ),
                                                            ),
                                                            Stmt::Local {
                                                                attrs: [],
                                                                let_token: Let,
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: i,
                                                                        span: bytes(18412..18413),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                init: Some(
                                                                    LocalInit {
                                                                        eq_token: Eq,
                                                                        expr: Expr::Binary {
                                                                            attrs: [],
                                                                            left: Expr::Unary {
                                                                                attrs: [],
                                                                                op: UnOp::Neg(
                                                                                    Minus,
                                                                                ),
                                                                                expr: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: e2,
                                                                                                    span: bytes(18417..18419),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            },
                                                                            op: BinOp::Sub(
                                                                                Minus,
                                                                            ),
                                                                            right: Expr::Cast {
                                                                                attrs: [],
                                                                                expr: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: q,
                                                                                                    span: bytes(18422..18423),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                as_token: As,
                                                                                ty: Type::Path {
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: i32,
                                                                                                    span: bytes(18427..18430),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            },
                                                                        },
                                                                        diverge: None,
                                                                    },
                                                                ),
                                                                semi_token: Semi,
                                                            },
                                                            Stmt::Local {
                                                                attrs: [],
                                                                let_token: Let,
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: k,
                                                                        span: bytes(18444..18445),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                init: Some(
                                                                    LocalInit {
                                                                        eq_token: Eq,
                                                                        expr: Expr::Binary {
                                                                            attrs: [],
                                                                            left: Expr::Call {
                                                                                attrs: [],
                                                                                func: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: pow5bits,
                                                                                                    span: bytes(18448..18456),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                paren_token: Paren,
                                                                                args: [
                                                                                    Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: i,
                                                                                                        span: bytes(18457..18458),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ],
                                                                            },
                                                                            op: BinOp::Sub(
                                                                                Minus,
                                                                            ),
                                                                            right: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: DOUBLE_POW5_BITCOUNT,
                                                                                                span: bytes(18462..18482),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        },
                                                                        diverge: None,
                                                                    },
                                                                ),
                                                                semi_token: Semi,
                                                            },
                                                            Stmt::Local {
                                                                attrs: [],
                                                                let_token: Let,
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: j,
                                                                        span: bytes(18496..18497),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                init: Some(
                                                                    LocalInit {
                                                                        eq_token: Eq,
                                                                        expr: Expr::Binary {
                                                                            attrs: [],
                                                                            left: Expr::Cast {
                                                                                attrs: [],
                                                                                expr: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: q,
                                                                                                    span: bytes(18500..18501),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                as_token: As,
                                                                                ty: Type::Path {
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: i32,
                                                                                                    span: bytes(18505..18508),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            },
                                                                            op: BinOp::Sub(
                                                                                Minus,
                                                                            ),
                                                                            right: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: k,
                                                                                                span: bytes(18511..18512),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        },
                                                                        diverge: None,
                                                                    },
                                                                ),
                                                                semi_token: Semi,
                                                            },
                                                            Stmt::Expr(
                                                                Expr::Assign {
                                                                    attrs: [],
                                                                    left: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: vr,
                                                                                        span: bytes(18522..18524),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    eq_token: Eq,
                                                                    right: Expr::Unsafe {
                                                                        attrs: [],
                                                                        unsafe_token: Unsafe,
                                                                        block: Block {
                                                                            brace_token: Brace,
                                                                            stmts: [
                                                                                Stmt::Expr(
                                                                                    Expr::Call {
                                                                                        attrs: [],
                                                                                        func: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: mul_shift_all_64,
                                                                                                            span: bytes(18548..18564),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        paren_token: Paren,
                                                                                        args: [
                                                                                            Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: m2,
                                                                                                                span: bytes(18582..18584),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            Comma,
                                                                                            Expr::Reference {
                                                                                                attrs: [
                                                                                                    Attribute {
                                                                                                        pound_token: Pound,
                                                                                                        style: AttrStyle::Outer,
                                                                                                        bracket_token: Bracket,
                                                                                                        meta: Meta::List {
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: cfg,
                                                                                                                            span: bytes(18604..18607),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                            delimiter: MacroDelimiter::Paren(
                                                                                                                Paren,
                                                                                                            ),
                                                                                                            tokens: TokenStream [
                                                                                                                Ident {
                                                                                                                    sym: feature,
                                                                                                                    span: bytes(18608..18615),
                                                                                                                },
                                                                                                                Punct {
                                                                                                                    char: '=',
                                                                                                                    spacing: Alone,
                                                                                                                    span: bytes(18616..18617),
                                                                                                                },
                                                                                                                Literal {
                                                                                                                    lit: "small",
                                                                                                                    span: bytes(18618..18625),
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                ],
                                                                                                and_token: And,
                                                                                                mutability: None,
                                                                                                expr: Expr::Call {
                                                                                                    attrs: [],
                                                                                                    func: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: compute_pow5,
                                                                                                                        span: bytes(18645..18657),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    paren_token: Paren,
                                                                                                    args: [
                                                                                                        Expr::Cast {
                                                                                                            attrs: [],
                                                                                                            expr: Expr::Path {
                                                                                                                attrs: [],
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: i,
                                                                                                                                span: bytes(18658..18659),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                            as_token: As,
                                                                                                            ty: Type::Path {
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: u32,
                                                                                                                                span: bytes(18663..18666),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            Comma,
                                                                                            Expr::Block {
                                                                                                attrs: [
                                                                                                    Attribute {
                                                                                                        pound_token: Pound,
                                                                                                        style: AttrStyle::Outer,
                                                                                                        bracket_token: Bracket,
                                                                                                        meta: Meta::List {
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: cfg,
                                                                                                                            span: bytes(18687..18690),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                            delimiter: MacroDelimiter::Paren(
                                                                                                                Paren,
                                                                                                            ),
                                                                                                            tokens: TokenStream [
                                                                                                                Ident {
                                                                                                                    sym: not,
                                                                                                                    span: bytes(18691..18694),
                                                                                                                },
                                                                                                                Group {
                                                                                                                    delimiter: Parenthesis,
                                                                                                                    stream: TokenStream [
                                                                                                                        Ident {
                                                                                                                            sym: feature,
                                                                                                                            span: bytes(18695..18702),
                                                                                                                        },
                                                                                                                        Punct {
                                                                                                                            char: '=',
                                                                                                                            spacing: Alone,
                                                                                                                            span: bytes(18703..18704),
                                                                                                                        },
                                                                                                                        Literal {
                                                                                                                            lit: "small",
                                                                                                                            span: bytes(18705..18712),
                                                                                                                        },
                                                                                                                    ],
                                                                                                                    span: bytes(18694..18713),
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                ],
                                                                                                label: None,
                                                                                                block: Block {
                                                                                                    brace_token: Brace,
                                                                                                    stmts: [
                                                                                                        Stmt::Macro {
                                                                                                            attrs: [],
                                                                                                            mac: Macro {
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: debug_assert,
                                                                                                                                span: bytes(18754..18766),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                                bang_token: Not,
                                                                                                                delimiter: MacroDelimiter::Paren(
                                                                                                                    Paren,
                                                                                                                ),
                                                                                                                tokens: TokenStream [
                                                                                                                    Ident {
                                                                                                                        sym: i,
                                                                                                                        span: bytes(18768..18769),
                                                                                                                    },
                                                                                                                    Punct {
                                                                                                                        char: '<',
                                                                                                                        spacing: Alone,
                                                                                                                        span: bytes(18770..18771),
                                                                                                                    },
                                                                                                                    Ident {
                                                                                                                        sym: DOUBLE_POW5_SPLIT,
                                                                                                                        span: bytes(18772..18789),
                                                                                                                    },
                                                                                                                    Punct {
                                                                                                                        char: '.',
                                                                                                                        spacing: Alone,
                                                                                                                        span: bytes(18789..18790),
                                                                                                                    },
                                                                                                                    Ident {
                                                                                                                        sym: len,
                                                                                                                        span: bytes(18790..18793),
                                                                                                                    },
                                                                                                                    Group {
                                                                                                                        delimiter: Parenthesis,
                                                                                                                        stream: TokenStream [],
                                                                                                                        span: bytes(18793..18795),
                                                                                                                    },
                                                                                                                    Ident {
                                                                                                                        sym: as,
                                                                                                                        span: bytes(18796..18798),
                                                                                                                    },
                                                                                                                    Ident {
                                                                                                                        sym: i32,
                                                                                                                        span: bytes(18799..18802),
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                            semi_token: Some(
                                                                                                                Semi,
                                                                                                            ),
                                                                                                        },
                                                                                                        Stmt::Expr(
                                                                                                            Expr::MethodCall {
                                                                                                                attrs: [],
                                                                                                                receiver: Expr::Path {
                                                                                                                    attrs: [],
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: DOUBLE_POW5_SPLIT,
                                                                                                                                    span: bytes(18825..18842),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                                dot_token: Dot,
                                                                                                                method: Ident {
                                                                                                                    sym: get_unchecked,
                                                                                                                    span: bytes(18843..18856),
                                                                                                                },
                                                                                                                turbofish: None,
                                                                                                                paren_token: Paren,
                                                                                                                args: [
                                                                                                                    Expr::Cast {
                                                                                                                        attrs: [],
                                                                                                                        expr: Expr::Path {
                                                                                                                            attrs: [],
                                                                                                                            qself: None,
                                                                                                                            path: Path {
                                                                                                                                leading_colon: None,
                                                                                                                                segments: [
                                                                                                                                    PathSegment {
                                                                                                                                        ident: Ident {
                                                                                                                                            sym: i,
                                                                                                                                            span: bytes(18857..18858),
                                                                                                                                        },
                                                                                                                                        arguments: PathArguments::None,
                                                                                                                                    },
                                                                                                                                ],
                                                                                                                            },
                                                                                                                        },
                                                                                                                        as_token: As,
                                                                                                                        ty: Type::Path {
                                                                                                                            qself: None,
                                                                                                                            path: Path {
                                                                                                                                leading_colon: None,
                                                                                                                                segments: [
                                                                                                                                    PathSegment {
                                                                                                                                        ident: Ident {
                                                                                                                                            sym: usize,
                                                                                                                                            span: bytes(18862..18867),
                                                                                                                                        },
                                                                                                                                        arguments: PathArguments::None,
                                                                                                                                    },
                                                                                                                                ],
                                                                                                                            },
                                                                                                                        },
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                            None,
                                                                                                        ),
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            Comma,
                                                                                            Expr::Cast {
                                                                                                attrs: [],
                                                                                                expr: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: j,
                                                                                                                    span: bytes(18904..18905),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                as_token: As,
                                                                                                ty: Type::Path {
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: u32,
                                                                                                                    span: bytes(18909..18912),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                            Comma,
                                                                                            Expr::MethodCall {
                                                                                                attrs: [],
                                                                                                receiver: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: vp_uninit,
                                                                                                                    span: bytes(18930..18939),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                dot_token: Dot,
                                                                                                method: Ident {
                                                                                                    sym: as_mut_ptr,
                                                                                                    span: bytes(18940..18950),
                                                                                                },
                                                                                                turbofish: None,
                                                                                                paren_token: Paren,
                                                                                                args: [],
                                                                                            },
                                                                                            Comma,
                                                                                            Expr::MethodCall {
                                                                                                attrs: [],
                                                                                                receiver: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: vm_uninit,
                                                                                                                    span: bytes(18970..18979),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                dot_token: Dot,
                                                                                                method: Ident {
                                                                                                    sym: as_mut_ptr,
                                                                                                    span: bytes(18980..18990),
                                                                                                },
                                                                                                turbofish: None,
                                                                                                paren_token: Paren,
                                                                                                args: [],
                                                                                            },
                                                                                            Comma,
                                                                                            Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: mm_shift,
                                                                                                                span: bytes(19010..19018),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            Comma,
                                                                                        ],
                                                                                    },
                                                                                    None,
                                                                                ),
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                                Some(
                                                                    Semi,
                                                                ),
                                                            ),
                                                            Stmt::Expr(
                                                                Expr::Assign {
                                                                    attrs: [],
                                                                    left: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: vp,
                                                                                        span: bytes(19053..19055),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    eq_token: Eq,
                                                                    right: Expr::Unsafe {
                                                                        attrs: [],
                                                                        unsafe_token: Unsafe,
                                                                        block: Block {
                                                                            brace_token: Brace,
                                                                            stmts: [
                                                                                Stmt::Expr(
                                                                                    Expr::MethodCall {
                                                                                        attrs: [],
                                                                                        receiver: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: vp_uninit,
                                                                                                            span: bytes(19067..19076),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        dot_token: Dot,
                                                                                        method: Ident {
                                                                                            sym: assume_init,
                                                                                            span: bytes(19077..19088),
                                                                                        },
                                                                                        turbofish: None,
                                                                                        paren_token: Paren,
                                                                                        args: [],
                                                                                    },
                                                                                    None,
                                                                                ),
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                                Some(
                                                                    Semi,
                                                                ),
                                                            ),
                                                            Stmt::Expr(
                                                                Expr::Assign {
                                                                    attrs: [],
                                                                    left: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: vm,
                                                                                        span: bytes(19102..19104),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    eq_token: Eq,
                                                                    right: Expr::Unsafe {
                                                                        attrs: [],
                                                                        unsafe_token: Unsafe,
                                                                        block: Block {
                                                                            brace_token: Brace,
                                                                            stmts: [
                                                                                Stmt::Expr(
                                                                                    Expr::MethodCall {
                                                                                        attrs: [],
                                                                                        receiver: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: vm_uninit,
                                                                                                            span: bytes(19116..19125),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        dot_token: Dot,
                                                                                        method: Ident {
                                                                                            sym: assume_init,
                                                                                            span: bytes(19126..19137),
                                                                                        },
                                                                                        turbofish: None,
                                                                                        paren_token: Paren,
                                                                                        args: [],
                                                                                    },
                                                                                    None,
                                                                                ),
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                                Some(
                                                                    Semi,
                                                                ),
                                                            ),
                                                            Stmt::Expr(
                                                                Expr::If {
                                                                    attrs: [],
                                                                    if_token: If,
                                                                    cond: Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: q,
                                                                                            span: bytes(19154..19155),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        op: BinOp::Le(
                                                                            Le,
                                                                        ),
                                                                        right: Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Int {
                                                                                token: 1,
                                                                            },
                                                                        },
                                                                    },
                                                                    then_branch: Block {
                                                                        brace_token: Brace,
                                                                        stmts: [
                                                                            Stmt::Expr(
                                                                                Expr::Assign {
                                                                                    attrs: [],
                                                                                    left: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: vr_is_trailing_zeros,
                                                                                                        span: bytes(19340..19360),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    eq_token: Eq,
                                                                                    right: Expr::Lit {
                                                                                        attrs: [],
                                                                                        lit: Lit::Bool {
                                                                                            value: true,
                                                                                        },
                                                                                    },
                                                                                },
                                                                                Some(
                                                                                    Semi,
                                                                                ),
                                                                            ),
                                                                            Stmt::Expr(
                                                                                Expr::If {
                                                                                    attrs: [],
                                                                                    if_token: If,
                                                                                    cond: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: accept_bounds,
                                                                                                        span: bytes(19384..19397),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    then_branch: Block {
                                                                                        brace_token: Brace,
                                                                                        stmts: [
                                                                                            Stmt::Expr(
                                                                                                Expr::Assign {
                                                                                                    attrs: [],
                                                                                                    left: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: vm_is_trailing_zeros,
                                                                                                                        span: bytes(19505..19525),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    eq_token: Eq,
                                                                                                    right: Expr::Binary {
                                                                                                        attrs: [],
                                                                                                        left: Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: mm_shift,
                                                                                                                            span: bytes(19528..19536),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                        op: BinOp::Eq(
                                                                                                            EqEq,
                                                                                                        ),
                                                                                                        right: Expr::Lit {
                                                                                                            attrs: [],
                                                                                                            lit: Lit::Int {
                                                                                                                token: 1,
                                                                                                            },
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                                Some(
                                                                                                    Semi,
                                                                                                ),
                                                                                            ),
                                                                                        ],
                                                                                    },
                                                                                    else_branch: Some(
                                                                                        (
                                                                                            Else,
                                                                                            Expr::Block {
                                                                                                attrs: [],
                                                                                                label: None,
                                                                                                block: Block {
                                                                                                    brace_token: Brace,
                                                                                                    stmts: [
                                                                                                        Stmt::Expr(
                                                                                                            Expr::Binary {
                                                                                                                attrs: [],
                                                                                                                left: Expr::Path {
                                                                                                                    attrs: [],
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: vp,
                                                                                                                                    span: bytes(19658..19660),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                                op: BinOp::SubAssign(
                                                                                                                    MinusEq,
                                                                                                                ),
                                                                                                                right: Expr::Lit {
                                                                                                                    attrs: [],
                                                                                                                    lit: Lit::Int {
                                                                                                                        token: 1,
                                                                                                                    },
                                                                                                                },
                                                                                                            },
                                                                                                            Some(
                                                                                                                Semi,
                                                                                                            ),
                                                                                                        ),
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                        ),
                                                                                    ),
                                                                                },
                                                                                None,
                                                                            ),
                                                                        ],
                                                                    },
                                                                    else_branch: Some(
                                                                        (
                                                                            Else,
                                                                            Expr::If {
                                                                                attrs: [],
                                                                                if_token: If,
                                                                                cond: Expr::Binary {
                                                                                    attrs: [],
                                                                                    left: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: q,
                                                                                                        span: bytes(19699..19700),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    op: BinOp::Lt(
                                                                                        Lt,
                                                                                    ),
                                                                                    right: Expr::Lit {
                                                                                        attrs: [],
                                                                                        lit: Lit::Int {
                                                                                            token: 63,
                                                                                        },
                                                                                    },
                                                                                },
                                                                                then_branch: Block {
                                                                                    brace_token: Brace,
                                                                                    stmts: [
                                                                                        Stmt::Expr(
                                                                                            Expr::Assign {
                                                                                                attrs: [],
                                                                                                left: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: vr_is_trailing_zeros,
                                                                                                                    span: bytes(20023..20043),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                eq_token: Eq,
                                                                                                right: Expr::Call {
                                                                                                    attrs: [],
                                                                                                    func: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: multiple_of_power_of_2,
                                                                                                                        span: bytes(20046..20068),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    paren_token: Paren,
                                                                                                    args: [
                                                                                                        Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: mv,
                                                                                                                            span: bytes(20069..20071),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                        Comma,
                                                                                                        Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: q,
                                                                                                                            span: bytes(20073..20074),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            Some(
                                                                                                Semi,
                                                                                            ),
                                                                                        ),
                                                                                    ],
                                                                                },
                                                                                else_branch: None,
                                                                            },
                                                                        ),
                                                                    ),
                                                                },
                                                                None,
                                                            ),
                                                        ],
                                                    },
                                                },
                                            ),
                                        ),
                                    },
                                    None,
                                ),
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: Some(
                                            Mut,
                                        ),
                                        ident: Ident {
                                            sym: removed,
                                            span: bytes(20204..20211),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Lit {
                                                attrs: [],
                                                lit: Lit::Int {
                                                    token: 0i32,
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: Some(
                                            Mut,
                                        ),
                                        ident: Ident {
                                            sym: last_removed_digit,
                                            span: bytes(20232..20250),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Lit {
                                                attrs: [],
                                                lit: Lit::Int {
                                                    token: 0u8,
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: output,
                                            span: bytes(20306..20312),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::If {
                                                attrs: [],
                                                if_token: If,
                                                cond: Expr::Binary {
                                                    attrs: [],
                                                    left: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: vm_is_trailing_zeros,
                                                                        span: bytes(20318..20338),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    op: BinOp::Or(
                                                        OrOr,
                                                    ),
                                                    right: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: vr_is_trailing_zeros,
                                                                        span: bytes(20342..20362),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                                then_branch: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::Loop {
                                                                attrs: [],
                                                                label: None,
                                                                loop_token: Loop,
                                                                body: Block {
                                                                    brace_token: Brace,
                                                                    stmts: [
                                                                        Stmt::Local {
                                                                            attrs: [],
                                                                            let_token: Let,
                                                                            pat: Pat::Ident {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident {
                                                                                    sym: vp_div10,
                                                                                    span: bytes(20451..20459),
                                                                                },
                                                                                subpat: None,
                                                                            },
                                                                            init: Some(
                                                                                LocalInit {
                                                                                    eq_token: Eq,
                                                                                    expr: Expr::Call {
                                                                                        attrs: [],
                                                                                        func: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: div10,
                                                                                                            span: bytes(20462..20467),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        paren_token: Paren,
                                                                                        args: [
                                                                                            Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: vp,
                                                                                                                span: bytes(20468..20470),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                    diverge: None,
                                                                                },
                                                                            ),
                                                                            semi_token: Semi,
                                                                        },
                                                                        Stmt::Local {
                                                                            attrs: [],
                                                                            let_token: Let,
                                                                            pat: Pat::Ident {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident {
                                                                                    sym: vm_div10,
                                                                                    span: bytes(20489..20497),
                                                                                },
                                                                                subpat: None,
                                                                            },
                                                                            init: Some(
                                                                                LocalInit {
                                                                                    eq_token: Eq,
                                                                                    expr: Expr::Call {
                                                                                        attrs: [],
                                                                                        func: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: div10,
                                                                                                            span: bytes(20500..20505),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        paren_token: Paren,
                                                                                        args: [
                                                                                            Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: vm,
                                                                                                                span: bytes(20506..20508),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                    diverge: None,
                                                                                },
                                                                            ),
                                                                            semi_token: Semi,
                                                                        },
                                                                        Stmt::Expr(
                                                                            Expr::If {
                                                                                attrs: [],
                                                                                if_token: If,
                                                                                cond: Expr::Binary {
                                                                                    attrs: [],
                                                                                    left: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: vp_div10,
                                                                                                        span: bytes(20526..20534),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    op: BinOp::Le(
                                                                                        Le,
                                                                                    ),
                                                                                    right: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: vm_div10,
                                                                                                        span: bytes(20538..20546),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                },
                                                                                then_branch: Block {
                                                                                    brace_token: Brace,
                                                                                    stmts: [
                                                                                        Stmt::Expr(
                                                                                            Expr::Break {
                                                                                                attrs: [],
                                                                                                break_token: Break,
                                                                                                label: None,
                                                                                                expr: None,
                                                                                            },
                                                                                            Some(
                                                                                                Semi,
                                                                                            ),
                                                                                        ),
                                                                                    ],
                                                                                },
                                                                                else_branch: None,
                                                                            },
                                                                            None,
                                                                        ),
                                                                        Stmt::Local {
                                                                            attrs: [],
                                                                            let_token: Let,
                                                                            pat: Pat::Ident {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident {
                                                                                    sym: vm_mod10,
                                                                                    span: bytes(20602..20610),
                                                                                },
                                                                                subpat: None,
                                                                            },
                                                                            init: Some(
                                                                                LocalInit {
                                                                                    eq_token: Eq,
                                                                                    expr: Expr::MethodCall {
                                                                                        attrs: [],
                                                                                        receiver: Expr::Paren {
                                                                                            attrs: [],
                                                                                            paren_token: Paren,
                                                                                            expr: Expr::Cast {
                                                                                                attrs: [],
                                                                                                expr: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: vm,
                                                                                                                    span: bytes(20614..20616),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                as_token: As,
                                                                                                ty: Type::Path {
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: u32,
                                                                                                                    span: bytes(20620..20623),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                        dot_token: Dot,
                                                                                        method: Ident {
                                                                                            sym: wrapping_sub,
                                                                                            span: bytes(20625..20637),
                                                                                        },
                                                                                        turbofish: None,
                                                                                        paren_token: Paren,
                                                                                        args: [
                                                                                            Expr::MethodCall {
                                                                                                attrs: [],
                                                                                                receiver: Expr::Lit {
                                                                                                    attrs: [],
                                                                                                    lit: Lit::Int {
                                                                                                        token: 10u32,
                                                                                                    },
                                                                                                },
                                                                                                dot_token: Dot,
                                                                                                method: Ident {
                                                                                                    sym: wrapping_mul,
                                                                                                    span: bytes(20644..20656),
                                                                                                },
                                                                                                turbofish: None,
                                                                                                paren_token: Paren,
                                                                                                args: [
                                                                                                    Expr::Cast {
                                                                                                        attrs: [],
                                                                                                        expr: Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: vm_div10,
                                                                                                                            span: bytes(20657..20665),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                        as_token: As,
                                                                                                        ty: Type::Path {
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: u32,
                                                                                                                            span: bytes(20669..20672),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                    diverge: None,
                                                                                },
                                                                            ),
                                                                            semi_token: Semi,
                                                                        },
                                                                        Stmt::Local {
                                                                            attrs: [],
                                                                            let_token: Let,
                                                                            pat: Pat::Ident {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident {
                                                                                    sym: vr_div10,
                                                                                    span: bytes(20692..20700),
                                                                                },
                                                                                subpat: None,
                                                                            },
                                                                            init: Some(
                                                                                LocalInit {
                                                                                    eq_token: Eq,
                                                                                    expr: Expr::Call {
                                                                                        attrs: [],
                                                                                        func: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: div10,
                                                                                                            span: bytes(20703..20708),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        paren_token: Paren,
                                                                                        args: [
                                                                                            Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: vr,
                                                                                                                span: bytes(20709..20711),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                    diverge: None,
                                                                                },
                                                                            ),
                                                                            semi_token: Semi,
                                                                        },
                                                                        Stmt::Local {
                                                                            attrs: [],
                                                                            let_token: Let,
                                                                            pat: Pat::Ident {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident {
                                                                                    sym: vr_mod10,
                                                                                    span: bytes(20730..20738),
                                                                                },
                                                                                subpat: None,
                                                                            },
                                                                            init: Some(
                                                                                LocalInit {
                                                                                    eq_token: Eq,
                                                                                    expr: Expr::MethodCall {
                                                                                        attrs: [],
                                                                                        receiver: Expr::Paren {
                                                                                            attrs: [],
                                                                                            paren_token: Paren,
                                                                                            expr: Expr::Cast {
                                                                                                attrs: [],
                                                                                                expr: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: vr,
                                                                                                                    span: bytes(20742..20744),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                as_token: As,
                                                                                                ty: Type::Path {
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: u32,
                                                                                                                    span: bytes(20748..20751),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                        dot_token: Dot,
                                                                                        method: Ident {
                                                                                            sym: wrapping_sub,
                                                                                            span: bytes(20753..20765),
                                                                                        },
                                                                                        turbofish: None,
                                                                                        paren_token: Paren,
                                                                                        args: [
                                                                                            Expr::MethodCall {
                                                                                                attrs: [],
                                                                                                receiver: Expr::Lit {
                                                                                                    attrs: [],
                                                                                                    lit: Lit::Int {
                                                                                                        token: 10u32,
                                                                                                    },
                                                                                                },
                                                                                                dot_token: Dot,
                                                                                                method: Ident {
                                                                                                    sym: wrapping_mul,
                                                                                                    span: bytes(20772..20784),
                                                                                                },
                                                                                                turbofish: None,
                                                                                                paren_token: Paren,
                                                                                                args: [
                                                                                                    Expr::Cast {
                                                                                                        attrs: [],
                                                                                                        expr: Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: vr_div10,
                                                                                                                            span: bytes(20785..20793),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                        as_token: As,
                                                                                                        ty: Type::Path {
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: u32,
                                                                                                                            span: bytes(20797..20800),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                    diverge: None,
                                                                                },
                                                                            ),
                                                                            semi_token: Semi,
                                                                        },
                                                                        Stmt::Expr(
                                                                            Expr::Binary {
                                                                                attrs: [],
                                                                                left: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: vm_is_trailing_zeros,
                                                                                                    span: bytes(20816..20836),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                op: BinOp::BitAndAssign(
                                                                                    AndEq,
                                                                                ),
                                                                                right: Expr::Binary {
                                                                                    attrs: [],
                                                                                    left: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: vm_mod10,
                                                                                                        span: bytes(20840..20848),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    op: BinOp::Eq(
                                                                                        EqEq,
                                                                                    ),
                                                                                    right: Expr::Lit {
                                                                                        attrs: [],
                                                                                        lit: Lit::Int {
                                                                                            token: 0,
                                                                                        },
                                                                                    },
                                                                                },
                                                                            },
                                                                            Some(
                                                                                Semi,
                                                                            ),
                                                                        ),
                                                                        Stmt::Expr(
                                                                            Expr::Binary {
                                                                                attrs: [],
                                                                                left: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: vr_is_trailing_zeros,
                                                                                                    span: bytes(20867..20887),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                op: BinOp::BitAndAssign(
                                                                                    AndEq,
                                                                                ),
                                                                                right: Expr::Binary {
                                                                                    attrs: [],
                                                                                    left: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: last_removed_digit,
                                                                                                        span: bytes(20891..20909),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    op: BinOp::Eq(
                                                                                        EqEq,
                                                                                    ),
                                                                                    right: Expr::Lit {
                                                                                        attrs: [],
                                                                                        lit: Lit::Int {
                                                                                            token: 0,
                                                                                        },
                                                                                    },
                                                                                },
                                                                            },
                                                                            Some(
                                                                                Semi,
                                                                            ),
                                                                        ),
                                                                        Stmt::Expr(
                                                                            Expr::Assign {
                                                                                attrs: [],
                                                                                left: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: last_removed_digit,
                                                                                                    span: bytes(20928..20946),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                eq_token: Eq,
                                                                                right: Expr::Cast {
                                                                                    attrs: [],
                                                                                    expr: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: vr_mod10,
                                                                                                        span: bytes(20949..20957),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    as_token: As,
                                                                                    ty: Type::Path {
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: u8,
                                                                                                        span: bytes(20961..20963),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                },
                                                                            },
                                                                            Some(
                                                                                Semi,
                                                                            ),
                                                                        ),
                                                                        Stmt::Expr(
                                                                            Expr::Assign {
                                                                                attrs: [],
                                                                                left: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: vr,
                                                                                                    span: bytes(20977..20979),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                eq_token: Eq,
                                                                                right: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: vr_div10,
                                                                                                    span: bytes(20982..20990),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            },
                                                                            Some(
                                                                                Semi,
                                                                            ),
                                                                        ),
                                                                        Stmt::Expr(
                                                                            Expr::Assign {
                                                                                attrs: [],
                                                                                left: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: vp,
                                                                                                    span: bytes(21004..21006),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                eq_token: Eq,
                                                                                right: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: vp_div10,
                                                                                                    span: bytes(21009..21017),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            },
                                                                            Some(
                                                                                Semi,
                                                                            ),
                                                                        ),
                                                                        Stmt::Expr(
                                                                            Expr::Assign {
                                                                                attrs: [],
                                                                                left: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: vm,
                                                                                                    span: bytes(21031..21033),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                eq_token: Eq,
                                                                                right: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: vm_div10,
                                                                                                    span: bytes(21036..21044),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            },
                                                                            Some(
                                                                                Semi,
                                                                            ),
                                                                        ),
                                                                        Stmt::Expr(
                                                                            Expr::Binary {
                                                                                attrs: [],
                                                                                left: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: removed,
                                                                                                    span: bytes(21058..21065),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                op: BinOp::AddAssign(
                                                                                    PlusEq,
                                                                                ),
                                                                                right: Expr::Lit {
                                                                                    attrs: [],
                                                                                    lit: Lit::Int {
                                                                                        token: 1,
                                                                                    },
                                                                                },
                                                                            },
                                                                            Some(
                                                                                Semi,
                                                                            ),
                                                                        ),
                                                                    ],
                                                                },
                                                            },
                                                            None,
                                                        ),
                                                        Stmt::Expr(
                                                            Expr::If {
                                                                attrs: [],
                                                                if_token: If,
                                                                cond: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: vm_is_trailing_zeros,
                                                                                    span: bytes(21093..21113),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                then_branch: Block {
                                                                    brace_token: Brace,
                                                                    stmts: [
                                                                        Stmt::Expr(
                                                                            Expr::Loop {
                                                                                attrs: [],
                                                                                label: None,
                                                                                loop_token: Loop,
                                                                                body: Block {
                                                                                    brace_token: Brace,
                                                                                    stmts: [
                                                                                        Stmt::Local {
                                                                                            attrs: [],
                                                                                            let_token: Let,
                                                                                            pat: Pat::Ident {
                                                                                                attrs: [],
                                                                                                by_ref: None,
                                                                                                mutability: None,
                                                                                                ident: Ident {
                                                                                                    sym: vm_div10,
                                                                                                    span: bytes(21155..21163),
                                                                                                },
                                                                                                subpat: None,
                                                                                            },
                                                                                            init: Some(
                                                                                                LocalInit {
                                                                                                    eq_token: Eq,
                                                                                                    expr: Expr::Call {
                                                                                                        attrs: [],
                                                                                                        func: Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: div10,
                                                                                                                            span: bytes(21166..21171),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                        paren_token: Paren,
                                                                                                        args: [
                                                                                                            Expr::Path {
                                                                                                                attrs: [],
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: vm,
                                                                                                                                span: bytes(21172..21174),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                    diverge: None,
                                                                                                },
                                                                                            ),
                                                                                            semi_token: Semi,
                                                                                        },
                                                                                        Stmt::Local {
                                                                                            attrs: [],
                                                                                            let_token: Let,
                                                                                            pat: Pat::Ident {
                                                                                                attrs: [],
                                                                                                by_ref: None,
                                                                                                mutability: None,
                                                                                                ident: Ident {
                                                                                                    sym: vm_mod10,
                                                                                                    span: bytes(21197..21205),
                                                                                                },
                                                                                                subpat: None,
                                                                                            },
                                                                                            init: Some(
                                                                                                LocalInit {
                                                                                                    eq_token: Eq,
                                                                                                    expr: Expr::MethodCall {
                                                                                                        attrs: [],
                                                                                                        receiver: Expr::Paren {
                                                                                                            attrs: [],
                                                                                                            paren_token: Paren,
                                                                                                            expr: Expr::Cast {
                                                                                                                attrs: [],
                                                                                                                expr: Expr::Path {
                                                                                                                    attrs: [],
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: vm,
                                                                                                                                    span: bytes(21209..21211),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                                as_token: As,
                                                                                                                ty: Type::Path {
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: u32,
                                                                                                                                    span: bytes(21215..21218),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                            },
                                                                                                        },
                                                                                                        dot_token: Dot,
                                                                                                        method: Ident {
                                                                                                            sym: wrapping_sub,
                                                                                                            span: bytes(21220..21232),
                                                                                                        },
                                                                                                        turbofish: None,
                                                                                                        paren_token: Paren,
                                                                                                        args: [
                                                                                                            Expr::MethodCall {
                                                                                                                attrs: [],
                                                                                                                receiver: Expr::Lit {
                                                                                                                    attrs: [],
                                                                                                                    lit: Lit::Int {
                                                                                                                        token: 10u32,
                                                                                                                    },
                                                                                                                },
                                                                                                                dot_token: Dot,
                                                                                                                method: Ident {
                                                                                                                    sym: wrapping_mul,
                                                                                                                    span: bytes(21239..21251),
                                                                                                                },
                                                                                                                turbofish: None,
                                                                                                                paren_token: Paren,
                                                                                                                args: [
                                                                                                                    Expr::Cast {
                                                                                                                        attrs: [],
                                                                                                                        expr: Expr::Path {
                                                                                                                            attrs: [],
                                                                                                                            qself: None,
                                                                                                                            path: Path {
                                                                                                                                leading_colon: None,
                                                                                                                                segments: [
                                                                                                                                    PathSegment {
                                                                                                                                        ident: Ident {
                                                                                                                                            sym: vm_div10,
                                                                                                                                            span: bytes(21252..21260),
                                                                                                                                        },
                                                                                                                                        arguments: PathArguments::None,
                                                                                                                                    },
                                                                                                                                ],
                                                                                                                            },
                                                                                                                        },
                                                                                                                        as_token: As,
                                                                                                                        ty: Type::Path {
                                                                                                                            qself: None,
                                                                                                                            path: Path {
                                                                                                                                leading_colon: None,
                                                                                                                                segments: [
                                                                                                                                    PathSegment {
                                                                                                                                        ident: Ident {
                                                                                                                                            sym: u32,
                                                                                                                                            span: bytes(21264..21267),
                                                                                                                                        },
                                                                                                                                        arguments: PathArguments::None,
                                                                                                                                    },
                                                                                                                                ],
                                                                                                                            },
                                                                                                                        },
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                    diverge: None,
                                                                                                },
                                                                                            ),
                                                                                            semi_token: Semi,
                                                                                        },
                                                                                        Stmt::Expr(
                                                                                            Expr::If {
                                                                                                attrs: [],
                                                                                                if_token: If,
                                                                                                cond: Expr::Binary {
                                                                                                    attrs: [],
                                                                                                    left: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: vm_mod10,
                                                                                                                        span: bytes(21290..21298),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    op: BinOp::Ne(
                                                                                                        Ne,
                                                                                                    ),
                                                                                                    right: Expr::Lit {
                                                                                                        attrs: [],
                                                                                                        lit: Lit::Int {
                                                                                                            token: 0,
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                                then_branch: Block {
                                                                                                    brace_token: Brace,
                                                                                                    stmts: [
                                                                                                        Stmt::Expr(
                                                                                                            Expr::Break {
                                                                                                                attrs: [],
                                                                                                                break_token: Break,
                                                                                                                label: None,
                                                                                                                expr: None,
                                                                                                            },
                                                                                                            Some(
                                                                                                                Semi,
                                                                                                            ),
                                                                                                        ),
                                                                                                    ],
                                                                                                },
                                                                                                else_branch: None,
                                                                                            },
                                                                                            None,
                                                                                        ),
                                                                                        Stmt::Local {
                                                                                            attrs: [],
                                                                                            let_token: Let,
                                                                                            pat: Pat::Ident {
                                                                                                attrs: [],
                                                                                                by_ref: None,
                                                                                                mutability: None,
                                                                                                ident: Ident {
                                                                                                    sym: vp_div10,
                                                                                                    span: bytes(21371..21379),
                                                                                                },
                                                                                                subpat: None,
                                                                                            },
                                                                                            init: Some(
                                                                                                LocalInit {
                                                                                                    eq_token: Eq,
                                                                                                    expr: Expr::Call {
                                                                                                        attrs: [],
                                                                                                        func: Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: div10,
                                                                                                                            span: bytes(21382..21387),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                        paren_token: Paren,
                                                                                                        args: [
                                                                                                            Expr::Path {
                                                                                                                attrs: [],
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: vp,
                                                                                                                                span: bytes(21388..21390),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                    diverge: None,
                                                                                                },
                                                                                            ),
                                                                                            semi_token: Semi,
                                                                                        },
                                                                                        Stmt::Local {
                                                                                            attrs: [],
                                                                                            let_token: Let,
                                                                                            pat: Pat::Ident {
                                                                                                attrs: [],
                                                                                                by_ref: None,
                                                                                                mutability: None,
                                                                                                ident: Ident {
                                                                                                    sym: vr_div10,
                                                                                                    span: bytes(21413..21421),
                                                                                                },
                                                                                                subpat: None,
                                                                                            },
                                                                                            init: Some(
                                                                                                LocalInit {
                                                                                                    eq_token: Eq,
                                                                                                    expr: Expr::Call {
                                                                                                        attrs: [],
                                                                                                        func: Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: div10,
                                                                                                                            span: bytes(21424..21429),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                        paren_token: Paren,
                                                                                                        args: [
                                                                                                            Expr::Path {
                                                                                                                attrs: [],
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: vr,
                                                                                                                                span: bytes(21430..21432),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                    diverge: None,
                                                                                                },
                                                                                            ),
                                                                                            semi_token: Semi,
                                                                                        },
                                                                                        Stmt::Local {
                                                                                            attrs: [],
                                                                                            let_token: Let,
                                                                                            pat: Pat::Ident {
                                                                                                attrs: [],
                                                                                                by_ref: None,
                                                                                                mutability: None,
                                                                                                ident: Ident {
                                                                                                    sym: vr_mod10,
                                                                                                    span: bytes(21455..21463),
                                                                                                },
                                                                                                subpat: None,
                                                                                            },
                                                                                            init: Some(
                                                                                                LocalInit {
                                                                                                    eq_token: Eq,
                                                                                                    expr: Expr::MethodCall {
                                                                                                        attrs: [],
                                                                                                        receiver: Expr::Paren {
                                                                                                            attrs: [],
                                                                                                            paren_token: Paren,
                                                                                                            expr: Expr::Cast {
                                                                                                                attrs: [],
                                                                                                                expr: Expr::Path {
                                                                                                                    attrs: [],
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: vr,
                                                                                                                                    span: bytes(21467..21469),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                                as_token: As,
                                                                                                                ty: Type::Path {
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: u32,
                                                                                                                                    span: bytes(21473..21476),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                            },
                                                                                                        },
                                                                                                        dot_token: Dot,
                                                                                                        method: Ident {
                                                                                                            sym: wrapping_sub,
                                                                                                            span: bytes(21478..21490),
                                                                                                        },
                                                                                                        turbofish: None,
                                                                                                        paren_token: Paren,
                                                                                                        args: [
                                                                                                            Expr::MethodCall {
                                                                                                                attrs: [],
                                                                                                                receiver: Expr::Lit {
                                                                                                                    attrs: [],
                                                                                                                    lit: Lit::Int {
                                                                                                                        token: 10u32,
                                                                                                                    },
                                                                                                                },
                                                                                                                dot_token: Dot,
                                                                                                                method: Ident {
                                                                                                                    sym: wrapping_mul,
                                                                                                                    span: bytes(21497..21509),
                                                                                                                },
                                                                                                                turbofish: None,
                                                                                                                paren_token: Paren,
                                                                                                                args: [
                                                                                                                    Expr::Cast {
                                                                                                                        attrs: [],
                                                                                                                        expr: Expr::Path {
                                                                                                                            attrs: [],
                                                                                                                            qself: None,
                                                                                                                            path: Path {
                                                                                                                                leading_colon: None,
                                                                                                                                segments: [
                                                                                                                                    PathSegment {
                                                                                                                                        ident: Ident {
                                                                                                                                            sym: vr_div10,
                                                                                                                                            span: bytes(21510..21518),
                                                                                                                                        },
                                                                                                                                        arguments: PathArguments::None,
                                                                                                                                    },
                                                                                                                                ],
                                                                                                                            },
                                                                                                                        },
                                                                                                                        as_token: As,
                                                                                                                        ty: Type::Path {
                                                                                                                            qself: None,
                                                                                                                            path: Path {
                                                                                                                                leading_colon: None,
                                                                                                                                segments: [
                                                                                                                                    PathSegment {
                                                                                                                                        ident: Ident {
                                                                                                                                            sym: u32,
                                                                                                                                            span: bytes(21522..21525),
                                                                                                                                        },
                                                                                                                                        arguments: PathArguments::None,
                                                                                                                                    },
                                                                                                                                ],
                                                                                                                            },
                                                                                                                        },
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                    diverge: None,
                                                                                                },
                                                                                            ),
                                                                                            semi_token: Semi,
                                                                                        },
                                                                                        Stmt::Expr(
                                                                                            Expr::Binary {
                                                                                                attrs: [],
                                                                                                left: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: vr_is_trailing_zeros,
                                                                                                                    span: bytes(21545..21565),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                op: BinOp::BitAndAssign(
                                                                                                    AndEq,
                                                                                                ),
                                                                                                right: Expr::Binary {
                                                                                                    attrs: [],
                                                                                                    left: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: last_removed_digit,
                                                                                                                        span: bytes(21569..21587),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    op: BinOp::Eq(
                                                                                                        EqEq,
                                                                                                    ),
                                                                                                    right: Expr::Lit {
                                                                                                        attrs: [],
                                                                                                        lit: Lit::Int {
                                                                                                            token: 0,
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                            Some(
                                                                                                Semi,
                                                                                            ),
                                                                                        ),
                                                                                        Stmt::Expr(
                                                                                            Expr::Assign {
                                                                                                attrs: [],
                                                                                                left: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: last_removed_digit,
                                                                                                                    span: bytes(21610..21628),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                eq_token: Eq,
                                                                                                right: Expr::Cast {
                                                                                                    attrs: [],
                                                                                                    expr: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: vr_mod10,
                                                                                                                        span: bytes(21631..21639),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    as_token: As,
                                                                                                    ty: Type::Path {
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: u8,
                                                                                                                        span: bytes(21643..21645),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                            Some(
                                                                                                Semi,
                                                                                            ),
                                                                                        ),
                                                                                        Stmt::Expr(
                                                                                            Expr::Assign {
                                                                                                attrs: [],
                                                                                                left: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: vr,
                                                                                                                    span: bytes(21663..21665),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                eq_token: Eq,
                                                                                                right: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: vr_div10,
                                                                                                                    span: bytes(21668..21676),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                            Some(
                                                                                                Semi,
                                                                                            ),
                                                                                        ),
                                                                                        Stmt::Expr(
                                                                                            Expr::Assign {
                                                                                                attrs: [],
                                                                                                left: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: vp,
                                                                                                                    span: bytes(21694..21696),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                eq_token: Eq,
                                                                                                right: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: vp_div10,
                                                                                                                    span: bytes(21699..21707),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                            Some(
                                                                                                Semi,
                                                                                            ),
                                                                                        ),
                                                                                        Stmt::Expr(
                                                                                            Expr::Assign {
                                                                                                attrs: [],
                                                                                                left: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: vm,
                                                                                                                    span: bytes(21725..21727),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                eq_token: Eq,
                                                                                                right: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: vm_div10,
                                                                                                                    span: bytes(21730..21738),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                            Some(
                                                                                                Semi,
                                                                                            ),
                                                                                        ),
                                                                                        Stmt::Expr(
                                                                                            Expr::Binary {
                                                                                                attrs: [],
                                                                                                left: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: removed,
                                                                                                                    span: bytes(21756..21763),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                op: BinOp::AddAssign(
                                                                                                    PlusEq,
                                                                                                ),
                                                                                                right: Expr::Lit {
                                                                                                    attrs: [],
                                                                                                    lit: Lit::Int {
                                                                                                        token: 1,
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                            Some(
                                                                                                Semi,
                                                                                            ),
                                                                                        ),
                                                                                    ],
                                                                                },
                                                                            },
                                                                            None,
                                                                        ),
                                                                    ],
                                                                },
                                                                else_branch: None,
                                                            },
                                                            None,
                                                        ),
                                                        Stmt::Expr(
                                                            Expr::If {
                                                                attrs: [],
                                                                if_token: If,
                                                                cond: Expr::Binary {
                                                                    attrs: [],
                                                                    left: Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: vr_is_trailing_zeros,
                                                                                            span: bytes(21805..21825),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        op: BinOp::And(
                                                                            AndAnd,
                                                                        ),
                                                                        right: Expr::Binary {
                                                                            attrs: [],
                                                                            left: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: last_removed_digit,
                                                                                                span: bytes(21829..21847),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            op: BinOp::Eq(
                                                                                EqEq,
                                                                            ),
                                                                            right: Expr::Lit {
                                                                                attrs: [],
                                                                                lit: Lit::Int {
                                                                                    token: 5,
                                                                                },
                                                                            },
                                                                        },
                                                                    },
                                                                    op: BinOp::And(
                                                                        AndAnd,
                                                                    ),
                                                                    right: Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Binary {
                                                                            attrs: [],
                                                                            left: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: vr,
                                                                                                span: bytes(21856..21858),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            op: BinOp::Rem(
                                                                                Percent,
                                                                            ),
                                                                            right: Expr::Lit {
                                                                                attrs: [],
                                                                                lit: Lit::Int {
                                                                                    token: 2,
                                                                                },
                                                                            },
                                                                        },
                                                                        op: BinOp::Eq(
                                                                            EqEq,
                                                                        ),
                                                                        right: Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Int {
                                                                                token: 0,
                                                                            },
                                                                        },
                                                                    },
                                                                },
                                                                then_branch: Block {
                                                                    brace_token: Brace,
                                                                    stmts: [
                                                                        Stmt::Expr(
                                                                            Expr::Assign {
                                                                                attrs: [],
                                                                                left: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: last_removed_digit,
                                                                                                    span: bytes(21943..21961),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                eq_token: Eq,
                                                                                right: Expr::Lit {
                                                                                    attrs: [],
                                                                                    lit: Lit::Int {
                                                                                        token: 4,
                                                                                    },
                                                                                },
                                                                            },
                                                                            Some(
                                                                                Semi,
                                                                            ),
                                                                        ),
                                                                    ],
                                                                },
                                                                else_branch: None,
                                                            },
                                                            None,
                                                        ),
                                                        Stmt::Expr(
                                                            Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: vr,
                                                                                    span: bytes(22067..22069),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                op: BinOp::Add(
                                                                    Plus,
                                                                ),
                                                                right: Expr::Cast {
                                                                    attrs: [],
                                                                    expr: Expr::Paren {
                                                                        attrs: [],
                                                                        paren_token: Paren,
                                                                        expr: Expr::Binary {
                                                                            attrs: [],
                                                                            left: Expr::Paren {
                                                                                attrs: [],
                                                                                paren_token: Paren,
                                                                                expr: Expr::Binary {
                                                                                    attrs: [],
                                                                                    left: Expr::Binary {
                                                                                        attrs: [],
                                                                                        left: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: vr,
                                                                                                            span: bytes(22074..22076),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        op: BinOp::Eq(
                                                                                            EqEq,
                                                                                        ),
                                                                                        right: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: vm,
                                                                                                            span: bytes(22080..22082),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                    op: BinOp::And(
                                                                                        AndAnd,
                                                                                    ),
                                                                                    right: Expr::Paren {
                                                                                        attrs: [],
                                                                                        paren_token: Paren,
                                                                                        expr: Expr::Binary {
                                                                                            attrs: [],
                                                                                            left: Expr::Unary {
                                                                                                attrs: [],
                                                                                                op: UnOp::Not(
                                                                                                    Not,
                                                                                                ),
                                                                                                expr: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: accept_bounds,
                                                                                                                    span: bytes(22088..22101),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                            op: BinOp::Or(
                                                                                                OrOr,
                                                                                            ),
                                                                                            right: Expr::Unary {
                                                                                                attrs: [],
                                                                                                op: UnOp::Not(
                                                                                                    Not,
                                                                                                ),
                                                                                                expr: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: vm_is_trailing_zeros,
                                                                                                                    span: bytes(22106..22126),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                },
                                                                            },
                                                                            op: BinOp::Or(
                                                                                OrOr,
                                                                            ),
                                                                            right: Expr::Binary {
                                                                                attrs: [],
                                                                                left: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: last_removed_digit,
                                                                                                    span: bytes(22132..22150),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                op: BinOp::Ge(
                                                                                    Ge,
                                                                                ),
                                                                                right: Expr::Lit {
                                                                                    attrs: [],
                                                                                    lit: Lit::Int {
                                                                                        token: 5,
                                                                                    },
                                                                                },
                                                                            },
                                                                        },
                                                                    },
                                                                    as_token: As,
                                                                    ty: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: u64,
                                                                                        span: bytes(22172..22175),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                                else_branch: Some(
                                                    (
                                                        Else,
                                                        Expr::Block {
                                                            attrs: [],
                                                            label: None,
                                                            block: Block {
                                                                brace_token: Brace,
                                                                stmts: [
                                                                    Stmt::Local {
                                                                        attrs: [],
                                                                        let_token: Let,
                                                                        pat: Pat::Ident {
                                                                            attrs: [],
                                                                            by_ref: None,
                                                                            mutability: Some(
                                                                                Mut,
                                                                            ),
                                                                            ident: Ident {
                                                                                sym: round_up,
                                                                                span: bytes(22298..22306),
                                                                            },
                                                                            subpat: None,
                                                                        },
                                                                        init: Some(
                                                                            LocalInit {
                                                                                eq_token: Eq,
                                                                                expr: Expr::Lit {
                                                                                    attrs: [],
                                                                                    lit: Lit::Bool {
                                                                                        value: false,
                                                                                    },
                                                                                },
                                                                                diverge: None,
                                                                            },
                                                                        ),
                                                                        semi_token: Semi,
                                                                    },
                                                                    Stmt::Local {
                                                                        attrs: [],
                                                                        let_token: Let,
                                                                        pat: Pat::Ident {
                                                                            attrs: [],
                                                                            by_ref: None,
                                                                            mutability: None,
                                                                            ident: Ident {
                                                                                sym: vp_div100,
                                                                                span: bytes(22328..22337),
                                                                            },
                                                                            subpat: None,
                                                                        },
                                                                        init: Some(
                                                                            LocalInit {
                                                                                eq_token: Eq,
                                                                                expr: Expr::Call {
                                                                                    attrs: [],
                                                                                    func: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: div100,
                                                                                                        span: bytes(22340..22346),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    paren_token: Paren,
                                                                                    args: [
                                                                                        Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: vp,
                                                                                                            span: bytes(22347..22349),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    ],
                                                                                },
                                                                                diverge: None,
                                                                            },
                                                                        ),
                                                                        semi_token: Semi,
                                                                    },
                                                                    Stmt::Local {
                                                                        attrs: [],
                                                                        let_token: Let,
                                                                        pat: Pat::Ident {
                                                                            attrs: [],
                                                                            by_ref: None,
                                                                            mutability: None,
                                                                            ident: Ident {
                                                                                sym: vm_div100,
                                                                                span: bytes(22364..22373),
                                                                            },
                                                                            subpat: None,
                                                                        },
                                                                        init: Some(
                                                                            LocalInit {
                                                                                eq_token: Eq,
                                                                                expr: Expr::Call {
                                                                                    attrs: [],
                                                                                    func: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: div100,
                                                                                                        span: bytes(22376..22382),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    paren_token: Paren,
                                                                                    args: [
                                                                                        Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: vm,
                                                                                                            span: bytes(22383..22385),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    ],
                                                                                },
                                                                                diverge: None,
                                                                            },
                                                                        ),
                                                                        semi_token: Semi,
                                                                    },
                                                                    Stmt::Expr(
                                                                        Expr::If {
                                                                            attrs: [],
                                                                            if_token: If,
                                                                            cond: Expr::Binary {
                                                                                attrs: [],
                                                                                left: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: vp_div100,
                                                                                                    span: bytes(22462..22471),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                op: BinOp::Gt(
                                                                                    Gt,
                                                                                ),
                                                                                right: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: vm_div100,
                                                                                                    span: bytes(22474..22483),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            },
                                                                            then_branch: Block {
                                                                                brace_token: Brace,
                                                                                stmts: [
                                                                                    Stmt::Local {
                                                                                        attrs: [],
                                                                                        let_token: Let,
                                                                                        pat: Pat::Ident {
                                                                                            attrs: [],
                                                                                            by_ref: None,
                                                                                            mutability: None,
                                                                                            ident: Ident {
                                                                                                sym: vr_div100,
                                                                                                span: bytes(22502..22511),
                                                                                            },
                                                                                            subpat: None,
                                                                                        },
                                                                                        init: Some(
                                                                                            LocalInit {
                                                                                                eq_token: Eq,
                                                                                                expr: Expr::Call {
                                                                                                    attrs: [],
                                                                                                    func: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: div100,
                                                                                                                        span: bytes(22514..22520),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    paren_token: Paren,
                                                                                                    args: [
                                                                                                        Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: vr,
                                                                                                                            span: bytes(22521..22523),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                                diverge: None,
                                                                                            },
                                                                                        ),
                                                                                        semi_token: Semi,
                                                                                    },
                                                                                    Stmt::Local {
                                                                                        attrs: [],
                                                                                        let_token: Let,
                                                                                        pat: Pat::Ident {
                                                                                            attrs: [],
                                                                                            by_ref: None,
                                                                                            mutability: None,
                                                                                            ident: Ident {
                                                                                                sym: vr_mod100,
                                                                                                span: bytes(22542..22551),
                                                                                            },
                                                                                            subpat: None,
                                                                                        },
                                                                                        init: Some(
                                                                                            LocalInit {
                                                                                                eq_token: Eq,
                                                                                                expr: Expr::MethodCall {
                                                                                                    attrs: [],
                                                                                                    receiver: Expr::Paren {
                                                                                                        attrs: [],
                                                                                                        paren_token: Paren,
                                                                                                        expr: Expr::Cast {
                                                                                                            attrs: [],
                                                                                                            expr: Expr::Path {
                                                                                                                attrs: [],
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: vr,
                                                                                                                                span: bytes(22555..22557),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                            as_token: As,
                                                                                                            ty: Type::Path {
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: u32,
                                                                                                                                span: bytes(22561..22564),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                        },
                                                                                                    },
                                                                                                    dot_token: Dot,
                                                                                                    method: Ident {
                                                                                                        sym: wrapping_sub,
                                                                                                        span: bytes(22566..22578),
                                                                                                    },
                                                                                                    turbofish: None,
                                                                                                    paren_token: Paren,
                                                                                                    args: [
                                                                                                        Expr::MethodCall {
                                                                                                            attrs: [],
                                                                                                            receiver: Expr::Lit {
                                                                                                                attrs: [],
                                                                                                                lit: Lit::Int {
                                                                                                                    token: 100u32,
                                                                                                                },
                                                                                                            },
                                                                                                            dot_token: Dot,
                                                                                                            method: Ident {
                                                                                                                sym: wrapping_mul,
                                                                                                                span: bytes(22586..22598),
                                                                                                            },
                                                                                                            turbofish: None,
                                                                                                            paren_token: Paren,
                                                                                                            args: [
                                                                                                                Expr::Cast {
                                                                                                                    attrs: [],
                                                                                                                    expr: Expr::Path {
                                                                                                                        attrs: [],
                                                                                                                        qself: None,
                                                                                                                        path: Path {
                                                                                                                            leading_colon: None,
                                                                                                                            segments: [
                                                                                                                                PathSegment {
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: vr_div100,
                                                                                                                                        span: bytes(22599..22608),
                                                                                                                                    },
                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                },
                                                                                                                            ],
                                                                                                                        },
                                                                                                                    },
                                                                                                                    as_token: As,
                                                                                                                    ty: Type::Path {
                                                                                                                        qself: None,
                                                                                                                        path: Path {
                                                                                                                            leading_colon: None,
                                                                                                                            segments: [
                                                                                                                                PathSegment {
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: u32,
                                                                                                                                        span: bytes(22612..22615),
                                                                                                                                    },
                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                },
                                                                                                                            ],
                                                                                                                        },
                                                                                                                    },
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                                diverge: None,
                                                                                            },
                                                                                        ),
                                                                                        semi_token: Semi,
                                                                                    },
                                                                                    Stmt::Expr(
                                                                                        Expr::Assign {
                                                                                            attrs: [],
                                                                                            left: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: round_up,
                                                                                                                span: bytes(22631..22639),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            eq_token: Eq,
                                                                                            right: Expr::Binary {
                                                                                                attrs: [],
                                                                                                left: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: vr_mod100,
                                                                                                                    span: bytes(22642..22651),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                op: BinOp::Ge(
                                                                                                    Ge,
                                                                                                ),
                                                                                                right: Expr::Lit {
                                                                                                    attrs: [],
                                                                                                    lit: Lit::Int {
                                                                                                        token: 50,
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                        Some(
                                                                                            Semi,
                                                                                        ),
                                                                                    ),
                                                                                    Stmt::Expr(
                                                                                        Expr::Assign {
                                                                                            attrs: [],
                                                                                            left: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: vr,
                                                                                                                span: bytes(22671..22673),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            eq_token: Eq,
                                                                                            right: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: vr_div100,
                                                                                                                span: bytes(22676..22685),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                        Some(
                                                                                            Semi,
                                                                                        ),
                                                                                    ),
                                                                                    Stmt::Expr(
                                                                                        Expr::Assign {
                                                                                            attrs: [],
                                                                                            left: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: vp,
                                                                                                                span: bytes(22699..22701),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            eq_token: Eq,
                                                                                            right: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: vp_div100,
                                                                                                                span: bytes(22704..22713),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                        Some(
                                                                                            Semi,
                                                                                        ),
                                                                                    ),
                                                                                    Stmt::Expr(
                                                                                        Expr::Assign {
                                                                                            attrs: [],
                                                                                            left: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: vm,
                                                                                                                span: bytes(22727..22729),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            eq_token: Eq,
                                                                                            right: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: vm_div100,
                                                                                                                span: bytes(22732..22741),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                        Some(
                                                                                            Semi,
                                                                                        ),
                                                                                    ),
                                                                                    Stmt::Expr(
                                                                                        Expr::Binary {
                                                                                            attrs: [],
                                                                                            left: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: removed,
                                                                                                                span: bytes(22755..22762),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            op: BinOp::AddAssign(
                                                                                                PlusEq,
                                                                                            ),
                                                                                            right: Expr::Lit {
                                                                                                attrs: [],
                                                                                                lit: Lit::Int {
                                                                                                    token: 2,
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                        Some(
                                                                                            Semi,
                                                                                        ),
                                                                                    ),
                                                                                ],
                                                                            },
                                                                            else_branch: None,
                                                                        },
                                                                        None,
                                                                    ),
                                                                    Stmt::Expr(
                                                                        Expr::Loop {
                                                                            attrs: [],
                                                                            label: None,
                                                                            loop_token: Loop,
                                                                            body: Block {
                                                                                brace_token: Brace,
                                                                                stmts: [
                                                                                    Stmt::Local {
                                                                                        attrs: [],
                                                                                        let_token: Let,
                                                                                        pat: Pat::Ident {
                                                                                            attrs: [],
                                                                                            by_ref: None,
                                                                                            mutability: None,
                                                                                            ident: Ident {
                                                                                                sym: vp_div10,
                                                                                                span: bytes(23105..23113),
                                                                                            },
                                                                                            subpat: None,
                                                                                        },
                                                                                        init: Some(
                                                                                            LocalInit {
                                                                                                eq_token: Eq,
                                                                                                expr: Expr::Call {
                                                                                                    attrs: [],
                                                                                                    func: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: div10,
                                                                                                                        span: bytes(23116..23121),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    paren_token: Paren,
                                                                                                    args: [
                                                                                                        Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: vp,
                                                                                                                            span: bytes(23122..23124),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                                diverge: None,
                                                                                            },
                                                                                        ),
                                                                                        semi_token: Semi,
                                                                                    },
                                                                                    Stmt::Local {
                                                                                        attrs: [],
                                                                                        let_token: Let,
                                                                                        pat: Pat::Ident {
                                                                                            attrs: [],
                                                                                            by_ref: None,
                                                                                            mutability: None,
                                                                                            ident: Ident {
                                                                                                sym: vm_div10,
                                                                                                span: bytes(23143..23151),
                                                                                            },
                                                                                            subpat: None,
                                                                                        },
                                                                                        init: Some(
                                                                                            LocalInit {
                                                                                                eq_token: Eq,
                                                                                                expr: Expr::Call {
                                                                                                    attrs: [],
                                                                                                    func: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: div10,
                                                                                                                        span: bytes(23154..23159),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    paren_token: Paren,
                                                                                                    args: [
                                                                                                        Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: vm,
                                                                                                                            span: bytes(23160..23162),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                                diverge: None,
                                                                                            },
                                                                                        ),
                                                                                        semi_token: Semi,
                                                                                    },
                                                                                    Stmt::Expr(
                                                                                        Expr::If {
                                                                                            attrs: [],
                                                                                            if_token: If,
                                                                                            cond: Expr::Binary {
                                                                                                attrs: [],
                                                                                                left: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: vp_div10,
                                                                                                                    span: bytes(23180..23188),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                op: BinOp::Le(
                                                                                                    Le,
                                                                                                ),
                                                                                                right: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: vm_div10,
                                                                                                                    span: bytes(23192..23200),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                            then_branch: Block {
                                                                                                brace_token: Brace,
                                                                                                stmts: [
                                                                                                    Stmt::Expr(
                                                                                                        Expr::Break {
                                                                                                            attrs: [],
                                                                                                            break_token: Break,
                                                                                                            label: None,
                                                                                                            expr: None,
                                                                                                        },
                                                                                                        Some(
                                                                                                            Semi,
                                                                                                        ),
                                                                                                    ),
                                                                                                ],
                                                                                            },
                                                                                            else_branch: None,
                                                                                        },
                                                                                        None,
                                                                                    ),
                                                                                    Stmt::Local {
                                                                                        attrs: [],
                                                                                        let_token: Let,
                                                                                        pat: Pat::Ident {
                                                                                            attrs: [],
                                                                                            by_ref: None,
                                                                                            mutability: None,
                                                                                            ident: Ident {
                                                                                                sym: vr_div10,
                                                                                                span: bytes(23256..23264),
                                                                                            },
                                                                                            subpat: None,
                                                                                        },
                                                                                        init: Some(
                                                                                            LocalInit {
                                                                                                eq_token: Eq,
                                                                                                expr: Expr::Call {
                                                                                                    attrs: [],
                                                                                                    func: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: div10,
                                                                                                                        span: bytes(23267..23272),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    paren_token: Paren,
                                                                                                    args: [
                                                                                                        Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: vr,
                                                                                                                            span: bytes(23273..23275),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                                diverge: None,
                                                                                            },
                                                                                        ),
                                                                                        semi_token: Semi,
                                                                                    },
                                                                                    Stmt::Local {
                                                                                        attrs: [],
                                                                                        let_token: Let,
                                                                                        pat: Pat::Ident {
                                                                                            attrs: [],
                                                                                            by_ref: None,
                                                                                            mutability: None,
                                                                                            ident: Ident {
                                                                                                sym: vr_mod10,
                                                                                                span: bytes(23294..23302),
                                                                                            },
                                                                                            subpat: None,
                                                                                        },
                                                                                        init: Some(
                                                                                            LocalInit {
                                                                                                eq_token: Eq,
                                                                                                expr: Expr::MethodCall {
                                                                                                    attrs: [],
                                                                                                    receiver: Expr::Paren {
                                                                                                        attrs: [],
                                                                                                        paren_token: Paren,
                                                                                                        expr: Expr::Cast {
                                                                                                            attrs: [],
                                                                                                            expr: Expr::Path {
                                                                                                                attrs: [],
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: vr,
                                                                                                                                span: bytes(23306..23308),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                            as_token: As,
                                                                                                            ty: Type::Path {
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: u32,
                                                                                                                                span: bytes(23312..23315),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                        },
                                                                                                    },
                                                                                                    dot_token: Dot,
                                                                                                    method: Ident {
                                                                                                        sym: wrapping_sub,
                                                                                                        span: bytes(23317..23329),
                                                                                                    },
                                                                                                    turbofish: None,
                                                                                                    paren_token: Paren,
                                                                                                    args: [
                                                                                                        Expr::MethodCall {
                                                                                                            attrs: [],
                                                                                                            receiver: Expr::Lit {
                                                                                                                attrs: [],
                                                                                                                lit: Lit::Int {
                                                                                                                    token: 10u32,
                                                                                                                },
                                                                                                            },
                                                                                                            dot_token: Dot,
                                                                                                            method: Ident {
                                                                                                                sym: wrapping_mul,
                                                                                                                span: bytes(23336..23348),
                                                                                                            },
                                                                                                            turbofish: None,
                                                                                                            paren_token: Paren,
                                                                                                            args: [
                                                                                                                Expr::Cast {
                                                                                                                    attrs: [],
                                                                                                                    expr: Expr::Path {
                                                                                                                        attrs: [],
                                                                                                                        qself: None,
                                                                                                                        path: Path {
                                                                                                                            leading_colon: None,
                                                                                                                            segments: [
                                                                                                                                PathSegment {
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: vr_div10,
                                                                                                                                        span: bytes(23349..23357),
                                                                                                                                    },
                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                },
                                                                                                                            ],
                                                                                                                        },
                                                                                                                    },
                                                                                                                    as_token: As,
                                                                                                                    ty: Type::Path {
                                                                                                                        qself: None,
                                                                                                                        path: Path {
                                                                                                                            leading_colon: None,
                                                                                                                            segments: [
                                                                                                                                PathSegment {
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: u32,
                                                                                                                                        span: bytes(23361..23364),
                                                                                                                                    },
                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                },
                                                                                                                            ],
                                                                                                                        },
                                                                                                                    },
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                                diverge: None,
                                                                                            },
                                                                                        ),
                                                                                        semi_token: Semi,
                                                                                    },
                                                                                    Stmt::Expr(
                                                                                        Expr::Assign {
                                                                                            attrs: [],
                                                                                            left: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: round_up,
                                                                                                                span: bytes(23380..23388),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            eq_token: Eq,
                                                                                            right: Expr::Binary {
                                                                                                attrs: [],
                                                                                                left: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: vr_mod10,
                                                                                                                    span: bytes(23391..23399),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                op: BinOp::Ge(
                                                                                                    Ge,
                                                                                                ),
                                                                                                right: Expr::Lit {
                                                                                                    attrs: [],
                                                                                                    lit: Lit::Int {
                                                                                                        token: 5,
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                        Some(
                                                                                            Semi,
                                                                                        ),
                                                                                    ),
                                                                                    Stmt::Expr(
                                                                                        Expr::Assign {
                                                                                            attrs: [],
                                                                                            left: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: vr,
                                                                                                                span: bytes(23418..23420),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            eq_token: Eq,
                                                                                            right: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: vr_div10,
                                                                                                                span: bytes(23423..23431),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                        Some(
                                                                                            Semi,
                                                                                        ),
                                                                                    ),
                                                                                    Stmt::Expr(
                                                                                        Expr::Assign {
                                                                                            attrs: [],
                                                                                            left: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: vp,
                                                                                                                span: bytes(23445..23447),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            eq_token: Eq,
                                                                                            right: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: vp_div10,
                                                                                                                span: bytes(23450..23458),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                        Some(
                                                                                            Semi,
                                                                                        ),
                                                                                    ),
                                                                                    Stmt::Expr(
                                                                                        Expr::Assign {
                                                                                            attrs: [],
                                                                                            left: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: vm,
                                                                                                                span: bytes(23472..23474),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            eq_token: Eq,
                                                                                            right: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: vm_div10,
                                                                                                                span: bytes(23477..23485),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                        Some(
                                                                                            Semi,
                                                                                        ),
                                                                                    ),
                                                                                    Stmt::Expr(
                                                                                        Expr::Binary {
                                                                                            attrs: [],
                                                                                            left: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: removed,
                                                                                                                span: bytes(23499..23506),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            op: BinOp::AddAssign(
                                                                                                PlusEq,
                                                                                            ),
                                                                                            right: Expr::Lit {
                                                                                                attrs: [],
                                                                                                lit: Lit::Int {
                                                                                                    token: 1,
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                        Some(
                                                                                            Semi,
                                                                                        ),
                                                                                    ),
                                                                                ],
                                                                            },
                                                                        },
                                                                        None,
                                                                    ),
                                                                    Stmt::Expr(
                                                                        Expr::Binary {
                                                                            attrs: [],
                                                                            left: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: vr,
                                                                                                span: bytes(23613..23615),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            op: BinOp::Add(
                                                                                Plus,
                                                                            ),
                                                                            right: Expr::Cast {
                                                                                attrs: [],
                                                                                expr: Expr::Paren {
                                                                                    attrs: [],
                                                                                    paren_token: Paren,
                                                                                    expr: Expr::Binary {
                                                                                        attrs: [],
                                                                                        left: Expr::Binary {
                                                                                            attrs: [],
                                                                                            left: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: vr,
                                                                                                                span: bytes(23619..23621),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            op: BinOp::Eq(
                                                                                                EqEq,
                                                                                            ),
                                                                                            right: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: vm,
                                                                                                                span: bytes(23625..23627),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                        op: BinOp::Or(
                                                                                            OrOr,
                                                                                        ),
                                                                                        right: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: round_up,
                                                                                                            span: bytes(23631..23639),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                },
                                                                                as_token: As,
                                                                                ty: Type::Path {
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: u64,
                                                                                                    span: bytes(23644..23647),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            },
                                                                        },
                                                                        None,
                                                                    ),
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                ),
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: exp,
                                            span: bytes(23663..23666),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Binary {
                                                attrs: [],
                                                left: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: e10,
                                                                    span: bytes(23669..23672),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                op: BinOp::Add(
                                                    Plus,
                                                ),
                                                right: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: removed,
                                                                    span: bytes(23675..23682),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Expr(
                                    Expr::Struct {
                                        attrs: [],
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: FloatingDecimal64,
                                                        span: bytes(23689..23706),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                        brace_token: Brace,
                                        fields: [
                                            FieldValue {
                                                attrs: [],
                                                member: Member::Named(
                                                    Ident {
                                                        sym: exponent,
                                                        span: bytes(23717..23725),
                                                    },
                                                ),
                                                colon_token: Some(
                                                    Colon,
                                                ),
                                                expr: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: exp,
                                                                    span: bytes(23727..23730),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                            Comma,
                                            FieldValue {
                                                attrs: [],
                                                member: Member::Named(
                                                    Ident {
                                                        sym: mantissa,
                                                        span: bytes(23740..23748),
                                                    },
                                                ),
                                                colon_token: Some(
                                                    Colon,
                                                ),
                                                expr: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: output,
                                                                    span: bytes(23750..23756),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                            Comma,
                                        ],
                                        dot2_token: None,
                                        rest: None,
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: PubT,
            },
        ),
    },
    "ryu::pretty::mantissa::write_mantissa": FnData {
        fn_name: "write_mantissa",
        complete_fn_name: "ryu::pretty::mantissa::write_mantissa",
        fn_type: Fn(
            FnItem {
                fn_name: Name {
                    name: "write_mantissa",
                    complete_name: "ryu::pretty::mantissa::write_mantissa",
                    import_name: MyPath {
                        name: "ryu",
                        next: Some(
                            MyPath {
                                name: "pretty",
                                next: Some(
                                    MyPath {
                                        name: "mantissa",
                                        next: Some(
                                            MyPath {
                                                name: "write_mantissa",
                                                next: None,
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "write_mantissa",
                item: Some(
                    ItemFn {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::List {
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: cfg_attr,
                                                    span: bytes(87068..87076),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                    delimiter: MacroDelimiter::Paren(
                                        Paren,
                                    ),
                                    tokens: TokenStream [
                                        Ident {
                                            sym: feature,
                                            span: bytes(87077..87084),
                                        },
                                        Punct {
                                            char: '=',
                                            spacing: Alone,
                                            span: bytes(87085..87086),
                                        },
                                        Literal {
                                            lit: "no-panic",
                                            span: bytes(87087..87097),
                                        },
                                        Punct {
                                            char: ',',
                                            spacing: Alone,
                                            span: bytes(87097..87098),
                                        },
                                        Ident {
                                            sym: inline,
                                            span: bytes(87099..87105),
                                        },
                                    ],
                                },
                            },
                        ],
                        vis: Visibility::Public(
                            Pub,
                        ),
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: Some(
                                Unsafe,
                            ),
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: write_mantissa,
                                span: bytes(87122..87136),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            ident: Ident {
                                                sym: output,
                                                span: bytes(87141..87147),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u32,
                                                            span: bytes(87149..87152),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                                Comma,
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            ident: Ident {
                                                sym: result,
                                                span: bytes(87158..87164),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Ptr {
                                            star_token: Star,
                                            const_token: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: u8,
                                                                span: bytes(87171..87173),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Default,
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Expr(
                                    Expr::While {
                                        attrs: [],
                                        label: None,
                                        while_token: While,
                                        cond: Expr::Binary {
                                            attrs: [],
                                            left: Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: output,
                                                                span: bytes(87187..87193),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            op: BinOp::Ge(
                                                Ge,
                                            ),
                                            right: Expr::Lit {
                                                attrs: [],
                                                lit: Lit::Int {
                                                    token: 10_000,
                                                },
                                            },
                                        },
                                        body: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: c,
                                                            span: bytes(87218..87219),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: output,
                                                                                    span: bytes(87222..87228),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                op: BinOp::Sub(
                                                                    Minus,
                                                                ),
                                                                right: Expr::Binary {
                                                                    attrs: [],
                                                                    left: Expr::Lit {
                                                                        attrs: [],
                                                                        lit: Lit::Int {
                                                                            token: 10_000,
                                                                        },
                                                                    },
                                                                    op: BinOp::Mul(
                                                                        Star,
                                                                    ),
                                                                    right: Expr::Paren {
                                                                        attrs: [],
                                                                        paren_token: Paren,
                                                                        expr: Expr::Binary {
                                                                            attrs: [],
                                                                            left: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: output,
                                                                                                span: bytes(87241..87247),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            op: BinOp::Div(
                                                                                Slash,
                                                                            ),
                                                                            right: Expr::Lit {
                                                                                attrs: [],
                                                                                lit: Lit::Int {
                                                                                    token: 10_000,
                                                                                },
                                                                            },
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Expr(
                                                    Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: output,
                                                                            span: bytes(87267..87273),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        op: BinOp::DivAssign(
                                                            SlashEq,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 10_000,
                                                            },
                                                        },
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: c0,
                                                            span: bytes(87297..87299),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Paren {
                                                                    attrs: [],
                                                                    paren_token: Paren,
                                                                    expr: Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: c,
                                                                                            span: bytes(87303..87304),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        op: BinOp::Rem(
                                                                            Percent,
                                                                        ),
                                                                        right: Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Int {
                                                                                token: 100,
                                                                            },
                                                                        },
                                                                    },
                                                                },
                                                                op: BinOp::Shl(
                                                                    Shl,
                                                                ),
                                                                right: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 1,
                                                                    },
                                                                },
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: c1,
                                                            span: bytes(87330..87332),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Paren {
                                                                    attrs: [],
                                                                    paren_token: Paren,
                                                                    expr: Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: c,
                                                                                            span: bytes(87336..87337),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        op: BinOp::Div(
                                                                            Slash,
                                                                        ),
                                                                        right: Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Int {
                                                                                token: 100,
                                                                            },
                                                                        },
                                                                    },
                                                                },
                                                                op: BinOp::Shl(
                                                                    Shl,
                                                                ),
                                                                right: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 1,
                                                                    },
                                                                },
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Expr(
                                                    Expr::Call {
                                                        attrs: [],
                                                        func: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: ptr,
                                                                            span: bytes(87359..87362),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: copy_nonoverlapping,
                                                                            span: bytes(87364..87383),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        paren_token: Paren,
                                                        args: [
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::MethodCall {
                                                                    attrs: [],
                                                                    receiver: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: DIGIT_TABLE,
                                                                                        span: bytes(87397..87408),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    method: Ident {
                                                                        sym: as_ptr,
                                                                        span: bytes(87409..87415),
                                                                    },
                                                                    turbofish: None,
                                                                    paren_token: Paren,
                                                                    args: [],
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: offset,
                                                                    span: bytes(87418..87424),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Cast {
                                                                        attrs: [],
                                                                        expr: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: c0,
                                                                                            span: bytes(87425..87427),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        as_token: As,
                                                                        ty: Type::Path {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: isize,
                                                                                            span: bytes(87431..87436),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            Comma,
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: result,
                                                                                    span: bytes(87451..87457),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: offset,
                                                                    span: bytes(87458..87464),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Unary {
                                                                        attrs: [],
                                                                        op: UnOp::Neg(
                                                                            Minus,
                                                                        ),
                                                                        expr: Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Int {
                                                                                token: 2,
                                                                            },
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            Comma,
                                                            Expr::Lit {
                                                                attrs: [],
                                                                lit: Lit::Int {
                                                                    token: 2,
                                                                },
                                                            },
                                                            Comma,
                                                        ],
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                                Stmt::Expr(
                                                    Expr::Call {
                                                        attrs: [],
                                                        func: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: ptr,
                                                                            span: bytes(87504..87507),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: copy_nonoverlapping,
                                                                            span: bytes(87509..87528),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        paren_token: Paren,
                                                        args: [
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::MethodCall {
                                                                    attrs: [],
                                                                    receiver: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: DIGIT_TABLE,
                                                                                        span: bytes(87542..87553),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    method: Ident {
                                                                        sym: as_ptr,
                                                                        span: bytes(87554..87560),
                                                                    },
                                                                    turbofish: None,
                                                                    paren_token: Paren,
                                                                    args: [],
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: offset,
                                                                    span: bytes(87563..87569),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Cast {
                                                                        attrs: [],
                                                                        expr: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: c1,
                                                                                            span: bytes(87570..87572),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        as_token: As,
                                                                        ty: Type::Path {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: isize,
                                                                                            span: bytes(87576..87581),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            Comma,
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: result,
                                                                                    span: bytes(87596..87602),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: offset,
                                                                    span: bytes(87603..87609),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Unary {
                                                                        attrs: [],
                                                                        op: UnOp::Neg(
                                                                            Minus,
                                                                        ),
                                                                        expr: Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Int {
                                                                                token: 4,
                                                                            },
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            Comma,
                                                            Expr::Lit {
                                                                attrs: [],
                                                                lit: Lit::Int {
                                                                    token: 2,
                                                                },
                                                            },
                                                            Comma,
                                                        ],
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                                Stmt::Expr(
                                                    Expr::Assign {
                                                        attrs: [],
                                                        left: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: result,
                                                                            span: bytes(87649..87655),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        eq_token: Eq,
                                                        right: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: result,
                                                                                span: bytes(87658..87664),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: offset,
                                                                span: bytes(87665..87671),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Unary {
                                                                    attrs: [],
                                                                    op: UnOp::Neg(
                                                                        Minus,
                                                                    ),
                                                                    expr: Expr::Lit {
                                                                        attrs: [],
                                                                        lit: Lit::Int {
                                                                            token: 4,
                                                                        },
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                            ],
                                        },
                                    },
                                    None,
                                ),
                                Stmt::Expr(
                                    Expr::If {
                                        attrs: [],
                                        if_token: If,
                                        cond: Expr::Binary {
                                            attrs: [],
                                            left: Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: output,
                                                                span: bytes(87690..87696),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            op: BinOp::Ge(
                                                Ge,
                                            ),
                                            right: Expr::Lit {
                                                attrs: [],
                                                lit: Lit::Int {
                                                    token: 100,
                                                },
                                            },
                                        },
                                        then_branch: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: c,
                                                            span: bytes(87718..87719),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Paren {
                                                                    attrs: [],
                                                                    paren_token: Paren,
                                                                    expr: Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: output,
                                                                                            span: bytes(87723..87729),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        op: BinOp::Rem(
                                                                            Percent,
                                                                        ),
                                                                        right: Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Int {
                                                                                token: 100,
                                                                            },
                                                                        },
                                                                    },
                                                                },
                                                                op: BinOp::Shl(
                                                                    Shl,
                                                                ),
                                                                right: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 1,
                                                                    },
                                                                },
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Expr(
                                                    Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: output,
                                                                            span: bytes(87751..87757),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        op: BinOp::DivAssign(
                                                            SlashEq,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 100,
                                                            },
                                                        },
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                                Stmt::Expr(
                                                    Expr::Call {
                                                        attrs: [],
                                                        func: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: ptr,
                                                                            span: bytes(87774..87777),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: copy_nonoverlapping,
                                                                            span: bytes(87779..87798),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        paren_token: Paren,
                                                        args: [
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::MethodCall {
                                                                    attrs: [],
                                                                    receiver: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: DIGIT_TABLE,
                                                                                        span: bytes(87812..87823),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    method: Ident {
                                                                        sym: as_ptr,
                                                                        span: bytes(87824..87830),
                                                                    },
                                                                    turbofish: None,
                                                                    paren_token: Paren,
                                                                    args: [],
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: offset,
                                                                    span: bytes(87833..87839),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Cast {
                                                                        attrs: [],
                                                                        expr: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: c,
                                                                                            span: bytes(87840..87841),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        as_token: As,
                                                                        ty: Type::Path {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: isize,
                                                                                            span: bytes(87845..87850),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            Comma,
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: result,
                                                                                    span: bytes(87865..87871),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: offset,
                                                                    span: bytes(87872..87878),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Unary {
                                                                        attrs: [],
                                                                        op: UnOp::Neg(
                                                                            Minus,
                                                                        ),
                                                                        expr: Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Int {
                                                                                token: 2,
                                                                            },
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            Comma,
                                                            Expr::Lit {
                                                                attrs: [],
                                                                lit: Lit::Int {
                                                                    token: 2,
                                                                },
                                                            },
                                                            Comma,
                                                        ],
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                                Stmt::Expr(
                                                    Expr::Assign {
                                                        attrs: [],
                                                        left: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: result,
                                                                            span: bytes(87918..87924),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        eq_token: Eq,
                                                        right: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: result,
                                                                                span: bytes(87927..87933),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: offset,
                                                                span: bytes(87934..87940),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Unary {
                                                                    attrs: [],
                                                                    op: UnOp::Neg(
                                                                        Minus,
                                                                    ),
                                                                    expr: Expr::Lit {
                                                                        attrs: [],
                                                                        lit: Lit::Int {
                                                                            token: 2,
                                                                        },
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                            ],
                                        },
                                        else_branch: None,
                                    },
                                    None,
                                ),
                                Stmt::Expr(
                                    Expr::If {
                                        attrs: [],
                                        if_token: If,
                                        cond: Expr::Binary {
                                            attrs: [],
                                            left: Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: output,
                                                                span: bytes(87959..87965),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            op: BinOp::Ge(
                                                Ge,
                                            ),
                                            right: Expr::Lit {
                                                attrs: [],
                                                lit: Lit::Int {
                                                    token: 10,
                                                },
                                            },
                                        },
                                        then_branch: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: c,
                                                            span: bytes(87986..87987),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: output,
                                                                                    span: bytes(87990..87996),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                op: BinOp::Shl(
                                                                    Shl,
                                                                ),
                                                                right: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 1,
                                                                    },
                                                                },
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Expr(
                                                    Expr::Call {
                                                        attrs: [],
                                                        func: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: ptr,
                                                                            span: bytes(88011..88014),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: copy_nonoverlapping,
                                                                            span: bytes(88016..88035),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        paren_token: Paren,
                                                        args: [
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::MethodCall {
                                                                    attrs: [],
                                                                    receiver: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: DIGIT_TABLE,
                                                                                        span: bytes(88049..88060),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    method: Ident {
                                                                        sym: as_ptr,
                                                                        span: bytes(88061..88067),
                                                                    },
                                                                    turbofish: None,
                                                                    paren_token: Paren,
                                                                    args: [],
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: offset,
                                                                    span: bytes(88070..88076),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Cast {
                                                                        attrs: [],
                                                                        expr: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: c,
                                                                                            span: bytes(88077..88078),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        as_token: As,
                                                                        ty: Type::Path {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: isize,
                                                                                            span: bytes(88082..88087),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            Comma,
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: result,
                                                                                    span: bytes(88102..88108),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: offset,
                                                                    span: bytes(88109..88115),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Unary {
                                                                        attrs: [],
                                                                        op: UnOp::Neg(
                                                                            Minus,
                                                                        ),
                                                                        expr: Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Int {
                                                                                token: 2,
                                                                            },
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            Comma,
                                                            Expr::Lit {
                                                                attrs: [],
                                                                lit: Lit::Int {
                                                                    token: 2,
                                                                },
                                                            },
                                                            Comma,
                                                        ],
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                            ],
                                        },
                                        else_branch: Some(
                                            (
                                                Else,
                                                Expr::Block {
                                                    attrs: [],
                                                    label: None,
                                                    block: Block {
                                                        brace_token: Brace,
                                                        stmts: [
                                                            Stmt::Expr(
                                                                Expr::Assign {
                                                                    attrs: [],
                                                                    left: Expr::Unary {
                                                                        attrs: [],
                                                                        op: UnOp::Deref(
                                                                            Star,
                                                                        ),
                                                                        expr: Expr::MethodCall {
                                                                            attrs: [],
                                                                            receiver: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: result,
                                                                                                span: bytes(88169..88175),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            dot_token: Dot,
                                                                            method: Ident {
                                                                                sym: offset,
                                                                                span: bytes(88176..88182),
                                                                            },
                                                                            turbofish: None,
                                                                            paren_token: Paren,
                                                                            args: [
                                                                                Expr::Unary {
                                                                                    attrs: [],
                                                                                    op: UnOp::Neg(
                                                                                        Minus,
                                                                                    ),
                                                                                    expr: Expr::Lit {
                                                                                        attrs: [],
                                                                                        lit: Lit::Int {
                                                                                            token: 1,
                                                                                        },
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    eq_token: Eq,
                                                                    right: Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Byte {
                                                                                token: b'0',
                                                                            },
                                                                        },
                                                                        op: BinOp::Add(
                                                                            Plus,
                                                                        ),
                                                                        right: Expr::Cast {
                                                                            attrs: [],
                                                                            expr: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: output,
                                                                                                span: bytes(88196..88202),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            as_token: As,
                                                                            ty: Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: u8,
                                                                                                span: bytes(88206..88208),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        },
                                                                    },
                                                                },
                                                                Some(
                                                                    Semi,
                                                                ),
                                                            ),
                                                        ],
                                                    },
                                                },
                                            ),
                                        ),
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: PubT,
            },
        ),
    },
    "ryu::buffer::Buffer::new": FnData {
        fn_name: "new",
        complete_fn_name: "ryu::buffer::Buffer::new",
        fn_type: ImplFn(
            ImplFnItem {
                fn_name: Name {
                    name: "new",
                    complete_name: "ryu::buffer::Buffer::new",
                    import_name: MyPath {
                        name: "ryu",
                        next: Some(
                            MyPath {
                                name: "buffer",
                                next: Some(
                                    MyPath {
                                        name: "Buffer",
                                        next: Some(
                                            MyPath {
                                                name: "new",
                                                next: None,
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "{impl#0}::new",
                item: Some(
                    ImplItemFn {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident {
                                                sym: inline,
                                                span: bytes(4687..4693),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                    ],
                                },
                            },
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::List {
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: cfg_attr,
                                                    span: bytes(4701..4709),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                    delimiter: MacroDelimiter::Paren(
                                        Paren,
                                    ),
                                    tokens: TokenStream [
                                        Ident {
                                            sym: feature,
                                            span: bytes(4710..4717),
                                        },
                                        Punct {
                                            char: '=',
                                            spacing: Alone,
                                            span: bytes(4718..4719),
                                        },
                                        Literal {
                                            lit: "no-panic",
                                            span: bytes(4720..4730),
                                        },
                                        Punct {
                                            char: ',',
                                            spacing: Alone,
                                            span: bytes(4730..4731),
                                        },
                                        Ident {
                                            sym: no_panic,
                                            span: bytes(4732..4740),
                                        },
                                    ],
                                },
                            },
                        ],
                        vis: Visibility::Public(
                            Pub,
                        ),
                        defaultness: None,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: new,
                                span: bytes(4754..4757),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: Self,
                                                    span: bytes(4763..4767),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: bytes,
                                            span: bytes(4782..4787),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Repeat {
                                                attrs: [],
                                                bracket_token: Bracket,
                                                expr: Expr::Call {
                                                    attrs: [],
                                                    func: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: MaybeUninit,
                                                                        span: bytes(4791..4802),
                                                                    },
                                                                    arguments: PathArguments::AngleBracketed {
                                                                        colon2_token: Some(
                                                                            PathSep,
                                                                        ),
                                                                        lt_token: Lt,
                                                                        args: [
                                                                            GenericArgument::Type(
                                                                                Type::Path {
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: u8,
                                                                                                    span: bytes(4805..4807),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            ),
                                                                        ],
                                                                        gt_token: Gt,
                                                                    },
                                                                },
                                                                PathSep,
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: uninit,
                                                                        span: bytes(4810..4816),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    paren_token: Paren,
                                                    args: [],
                                                },
                                                semi_token: Semi,
                                                len: Expr::Lit {
                                                    attrs: [],
                                                    lit: Lit::Int {
                                                        token: 24,
                                                    },
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Expr(
                                    Expr::Struct {
                                        attrs: [],
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: Buffer,
                                                        span: bytes(4833..4839),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                        brace_token: Brace,
                                        fields: [
                                            FieldValue {
                                                attrs: [],
                                                member: Member::Named(
                                                    Ident {
                                                        sym: bytes,
                                                        span: bytes(4842..4847),
                                                    },
                                                ),
                                                colon_token: None,
                                                expr: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: bytes,
                                                                    span: bytes(4842..4847),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ],
                                        dot2_token: None,
                                        rest: None,
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: PubT,
                is_constructor: true,
            },
            ImplItem {
                impl_num: 0,
                struct_name: Name {
                    name: "Buffer",
                    complete_name: "ryu::buffer::Buffer",
                    import_name: MyPath {
                        name: "ryu",
                        next: Some(
                            MyPath {
                                name: "buffer",
                                next: Some(
                                    MyPath {
                                        name: "Buffer",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                trait_name: None,
                item: Some(
                    ItemImpl {
                        attrs: [],
                        defaultness: None,
                        unsafety: None,
                        impl_token: Impl,
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        trait_: None,
                        self_ty: Type::Path {
                            qself: None,
                            path: Path {
                                leading_colon: None,
                                segments: [
                                    PathSegment {
                                        ident: Ident {
                                            sym: Buffer,
                                            span: bytes(4567..4573),
                                        },
                                        arguments: PathArguments::None,
                                    },
                                ],
                            },
                        },
                        brace_token: Brace,
                        items: [],
                    },
                ),
                types: [],
                consts: [],
                functions: [
                    ImplFnItem {
                        fn_name: Name {
                            name: "new",
                            complete_name: "ryu::buffer::Buffer::new",
                            import_name: MyPath {
                                name: "ryu",
                                next: Some(
                                    MyPath {
                                        name: "buffer",
                                        next: Some(
                                            MyPath {
                                                name: "Buffer",
                                                next: Some(
                                                    MyPath {
                                                        name: "new",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#0}::new",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(4687..4693),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::List {
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: cfg_attr,
                                                            span: bytes(4701..4709),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                            delimiter: MacroDelimiter::Paren(
                                                Paren,
                                            ),
                                            tokens: TokenStream [
                                                Ident {
                                                    sym: feature,
                                                    span: bytes(4710..4717),
                                                },
                                                Punct {
                                                    char: '=',
                                                    spacing: Alone,
                                                    span: bytes(4718..4719),
                                                },
                                                Literal {
                                                    lit: "no-panic",
                                                    span: bytes(4720..4730),
                                                },
                                                Punct {
                                                    char: ',',
                                                    spacing: Alone,
                                                    span: bytes(4730..4731),
                                                },
                                                Ident {
                                                    sym: no_panic,
                                                    span: bytes(4732..4740),
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: new,
                                        span: bytes(4754..4757),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Self,
                                                            span: bytes(4763..4767),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: None,
                                                ident: Ident {
                                                    sym: bytes,
                                                    span: bytes(4782..4787),
                                                },
                                                subpat: None,
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Repeat {
                                                        attrs: [],
                                                        bracket_token: Bracket,
                                                        expr: Expr::Call {
                                                            attrs: [],
                                                            func: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: MaybeUninit,
                                                                                span: bytes(4791..4802),
                                                                            },
                                                                            arguments: PathArguments::AngleBracketed {
                                                                                colon2_token: Some(
                                                                                    PathSep,
                                                                                ),
                                                                                lt_token: Lt,
                                                                                args: [
                                                                                    GenericArgument::Type(
                                                                                        Type::Path {
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: u8,
                                                                                                            span: bytes(4805..4807),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                                gt_token: Gt,
                                                                            },
                                                                        },
                                                                        PathSep,
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: uninit,
                                                                                span: bytes(4810..4816),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            paren_token: Paren,
                                                            args: [],
                                                        },
                                                        semi_token: Semi,
                                                        len: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 24,
                                                            },
                                                        },
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Expr(
                                            Expr::Struct {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Buffer,
                                                                span: bytes(4833..4839),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                brace_token: Brace,
                                                fields: [
                                                    FieldValue {
                                                        attrs: [],
                                                        member: Member::Named(
                                                            Ident {
                                                                sym: bytes,
                                                                span: bytes(4842..4847),
                                                            },
                                                        ),
                                                        colon_token: None,
                                                        expr: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: bytes,
                                                                            span: bytes(4842..4847),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                ],
                                                dot2_token: None,
                                                rest: None,
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                        is_constructor: true,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "format",
                            complete_name: "ryu::buffer::Buffer::format",
                            import_name: MyPath {
                                name: "ryu",
                                next: Some(
                                    MyPath {
                                        name: "buffer",
                                        next: Some(
                                            MyPath {
                                                name: "Buffer",
                                                next: Some(
                                                    MyPath {
                                                        name: "format",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#0}::format",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::List {
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: cfg_attr,
                                                            span: bytes(5376..5384),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                            delimiter: MacroDelimiter::Paren(
                                                Paren,
                                            ),
                                            tokens: TokenStream [
                                                Ident {
                                                    sym: feature,
                                                    span: bytes(5385..5392),
                                                },
                                                Punct {
                                                    char: '=',
                                                    spacing: Alone,
                                                    span: bytes(5393..5394),
                                                },
                                                Literal {
                                                    lit: "no-panic",
                                                    span: bytes(5395..5405),
                                                },
                                                Punct {
                                                    char: ',',
                                                    spacing: Alone,
                                                    span: bytes(5405..5406),
                                                },
                                                Ident {
                                                    sym: inline,
                                                    span: bytes(5407..5413),
                                                },
                                            ],
                                        },
                                    },
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::List {
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: cfg_attr,
                                                            span: bytes(5422..5430),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                            delimiter: MacroDelimiter::Paren(
                                                Paren,
                                            ),
                                            tokens: TokenStream [
                                                Ident {
                                                    sym: feature,
                                                    span: bytes(5431..5438),
                                                },
                                                Punct {
                                                    char: '=',
                                                    spacing: Alone,
                                                    span: bytes(5439..5440),
                                                },
                                                Literal {
                                                    lit: "no-panic",
                                                    span: bytes(5441..5451),
                                                },
                                                Punct {
                                                    char: ',',
                                                    spacing: Alone,
                                                    span: bytes(5451..5452),
                                                },
                                                Ident {
                                                    sym: no_panic,
                                                    span: bytes(5453..5461),
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: format,
                                        span: bytes(5475..5481),
                                    },
                                    generics: Generics {
                                        lt_token: Some(
                                            Lt,
                                        ),
                                        params: [
                                            GenericParam::Type(
                                                TypeParam {
                                                    attrs: [],
                                                    ident: Ident {
                                                        sym: F,
                                                        span: bytes(5482..5483),
                                                    },
                                                    colon_token: Some(
                                                        Colon,
                                                    ),
                                                    bounds: [
                                                        TypeParamBound::Trait(
                                                            TraitBound {
                                                                paren_token: None,
                                                                modifier: TraitBoundModifier::None,
                                                                lifetimes: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Float,
                                                                                span: bytes(5485..5490),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    eq_token: None,
                                                    default: None,
                                                },
                                            ),
                                        ],
                                        gt_token: Some(
                                            Gt,
                                        ),
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(5497..5501),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: f,
                                                        span: bytes(5503..5504),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: F,
                                                                    span: bytes(5506..5507),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: None,
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: str,
                                                                span: bytes(5513..5516),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                        is_constructor: false,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "format_finite",
                            complete_name: "ryu::buffer::Buffer::format_finite",
                            import_name: MyPath {
                                name: "ryu",
                                next: Some(
                                    MyPath {
                                        name: "buffer",
                                        next: Some(
                                            MyPath {
                                                name: "Buffer",
                                                next: Some(
                                                    MyPath {
                                                        name: "format_finite",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#0}::format_finite",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(6327..6333),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::List {
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: cfg_attr,
                                                            span: bytes(6341..6349),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                            delimiter: MacroDelimiter::Paren(
                                                Paren,
                                            ),
                                            tokens: TokenStream [
                                                Ident {
                                                    sym: feature,
                                                    span: bytes(6350..6357),
                                                },
                                                Punct {
                                                    char: '=',
                                                    spacing: Alone,
                                                    span: bytes(6358..6359),
                                                },
                                                Literal {
                                                    lit: "no-panic",
                                                    span: bytes(6360..6370),
                                                },
                                                Punct {
                                                    char: ',',
                                                    spacing: Alone,
                                                    span: bytes(6370..6371),
                                                },
                                                Ident {
                                                    sym: no_panic,
                                                    span: bytes(6372..6380),
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: format_finite,
                                        span: bytes(6394..6407),
                                    },
                                    generics: Generics {
                                        lt_token: Some(
                                            Lt,
                                        ),
                                        params: [
                                            GenericParam::Type(
                                                TypeParam {
                                                    attrs: [],
                                                    ident: Ident {
                                                        sym: F,
                                                        span: bytes(6408..6409),
                                                    },
                                                    colon_token: Some(
                                                        Colon,
                                                    ),
                                                    bounds: [
                                                        TypeParamBound::Trait(
                                                            TraitBound {
                                                                paren_token: None,
                                                                modifier: TraitBoundModifier::None,
                                                                lifetimes: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Float,
                                                                                span: bytes(6411..6416),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    eq_token: None,
                                                    default: None,
                                                },
                                            ),
                                        ],
                                        gt_token: Some(
                                            Gt,
                                        ),
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(6423..6427),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: f,
                                                        span: bytes(6429..6430),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: F,
                                                                    span: bytes(6432..6433),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: None,
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: str,
                                                                span: bytes(6439..6442),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                        is_constructor: false,
                    },
                ],
                relative_types: [],
            },
        ),
    },
    "ryu::f2s_intrinsics::pow5factor_32": FnData {
        fn_name: "pow5factor_32",
        complete_fn_name: "ryu::f2s_intrinsics::pow5factor_32",
        fn_type: Fn(
            FnItem {
                fn_name: Name {
                    name: "pow5factor_32",
                    complete_name: "ryu::f2s_intrinsics::pow5factor_32",
                    import_name: MyPath {
                        name: "ryu",
                        next: Some(
                            MyPath {
                                name: "f2s_intrinsics",
                                next: Some(
                                    MyPath {
                                        name: "pow5factor_32",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "pow5factor_32",
                item: Some(
                    ItemFn {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::List {
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: cfg_attr,
                                                    span: bytes(73954..73962),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                    delimiter: MacroDelimiter::Paren(
                                        Paren,
                                    ),
                                    tokens: TokenStream [
                                        Ident {
                                            sym: feature,
                                            span: bytes(73963..73970),
                                        },
                                        Punct {
                                            char: '=',
                                            spacing: Alone,
                                            span: bytes(73971..73972),
                                        },
                                        Literal {
                                            lit: "no-panic",
                                            span: bytes(73973..73983),
                                        },
                                        Punct {
                                            char: ',',
                                            spacing: Alone,
                                            span: bytes(73983..73984),
                                        },
                                        Ident {
                                            sym: inline,
                                            span: bytes(73985..73991),
                                        },
                                    ],
                                },
                            },
                        ],
                        vis: Visibility::Inherited,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: pow5factor_32,
                                span: bytes(73997..74010),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            ident: Ident {
                                                sym: value,
                                                span: bytes(74015..74020),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u32,
                                                            span: bytes(74022..74025),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: u32,
                                                    span: bytes(74030..74033),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: Some(
                                            Mut,
                                        ),
                                        ident: Ident {
                                            sym: count,
                                            span: bytes(74048..74053),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Lit {
                                                attrs: [],
                                                lit: Lit::Int {
                                                    token: 0u32,
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Expr(
                                    Expr::Loop {
                                        attrs: [],
                                        label: None,
                                        loop_token: Loop,
                                        body: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Macro {
                                                    attrs: [],
                                                    mac: Macro {
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: debug_assert,
                                                                        span: bytes(74081..74093),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                        bang_token: Not,
                                                        delimiter: MacroDelimiter::Paren(
                                                            Paren,
                                                        ),
                                                        tokens: TokenStream [
                                                            Ident {
                                                                sym: value,
                                                                span: bytes(74095..74100),
                                                            },
                                                            Punct {
                                                                char: '!',
                                                                spacing: Joint,
                                                                span: bytes(74101..74102),
                                                            },
                                                            Punct {
                                                                char: '=',
                                                                spacing: Alone,
                                                                span: bytes(74102..74103),
                                                            },
                                                            Literal {
                                                                lit: 0,
                                                                span: bytes(74104..74105),
                                                            },
                                                        ],
                                                    },
                                                    semi_token: Some(
                                                        Semi,
                                                    ),
                                                },
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: q,
                                                            span: bytes(74120..74121),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: value,
                                                                                    span: bytes(74124..74129),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                op: BinOp::Div(
                                                                    Slash,
                                                                ),
                                                                right: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 5,
                                                                    },
                                                                },
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: r,
                                                            span: bytes(74147..74148),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: value,
                                                                                    span: bytes(74151..74156),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                op: BinOp::Rem(
                                                                    Percent,
                                                                ),
                                                                right: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 5,
                                                                    },
                                                                },
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Expr(
                                                    Expr::If {
                                                        attrs: [],
                                                        if_token: If,
                                                        cond: Expr::Binary {
                                                            attrs: [],
                                                            left: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: r,
                                                                                span: bytes(74173..74174),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            op: BinOp::Ne(
                                                                Ne,
                                                            ),
                                                            right: Expr::Lit {
                                                                attrs: [],
                                                                lit: Lit::Int {
                                                                    token: 0,
                                                                },
                                                            },
                                                        },
                                                        then_branch: Block {
                                                            brace_token: Brace,
                                                            stmts: [
                                                                Stmt::Expr(
                                                                    Expr::Break {
                                                                        attrs: [],
                                                                        break_token: Break,
                                                                        label: None,
                                                                        expr: None,
                                                                    },
                                                                    Some(
                                                                        Semi,
                                                                    ),
                                                                ),
                                                            ],
                                                        },
                                                        else_branch: None,
                                                    },
                                                    None,
                                                ),
                                                Stmt::Expr(
                                                    Expr::Assign {
                                                        attrs: [],
                                                        left: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: value,
                                                                            span: bytes(74219..74224),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        eq_token: Eq,
                                                        right: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: q,
                                                                            span: bytes(74227..74228),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                                Stmt::Expr(
                                                    Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: count,
                                                                            span: bytes(74238..74243),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        op: BinOp::AddAssign(
                                                            PlusEq,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 1,
                                                            },
                                                        },
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                            ],
                                        },
                                    },
                                    None,
                                ),
                                Stmt::Expr(
                                    Expr::Path {
                                        attrs: [],
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: count,
                                                        span: bytes(74260..74265),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: Pri,
            },
        ),
    },
    "< as ryu::buffer::Sealed>::is_nonfinite": FnData {
        fn_name: "is_nonfinite",
        complete_fn_name: "< as ryu::buffer::Sealed>::is_nonfinite",
        fn_type: ImplFn(
            ImplFnItem {
                fn_name: Name {
                    name: "is_nonfinite",
                    complete_name: "< as ryu::buffer::Sealed>::is_nonfinite",
                    import_name: MyPath {
                        name: "< as ryu",
                        next: Some(
                            MyPath {
                                name: "buffer",
                                next: Some(
                                    MyPath {
                                        name: "Sealed>",
                                        next: Some(
                                            MyPath {
                                                name: "is_nonfinite",
                                                next: None,
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "{impl#7}::is_nonfinite",
                item: Some(
                    ImplItemFn {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident {
                                                sym: inline,
                                                span: bytes(8325..8331),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                    ],
                                },
                            },
                        ],
                        vis: Visibility::Inherited,
                        defaultness: None,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: is_nonfinite,
                                span: bytes(8340..8352),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Receiver(
                                    Receiver {
                                        attrs: [],
                                        reference: None,
                                        mutability: None,
                                        self_token: SelfValue,
                                        colon_token: None,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Self,
                                                            span: bytes(8353..8357),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: bool,
                                                    span: bytes(8362..8366),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Item(
                                    Item::Const {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        const_token: Const,
                                        ident: Ident {
                                            sym: EXP_MASK,
                                            span: bytes(8383..8391),
                                        },
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u64,
                                                            span: bytes(8393..8396),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        eq_token: Eq,
                                        expr: Expr::Lit {
                                            attrs: [],
                                            lit: Lit::Int {
                                                token: 0x7ff0000000000000,
                                            },
                                        },
                                        semi_token: Semi,
                                    },
                                ),
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: bits,
                                            span: bytes(8431..8435),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::MethodCall {
                                                attrs: [],
                                                receiver: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: self,
                                                                    span: bytes(8438..8442),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                dot_token: Dot,
                                                method: Ident {
                                                    sym: to_bits,
                                                    span: bytes(8443..8450),
                                                },
                                                turbofish: None,
                                                paren_token: Paren,
                                                args: [],
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Expr(
                                    Expr::Binary {
                                        attrs: [],
                                        left: Expr::Binary {
                                            attrs: [],
                                            left: Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: bits,
                                                                span: bytes(8462..8466),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            op: BinOp::BitAnd(
                                                And,
                                            ),
                                            right: Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: EXP_MASK,
                                                                span: bytes(8469..8477),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                        op: BinOp::Eq(
                                            EqEq,
                                        ),
                                        right: Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: EXP_MASK,
                                                            span: bytes(8481..8489),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [
                    Item::Const {
                        attrs: [],
                        vis: Visibility::Inherited,
                        const_token: Const,
                        ident: Ident {
                            sym: EXP_MASK,
                            span: bytes(8383..8391),
                        },
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        colon_token: Colon,
                        ty: Type::Path {
                            qself: None,
                            path: Path {
                                leading_colon: None,
                                segments: [
                                    PathSegment {
                                        ident: Ident {
                                            sym: u64,
                                            span: bytes(8393..8396),
                                        },
                                        arguments: PathArguments::None,
                                    },
                                ],
                            },
                        },
                        eq_token: Eq,
                        expr: Expr::Lit {
                            attrs: [],
                            lit: Lit::Int {
                                token: 0x7ff0000000000000,
                            },
                        },
                        semi_token: Semi,
                    },
                ],
                visibility: Pri,
                is_constructor: false,
            },
            ImplItem {
                impl_num: 7,
                struct_name: Name {
                    name: "",
                    complete_name: "",
                    import_name: MyPath {
                        name: "",
                        next: None,
                    },
                },
                trait_name: Some(
                    Name {
                        name: "Sealed",
                        complete_name: "ryu::buffer::Sealed",
                        import_name: MyPath {
                            name: "ryu",
                            next: Some(
                                MyPath {
                                    name: "buffer",
                                    next: Some(
                                        MyPath {
                                            name: "Sealed",
                                            next: None,
                                        },
                                    ),
                                },
                            ),
                        },
                    },
                ),
                item: Some(
                    ItemImpl {
                        attrs: [],
                        defaultness: None,
                        unsafety: None,
                        impl_token: Impl,
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        trait_: Some(
                            (
                                None,
                                Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident {
                                                sym: Sealed,
                                                span: bytes(8302..8308),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                    ],
                                },
                                For,
                            ),
                        ),
                        self_ty: Type::Path {
                            qself: None,
                            path: Path {
                                leading_colon: None,
                                segments: [
                                    PathSegment {
                                        ident: Ident {
                                            sym: f64,
                                            span: bytes(8313..8316),
                                        },
                                        arguments: PathArguments::None,
                                    },
                                ],
                            },
                        },
                        brace_token: Brace,
                        items: [],
                    },
                ),
                types: [],
                consts: [],
                functions: [
                    ImplFnItem {
                        fn_name: Name {
                            name: "is_nonfinite",
                            complete_name: "< as ryu::buffer::Sealed>::is_nonfinite",
                            import_name: MyPath {
                                name: "< as ryu",
                                next: Some(
                                    MyPath {
                                        name: "buffer",
                                        next: Some(
                                            MyPath {
                                                name: "Sealed>",
                                                next: Some(
                                                    MyPath {
                                                        name: "is_nonfinite",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#7}::is_nonfinite",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(8325..8331),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: is_nonfinite,
                                        span: bytes(8340..8352),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: None,
                                                mutability: None,
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Self,
                                                                    span: bytes(8353..8357),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: bool,
                                                            span: bytes(8362..8366),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [
                            Item::Const {
                                attrs: [],
                                vis: Visibility::Inherited,
                                const_token: Const,
                                ident: Ident {
                                    sym: EXP_MASK,
                                    span: bytes(8383..8391),
                                },
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                colon_token: Colon,
                                ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: u64,
                                                    span: bytes(8393..8396),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                                eq_token: Eq,
                                expr: Expr::Lit {
                                    attrs: [],
                                    lit: Lit::Int {
                                        token: 0x7ff0000000000000,
                                    },
                                },
                                semi_token: Semi,
                            },
                        ],
                        visibility: Pri,
                        is_constructor: false,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "format_nonfinite",
                            complete_name: "< as ryu::buffer::Sealed>::format_nonfinite",
                            import_name: MyPath {
                                name: "< as ryu",
                                next: Some(
                                    MyPath {
                                        name: "buffer",
                                        next: Some(
                                            MyPath {
                                                name: "Sealed>",
                                                next: Some(
                                                    MyPath {
                                                        name: "format_nonfinite",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#7}::format_nonfinite",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: cold,
                                                        span: bytes(8503..8507),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::List {
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: cfg_attr,
                                                            span: bytes(8515..8523),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                            delimiter: MacroDelimiter::Paren(
                                                Paren,
                                            ),
                                            tokens: TokenStream [
                                                Ident {
                                                    sym: feature,
                                                    span: bytes(8524..8531),
                                                },
                                                Punct {
                                                    char: '=',
                                                    spacing: Alone,
                                                    span: bytes(8532..8533),
                                                },
                                                Literal {
                                                    lit: "no-panic",
                                                    span: bytes(8534..8544),
                                                },
                                                Punct {
                                                    char: ',',
                                                    spacing: Alone,
                                                    span: bytes(8544..8545),
                                                },
                                                Ident {
                                                    sym: inline,
                                                    span: bytes(8546..8552),
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: format_nonfinite,
                                        span: bytes(8562..8578),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: None,
                                                mutability: None,
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Self,
                                                                    span: bytes(8579..8583),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Reference {
                                            and_token: And,
                                            lifetime: Some(
                                                Lifetime {
                                                    apostrophe: bytes(8589..8590),
                                                    ident: Ident {
                                                        sym: static,
                                                        span: bytes(8590..8596),
                                                    },
                                                },
                                            ),
                                            mutability: None,
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: str,
                                                                span: bytes(8597..8600),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [
                            Item::Const {
                                attrs: [],
                                vis: Visibility::Inherited,
                                const_token: Const,
                                ident: Ident {
                                    sym: MANTISSA_MASK,
                                    span: bytes(8617..8630),
                                },
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                colon_token: Colon,
                                ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: u64,
                                                    span: bytes(8632..8635),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                                eq_token: Eq,
                                expr: Expr::Lit {
                                    attrs: [],
                                    lit: Lit::Int {
                                        token: 0x000fffffffffffff,
                                    },
                                },
                                semi_token: Semi,
                            },
                            Item::Const {
                                attrs: [],
                                vis: Visibility::Inherited,
                                const_token: Const,
                                ident: Ident {
                                    sym: SIGN_MASK,
                                    span: bytes(8672..8681),
                                },
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                colon_token: Colon,
                                ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: u64,
                                                    span: bytes(8683..8686),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                                eq_token: Eq,
                                expr: Expr::Lit {
                                    attrs: [],
                                    lit: Lit::Int {
                                        token: 0x8000000000000000,
                                    },
                                },
                                semi_token: Semi,
                            },
                        ],
                        visibility: Pri,
                        is_constructor: false,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "write_to_ryu_buffer",
                            complete_name: "< as ryu::buffer::Sealed>::write_to_ryu_buffer",
                            import_name: MyPath {
                                name: "< as ryu",
                                next: Some(
                                    MyPath {
                                        name: "buffer",
                                        next: Some(
                                            MyPath {
                                                name: "Sealed>",
                                                next: Some(
                                                    MyPath {
                                                        name: "write_to_ryu_buffer",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#7}::write_to_ryu_buffer",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(8927..8933),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: Some(
                                        Unsafe,
                                    ),
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: write_to_ryu_buffer,
                                        span: bytes(8949..8968),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: None,
                                                mutability: None,
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Self,
                                                                    span: bytes(8969..8973),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: result,
                                                        span: bytes(8975..8981),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Ptr {
                                                    star_token: Star,
                                                    const_token: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: u8,
                                                                        span: bytes(8988..8990),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: usize,
                                                            span: bytes(8995..9000),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: false,
                    },
                ],
                relative_types: [],
            },
        ),
    },
    "< as ryu::buffer::Sealed>::format_nonfinite": FnData {
        fn_name: "format_nonfinite",
        complete_fn_name: "< as ryu::buffer::Sealed>::format_nonfinite",
        fn_type: ImplFn(
            ImplFnItem {
                fn_name: Name {
                    name: "format_nonfinite",
                    complete_name: "< as ryu::buffer::Sealed>::format_nonfinite",
                    import_name: MyPath {
                        name: "< as ryu",
                        next: Some(
                            MyPath {
                                name: "buffer",
                                next: Some(
                                    MyPath {
                                        name: "Sealed>",
                                        next: Some(
                                            MyPath {
                                                name: "format_nonfinite",
                                                next: None,
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "{impl#7}::format_nonfinite",
                item: Some(
                    ImplItemFn {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident {
                                                sym: cold,
                                                span: bytes(8503..8507),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                    ],
                                },
                            },
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::List {
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: cfg_attr,
                                                    span: bytes(8515..8523),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                    delimiter: MacroDelimiter::Paren(
                                        Paren,
                                    ),
                                    tokens: TokenStream [
                                        Ident {
                                            sym: feature,
                                            span: bytes(8524..8531),
                                        },
                                        Punct {
                                            char: '=',
                                            spacing: Alone,
                                            span: bytes(8532..8533),
                                        },
                                        Literal {
                                            lit: "no-panic",
                                            span: bytes(8534..8544),
                                        },
                                        Punct {
                                            char: ',',
                                            spacing: Alone,
                                            span: bytes(8544..8545),
                                        },
                                        Ident {
                                            sym: inline,
                                            span: bytes(8546..8552),
                                        },
                                    ],
                                },
                            },
                        ],
                        vis: Visibility::Inherited,
                        defaultness: None,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: format_nonfinite,
                                span: bytes(8562..8578),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Receiver(
                                    Receiver {
                                        attrs: [],
                                        reference: None,
                                        mutability: None,
                                        self_token: SelfValue,
                                        colon_token: None,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Self,
                                                            span: bytes(8579..8583),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Reference {
                                    and_token: And,
                                    lifetime: Some(
                                        Lifetime {
                                            apostrophe: bytes(8589..8590),
                                            ident: Ident {
                                                sym: static,
                                                span: bytes(8590..8596),
                                            },
                                        },
                                    ),
                                    mutability: None,
                                    elem: Type::Path {
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: str,
                                                        span: bytes(8597..8600),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Item(
                                    Item::Const {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        const_token: Const,
                                        ident: Ident {
                                            sym: MANTISSA_MASK,
                                            span: bytes(8617..8630),
                                        },
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u64,
                                                            span: bytes(8632..8635),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        eq_token: Eq,
                                        expr: Expr::Lit {
                                            attrs: [],
                                            lit: Lit::Int {
                                                token: 0x000fffffffffffff,
                                            },
                                        },
                                        semi_token: Semi,
                                    },
                                ),
                                Stmt::Item(
                                    Item::Const {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        const_token: Const,
                                        ident: Ident {
                                            sym: SIGN_MASK,
                                            span: bytes(8672..8681),
                                        },
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u64,
                                                            span: bytes(8683..8686),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        eq_token: Eq,
                                        expr: Expr::Lit {
                                            attrs: [],
                                            lit: Lit::Int {
                                                token: 0x8000000000000000,
                                            },
                                        },
                                        semi_token: Semi,
                                    },
                                ),
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: bits,
                                            span: bytes(8721..8725),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::MethodCall {
                                                attrs: [],
                                                receiver: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: self,
                                                                    span: bytes(8728..8732),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                dot_token: Dot,
                                                method: Ident {
                                                    sym: to_bits,
                                                    span: bytes(8733..8740),
                                                },
                                                turbofish: None,
                                                paren_token: Paren,
                                                args: [],
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Expr(
                                    Expr::If {
                                        attrs: [],
                                        if_token: If,
                                        cond: Expr::Binary {
                                            attrs: [],
                                            left: Expr::Binary {
                                                attrs: [],
                                                left: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: bits,
                                                                    span: bytes(8755..8759),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                op: BinOp::BitAnd(
                                                    And,
                                                ),
                                                right: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: MANTISSA_MASK,
                                                                    span: bytes(8762..8775),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                            op: BinOp::Ne(
                                                Ne,
                                            ),
                                            right: Expr::Lit {
                                                attrs: [],
                                                lit: Lit::Int {
                                                    token: 0,
                                                },
                                            },
                                        },
                                        then_branch: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: NAN,
                                                                        span: bytes(8795..8798),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                        else_branch: Some(
                                            (
                                                Else,
                                                Expr::If {
                                                    attrs: [],
                                                    if_token: If,
                                                    cond: Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Binary {
                                                            attrs: [],
                                                            left: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: bits,
                                                                                span: bytes(8817..8821),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            op: BinOp::BitAnd(
                                                                And,
                                                            ),
                                                            right: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: SIGN_MASK,
                                                                                span: bytes(8824..8833),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                        op: BinOp::Ne(
                                                            Ne,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 0,
                                                            },
                                                        },
                                                    },
                                                    then_branch: Block {
                                                        brace_token: Brace,
                                                        stmts: [
                                                            Stmt::Expr(
                                                                Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: NEG_INFINITY,
                                                                                    span: bytes(8853..8865),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                None,
                                                            ),
                                                        ],
                                                    },
                                                    else_branch: Some(
                                                        (
                                                            Else,
                                                            Expr::Block {
                                                                attrs: [],
                                                                label: None,
                                                                block: Block {
                                                                    brace_token: Brace,
                                                                    stmts: [
                                                                        Stmt::Expr(
                                                                            Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: INFINITY,
                                                                                                span: bytes(8895..8903),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            None,
                                                                        ),
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                    ),
                                                },
                                            ),
                                        ),
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [
                    Item::Const {
                        attrs: [],
                        vis: Visibility::Inherited,
                        const_token: Const,
                        ident: Ident {
                            sym: MANTISSA_MASK,
                            span: bytes(8617..8630),
                        },
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        colon_token: Colon,
                        ty: Type::Path {
                            qself: None,
                            path: Path {
                                leading_colon: None,
                                segments: [
                                    PathSegment {
                                        ident: Ident {
                                            sym: u64,
                                            span: bytes(8632..8635),
                                        },
                                        arguments: PathArguments::None,
                                    },
                                ],
                            },
                        },
                        eq_token: Eq,
                        expr: Expr::Lit {
                            attrs: [],
                            lit: Lit::Int {
                                token: 0x000fffffffffffff,
                            },
                        },
                        semi_token: Semi,
                    },
                    Item::Const {
                        attrs: [],
                        vis: Visibility::Inherited,
                        const_token: Const,
                        ident: Ident {
                            sym: SIGN_MASK,
                            span: bytes(8672..8681),
                        },
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        colon_token: Colon,
                        ty: Type::Path {
                            qself: None,
                            path: Path {
                                leading_colon: None,
                                segments: [
                                    PathSegment {
                                        ident: Ident {
                                            sym: u64,
                                            span: bytes(8683..8686),
                                        },
                                        arguments: PathArguments::None,
                                    },
                                ],
                            },
                        },
                        eq_token: Eq,
                        expr: Expr::Lit {
                            attrs: [],
                            lit: Lit::Int {
                                token: 0x8000000000000000,
                            },
                        },
                        semi_token: Semi,
                    },
                ],
                visibility: Pri,
                is_constructor: false,
            },
            ImplItem {
                impl_num: 7,
                struct_name: Name {
                    name: "",
                    complete_name: "",
                    import_name: MyPath {
                        name: "",
                        next: None,
                    },
                },
                trait_name: Some(
                    Name {
                        name: "Sealed",
                        complete_name: "ryu::buffer::Sealed",
                        import_name: MyPath {
                            name: "ryu",
                            next: Some(
                                MyPath {
                                    name: "buffer",
                                    next: Some(
                                        MyPath {
                                            name: "Sealed",
                                            next: None,
                                        },
                                    ),
                                },
                            ),
                        },
                    },
                ),
                item: Some(
                    ItemImpl {
                        attrs: [],
                        defaultness: None,
                        unsafety: None,
                        impl_token: Impl,
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        trait_: Some(
                            (
                                None,
                                Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident {
                                                sym: Sealed,
                                                span: bytes(8302..8308),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                    ],
                                },
                                For,
                            ),
                        ),
                        self_ty: Type::Path {
                            qself: None,
                            path: Path {
                                leading_colon: None,
                                segments: [
                                    PathSegment {
                                        ident: Ident {
                                            sym: f64,
                                            span: bytes(8313..8316),
                                        },
                                        arguments: PathArguments::None,
                                    },
                                ],
                            },
                        },
                        brace_token: Brace,
                        items: [],
                    },
                ),
                types: [],
                consts: [],
                functions: [
                    ImplFnItem {
                        fn_name: Name {
                            name: "is_nonfinite",
                            complete_name: "< as ryu::buffer::Sealed>::is_nonfinite",
                            import_name: MyPath {
                                name: "< as ryu",
                                next: Some(
                                    MyPath {
                                        name: "buffer",
                                        next: Some(
                                            MyPath {
                                                name: "Sealed>",
                                                next: Some(
                                                    MyPath {
                                                        name: "is_nonfinite",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#7}::is_nonfinite",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(8325..8331),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: is_nonfinite,
                                        span: bytes(8340..8352),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: None,
                                                mutability: None,
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Self,
                                                                    span: bytes(8353..8357),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: bool,
                                                            span: bytes(8362..8366),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [
                            Item::Const {
                                attrs: [],
                                vis: Visibility::Inherited,
                                const_token: Const,
                                ident: Ident {
                                    sym: EXP_MASK,
                                    span: bytes(8383..8391),
                                },
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                colon_token: Colon,
                                ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: u64,
                                                    span: bytes(8393..8396),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                                eq_token: Eq,
                                expr: Expr::Lit {
                                    attrs: [],
                                    lit: Lit::Int {
                                        token: 0x7ff0000000000000,
                                    },
                                },
                                semi_token: Semi,
                            },
                        ],
                        visibility: Pri,
                        is_constructor: false,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "format_nonfinite",
                            complete_name: "< as ryu::buffer::Sealed>::format_nonfinite",
                            import_name: MyPath {
                                name: "< as ryu",
                                next: Some(
                                    MyPath {
                                        name: "buffer",
                                        next: Some(
                                            MyPath {
                                                name: "Sealed>",
                                                next: Some(
                                                    MyPath {
                                                        name: "format_nonfinite",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#7}::format_nonfinite",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: cold,
                                                        span: bytes(8503..8507),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::List {
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: cfg_attr,
                                                            span: bytes(8515..8523),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                            delimiter: MacroDelimiter::Paren(
                                                Paren,
                                            ),
                                            tokens: TokenStream [
                                                Ident {
                                                    sym: feature,
                                                    span: bytes(8524..8531),
                                                },
                                                Punct {
                                                    char: '=',
                                                    spacing: Alone,
                                                    span: bytes(8532..8533),
                                                },
                                                Literal {
                                                    lit: "no-panic",
                                                    span: bytes(8534..8544),
                                                },
                                                Punct {
                                                    char: ',',
                                                    spacing: Alone,
                                                    span: bytes(8544..8545),
                                                },
                                                Ident {
                                                    sym: inline,
                                                    span: bytes(8546..8552),
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: format_nonfinite,
                                        span: bytes(8562..8578),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: None,
                                                mutability: None,
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Self,
                                                                    span: bytes(8579..8583),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Reference {
                                            and_token: And,
                                            lifetime: Some(
                                                Lifetime {
                                                    apostrophe: bytes(8589..8590),
                                                    ident: Ident {
                                                        sym: static,
                                                        span: bytes(8590..8596),
                                                    },
                                                },
                                            ),
                                            mutability: None,
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: str,
                                                                span: bytes(8597..8600),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [
                            Item::Const {
                                attrs: [],
                                vis: Visibility::Inherited,
                                const_token: Const,
                                ident: Ident {
                                    sym: MANTISSA_MASK,
                                    span: bytes(8617..8630),
                                },
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                colon_token: Colon,
                                ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: u64,
                                                    span: bytes(8632..8635),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                                eq_token: Eq,
                                expr: Expr::Lit {
                                    attrs: [],
                                    lit: Lit::Int {
                                        token: 0x000fffffffffffff,
                                    },
                                },
                                semi_token: Semi,
                            },
                            Item::Const {
                                attrs: [],
                                vis: Visibility::Inherited,
                                const_token: Const,
                                ident: Ident {
                                    sym: SIGN_MASK,
                                    span: bytes(8672..8681),
                                },
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                colon_token: Colon,
                                ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: u64,
                                                    span: bytes(8683..8686),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                                eq_token: Eq,
                                expr: Expr::Lit {
                                    attrs: [],
                                    lit: Lit::Int {
                                        token: 0x8000000000000000,
                                    },
                                },
                                semi_token: Semi,
                            },
                        ],
                        visibility: Pri,
                        is_constructor: false,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "write_to_ryu_buffer",
                            complete_name: "< as ryu::buffer::Sealed>::write_to_ryu_buffer",
                            import_name: MyPath {
                                name: "< as ryu",
                                next: Some(
                                    MyPath {
                                        name: "buffer",
                                        next: Some(
                                            MyPath {
                                                name: "Sealed>",
                                                next: Some(
                                                    MyPath {
                                                        name: "write_to_ryu_buffer",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#7}::write_to_ryu_buffer",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(8927..8933),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: Some(
                                        Unsafe,
                                    ),
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: write_to_ryu_buffer,
                                        span: bytes(8949..8968),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: None,
                                                mutability: None,
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Self,
                                                                    span: bytes(8969..8973),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: result,
                                                        span: bytes(8975..8981),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Ptr {
                                                    star_token: Star,
                                                    const_token: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: u8,
                                                                        span: bytes(8988..8990),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: usize,
                                                            span: bytes(8995..9000),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: false,
                    },
                ],
                relative_types: [],
            },
        ),
    },
    "ryu::pretty::exponent::write_exponent2": FnData {
        fn_name: "write_exponent2",
        complete_fn_name: "ryu::pretty::exponent::write_exponent2",
        fn_type: Fn(
            FnItem {
                fn_name: Name {
                    name: "write_exponent2",
                    complete_name: "ryu::pretty::exponent::write_exponent2",
                    import_name: MyPath {
                        name: "ryu",
                        next: Some(
                            MyPath {
                                name: "pretty",
                                next: Some(
                                    MyPath {
                                        name: "exponent",
                                        next: Some(
                                            MyPath {
                                                name: "write_exponent2",
                                                next: None,
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "write_exponent2",
                item: Some(
                    ItemFn {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::List {
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: cfg_attr,
                                                    span: bytes(85331..85339),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                    delimiter: MacroDelimiter::Paren(
                                        Paren,
                                    ),
                                    tokens: TokenStream [
                                        Ident {
                                            sym: feature,
                                            span: bytes(85340..85347),
                                        },
                                        Punct {
                                            char: '=',
                                            spacing: Alone,
                                            span: bytes(85348..85349),
                                        },
                                        Literal {
                                            lit: "no-panic",
                                            span: bytes(85350..85360),
                                        },
                                        Punct {
                                            char: ',',
                                            spacing: Alone,
                                            span: bytes(85360..85361),
                                        },
                                        Ident {
                                            sym: inline,
                                            span: bytes(85362..85368),
                                        },
                                    ],
                                },
                            },
                        ],
                        vis: Visibility::Public(
                            Pub,
                        ),
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: Some(
                                Unsafe,
                            ),
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: write_exponent2,
                                span: bytes(85385..85400),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            ident: Ident {
                                                sym: k,
                                                span: bytes(85405..85406),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: isize,
                                                            span: bytes(85408..85413),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                                Comma,
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            ident: Ident {
                                                sym: result,
                                                span: bytes(85419..85425),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Ptr {
                                            star_token: Star,
                                            const_token: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: u8,
                                                                span: bytes(85432..85434),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: usize,
                                                    span: bytes(85439..85444),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: sign,
                                            span: bytes(85455..85459),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Binary {
                                                attrs: [],
                                                left: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: k,
                                                                    span: bytes(85462..85463),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                op: BinOp::Lt(
                                                    Lt,
                                                ),
                                                right: Expr::Lit {
                                                    attrs: [],
                                                    lit: Lit::Int {
                                                        token: 0,
                                                    },
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Expr(
                                    Expr::If {
                                        attrs: [],
                                        if_token: If,
                                        cond: Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: sign,
                                                            span: bytes(85476..85480),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        then_branch: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::Assign {
                                                        attrs: [],
                                                        left: Expr::Unary {
                                                            attrs: [],
                                                            op: UnOp::Deref(
                                                                Star,
                                                            ),
                                                            expr: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: result,
                                                                                span: bytes(85492..85498),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                        eq_token: Eq,
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Byte {
                                                                token: b'-',
                                                            },
                                                        },
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                                Stmt::Expr(
                                                    Expr::Assign {
                                                        attrs: [],
                                                        left: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: result,
                                                                            span: bytes(85515..85521),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        eq_token: Eq,
                                                        right: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: result,
                                                                                span: bytes(85524..85530),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: offset,
                                                                span: bytes(85531..85537),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 1,
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                                Stmt::Expr(
                                                    Expr::Assign {
                                                        attrs: [],
                                                        left: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: k,
                                                                            span: bytes(85550..85551),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        eq_token: Eq,
                                                        right: Expr::Unary {
                                                            attrs: [],
                                                            op: UnOp::Neg(
                                                                Minus,
                                                            ),
                                                            expr: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: k,
                                                                                span: bytes(85555..85556),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                            ],
                                        },
                                        else_branch: None,
                                    },
                                    None,
                                ),
                                Stmt::Macro {
                                    attrs: [],
                                    mac: Macro {
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: debug_assert,
                                                        span: bytes(85569..85581),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                        bang_token: Not,
                                        delimiter: MacroDelimiter::Paren(
                                            Paren,
                                        ),
                                        tokens: TokenStream [
                                            Ident {
                                                sym: k,
                                                span: bytes(85583..85584),
                                            },
                                            Punct {
                                                char: '<',
                                                spacing: Alone,
                                                span: bytes(85585..85586),
                                            },
                                            Literal {
                                                lit: 100,
                                                span: bytes(85587..85590),
                                            },
                                        ],
                                    },
                                    semi_token: Some(
                                        Semi,
                                    ),
                                },
                                Stmt::Expr(
                                    Expr::If {
                                        attrs: [],
                                        if_token: If,
                                        cond: Expr::Binary {
                                            attrs: [],
                                            left: Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: k,
                                                                span: bytes(85600..85601),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            op: BinOp::Ge(
                                                Ge,
                                            ),
                                            right: Expr::Lit {
                                                attrs: [],
                                                lit: Lit::Int {
                                                    token: 10,
                                                },
                                            },
                                        },
                                        then_branch: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: d,
                                                            span: bytes(85622..85623),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::MethodCall {
                                                                    attrs: [],
                                                                    receiver: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: DIGIT_TABLE,
                                                                                        span: bytes(85626..85637),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    method: Ident {
                                                                        sym: as_ptr,
                                                                        span: bytes(85638..85644),
                                                                    },
                                                                    turbofish: None,
                                                                    paren_token: Paren,
                                                                    args: [],
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: offset,
                                                                    span: bytes(85647..85653),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: k,
                                                                                            span: bytes(85654..85655),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        op: BinOp::Mul(
                                                                            Star,
                                                                        ),
                                                                        right: Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Int {
                                                                                token: 2,
                                                                            },
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Expr(
                                                    Expr::Call {
                                                        attrs: [],
                                                        func: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: ptr,
                                                                            span: bytes(85670..85673),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: copy_nonoverlapping,
                                                                            span: bytes(85675..85694),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        paren_token: Paren,
                                                        args: [
                                                            Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: d,
                                                                                span: bytes(85695..85696),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            Comma,
                                                            Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: result,
                                                                                span: bytes(85698..85704),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            Comma,
                                                            Expr::Lit {
                                                                attrs: [],
                                                                lit: Lit::Int {
                                                                    token: 2,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                                Stmt::Expr(
                                                    Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Cast {
                                                            attrs: [],
                                                            expr: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: sign,
                                                                                span: bytes(85718..85722),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            as_token: As,
                                                            ty: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: usize,
                                                                                span: bytes(85726..85731),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                        op: BinOp::Add(
                                                            Plus,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 2,
                                                            },
                                                        },
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                        else_branch: Some(
                                            (
                                                Else,
                                                Expr::Block {
                                                    attrs: [],
                                                    label: None,
                                                    block: Block {
                                                        brace_token: Brace,
                                                        stmts: [
                                                            Stmt::Expr(
                                                                Expr::Assign {
                                                                    attrs: [],
                                                                    left: Expr::Unary {
                                                                        attrs: [],
                                                                        op: UnOp::Deref(
                                                                            Star,
                                                                        ),
                                                                        expr: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: result,
                                                                                            span: bytes(85758..85764),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                    eq_token: Eq,
                                                                    right: Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Byte {
                                                                                token: b'0',
                                                                            },
                                                                        },
                                                                        op: BinOp::Add(
                                                                            Plus,
                                                                        ),
                                                                        right: Expr::Cast {
                                                                            attrs: [],
                                                                            expr: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: k,
                                                                                                span: bytes(85774..85775),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            as_token: As,
                                                                            ty: Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: u8,
                                                                                                span: bytes(85779..85781),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        },
                                                                    },
                                                                },
                                                                Some(
                                                                    Semi,
                                                                ),
                                                            ),
                                                            Stmt::Expr(
                                                                Expr::Binary {
                                                                    attrs: [],
                                                                    left: Expr::Cast {
                                                                        attrs: [],
                                                                        expr: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: sign,
                                                                                            span: bytes(85791..85795),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        as_token: As,
                                                                        ty: Type::Path {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: usize,
                                                                                            span: bytes(85799..85804),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                    op: BinOp::Add(
                                                                        Plus,
                                                                    ),
                                                                    right: Expr::Lit {
                                                                        attrs: [],
                                                                        lit: Lit::Int {
                                                                            token: 1,
                                                                        },
                                                                    },
                                                                },
                                                                None,
                                                            ),
                                                        ],
                                                    },
                                                },
                                            ),
                                        ),
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: PubT,
            },
        ),
    },
    "ryu::common::pow5bits": FnData {
        fn_name: "pow5bits",
        complete_fn_name: "ryu::common::pow5bits",
        fn_type: Fn(
            FnItem {
                fn_name: Name {
                    name: "pow5bits",
                    complete_name: "ryu::common::pow5bits",
                    import_name: MyPath {
                        name: "ryu",
                        next: Some(
                            MyPath {
                                name: "common",
                                next: Some(
                                    MyPath {
                                        name: "pow5bits",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "pow5bits",
                item: Some(
                    ItemFn {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::List {
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: cfg_attr,
                                                    span: bytes(11049..11057),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                    delimiter: MacroDelimiter::Paren(
                                        Paren,
                                    ),
                                    tokens: TokenStream [
                                        Ident {
                                            sym: feature,
                                            span: bytes(11058..11065),
                                        },
                                        Punct {
                                            char: '=',
                                            spacing: Alone,
                                            span: bytes(11066..11067),
                                        },
                                        Literal {
                                            lit: "no-panic",
                                            span: bytes(11068..11078),
                                        },
                                        Punct {
                                            char: ',',
                                            spacing: Alone,
                                            span: bytes(11078..11079),
                                        },
                                        Ident {
                                            sym: inline,
                                            span: bytes(11080..11086),
                                        },
                                    ],
                                },
                            },
                        ],
                        vis: Visibility::Public(
                            Pub,
                        ),
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: pow5bits,
                                span: bytes(11096..11104),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: e,
                                                span: bytes(11105..11106),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: i32,
                                                            span: bytes(11108..11111),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: i32,
                                                    span: bytes(11116..11119),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Macro {
                                    attrs: [],
                                    mac: Macro {
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: debug_assert,
                                                        span: bytes(11358..11370),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                        bang_token: Not,
                                        delimiter: MacroDelimiter::Paren(
                                            Paren,
                                        ),
                                        tokens: TokenStream [
                                            Ident {
                                                sym: e,
                                                span: bytes(11372..11373),
                                            },
                                            Punct {
                                                char: '>',
                                                spacing: Joint,
                                                span: bytes(11374..11375),
                                            },
                                            Punct {
                                                char: '=',
                                                spacing: Alone,
                                                span: bytes(11375..11376),
                                            },
                                            Literal {
                                                lit: 0,
                                                span: bytes(11377..11378),
                                            },
                                        ],
                                    },
                                    semi_token: Some(
                                        Semi,
                                    ),
                                },
                                Stmt::Macro {
                                    attrs: [],
                                    mac: Macro {
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: debug_assert,
                                                        span: bytes(11385..11397),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                        bang_token: Not,
                                        delimiter: MacroDelimiter::Paren(
                                            Paren,
                                        ),
                                        tokens: TokenStream [
                                            Ident {
                                                sym: e,
                                                span: bytes(11399..11400),
                                            },
                                            Punct {
                                                char: '<',
                                                spacing: Joint,
                                                span: bytes(11401..11402),
                                            },
                                            Punct {
                                                char: '=',
                                                spacing: Alone,
                                                span: bytes(11402..11403),
                                            },
                                            Literal {
                                                lit: 3528,
                                                span: bytes(11404..11408),
                                            },
                                        ],
                                    },
                                    semi_token: Some(
                                        Semi,
                                    ),
                                },
                                Stmt::Expr(
                                    Expr::Cast {
                                        attrs: [],
                                        expr: Expr::Paren {
                                            attrs: [],
                                            paren_token: Paren,
                                            expr: Expr::Binary {
                                                attrs: [],
                                                left: Expr::Paren {
                                                    attrs: [],
                                                    paren_token: Paren,
                                                    expr: Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Paren {
                                                            attrs: [],
                                                            paren_token: Paren,
                                                            expr: Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Cast {
                                                                    attrs: [],
                                                                    expr: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: e,
                                                                                        span: bytes(11418..11419),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    as_token: As,
                                                                    ty: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: u32,
                                                                                        span: bytes(11423..11426),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                                op: BinOp::Mul(
                                                                    Star,
                                                                ),
                                                                right: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 1217359,
                                                                    },
                                                                },
                                                            },
                                                        },
                                                        op: BinOp::Shr(
                                                            Shr,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 19,
                                                            },
                                                        },
                                                    },
                                                },
                                                op: BinOp::Add(
                                                    Plus,
                                                ),
                                                right: Expr::Lit {
                                                    attrs: [],
                                                    lit: Lit::Int {
                                                        token: 1,
                                                    },
                                                },
                                            },
                                        },
                                        as_token: As,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: i32,
                                                            span: bytes(11453..11456),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: PubT,
            },
        ),
    },
    "ryu::d2s_intrinsics::mul_shift_64": FnData {
        fn_name: "mul_shift_64",
        complete_fn_name: "ryu::d2s_intrinsics::mul_shift_64",
        fn_type: Fn(
            FnItem {
                fn_name: Name {
                    name: "mul_shift_64",
                    complete_name: "ryu::d2s_intrinsics::mul_shift_64",
                    import_name: MyPath {
                        name: "ryu",
                        next: Some(
                            MyPath {
                                name: "d2s_intrinsics",
                                next: Some(
                                    MyPath {
                                        name: "mul_shift_64",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "mul_shift_64",
                item: Some(
                    ItemFn {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::List {
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: cfg_attr,
                                                    span: bytes(58752..58760),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                    delimiter: MacroDelimiter::Paren(
                                        Paren,
                                    ),
                                    tokens: TokenStream [
                                        Ident {
                                            sym: feature,
                                            span: bytes(58761..58768),
                                        },
                                        Punct {
                                            char: '=',
                                            spacing: Alone,
                                            span: bytes(58769..58770),
                                        },
                                        Literal {
                                            lit: "no-panic",
                                            span: bytes(58771..58781),
                                        },
                                        Punct {
                                            char: ',',
                                            spacing: Alone,
                                            span: bytes(58781..58782),
                                        },
                                        Ident {
                                            sym: inline,
                                            span: bytes(58783..58789),
                                        },
                                    ],
                                },
                            },
                        ],
                        vis: Visibility::Public(
                            Pub,
                        ),
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: mul_shift_64,
                                span: bytes(58799..58811),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: m,
                                                span: bytes(58812..58813),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u64,
                                                            span: bytes(58815..58818),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                                Comma,
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: mul,
                                                span: bytes(58820..58823),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: None,
                                            elem: Type::Tuple {
                                                paren_token: Paren,
                                                elems: [
                                                    Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: u64,
                                                                        span: bytes(58827..58830),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    Comma,
                                                    Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: u64,
                                                                        span: bytes(58832..58835),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                                Comma,
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: j,
                                                span: bytes(58838..58839),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u32,
                                                            span: bytes(58841..58844),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: u64,
                                                    span: bytes(58849..58852),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: b0,
                                            span: bytes(58863..58865),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Binary {
                                                attrs: [],
                                                left: Expr::Cast {
                                                    attrs: [],
                                                    expr: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: m,
                                                                        span: bytes(58868..58869),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    as_token: As,
                                                    ty: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: u128,
                                                                        span: bytes(58873..58877),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                                op: BinOp::Mul(
                                                    Star,
                                                ),
                                                right: Expr::Cast {
                                                    attrs: [],
                                                    expr: Expr::Field {
                                                        attrs: [],
                                                        base: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: mul,
                                                                            span: bytes(58880..58883),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        member: Member::Unnamed(
                                                            Index {
                                                                index: 0,
                                                                span: bytes(58884..58885),
                                                            },
                                                        ),
                                                    },
                                                    as_token: As,
                                                    ty: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: u128,
                                                                        span: bytes(58889..58893),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: b2,
                                            span: bytes(58903..58905),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Binary {
                                                attrs: [],
                                                left: Expr::Cast {
                                                    attrs: [],
                                                    expr: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: m,
                                                                        span: bytes(58908..58909),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    as_token: As,
                                                    ty: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: u128,
                                                                        span: bytes(58913..58917),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                                op: BinOp::Mul(
                                                    Star,
                                                ),
                                                right: Expr::Cast {
                                                    attrs: [],
                                                    expr: Expr::Field {
                                                        attrs: [],
                                                        base: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: mul,
                                                                            span: bytes(58920..58923),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        member: Member::Unnamed(
                                                            Index {
                                                                index: 1,
                                                                span: bytes(58924..58925),
                                                            },
                                                        ),
                                                    },
                                                    as_token: As,
                                                    ty: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: u128,
                                                                        span: bytes(58929..58933),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Expr(
                                    Expr::Cast {
                                        attrs: [],
                                        expr: Expr::Paren {
                                            attrs: [],
                                            paren_token: Paren,
                                            expr: Expr::Binary {
                                                attrs: [],
                                                left: Expr::Paren {
                                                    attrs: [],
                                                    paren_token: Paren,
                                                    expr: Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Paren {
                                                            attrs: [],
                                                            paren_token: Paren,
                                                            expr: Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: b0,
                                                                                    span: bytes(58942..58944),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                op: BinOp::Shr(
                                                                    Shr,
                                                                ),
                                                                right: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 64,
                                                                    },
                                                                },
                                                            },
                                                        },
                                                        op: BinOp::Add(
                                                            Plus,
                                                        ),
                                                        right: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: b2,
                                                                            span: bytes(58954..58956),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                },
                                                op: BinOp::Shr(
                                                    Shr,
                                                ),
                                                right: Expr::Paren {
                                                    attrs: [],
                                                    paren_token: Paren,
                                                    expr: Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: j,
                                                                            span: bytes(58962..58963),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        op: BinOp::Sub(
                                                            Minus,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 64,
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                        },
                                        as_token: As,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u64,
                                                            span: bytes(58974..58977),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: PubT,
            },
        ),
    },
    "ryu::d2s_intrinsics::div10": FnData {
        fn_name: "div10",
        complete_fn_name: "ryu::d2s_intrinsics::div10",
        fn_type: Fn(
            FnItem {
                fn_name: Name {
                    name: "div10",
                    complete_name: "ryu::d2s_intrinsics::div10",
                    import_name: MyPath {
                        name: "ryu",
                        next: Some(
                            MyPath {
                                name: "d2s_intrinsics",
                                next: Some(
                                    MyPath {
                                        name: "div10",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "div10",
                item: Some(
                    ItemFn {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::List {
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: cfg_attr,
                                                    span: bytes(57545..57553),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                    delimiter: MacroDelimiter::Paren(
                                        Paren,
                                    ),
                                    tokens: TokenStream [
                                        Ident {
                                            sym: feature,
                                            span: bytes(57554..57561),
                                        },
                                        Punct {
                                            char: '=',
                                            spacing: Alone,
                                            span: bytes(57562..57563),
                                        },
                                        Literal {
                                            lit: "no-panic",
                                            span: bytes(57564..57574),
                                        },
                                        Punct {
                                            char: ',',
                                            spacing: Alone,
                                            span: bytes(57574..57575),
                                        },
                                        Ident {
                                            sym: inline,
                                            span: bytes(57576..57582),
                                        },
                                    ],
                                },
                            },
                        ],
                        vis: Visibility::Public(
                            Pub,
                        ),
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: div10,
                                span: bytes(57592..57597),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: x,
                                                span: bytes(57598..57599),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u64,
                                                            span: bytes(57601..57604),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: u64,
                                                    span: bytes(57609..57612),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Expr(
                                    Expr::Binary {
                                        attrs: [],
                                        left: Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: x,
                                                            span: bytes(57619..57620),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        op: BinOp::Div(
                                            Slash,
                                        ),
                                        right: Expr::Lit {
                                            attrs: [],
                                            lit: Lit::Int {
                                                token: 10,
                                            },
                                        },
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: PubT,
            },
        ),
    },
    "ryu::f2s_intrinsics::mul_shift_32": FnData {
        fn_name: "mul_shift_32",
        complete_fn_name: "ryu::f2s_intrinsics::mul_shift_32",
        fn_type: Fn(
            FnItem {
                fn_name: Name {
                    name: "mul_shift_32",
                    complete_name: "ryu::f2s_intrinsics::mul_shift_32",
                    import_name: MyPath {
                        name: "ryu",
                        next: Some(
                            MyPath {
                                name: "f2s_intrinsics",
                                next: Some(
                                    MyPath {
                                        name: "mul_shift_32",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "mul_shift_32",
                item: Some(
                    ItemFn {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::List {
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: cfg_attr,
                                                    span: bytes(74827..74835),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                    delimiter: MacroDelimiter::Paren(
                                        Paren,
                                    ),
                                    tokens: TokenStream [
                                        Ident {
                                            sym: feature,
                                            span: bytes(74836..74843),
                                        },
                                        Punct {
                                            char: '=',
                                            spacing: Alone,
                                            span: bytes(74844..74845),
                                        },
                                        Literal {
                                            lit: "no-panic",
                                            span: bytes(74846..74856),
                                        },
                                        Punct {
                                            char: ',',
                                            spacing: Alone,
                                            span: bytes(74856..74857),
                                        },
                                        Ident {
                                            sym: inline,
                                            span: bytes(74858..74864),
                                        },
                                    ],
                                },
                            },
                        ],
                        vis: Visibility::Inherited,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: mul_shift_32,
                                span: bytes(74870..74882),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: m,
                                                span: bytes(74883..74884),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u32,
                                                            span: bytes(74886..74889),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                                Comma,
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: factor,
                                                span: bytes(74891..74897),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u64,
                                                            span: bytes(74899..74902),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                                Comma,
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: shift,
                                                span: bytes(74904..74909),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: i32,
                                                            span: bytes(74911..74914),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: u32,
                                                    span: bytes(74919..74922),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Macro {
                                    attrs: [],
                                    mac: Macro {
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: debug_assert,
                                                        span: bytes(74929..74941),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                        bang_token: Not,
                                        delimiter: MacroDelimiter::Paren(
                                            Paren,
                                        ),
                                        tokens: TokenStream [
                                            Ident {
                                                sym: shift,
                                                span: bytes(74943..74948),
                                            },
                                            Punct {
                                                char: '>',
                                                spacing: Alone,
                                                span: bytes(74949..74950),
                                            },
                                            Literal {
                                                lit: 32,
                                                span: bytes(74951..74953),
                                            },
                                        ],
                                    },
                                    semi_token: Some(
                                        Semi,
                                    ),
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: factor_lo,
                                            span: bytes(75053..75062),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Cast {
                                                attrs: [],
                                                expr: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: factor,
                                                                    span: bytes(75065..75071),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                as_token: As,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u32,
                                                                    span: bytes(75075..75078),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: factor_hi,
                                            span: bytes(75088..75097),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Cast {
                                                attrs: [],
                                                expr: Expr::Paren {
                                                    attrs: [],
                                                    paren_token: Paren,
                                                    expr: Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: factor,
                                                                            span: bytes(75101..75107),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        op: BinOp::Shr(
                                                            Shr,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 32,
                                                            },
                                                        },
                                                    },
                                                },
                                                as_token: As,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u32,
                                                                    span: bytes(75118..75121),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: bits0,
                                            span: bytes(75131..75136),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Binary {
                                                attrs: [],
                                                left: Expr::Cast {
                                                    attrs: [],
                                                    expr: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: m,
                                                                        span: bytes(75139..75140),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    as_token: As,
                                                    ty: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: u64,
                                                                        span: bytes(75144..75147),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                                op: BinOp::Mul(
                                                    Star,
                                                ),
                                                right: Expr::Cast {
                                                    attrs: [],
                                                    expr: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: factor_lo,
                                                                        span: bytes(75150..75159),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    as_token: As,
                                                    ty: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: u64,
                                                                        span: bytes(75163..75166),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: bits1,
                                            span: bytes(75176..75181),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Binary {
                                                attrs: [],
                                                left: Expr::Cast {
                                                    attrs: [],
                                                    expr: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: m,
                                                                        span: bytes(75184..75185),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    as_token: As,
                                                    ty: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: u64,
                                                                        span: bytes(75189..75192),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                                op: BinOp::Mul(
                                                    Star,
                                                ),
                                                right: Expr::Cast {
                                                    attrs: [],
                                                    expr: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: factor_hi,
                                                                        span: bytes(75195..75204),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    as_token: As,
                                                    ty: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: u64,
                                                                        span: bytes(75208..75211),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: sum,
                                            span: bytes(75222..75225),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Binary {
                                                attrs: [],
                                                left: Expr::Paren {
                                                    attrs: [],
                                                    paren_token: Paren,
                                                    expr: Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: bits0,
                                                                            span: bytes(75229..75234),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        op: BinOp::Shr(
                                                            Shr,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 32,
                                                            },
                                                        },
                                                    },
                                                },
                                                op: BinOp::Add(
                                                    Plus,
                                                ),
                                                right: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: bits1,
                                                                    span: bytes(75244..75249),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: shifted_sum,
                                            span: bytes(75259..75270),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Binary {
                                                attrs: [],
                                                left: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: sum,
                                                                    span: bytes(75273..75276),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                op: BinOp::Shr(
                                                    Shr,
                                                ),
                                                right: Expr::Paren {
                                                    attrs: [],
                                                    paren_token: Paren,
                                                    expr: Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: shift,
                                                                            span: bytes(75281..75286),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        op: BinOp::Sub(
                                                            Minus,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 32,
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Macro {
                                    attrs: [],
                                    mac: Macro {
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: debug_assert,
                                                        span: bytes(75298..75310),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                        bang_token: Not,
                                        delimiter: MacroDelimiter::Paren(
                                            Paren,
                                        ),
                                        tokens: TokenStream [
                                            Ident {
                                                sym: shifted_sum,
                                                span: bytes(75312..75323),
                                            },
                                            Punct {
                                                char: '<',
                                                spacing: Joint,
                                                span: bytes(75324..75325),
                                            },
                                            Punct {
                                                char: '=',
                                                spacing: Alone,
                                                span: bytes(75325..75326),
                                            },
                                            Ident {
                                                sym: u32,
                                                span: bytes(75327..75330),
                                            },
                                            Punct {
                                                char: ':',
                                                spacing: Joint,
                                                span: bytes(75330..75331),
                                            },
                                            Punct {
                                                char: ':',
                                                spacing: Alone,
                                                span: bytes(75331..75332),
                                            },
                                            Ident {
                                                sym: max_value,
                                                span: bytes(75332..75341),
                                            },
                                            Group {
                                                delimiter: Parenthesis,
                                                stream: TokenStream [],
                                                span: bytes(75341..75343),
                                            },
                                            Ident {
                                                sym: as,
                                                span: bytes(75344..75346),
                                            },
                                            Ident {
                                                sym: u64,
                                                span: bytes(75347..75350),
                                            },
                                        ],
                                    },
                                    semi_token: Some(
                                        Semi,
                                    ),
                                },
                                Stmt::Expr(
                                    Expr::Cast {
                                        attrs: [],
                                        expr: Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: shifted_sum,
                                                            span: bytes(75357..75368),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        as_token: As,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u32,
                                                            span: bytes(75372..75375),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: Pri,
            },
        ),
    },
    "ryu::common::log10_pow5": FnData {
        fn_name: "log10_pow5",
        complete_fn_name: "ryu::common::log10_pow5",
        fn_type: Fn(
            FnItem {
                fn_name: Name {
                    name: "log10_pow5",
                    complete_name: "ryu::common::log10_pow5",
                    import_name: MyPath {
                        name: "ryu",
                        next: Some(
                            MyPath {
                                name: "common",
                                next: Some(
                                    MyPath {
                                        name: "log10_pow5",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "log10_pow5",
                item: Some(
                    ItemFn {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::List {
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: cfg_attr,
                                                    span: bytes(12002..12010),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                    delimiter: MacroDelimiter::Paren(
                                        Paren,
                                    ),
                                    tokens: TokenStream [
                                        Ident {
                                            sym: feature,
                                            span: bytes(12011..12018),
                                        },
                                        Punct {
                                            char: '=',
                                            spacing: Alone,
                                            span: bytes(12019..12020),
                                        },
                                        Literal {
                                            lit: "no-panic",
                                            span: bytes(12021..12031),
                                        },
                                        Punct {
                                            char: ',',
                                            spacing: Alone,
                                            span: bytes(12031..12032),
                                        },
                                        Ident {
                                            sym: inline,
                                            span: bytes(12033..12039),
                                        },
                                    ],
                                },
                            },
                        ],
                        vis: Visibility::Public(
                            Pub,
                        ),
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: log10_pow5,
                                span: bytes(12049..12059),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: e,
                                                span: bytes(12060..12061),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: i32,
                                                            span: bytes(12063..12066),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: u32,
                                                    span: bytes(12071..12074),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Macro {
                                    attrs: [],
                                    mac: Macro {
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: debug_assert,
                                                        span: bytes(12199..12211),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                        bang_token: Not,
                                        delimiter: MacroDelimiter::Paren(
                                            Paren,
                                        ),
                                        tokens: TokenStream [
                                            Ident {
                                                sym: e,
                                                span: bytes(12213..12214),
                                            },
                                            Punct {
                                                char: '>',
                                                spacing: Joint,
                                                span: bytes(12215..12216),
                                            },
                                            Punct {
                                                char: '=',
                                                spacing: Alone,
                                                span: bytes(12216..12217),
                                            },
                                            Literal {
                                                lit: 0,
                                                span: bytes(12218..12219),
                                            },
                                        ],
                                    },
                                    semi_token: Some(
                                        Semi,
                                    ),
                                },
                                Stmt::Macro {
                                    attrs: [],
                                    mac: Macro {
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: debug_assert,
                                                        span: bytes(12226..12238),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                        bang_token: Not,
                                        delimiter: MacroDelimiter::Paren(
                                            Paren,
                                        ),
                                        tokens: TokenStream [
                                            Ident {
                                                sym: e,
                                                span: bytes(12240..12241),
                                            },
                                            Punct {
                                                char: '<',
                                                spacing: Joint,
                                                span: bytes(12242..12243),
                                            },
                                            Punct {
                                                char: '=',
                                                spacing: Alone,
                                                span: bytes(12243..12244),
                                            },
                                            Literal {
                                                lit: 2620,
                                                span: bytes(12245..12249),
                                            },
                                        ],
                                    },
                                    semi_token: Some(
                                        Semi,
                                    ),
                                },
                                Stmt::Expr(
                                    Expr::Binary {
                                        attrs: [],
                                        left: Expr::Paren {
                                            attrs: [],
                                            paren_token: Paren,
                                            expr: Expr::Binary {
                                                attrs: [],
                                                left: Expr::Cast {
                                                    attrs: [],
                                                    expr: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: e,
                                                                        span: bytes(12257..12258),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    as_token: As,
                                                    ty: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: u32,
                                                                        span: bytes(12262..12265),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                                op: BinOp::Mul(
                                                    Star,
                                                ),
                                                right: Expr::Lit {
                                                    attrs: [],
                                                    lit: Lit::Int {
                                                        token: 732923,
                                                    },
                                                },
                                            },
                                        },
                                        op: BinOp::Shr(
                                            Shr,
                                        ),
                                        right: Expr::Lit {
                                            attrs: [],
                                            lit: Lit::Int {
                                                token: 20,
                                            },
                                        },
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: PubT,
            },
        ),
    },
    "<ryu::buffer::Buffer as >::clone": FnData {
        fn_name: "clone",
        complete_fn_name: "<ryu::buffer::Buffer as >::clone",
        fn_type: ImplFn(
            ImplFnItem {
                fn_name: Name {
                    name: "clone",
                    complete_name: "<ryu::buffer::Buffer as >::clone",
                    import_name: MyPath {
                        name: "<ryu",
                        next: Some(
                            MyPath {
                                name: "buffer",
                                next: Some(
                                    MyPath {
                                        name: "Buffer as >",
                                        next: Some(
                                            MyPath {
                                                name: "clone",
                                                next: None,
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "{impl#2}::clone",
                item: Some(
                    ImplItemFn {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident {
                                                sym: inline,
                                                span: bytes(6793..6799),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                    ],
                                },
                            },
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::List {
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: allow,
                                                    span: bytes(6807..6812),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                    delimiter: MacroDelimiter::Paren(
                                        Paren,
                                    ),
                                    tokens: TokenStream [
                                        Ident {
                                            sym: clippy,
                                            span: bytes(6813..6819),
                                        },
                                        Punct {
                                            char: ':',
                                            spacing: Joint,
                                            span: bytes(6819..6820),
                                        },
                                        Punct {
                                            char: ':',
                                            spacing: Alone,
                                            span: bytes(6820..6821),
                                        },
                                        Ident {
                                            sym: non_canonical_clone_impl,
                                            span: bytes(6821..6845),
                                        },
                                    ],
                                },
                            },
                        ],
                        vis: Visibility::Inherited,
                        defaultness: None,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: clone,
                                span: bytes(6927..6932),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Receiver(
                                    Receiver {
                                        attrs: [],
                                        reference: Some(
                                            (
                                                And,
                                                None,
                                            ),
                                        ),
                                        mutability: None,
                                        self_token: SelfValue,
                                        colon_token: None,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: None,
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Self,
                                                                span: bytes(6934..6938),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: Self,
                                                    span: bytes(6943..6947),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Expr(
                                    Expr::Call {
                                        attrs: [],
                                        func: Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Buffer,
                                                            span: bytes(6958..6964),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                    PathSep,
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: new,
                                                            span: bytes(6966..6969),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        paren_token: Paren,
                                        args: [],
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: Pri,
                is_constructor: true,
            },
            ImplItem {
                impl_num: 2,
                struct_name: Name {
                    name: "Buffer",
                    complete_name: "ryu::buffer::Buffer",
                    import_name: MyPath {
                        name: "ryu",
                        next: Some(
                            MyPath {
                                name: "buffer",
                                next: Some(
                                    MyPath {
                                        name: "Buffer",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                trait_name: Some(
                    Name {
                        name: "",
                        complete_name: "",
                        import_name: MyPath {
                            name: "",
                            next: None,
                        },
                    },
                ),
                item: Some(
                    ItemImpl {
                        attrs: [],
                        defaultness: None,
                        unsafety: None,
                        impl_token: Impl,
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        trait_: Some(
                            (
                                None,
                                Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident {
                                                sym: Clone,
                                                span: bytes(6768..6773),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                    ],
                                },
                                For,
                            ),
                        ),
                        self_ty: Type::Path {
                            qself: None,
                            path: Path {
                                leading_colon: None,
                                segments: [
                                    PathSegment {
                                        ident: Ident {
                                            sym: Buffer,
                                            span: bytes(6778..6784),
                                        },
                                        arguments: PathArguments::None,
                                    },
                                ],
                            },
                        },
                        brace_token: Brace,
                        items: [],
                    },
                ),
                types: [],
                consts: [],
                functions: [
                    ImplFnItem {
                        fn_name: Name {
                            name: "clone",
                            complete_name: "<ryu::buffer::Buffer as >::clone",
                            import_name: MyPath {
                                name: "<ryu",
                                next: Some(
                                    MyPath {
                                        name: "buffer",
                                        next: Some(
                                            MyPath {
                                                name: "Buffer as >",
                                                next: Some(
                                                    MyPath {
                                                        name: "clone",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#2}::clone",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(6793..6799),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::List {
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: allow,
                                                            span: bytes(6807..6812),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                            delimiter: MacroDelimiter::Paren(
                                                Paren,
                                            ),
                                            tokens: TokenStream [
                                                Ident {
                                                    sym: clippy,
                                                    span: bytes(6813..6819),
                                                },
                                                Punct {
                                                    char: ':',
                                                    spacing: Joint,
                                                    span: bytes(6819..6820),
                                                },
                                                Punct {
                                                    char: ':',
                                                    spacing: Alone,
                                                    span: bytes(6820..6821),
                                                },
                                                Ident {
                                                    sym: non_canonical_clone_impl,
                                                    span: bytes(6821..6845),
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: clone,
                                        span: bytes(6927..6932),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: None,
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: None,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(6934..6938),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Self,
                                                            span: bytes(6943..6947),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Expr(
                                            Expr::Call {
                                                attrs: [],
                                                func: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Buffer,
                                                                    span: bytes(6958..6964),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: new,
                                                                    span: bytes(6966..6969),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                paren_token: Paren,
                                                args: [],
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: true,
                    },
                ],
                relative_types: [],
            },
        ),
    },
    "<  as ryu::buffer::Sealed>::is_nonfinite": FnData {
        fn_name: "is_nonfinite",
        complete_fn_name: "<  as ryu::buffer::Sealed>::is_nonfinite",
        fn_type: TraitFn(
            TraitFnItem {
                fn_name: Name {
                    name: "is_nonfinite",
                    complete_name: "<  as ryu::buffer::Sealed>::is_nonfinite",
                    import_name: MyPath {
                        name: "<  as ryu",
                        next: Some(
                            MyPath {
                                name: "buffer",
                                next: Some(
                                    MyPath {
                                        name: "Sealed>",
                                        next: Some(
                                            MyPath {
                                                name: "is_nonfinite",
                                                next: None,
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "Sealed::is_nonfinite",
                item: Some(
                    TraitItemFn {
                        attrs: [],
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: is_nonfinite,
                                span: bytes(7425..7437),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Receiver(
                                    Receiver {
                                        attrs: [],
                                        reference: None,
                                        mutability: None,
                                        self_token: SelfValue,
                                        colon_token: None,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Self,
                                                            span: bytes(7438..7442),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: bool,
                                                    span: bytes(7447..7451),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        default: None,
                        semi_token: Some(
                            Semi,
                        ),
                    },
                ),
                inside_items: [],
                is_constructor: false,
            },
            TraitItem {
                trait_name: Name {
                    name: "Sealed",
                    complete_name: "ryu::buffer::Sealed",
                    import_name: MyPath {
                        name: "ryu",
                        next: Some(
                            MyPath {
                                name: "buffer",
                                next: Some(
                                    MyPath {
                                        name: "Sealed",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                item: Some(
                    ItemTrait {
                        attrs: [],
                        vis: Visibility::Public(
                            Pub,
                        ),
                        unsafety: None,
                        auto_token: None,
                        restriction: None,
                        trait_token: Trait,
                        ident: Ident {
                            sym: Sealed,
                            span: bytes(7403..7409),
                        },
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        colon_token: Some(
                            Colon,
                        ),
                        supertraits: [
                            TypeParamBound::Trait(
                                TraitBound {
                                    paren_token: None,
                                    modifier: TraitBoundModifier::None,
                                    lifetimes: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: Copy,
                                                    span: bytes(7411..7415),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        ],
                        brace_token: Brace,
                        items: [],
                    },
                ),
                types: [],
                consts: [],
                functions: [
                    TraitFnItem {
                        fn_name: Name {
                            name: "is_nonfinite",
                            complete_name: "<  as ryu::buffer::Sealed>::is_nonfinite",
                            import_name: MyPath {
                                name: "<  as ryu",
                                next: Some(
                                    MyPath {
                                        name: "buffer",
                                        next: Some(
                                            MyPath {
                                                name: "Sealed>",
                                                next: Some(
                                                    MyPath {
                                                        name: "is_nonfinite",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "Sealed::is_nonfinite",
                        item: Some(
                            TraitItemFn {
                                attrs: [],
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: is_nonfinite,
                                        span: bytes(7425..7437),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: None,
                                                mutability: None,
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Self,
                                                                    span: bytes(7438..7442),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: bool,
                                                            span: bytes(7447..7451),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                default: None,
                                semi_token: Some(
                                    Semi,
                                ),
                            },
                        ),
                        inside_items: [],
                        is_constructor: false,
                    },
                    TraitFnItem {
                        fn_name: Name {
                            name: "format_nonfinite",
                            complete_name: "<  as ryu::buffer::Sealed>::format_nonfinite",
                            import_name: MyPath {
                                name: "<  as ryu",
                                next: Some(
                                    MyPath {
                                        name: "buffer",
                                        next: Some(
                                            MyPath {
                                                name: "Sealed>",
                                                next: Some(
                                                    MyPath {
                                                        name: "format_nonfinite",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "Sealed::format_nonfinite",
                        item: Some(
                            TraitItemFn {
                                attrs: [],
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: format_nonfinite,
                                        span: bytes(7460..7476),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: None,
                                                mutability: None,
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Self,
                                                                    span: bytes(7477..7481),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Reference {
                                            and_token: And,
                                            lifetime: Some(
                                                Lifetime {
                                                    apostrophe: bytes(7487..7488),
                                                    ident: Ident {
                                                        sym: static,
                                                        span: bytes(7488..7494),
                                                    },
                                                },
                                            ),
                                            mutability: None,
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: str,
                                                                span: bytes(7495..7498),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    ),
                                },
                                default: None,
                                semi_token: Some(
                                    Semi,
                                ),
                            },
                        ),
                        inside_items: [],
                        is_constructor: false,
                    },
                    TraitFnItem {
                        fn_name: Name {
                            name: "write_to_ryu_buffer",
                            complete_name: "<  as ryu::buffer::Sealed>::write_to_ryu_buffer",
                            import_name: MyPath {
                                name: "<  as ryu",
                                next: Some(
                                    MyPath {
                                        name: "buffer",
                                        next: Some(
                                            MyPath {
                                                name: "Sealed>",
                                                next: Some(
                                                    MyPath {
                                                        name: "write_to_ryu_buffer",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "Sealed::write_to_ryu_buffer",
                        item: Some(
                            TraitItemFn {
                                attrs: [],
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: Some(
                                        Unsafe,
                                    ),
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: write_to_ryu_buffer,
                                        span: bytes(7514..7533),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: None,
                                                mutability: None,
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Self,
                                                                    span: bytes(7534..7538),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: result,
                                                        span: bytes(7540..7546),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Ptr {
                                                    star_token: Star,
                                                    const_token: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: u8,
                                                                        span: bytes(7553..7555),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: usize,
                                                            span: bytes(7560..7565),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                default: None,
                                semi_token: Some(
                                    Semi,
                                ),
                            },
                        ),
                        inside_items: [],
                        is_constructor: false,
                    },
                ],
                visibility: PubT,
                relative_types: [
                    "Copy",
                ],
            },
        ),
    },
    "ryu::common::ceil_log2_pow5": FnData {
        fn_name: "ceil_log2_pow5",
        complete_fn_name: "ryu::common::ceil_log2_pow5",
        fn_type: Fn(
            FnItem {
                fn_name: Name {
                    name: "ceil_log2_pow5",
                    complete_name: "ryu::common::ceil_log2_pow5",
                    import_name: MyPath {
                        name: "ryu",
                        next: Some(
                            MyPath {
                                name: "common",
                                next: Some(
                                    MyPath {
                                        name: "ceil_log2_pow5",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "ceil_log2_pow5",
                item: Some(
                    ItemFn {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::List {
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: cfg_attr,
                                                    span: bytes(11462..11470),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                    delimiter: MacroDelimiter::Paren(
                                        Paren,
                                    ),
                                    tokens: TokenStream [
                                        Ident {
                                            sym: feature,
                                            span: bytes(11471..11478),
                                        },
                                        Punct {
                                            char: '=',
                                            spacing: Alone,
                                            span: bytes(11479..11480),
                                        },
                                        Literal {
                                            lit: "no-panic",
                                            span: bytes(11481..11491),
                                        },
                                        Punct {
                                            char: ',',
                                            spacing: Alone,
                                            span: bytes(11491..11492),
                                        },
                                        Ident {
                                            sym: inline,
                                            span: bytes(11493..11499),
                                        },
                                    ],
                                },
                            },
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::List {
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: allow,
                                                    span: bytes(11504..11509),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                    delimiter: MacroDelimiter::Paren(
                                        Paren,
                                    ),
                                    tokens: TokenStream [
                                        Ident {
                                            sym: dead_code,
                                            span: bytes(11510..11519),
                                        },
                                    ],
                                },
                            },
                        ],
                        vis: Visibility::Public(
                            Pub,
                        ),
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: ceil_log2_pow5,
                                span: bytes(11529..11543),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: e,
                                                span: bytes(11544..11545),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: i32,
                                                            span: bytes(11547..11550),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: i32,
                                                    span: bytes(11555..11558),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Expr(
                                    Expr::Binary {
                                        attrs: [],
                                        left: Expr::Call {
                                            attrs: [],
                                            func: Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: log2_pow5,
                                                                span: bytes(11585..11594),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            paren_token: Paren,
                                            args: [
                                                Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: e,
                                                                    span: bytes(11595..11596),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                        op: BinOp::Add(
                                            Plus,
                                        ),
                                        right: Expr::Lit {
                                            attrs: [],
                                            lit: Lit::Int {
                                                token: 1,
                                            },
                                        },
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: PubT,
            },
        ),
    },
    "ryu::f2s_intrinsics::mul_pow5_inv_div_pow2": FnData {
        fn_name: "mul_pow5_inv_div_pow2",
        complete_fn_name: "ryu::f2s_intrinsics::mul_pow5_inv_div_pow2",
        fn_type: Fn(
            FnItem {
                fn_name: Name {
                    name: "mul_pow5_inv_div_pow2",
                    complete_name: "ryu::f2s_intrinsics::mul_pow5_inv_div_pow2",
                    import_name: MyPath {
                        name: "ryu",
                        next: Some(
                            MyPath {
                                name: "f2s_intrinsics",
                                next: Some(
                                    MyPath {
                                        name: "mul_pow5_inv_div_pow2",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "mul_pow5_inv_div_pow2",
                item: Some(
                    ItemFn {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::List {
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: cfg_attr,
                                                    span: bytes(75381..75389),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                    delimiter: MacroDelimiter::Paren(
                                        Paren,
                                    ),
                                    tokens: TokenStream [
                                        Ident {
                                            sym: feature,
                                            span: bytes(75390..75397),
                                        },
                                        Punct {
                                            char: '=',
                                            spacing: Alone,
                                            span: bytes(75398..75399),
                                        },
                                        Literal {
                                            lit: "no-panic",
                                            span: bytes(75400..75410),
                                        },
                                        Punct {
                                            char: ',',
                                            spacing: Alone,
                                            span: bytes(75410..75411),
                                        },
                                        Ident {
                                            sym: inline,
                                            span: bytes(75412..75418),
                                        },
                                    ],
                                },
                            },
                        ],
                        vis: Visibility::Public(
                            Pub,
                        ),
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: mul_pow5_inv_div_pow2,
                                span: bytes(75428..75449),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: m,
                                                span: bytes(75450..75451),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u32,
                                                            span: bytes(75453..75456),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                                Comma,
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: q,
                                                span: bytes(75458..75459),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u32,
                                                            span: bytes(75461..75464),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                                Comma,
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: j,
                                                span: bytes(75466..75467),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: i32,
                                                            span: bytes(75469..75472),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: u32,
                                                    span: bytes(75477..75480),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Expr(
                                    Expr::Block {
                                        attrs: [
                                            Attribute {
                                                pound_token: Pound,
                                                style: AttrStyle::Outer,
                                                bracket_token: Bracket,
                                                meta: Meta::List {
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: cfg,
                                                                    span: bytes(75489..75492),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                    delimiter: MacroDelimiter::Paren(
                                                        Paren,
                                                    ),
                                                    tokens: TokenStream [
                                                        Ident {
                                                            sym: feature,
                                                            span: bytes(75493..75500),
                                                        },
                                                        Punct {
                                                            char: '=',
                                                            spacing: Alone,
                                                            span: bytes(75501..75502),
                                                        },
                                                        Literal {
                                                            lit: "small",
                                                            span: bytes(75503..75510),
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                        label: None,
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: pow5,
                                                            span: bytes(75875..75879),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::Unsafe {
                                                                attrs: [],
                                                                unsafe_token: Unsafe,
                                                                block: Block {
                                                                    brace_token: Brace,
                                                                    stmts: [
                                                                        Stmt::Expr(
                                                                            Expr::Call {
                                                                                attrs: [],
                                                                                func: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: d2s,
                                                                                                    span: bytes(75891..75894),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                            PathSep,
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: compute_inv_pow5,
                                                                                                    span: bytes(75896..75912),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                paren_token: Paren,
                                                                                args: [
                                                                                    Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: q,
                                                                                                        span: bytes(75913..75914),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ],
                                                                            },
                                                                            None,
                                                                        ),
                                                                    ],
                                                                },
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Expr(
                                                    Expr::Call {
                                                        attrs: [],
                                                        func: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: mul_shift_32,
                                                                            span: bytes(75927..75939),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        paren_token: Paren,
                                                        args: [
                                                            Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: m,
                                                                                span: bytes(75940..75941),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            Comma,
                                                            Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Field {
                                                                    attrs: [],
                                                                    base: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: pow5,
                                                                                        span: bytes(75943..75947),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    member: Member::Unnamed(
                                                                        Index {
                                                                            index: 1,
                                                                            span: bytes(75948..75949),
                                                                        },
                                                                    ),
                                                                },
                                                                op: BinOp::Add(
                                                                    Plus,
                                                                ),
                                                                right: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 1,
                                                                    },
                                                                },
                                                            },
                                                            Comma,
                                                            Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: j,
                                                                                span: bytes(75955..75956),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                    None,
                                ),
                                Stmt::Expr(
                                    Expr::Block {
                                        attrs: [
                                            Attribute {
                                                pound_token: Pound,
                                                style: AttrStyle::Outer,
                                                bracket_token: Bracket,
                                                meta: Meta::List {
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: cfg,
                                                                    span: bytes(75971..75974),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                    delimiter: MacroDelimiter::Paren(
                                                        Paren,
                                                    ),
                                                    tokens: TokenStream [
                                                        Ident {
                                                            sym: not,
                                                            span: bytes(75975..75978),
                                                        },
                                                        Group {
                                                            delimiter: Parenthesis,
                                                            stream: TokenStream [
                                                                Ident {
                                                                    sym: feature,
                                                                    span: bytes(75979..75986),
                                                                },
                                                                Punct {
                                                                    char: '=',
                                                                    spacing: Alone,
                                                                    span: bytes(75987..75988),
                                                                },
                                                                Literal {
                                                                    lit: "small",
                                                                    span: bytes(75989..75996),
                                                                },
                                                            ],
                                                            span: bytes(75978..75997),
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                        label: None,
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Macro {
                                                    attrs: [],
                                                    mac: Macro {
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: debug_assert,
                                                                        span: bytes(76014..76026),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                        bang_token: Not,
                                                        delimiter: MacroDelimiter::Paren(
                                                            Paren,
                                                        ),
                                                        tokens: TokenStream [
                                                            Ident {
                                                                sym: q,
                                                                span: bytes(76028..76029),
                                                            },
                                                            Punct {
                                                                char: '<',
                                                                spacing: Alone,
                                                                span: bytes(76030..76031),
                                                            },
                                                            Ident {
                                                                sym: d2s,
                                                                span: bytes(76032..76035),
                                                            },
                                                            Punct {
                                                                char: ':',
                                                                spacing: Joint,
                                                                span: bytes(76035..76036),
                                                            },
                                                            Punct {
                                                                char: ':',
                                                                spacing: Alone,
                                                                span: bytes(76036..76037),
                                                            },
                                                            Ident {
                                                                sym: DOUBLE_POW5_INV_SPLIT,
                                                                span: bytes(76037..76058),
                                                            },
                                                            Punct {
                                                                char: '.',
                                                                spacing: Alone,
                                                                span: bytes(76058..76059),
                                                            },
                                                            Ident {
                                                                sym: len,
                                                                span: bytes(76059..76062),
                                                            },
                                                            Group {
                                                                delimiter: Parenthesis,
                                                                stream: TokenStream [],
                                                                span: bytes(76062..76064),
                                                            },
                                                            Ident {
                                                                sym: as,
                                                                span: bytes(76065..76067),
                                                            },
                                                            Ident {
                                                                sym: u32,
                                                                span: bytes(76068..76071),
                                                            },
                                                        ],
                                                    },
                                                    semi_token: Some(
                                                        Semi,
                                                    ),
                                                },
                                                Stmt::Expr(
                                                    Expr::Unsafe {
                                                        attrs: [],
                                                        unsafe_token: Unsafe,
                                                        block: Block {
                                                            brace_token: Brace,
                                                            stmts: [
                                                                Stmt::Expr(
                                                                    Expr::Call {
                                                                        attrs: [],
                                                                        func: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: mul_shift_32,
                                                                                            span: bytes(76103..76115),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        paren_token: Paren,
                                                                        args: [
                                                                            Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: m,
                                                                                                span: bytes(76133..76134),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            Comma,
                                                                            Expr::Binary {
                                                                                attrs: [],
                                                                                left: Expr::Field {
                                                                                    attrs: [],
                                                                                    base: Expr::MethodCall {
                                                                                        attrs: [],
                                                                                        receiver: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: d2s,
                                                                                                            span: bytes(76152..76155),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                    PathSep,
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: DOUBLE_POW5_INV_SPLIT,
                                                                                                            span: bytes(76157..76178),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        dot_token: Dot,
                                                                                        method: Ident {
                                                                                            sym: get_unchecked,
                                                                                            span: bytes(76179..76192),
                                                                                        },
                                                                                        turbofish: None,
                                                                                        paren_token: Paren,
                                                                                        args: [
                                                                                            Expr::Cast {
                                                                                                attrs: [],
                                                                                                expr: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: q,
                                                                                                                    span: bytes(76193..76194),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                as_token: As,
                                                                                                ty: Type::Path {
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: usize,
                                                                                                                    span: bytes(76198..76203),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                    dot_token: Dot,
                                                                                    member: Member::Unnamed(
                                                                                        Index {
                                                                                            index: 1,
                                                                                            span: bytes(76205..76206),
                                                                                        },
                                                                                    ),
                                                                                },
                                                                                op: BinOp::Add(
                                                                                    Plus,
                                                                                ),
                                                                                right: Expr::Lit {
                                                                                    attrs: [],
                                                                                    lit: Lit::Int {
                                                                                        token: 1,
                                                                                    },
                                                                                },
                                                                            },
                                                                            Comma,
                                                                            Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: j,
                                                                                                span: bytes(76228..76229),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            Comma,
                                                                        ],
                                                                    },
                                                                    None,
                                                                ),
                                                            ],
                                                        },
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: PubT,
            },
        ),
    },
    "ryu::pretty::format64": FnData {
        fn_name: "format64",
        complete_fn_name: "ryu::pretty::format64",
        fn_type: Fn(
            FnItem {
                fn_name: Name {
                    name: "format64",
                    complete_name: "ryu::pretty::format64",
                    import_name: MyPath {
                        name: "ryu",
                        next: Some(
                            MyPath {
                                name: "pretty",
                                next: Some(
                                    MyPath {
                                        name: "format64",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "format64",
                item: Some(
                    ItemFn {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident {
                                                sym: must_use,
                                                span: bytes(78244..78252),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                    ],
                                },
                            },
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::List {
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: cfg_attr,
                                                    span: bytes(78256..78264),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                    delimiter: MacroDelimiter::Paren(
                                        Paren,
                                    ),
                                    tokens: TokenStream [
                                        Ident {
                                            sym: feature,
                                            span: bytes(78265..78272),
                                        },
                                        Punct {
                                            char: '=',
                                            spacing: Alone,
                                            span: bytes(78273..78274),
                                        },
                                        Literal {
                                            lit: "no-panic",
                                            span: bytes(78275..78285),
                                        },
                                        Punct {
                                            char: ',',
                                            spacing: Alone,
                                            span: bytes(78285..78286),
                                        },
                                        Ident {
                                            sym: no_panic,
                                            span: bytes(78287..78295),
                                        },
                                    ],
                                },
                            },
                        ],
                        vis: Visibility::Public(
                            Pub,
                        ),
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: Some(
                                Unsafe,
                            ),
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: format64,
                                span: bytes(78312..78320),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: f,
                                                span: bytes(78321..78322),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: f64,
                                                            span: bytes(78324..78327),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                                Comma,
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: result,
                                                span: bytes(78329..78335),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Ptr {
                                            star_token: Star,
                                            const_token: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: u8,
                                                                span: bytes(78342..78344),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: usize,
                                                    span: bytes(78349..78354),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: bits,
                                            span: bytes(78365..78369),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::MethodCall {
                                                attrs: [],
                                                receiver: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: f,
                                                                    span: bytes(78372..78373),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                dot_token: Dot,
                                                method: Ident {
                                                    sym: to_bits,
                                                    span: bytes(78374..78381),
                                                },
                                                turbofish: None,
                                                paren_token: Paren,
                                                args: [],
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: sign,
                                            span: bytes(78393..78397),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Binary {
                                                attrs: [],
                                                left: Expr::Paren {
                                                    attrs: [],
                                                    paren_token: Paren,
                                                    expr: Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Paren {
                                                            attrs: [],
                                                            paren_token: Paren,
                                                            expr: Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: bits,
                                                                                    span: bytes(78402..78406),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                op: BinOp::Shr(
                                                                    Shr,
                                                                ),
                                                                right: Expr::Paren {
                                                                    attrs: [],
                                                                    paren_token: Paren,
                                                                    expr: Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: DOUBLE_MANTISSA_BITS,
                                                                                            span: bytes(78411..78431),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        op: BinOp::Add(
                                                                            Plus,
                                                                        ),
                                                                        right: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: DOUBLE_EXPONENT_BITS,
                                                                                            span: bytes(78434..78454),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        },
                                                        op: BinOp::BitAnd(
                                                            And,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 1,
                                                            },
                                                        },
                                                    },
                                                },
                                                op: BinOp::Ne(
                                                    Ne,
                                                ),
                                                right: Expr::Lit {
                                                    attrs: [],
                                                    lit: Lit::Int {
                                                        token: 0,
                                                    },
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: ieee_mantissa,
                                            span: bytes(78476..78489),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Binary {
                                                attrs: [],
                                                left: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: bits,
                                                                    span: bytes(78492..78496),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                op: BinOp::BitAnd(
                                                    And,
                                                ),
                                                right: Expr::Paren {
                                                    attrs: [],
                                                    paren_token: Paren,
                                                    expr: Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Paren {
                                                            attrs: [],
                                                            paren_token: Paren,
                                                            expr: Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 1u64,
                                                                    },
                                                                },
                                                                op: BinOp::Shl(
                                                                    Shl,
                                                                ),
                                                                right: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: DOUBLE_MANTISSA_BITS,
                                                                                    span: bytes(78509..78529),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        },
                                                        op: BinOp::Sub(
                                                            Minus,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 1,
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: ieee_exponent,
                                            span: bytes(78545..78558),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Binary {
                                                attrs: [],
                                                left: Expr::Cast {
                                                    attrs: [],
                                                    expr: Expr::Paren {
                                                        attrs: [],
                                                        paren_token: Paren,
                                                        expr: Expr::Binary {
                                                            attrs: [],
                                                            left: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: bits,
                                                                                span: bytes(78570..78574),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            op: BinOp::Shr(
                                                                Shr,
                                                            ),
                                                            right: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: DOUBLE_MANTISSA_BITS,
                                                                                span: bytes(78578..78598),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                    as_token: As,
                                                    ty: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: u32,
                                                                        span: bytes(78603..78606),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                                op: BinOp::BitAnd(
                                                    And,
                                                ),
                                                right: Expr::Paren {
                                                    attrs: [],
                                                    paren_token: Paren,
                                                    expr: Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Paren {
                                                            attrs: [],
                                                            paren_token: Paren,
                                                            expr: Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 1u32,
                                                                    },
                                                                },
                                                                op: BinOp::Shl(
                                                                    Shl,
                                                                ),
                                                                right: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: DOUBLE_EXPONENT_BITS,
                                                                                    span: bytes(78619..78639),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        },
                                                        op: BinOp::Sub(
                                                            Minus,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 1,
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: Some(
                                            Mut,
                                        ),
                                        ident: Ident {
                                            sym: index,
                                            span: bytes(78660..78665),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Lit {
                                                attrs: [],
                                                lit: Lit::Int {
                                                    token: 0isize,
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Expr(
                                    Expr::If {
                                        attrs: [],
                                        if_token: If,
                                        cond: Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: sign,
                                                            span: bytes(78683..78687),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        then_branch: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::Assign {
                                                        attrs: [],
                                                        left: Expr::Unary {
                                                            attrs: [],
                                                            op: UnOp::Deref(
                                                                Star,
                                                            ),
                                                            expr: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: result,
                                                                                span: bytes(78699..78705),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                        eq_token: Eq,
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Byte {
                                                                token: b'-',
                                                            },
                                                        },
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                                Stmt::Expr(
                                                    Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: index,
                                                                            span: bytes(78722..78727),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        op: BinOp::AddAssign(
                                                            PlusEq,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 1,
                                                            },
                                                        },
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                            ],
                                        },
                                        else_branch: None,
                                    },
                                    None,
                                ),
                                Stmt::Expr(
                                    Expr::If {
                                        attrs: [],
                                        if_token: If,
                                        cond: Expr::Binary {
                                            attrs: [],
                                            left: Expr::Binary {
                                                attrs: [],
                                                left: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: ieee_exponent,
                                                                    span: bytes(78748..78761),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                op: BinOp::Eq(
                                                    EqEq,
                                                ),
                                                right: Expr::Lit {
                                                    attrs: [],
                                                    lit: Lit::Int {
                                                        token: 0,
                                                    },
                                                },
                                            },
                                            op: BinOp::And(
                                                AndAnd,
                                            ),
                                            right: Expr::Binary {
                                                attrs: [],
                                                left: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: ieee_mantissa,
                                                                    span: bytes(78770..78783),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                op: BinOp::Eq(
                                                    EqEq,
                                                ),
                                                right: Expr::Lit {
                                                    attrs: [],
                                                    lit: Lit::Int {
                                                        token: 0,
                                                    },
                                                },
                                            },
                                        },
                                        then_branch: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::Call {
                                                        attrs: [],
                                                        func: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: ptr,
                                                                            span: bytes(78799..78802),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: copy_nonoverlapping,
                                                                            span: bytes(78804..78823),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        paren_token: Paren,
                                                        args: [
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::ByteStr {
                                                                        token: b"0.0",
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: as_ptr,
                                                                    span: bytes(78831..78837),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [],
                                                            },
                                                            Comma,
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: result,
                                                                                    span: bytes(78841..78847),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: offset,
                                                                    span: bytes(78848..78854),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: index,
                                                                                        span: bytes(78855..78860),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            Comma,
                                                            Expr::Lit {
                                                                attrs: [],
                                                                lit: Lit::Int {
                                                                    token: 3,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                                Stmt::Expr(
                                                    Expr::Return {
                                                        attrs: [],
                                                        return_token: Return,
                                                        expr: Some(
                                                            Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Cast {
                                                                    attrs: [],
                                                                    expr: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: sign,
                                                                                        span: bytes(78882..78886),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    as_token: As,
                                                                    ty: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: usize,
                                                                                        span: bytes(78890..78895),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                                op: BinOp::Add(
                                                                    Plus,
                                                                ),
                                                                right: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 3,
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                            ],
                                        },
                                        else_branch: None,
                                    },
                                    None,
                                ),
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: v,
                                            span: bytes(78916..78917),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Call {
                                                attrs: [],
                                                func: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: d2d,
                                                                    span: bytes(78920..78923),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                paren_token: Paren,
                                                args: [
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: ieee_mantissa,
                                                                        span: bytes(78924..78937),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    Comma,
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: ieee_exponent,
                                                                        span: bytes(78939..78952),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: length,
                                            span: bytes(78964..78970),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Cast {
                                                attrs: [],
                                                expr: Expr::Call {
                                                    attrs: [],
                                                    func: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: d2s,
                                                                        span: bytes(78973..78976),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                                PathSep,
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: decimal_length17,
                                                                        span: bytes(78978..78994),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    paren_token: Paren,
                                                    args: [
                                                        Expr::Field {
                                                            attrs: [],
                                                            base: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: v,
                                                                                span: bytes(78995..78996),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            dot_token: Dot,
                                                            member: Member::Named(
                                                                Ident {
                                                                    sym: mantissa,
                                                                    span: bytes(78997..79005),
                                                                },
                                                            ),
                                                        },
                                                    ],
                                                },
                                                as_token: As,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: isize,
                                                                    span: bytes(79010..79015),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: k,
                                            span: bytes(79025..79026),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Cast {
                                                attrs: [],
                                                expr: Expr::Field {
                                                    attrs: [],
                                                    base: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: v,
                                                                        span: bytes(79029..79030),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    dot_token: Dot,
                                                    member: Member::Named(
                                                        Ident {
                                                            sym: exponent,
                                                            span: bytes(79031..79039),
                                                        },
                                                    ),
                                                },
                                                as_token: As,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: isize,
                                                                    span: bytes(79043..79048),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: kk,
                                            span: bytes(79058..79060),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Binary {
                                                attrs: [],
                                                left: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: length,
                                                                    span: bytes(79063..79069),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                op: BinOp::Add(
                                                    Plus,
                                                ),
                                                right: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: k,
                                                                    span: bytes(79072..79073),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Macro {
                                    attrs: [],
                                    mac: Macro {
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: debug_assert,
                                                        span: bytes(79105..79117),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                        bang_token: Not,
                                        delimiter: MacroDelimiter::Paren(
                                            Paren,
                                        ),
                                        tokens: TokenStream [
                                            Ident {
                                                sym: k,
                                                span: bytes(79119..79120),
                                            },
                                            Punct {
                                                char: '>',
                                                spacing: Joint,
                                                span: bytes(79121..79122),
                                            },
                                            Punct {
                                                char: '=',
                                                spacing: Alone,
                                                span: bytes(79122..79123),
                                            },
                                            Punct {
                                                char: '-',
                                                spacing: Alone,
                                                span: bytes(79124..79125),
                                            },
                                            Literal {
                                                lit: 324,
                                                span: bytes(79125..79128),
                                            },
                                        ],
                                    },
                                    semi_token: Some(
                                        Semi,
                                    ),
                                },
                                Stmt::Expr(
                                    Expr::If {
                                        attrs: [],
                                        if_token: If,
                                        cond: Expr::Binary {
                                            attrs: [],
                                            left: Expr::Binary {
                                                attrs: [],
                                                left: Expr::Lit {
                                                    attrs: [],
                                                    lit: Lit::Int {
                                                        token: 0,
                                                    },
                                                },
                                                op: BinOp::Le(
                                                    Le,
                                                ),
                                                right: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: k,
                                                                    span: bytes(79144..79145),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                            op: BinOp::And(
                                                AndAnd,
                                            ),
                                            right: Expr::Binary {
                                                attrs: [],
                                                left: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: kk,
                                                                    span: bytes(79149..79151),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                op: BinOp::Le(
                                                    Le,
                                                ),
                                                right: Expr::Lit {
                                                    attrs: [],
                                                    lit: Lit::Int {
                                                        token: 16,
                                                    },
                                                },
                                            },
                                        },
                                        then_branch: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::Call {
                                                        attrs: [],
                                                        func: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: write_mantissa_long,
                                                                            span: bytes(79203..79222),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        paren_token: Paren,
                                                        args: [
                                                            Expr::Field {
                                                                attrs: [],
                                                                base: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: v,
                                                                                    span: bytes(79223..79224),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                member: Member::Named(
                                                                    Ident {
                                                                        sym: mantissa,
                                                                        span: bytes(79225..79233),
                                                                    },
                                                                ),
                                                            },
                                                            Comma,
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: result,
                                                                                    span: bytes(79235..79241),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: offset,
                                                                    span: bytes(79242..79248),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: index,
                                                                                            span: bytes(79249..79254),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        op: BinOp::Add(
                                                                            Plus,
                                                                        ),
                                                                        right: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: length,
                                                                                            span: bytes(79257..79263),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        ],
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                                Stmt::Expr(
                                                    Expr::ForLoop {
                                                        attrs: [],
                                                        label: None,
                                                        for_token: For,
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: i,
                                                                span: bytes(79279..79280),
                                                            },
                                                            subpat: None,
                                                        },
                                                        in_token: In,
                                                        expr: Expr::Range {
                                                            attrs: [],
                                                            start: Some(
                                                                Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: length,
                                                                                    span: bytes(79284..79290),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                            limits: RangeLimits::HalfOpen(
                                                                DotDot,
                                                            ),
                                                            end: Some(
                                                                Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: kk,
                                                                                    span: bytes(79292..79294),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                        },
                                                        body: Block {
                                                            brace_token: Brace,
                                                            stmts: [
                                                                Stmt::Expr(
                                                                    Expr::Assign {
                                                                        attrs: [],
                                                                        left: Expr::Unary {
                                                                            attrs: [],
                                                                            op: UnOp::Deref(
                                                                                Star,
                                                                            ),
                                                                            expr: Expr::MethodCall {
                                                                                attrs: [],
                                                                                receiver: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: result,
                                                                                                    span: bytes(79310..79316),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                dot_token: Dot,
                                                                                method: Ident {
                                                                                    sym: offset,
                                                                                    span: bytes(79317..79323),
                                                                                },
                                                                                turbofish: None,
                                                                                paren_token: Paren,
                                                                                args: [
                                                                                    Expr::Binary {
                                                                                        attrs: [],
                                                                                        left: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: index,
                                                                                                            span: bytes(79324..79329),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        op: BinOp::Add(
                                                                                            Plus,
                                                                                        ),
                                                                                        right: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: i,
                                                                                                            span: bytes(79332..79333),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        eq_token: Eq,
                                                                        right: Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Byte {
                                                                                token: b'0',
                                                                            },
                                                                        },
                                                                    },
                                                                    Some(
                                                                        Semi,
                                                                    ),
                                                                ),
                                                            ],
                                                        },
                                                    },
                                                    None,
                                                ),
                                                Stmt::Expr(
                                                    Expr::Assign {
                                                        attrs: [],
                                                        left: Expr::Unary {
                                                            attrs: [],
                                                            op: UnOp::Deref(
                                                                Star,
                                                            ),
                                                            expr: Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: result,
                                                                                    span: bytes(79362..79368),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: offset,
                                                                    span: bytes(79369..79375),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: index,
                                                                                            span: bytes(79376..79381),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        op: BinOp::Add(
                                                                            Plus,
                                                                        ),
                                                                        right: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: kk,
                                                                                            span: bytes(79384..79386),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        eq_token: Eq,
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Byte {
                                                                token: b'.',
                                                            },
                                                        },
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                                Stmt::Expr(
                                                    Expr::Assign {
                                                        attrs: [],
                                                        left: Expr::Unary {
                                                            attrs: [],
                                                            op: UnOp::Deref(
                                                                Star,
                                                            ),
                                                            expr: Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: result,
                                                                                    span: bytes(79405..79411),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: offset,
                                                                    span: bytes(79412..79418),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Binary {
                                                                            attrs: [],
                                                                            left: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: index,
                                                                                                span: bytes(79419..79424),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            op: BinOp::Add(
                                                                                Plus,
                                                                            ),
                                                                            right: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: kk,
                                                                                                span: bytes(79427..79429),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        },
                                                                        op: BinOp::Add(
                                                                            Plus,
                                                                        ),
                                                                        right: Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Int {
                                                                                token: 1,
                                                                            },
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        eq_token: Eq,
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Byte {
                                                                token: b'0',
                                                            },
                                                        },
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                                Stmt::Expr(
                                                    Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Binary {
                                                            attrs: [],
                                                            left: Expr::Cast {
                                                                attrs: [],
                                                                expr: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: index,
                                                                                    span: bytes(79451..79456),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                as_token: As,
                                                                ty: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: usize,
                                                                                    span: bytes(79460..79465),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                            op: BinOp::Add(
                                                                Plus,
                                                            ),
                                                            right: Expr::Cast {
                                                                attrs: [],
                                                                expr: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: kk,
                                                                                    span: bytes(79468..79470),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                as_token: As,
                                                                ty: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: usize,
                                                                                    span: bytes(79474..79479),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        },
                                                        op: BinOp::Add(
                                                            Plus,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 2,
                                                            },
                                                        },
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                        else_branch: Some(
                                            (
                                                Else,
                                                Expr::If {
                                                    attrs: [],
                                                    if_token: If,
                                                    cond: Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Binary {
                                                            attrs: [],
                                                            left: Expr::Lit {
                                                                attrs: [],
                                                                lit: Lit::Int {
                                                                    token: 0,
                                                                },
                                                            },
                                                            op: BinOp::Lt(
                                                                Lt,
                                                            ),
                                                            right: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: kk,
                                                                                span: bytes(79502..79504),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                        op: BinOp::And(
                                                            AndAnd,
                                                        ),
                                                        right: Expr::Binary {
                                                            attrs: [],
                                                            left: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: kk,
                                                                                span: bytes(79508..79510),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            op: BinOp::Le(
                                                                Le,
                                                            ),
                                                            right: Expr::Lit {
                                                                attrs: [],
                                                                lit: Lit::Int {
                                                                    token: 16,
                                                                },
                                                            },
                                                        },
                                                    },
                                                    then_branch: Block {
                                                        brace_token: Brace,
                                                        stmts: [
                                                            Stmt::Expr(
                                                                Expr::Call {
                                                                    attrs: [],
                                                                    func: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: write_mantissa_long,
                                                                                        span: bytes(79555..79574),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    paren_token: Paren,
                                                                    args: [
                                                                        Expr::Field {
                                                                            attrs: [],
                                                                            base: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: v,
                                                                                                span: bytes(79575..79576),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            dot_token: Dot,
                                                                            member: Member::Named(
                                                                                Ident {
                                                                                    sym: mantissa,
                                                                                    span: bytes(79577..79585),
                                                                                },
                                                                            ),
                                                                        },
                                                                        Comma,
                                                                        Expr::MethodCall {
                                                                            attrs: [],
                                                                            receiver: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: result,
                                                                                                span: bytes(79587..79593),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            dot_token: Dot,
                                                                            method: Ident {
                                                                                sym: offset,
                                                                                span: bytes(79594..79600),
                                                                            },
                                                                            turbofish: None,
                                                                            paren_token: Paren,
                                                                            args: [
                                                                                Expr::Binary {
                                                                                    attrs: [],
                                                                                    left: Expr::Binary {
                                                                                        attrs: [],
                                                                                        left: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: index,
                                                                                                            span: bytes(79601..79606),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        op: BinOp::Add(
                                                                                            Plus,
                                                                                        ),
                                                                                        right: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: length,
                                                                                                            span: bytes(79609..79615),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                    op: BinOp::Add(
                                                                                        Plus,
                                                                                    ),
                                                                                    right: Expr::Lit {
                                                                                        attrs: [],
                                                                                        lit: Lit::Int {
                                                                                            token: 1,
                                                                                        },
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    ],
                                                                },
                                                                Some(
                                                                    Semi,
                                                                ),
                                                            ),
                                                            Stmt::Expr(
                                                                Expr::Call {
                                                                    attrs: [],
                                                                    func: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: ptr,
                                                                                        span: bytes(79631..79634),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                                PathSep,
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: copy,
                                                                                        span: bytes(79636..79640),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    paren_token: Paren,
                                                                    args: [
                                                                        Expr::MethodCall {
                                                                            attrs: [],
                                                                            receiver: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: result,
                                                                                                span: bytes(79641..79647),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            dot_token: Dot,
                                                                            method: Ident {
                                                                                sym: offset,
                                                                                span: bytes(79648..79654),
                                                                            },
                                                                            turbofish: None,
                                                                            paren_token: Paren,
                                                                            args: [
                                                                                Expr::Binary {
                                                                                    attrs: [],
                                                                                    left: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: index,
                                                                                                        span: bytes(79655..79660),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    op: BinOp::Add(
                                                                                        Plus,
                                                                                    ),
                                                                                    right: Expr::Lit {
                                                                                        attrs: [],
                                                                                        lit: Lit::Int {
                                                                                            token: 1,
                                                                                        },
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                        Comma,
                                                                        Expr::MethodCall {
                                                                            attrs: [],
                                                                            receiver: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: result,
                                                                                                span: bytes(79667..79673),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            dot_token: Dot,
                                                                            method: Ident {
                                                                                sym: offset,
                                                                                span: bytes(79674..79680),
                                                                            },
                                                                            turbofish: None,
                                                                            paren_token: Paren,
                                                                            args: [
                                                                                Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: index,
                                                                                                    span: bytes(79681..79686),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                        Comma,
                                                                        Expr::Cast {
                                                                            attrs: [],
                                                                            expr: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: kk,
                                                                                                span: bytes(79689..79691),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            as_token: As,
                                                                            ty: Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: usize,
                                                                                                span: bytes(79695..79700),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                                Some(
                                                                    Semi,
                                                                ),
                                                            ),
                                                            Stmt::Expr(
                                                                Expr::Assign {
                                                                    attrs: [],
                                                                    left: Expr::Unary {
                                                                        attrs: [],
                                                                        op: UnOp::Deref(
                                                                            Star,
                                                                        ),
                                                                        expr: Expr::MethodCall {
                                                                            attrs: [],
                                                                            receiver: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: result,
                                                                                                span: bytes(79712..79718),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            dot_token: Dot,
                                                                            method: Ident {
                                                                                sym: offset,
                                                                                span: bytes(79719..79725),
                                                                            },
                                                                            turbofish: None,
                                                                            paren_token: Paren,
                                                                            args: [
                                                                                Expr::Binary {
                                                                                    attrs: [],
                                                                                    left: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: index,
                                                                                                        span: bytes(79726..79731),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    op: BinOp::Add(
                                                                                        Plus,
                                                                                    ),
                                                                                    right: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: kk,
                                                                                                        span: bytes(79734..79736),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    eq_token: Eq,
                                                                    right: Expr::Lit {
                                                                        attrs: [],
                                                                        lit: Lit::Byte {
                                                                            token: b'.',
                                                                        },
                                                                    },
                                                                },
                                                                Some(
                                                                    Semi,
                                                                ),
                                                            ),
                                                            Stmt::Expr(
                                                                Expr::Binary {
                                                                    attrs: [],
                                                                    left: Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Cast {
                                                                            attrs: [],
                                                                            expr: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: index,
                                                                                                span: bytes(79754..79759),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            as_token: As,
                                                                            ty: Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: usize,
                                                                                                span: bytes(79763..79768),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        },
                                                                        op: BinOp::Add(
                                                                            Plus,
                                                                        ),
                                                                        right: Expr::Cast {
                                                                            attrs: [],
                                                                            expr: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: length,
                                                                                                span: bytes(79771..79777),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            as_token: As,
                                                                            ty: Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: usize,
                                                                                                span: bytes(79781..79786),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        },
                                                                    },
                                                                    op: BinOp::Add(
                                                                        Plus,
                                                                    ),
                                                                    right: Expr::Lit {
                                                                        attrs: [],
                                                                        lit: Lit::Int {
                                                                            token: 1,
                                                                        },
                                                                    },
                                                                },
                                                                None,
                                                            ),
                                                        ],
                                                    },
                                                    else_branch: Some(
                                                        (
                                                            Else,
                                                            Expr::If {
                                                                attrs: [],
                                                                if_token: If,
                                                                cond: Expr::Binary {
                                                                    attrs: [],
                                                                    left: Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Unary {
                                                                            attrs: [],
                                                                            op: UnOp::Neg(
                                                                                Minus,
                                                                            ),
                                                                            expr: Expr::Lit {
                                                                                attrs: [],
                                                                                lit: Lit::Int {
                                                                                    token: 5,
                                                                                },
                                                                            },
                                                                        },
                                                                        op: BinOp::Lt(
                                                                            Lt,
                                                                        ),
                                                                        right: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: kk,
                                                                                            span: bytes(79810..79812),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                    op: BinOp::And(
                                                                        AndAnd,
                                                                    ),
                                                                    right: Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: kk,
                                                                                            span: bytes(79816..79818),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        op: BinOp::Le(
                                                                            Le,
                                                                        ),
                                                                        right: Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Int {
                                                                                token: 0,
                                                                            },
                                                                        },
                                                                    },
                                                                },
                                                                then_branch: Block {
                                                                    brace_token: Brace,
                                                                    stmts: [
                                                                        Stmt::Expr(
                                                                            Expr::Assign {
                                                                                attrs: [],
                                                                                left: Expr::Unary {
                                                                                    attrs: [],
                                                                                    op: UnOp::Deref(
                                                                                        Star,
                                                                                    ),
                                                                                    expr: Expr::MethodCall {
                                                                                        attrs: [],
                                                                                        receiver: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: result,
                                                                                                            span: bytes(79866..79872),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        dot_token: Dot,
                                                                                        method: Ident {
                                                                                            sym: offset,
                                                                                            span: bytes(79873..79879),
                                                                                        },
                                                                                        turbofish: None,
                                                                                        paren_token: Paren,
                                                                                        args: [
                                                                                            Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: index,
                                                                                                                span: bytes(79880..79885),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                eq_token: Eq,
                                                                                right: Expr::Lit {
                                                                                    attrs: [],
                                                                                    lit: Lit::Byte {
                                                                                        token: b'0',
                                                                                    },
                                                                                },
                                                                            },
                                                                            Some(
                                                                                Semi,
                                                                            ),
                                                                        ),
                                                                        Stmt::Expr(
                                                                            Expr::Assign {
                                                                                attrs: [],
                                                                                left: Expr::Unary {
                                                                                    attrs: [],
                                                                                    op: UnOp::Deref(
                                                                                        Star,
                                                                                    ),
                                                                                    expr: Expr::MethodCall {
                                                                                        attrs: [],
                                                                                        receiver: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: result,
                                                                                                            span: bytes(79904..79910),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        dot_token: Dot,
                                                                                        method: Ident {
                                                                                            sym: offset,
                                                                                            span: bytes(79911..79917),
                                                                                        },
                                                                                        turbofish: None,
                                                                                        paren_token: Paren,
                                                                                        args: [
                                                                                            Expr::Binary {
                                                                                                attrs: [],
                                                                                                left: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: index,
                                                                                                                    span: bytes(79918..79923),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                op: BinOp::Add(
                                                                                                    Plus,
                                                                                                ),
                                                                                                right: Expr::Lit {
                                                                                                    attrs: [],
                                                                                                    lit: Lit::Int {
                                                                                                        token: 1,
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                eq_token: Eq,
                                                                                right: Expr::Lit {
                                                                                    attrs: [],
                                                                                    lit: Lit::Byte {
                                                                                        token: b'.',
                                                                                    },
                                                                                },
                                                                            },
                                                                            Some(
                                                                                Semi,
                                                                            ),
                                                                        ),
                                                                        Stmt::Local {
                                                                            attrs: [],
                                                                            let_token: Let,
                                                                            pat: Pat::Ident {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident {
                                                                                    sym: offset,
                                                                                    span: bytes(79949..79955),
                                                                                },
                                                                                subpat: None,
                                                                            },
                                                                            init: Some(
                                                                                LocalInit {
                                                                                    eq_token: Eq,
                                                                                    expr: Expr::Binary {
                                                                                        attrs: [],
                                                                                        left: Expr::Lit {
                                                                                            attrs: [],
                                                                                            lit: Lit::Int {
                                                                                                token: 2,
                                                                                            },
                                                                                        },
                                                                                        op: BinOp::Sub(
                                                                                            Minus,
                                                                                        ),
                                                                                        right: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: kk,
                                                                                                            span: bytes(79962..79964),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                    diverge: None,
                                                                                },
                                                                            ),
                                                                            semi_token: Semi,
                                                                        },
                                                                        Stmt::Expr(
                                                                            Expr::ForLoop {
                                                                                attrs: [],
                                                                                label: None,
                                                                                for_token: For,
                                                                                pat: Pat::Ident {
                                                                                    attrs: [],
                                                                                    by_ref: None,
                                                                                    mutability: None,
                                                                                    ident: Ident {
                                                                                        sym: i,
                                                                                        span: bytes(79978..79979),
                                                                                    },
                                                                                    subpat: None,
                                                                                },
                                                                                in_token: In,
                                                                                expr: Expr::Range {
                                                                                    attrs: [],
                                                                                    start: Some(
                                                                                        Expr::Lit {
                                                                                            attrs: [],
                                                                                            lit: Lit::Int {
                                                                                                token: 2,
                                                                                            },
                                                                                        },
                                                                                    ),
                                                                                    limits: RangeLimits::HalfOpen(
                                                                                        DotDot,
                                                                                    ),
                                                                                    end: Some(
                                                                                        Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: offset,
                                                                                                            span: bytes(79986..79992),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    ),
                                                                                },
                                                                                body: Block {
                                                                                    brace_token: Brace,
                                                                                    stmts: [
                                                                                        Stmt::Expr(
                                                                                            Expr::Assign {
                                                                                                attrs: [],
                                                                                                left: Expr::Unary {
                                                                                                    attrs: [],
                                                                                                    op: UnOp::Deref(
                                                                                                        Star,
                                                                                                    ),
                                                                                                    expr: Expr::MethodCall {
                                                                                                        attrs: [],
                                                                                                        receiver: Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: result,
                                                                                                                            span: bytes(80008..80014),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                        dot_token: Dot,
                                                                                                        method: Ident {
                                                                                                            sym: offset,
                                                                                                            span: bytes(80015..80021),
                                                                                                        },
                                                                                                        turbofish: None,
                                                                                                        paren_token: Paren,
                                                                                                        args: [
                                                                                                            Expr::Binary {
                                                                                                                attrs: [],
                                                                                                                left: Expr::Path {
                                                                                                                    attrs: [],
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: index,
                                                                                                                                    span: bytes(80022..80027),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                                op: BinOp::Add(
                                                                                                                    Plus,
                                                                                                                ),
                                                                                                                right: Expr::Path {
                                                                                                                    attrs: [],
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: i,
                                                                                                                                    span: bytes(80030..80031),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                eq_token: Eq,
                                                                                                right: Expr::Lit {
                                                                                                    attrs: [],
                                                                                                    lit: Lit::Byte {
                                                                                                        token: b'0',
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                            Some(
                                                                                                Semi,
                                                                                            ),
                                                                                        ),
                                                                                    ],
                                                                                },
                                                                            },
                                                                            None,
                                                                        ),
                                                                        Stmt::Expr(
                                                                            Expr::Call {
                                                                                attrs: [],
                                                                                func: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: write_mantissa_long,
                                                                                                    span: bytes(80059..80078),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                paren_token: Paren,
                                                                                args: [
                                                                                    Expr::Field {
                                                                                        attrs: [],
                                                                                        base: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: v,
                                                                                                            span: bytes(80079..80080),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        dot_token: Dot,
                                                                                        member: Member::Named(
                                                                                            Ident {
                                                                                                sym: mantissa,
                                                                                                span: bytes(80081..80089),
                                                                                            },
                                                                                        ),
                                                                                    },
                                                                                    Comma,
                                                                                    Expr::MethodCall {
                                                                                        attrs: [],
                                                                                        receiver: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: result,
                                                                                                            span: bytes(80091..80097),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        dot_token: Dot,
                                                                                        method: Ident {
                                                                                            sym: offset,
                                                                                            span: bytes(80098..80104),
                                                                                        },
                                                                                        turbofish: None,
                                                                                        paren_token: Paren,
                                                                                        args: [
                                                                                            Expr::Binary {
                                                                                                attrs: [],
                                                                                                left: Expr::Binary {
                                                                                                    attrs: [],
                                                                                                    left: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: index,
                                                                                                                        span: bytes(80105..80110),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    op: BinOp::Add(
                                                                                                        Plus,
                                                                                                    ),
                                                                                                    right: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: length,
                                                                                                                        span: bytes(80113..80119),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                                op: BinOp::Add(
                                                                                                    Plus,
                                                                                                ),
                                                                                                right: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: offset,
                                                                                                                    span: bytes(80122..80128),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                ],
                                                                            },
                                                                            Some(
                                                                                Semi,
                                                                            ),
                                                                        ),
                                                                        Stmt::Expr(
                                                                            Expr::Binary {
                                                                                attrs: [],
                                                                                left: Expr::Binary {
                                                                                    attrs: [],
                                                                                    left: Expr::Cast {
                                                                                        attrs: [],
                                                                                        expr: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: index,
                                                                                                            span: bytes(80140..80145),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        as_token: As,
                                                                                        ty: Type::Path {
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: usize,
                                                                                                            span: bytes(80149..80154),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                    op: BinOp::Add(
                                                                                        Plus,
                                                                                    ),
                                                                                    right: Expr::Cast {
                                                                                        attrs: [],
                                                                                        expr: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: length,
                                                                                                            span: bytes(80157..80163),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        as_token: As,
                                                                                        ty: Type::Path {
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: usize,
                                                                                                            span: bytes(80167..80172),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                },
                                                                                op: BinOp::Add(
                                                                                    Plus,
                                                                                ),
                                                                                right: Expr::Cast {
                                                                                    attrs: [],
                                                                                    expr: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: offset,
                                                                                                        span: bytes(80175..80181),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    as_token: As,
                                                                                    ty: Type::Path {
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: usize,
                                                                                                        span: bytes(80185..80190),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                },
                                                                            },
                                                                            None,
                                                                        ),
                                                                    ],
                                                                },
                                                                else_branch: Some(
                                                                    (
                                                                        Else,
                                                                        Expr::If {
                                                                            attrs: [],
                                                                            if_token: If,
                                                                            cond: Expr::Binary {
                                                                                attrs: [],
                                                                                left: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: length,
                                                                                                    span: bytes(80205..80211),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                op: BinOp::Eq(
                                                                                    EqEq,
                                                                                ),
                                                                                right: Expr::Lit {
                                                                                    attrs: [],
                                                                                    lit: Lit::Int {
                                                                                        token: 1,
                                                                                    },
                                                                                },
                                                                            },
                                                                            then_branch: Block {
                                                                                brace_token: Brace,
                                                                                stmts: [
                                                                                    Stmt::Expr(
                                                                                        Expr::Assign {
                                                                                            attrs: [],
                                                                                            left: Expr::Unary {
                                                                                                attrs: [],
                                                                                                op: UnOp::Deref(
                                                                                                    Star,
                                                                                                ),
                                                                                                expr: Expr::MethodCall {
                                                                                                    attrs: [],
                                                                                                    receiver: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: result,
                                                                                                                        span: bytes(80244..80250),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    dot_token: Dot,
                                                                                                    method: Ident {
                                                                                                        sym: offset,
                                                                                                        span: bytes(80251..80257),
                                                                                                    },
                                                                                                    turbofish: None,
                                                                                                    paren_token: Paren,
                                                                                                    args: [
                                                                                                        Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: index,
                                                                                                                            span: bytes(80258..80263),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            eq_token: Eq,
                                                                                            right: Expr::Binary {
                                                                                                attrs: [],
                                                                                                left: Expr::Lit {
                                                                                                    attrs: [],
                                                                                                    lit: Lit::Byte {
                                                                                                        token: b'0',
                                                                                                    },
                                                                                                },
                                                                                                op: BinOp::Add(
                                                                                                    Plus,
                                                                                                ),
                                                                                                right: Expr::Cast {
                                                                                                    attrs: [],
                                                                                                    expr: Expr::Field {
                                                                                                        attrs: [],
                                                                                                        base: Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: v,
                                                                                                                            span: bytes(80274..80275),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                        dot_token: Dot,
                                                                                                        member: Member::Named(
                                                                                                            Ident {
                                                                                                                sym: mantissa,
                                                                                                                span: bytes(80276..80284),
                                                                                                            },
                                                                                                        ),
                                                                                                    },
                                                                                                    as_token: As,
                                                                                                    ty: Type::Path {
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: u8,
                                                                                                                        span: bytes(80288..80290),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                        Some(
                                                                                            Semi,
                                                                                        ),
                                                                                    ),
                                                                                    Stmt::Expr(
                                                                                        Expr::Assign {
                                                                                            attrs: [],
                                                                                            left: Expr::Unary {
                                                                                                attrs: [],
                                                                                                op: UnOp::Deref(
                                                                                                    Star,
                                                                                                ),
                                                                                                expr: Expr::MethodCall {
                                                                                                    attrs: [],
                                                                                                    receiver: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: result,
                                                                                                                        span: bytes(80301..80307),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    dot_token: Dot,
                                                                                                    method: Ident {
                                                                                                        sym: offset,
                                                                                                        span: bytes(80308..80314),
                                                                                                    },
                                                                                                    turbofish: None,
                                                                                                    paren_token: Paren,
                                                                                                    args: [
                                                                                                        Expr::Binary {
                                                                                                            attrs: [],
                                                                                                            left: Expr::Path {
                                                                                                                attrs: [],
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: index,
                                                                                                                                span: bytes(80315..80320),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                            op: BinOp::Add(
                                                                                                                Plus,
                                                                                                            ),
                                                                                                            right: Expr::Lit {
                                                                                                                attrs: [],
                                                                                                                lit: Lit::Int {
                                                                                                                    token: 1,
                                                                                                                },
                                                                                                            },
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            eq_token: Eq,
                                                                                            right: Expr::Lit {
                                                                                                attrs: [],
                                                                                                lit: Lit::Byte {
                                                                                                    token: b'e',
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                        Some(
                                                                                            Semi,
                                                                                        ),
                                                                                    ),
                                                                                    Stmt::Expr(
                                                                                        Expr::Binary {
                                                                                            attrs: [],
                                                                                            left: Expr::Binary {
                                                                                                attrs: [],
                                                                                                left: Expr::Cast {
                                                                                                    attrs: [],
                                                                                                    expr: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: index,
                                                                                                                        span: bytes(80342..80347),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    as_token: As,
                                                                                                    ty: Type::Path {
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: usize,
                                                                                                                        span: bytes(80351..80356),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                                op: BinOp::Add(
                                                                                                    Plus,
                                                                                                ),
                                                                                                right: Expr::Lit {
                                                                                                    attrs: [],
                                                                                                    lit: Lit::Int {
                                                                                                        token: 2,
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                            op: BinOp::Add(
                                                                                                Plus,
                                                                                            ),
                                                                                            right: Expr::Call {
                                                                                                attrs: [],
                                                                                                func: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: write_exponent3,
                                                                                                                    span: bytes(80363..80378),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                paren_token: Paren,
                                                                                                args: [
                                                                                                    Expr::Binary {
                                                                                                        attrs: [],
                                                                                                        left: Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: kk,
                                                                                                                            span: bytes(80379..80381),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                        op: BinOp::Sub(
                                                                                                            Minus,
                                                                                                        ),
                                                                                                        right: Expr::Lit {
                                                                                                            attrs: [],
                                                                                                            lit: Lit::Int {
                                                                                                                token: 1,
                                                                                                            },
                                                                                                        },
                                                                                                    },
                                                                                                    Comma,
                                                                                                    Expr::MethodCall {
                                                                                                        attrs: [],
                                                                                                        receiver: Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: result,
                                                                                                                            span: bytes(80387..80393),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                        dot_token: Dot,
                                                                                                        method: Ident {
                                                                                                            sym: offset,
                                                                                                            span: bytes(80394..80400),
                                                                                                        },
                                                                                                        turbofish: None,
                                                                                                        paren_token: Paren,
                                                                                                        args: [
                                                                                                            Expr::Binary {
                                                                                                                attrs: [],
                                                                                                                left: Expr::Path {
                                                                                                                    attrs: [],
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: index,
                                                                                                                                    span: bytes(80401..80406),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                                op: BinOp::Add(
                                                                                                                    Plus,
                                                                                                                ),
                                                                                                                right: Expr::Lit {
                                                                                                                    attrs: [],
                                                                                                                    lit: Lit::Int {
                                                                                                                        token: 2,
                                                                                                                    },
                                                                                                                },
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        None,
                                                                                    ),
                                                                                ],
                                                                            },
                                                                            else_branch: Some(
                                                                                (
                                                                                    Else,
                                                                                    Expr::Block {
                                                                                        attrs: [],
                                                                                        label: None,
                                                                                        block: Block {
                                                                                            brace_token: Brace,
                                                                                            stmts: [
                                                                                                Stmt::Expr(
                                                                                                    Expr::Call {
                                                                                                        attrs: [],
                                                                                                        func: Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: write_mantissa_long,
                                                                                                                            span: bytes(80465..80484),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                        paren_token: Paren,
                                                                                                        args: [
                                                                                                            Expr::Field {
                                                                                                                attrs: [],
                                                                                                                base: Expr::Path {
                                                                                                                    attrs: [],
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: v,
                                                                                                                                    span: bytes(80485..80486),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                                dot_token: Dot,
                                                                                                                member: Member::Named(
                                                                                                                    Ident {
                                                                                                                        sym: mantissa,
                                                                                                                        span: bytes(80487..80495),
                                                                                                                    },
                                                                                                                ),
                                                                                                            },
                                                                                                            Comma,
                                                                                                            Expr::MethodCall {
                                                                                                                attrs: [],
                                                                                                                receiver: Expr::Path {
                                                                                                                    attrs: [],
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: result,
                                                                                                                                    span: bytes(80497..80503),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                                dot_token: Dot,
                                                                                                                method: Ident {
                                                                                                                    sym: offset,
                                                                                                                    span: bytes(80504..80510),
                                                                                                                },
                                                                                                                turbofish: None,
                                                                                                                paren_token: Paren,
                                                                                                                args: [
                                                                                                                    Expr::Binary {
                                                                                                                        attrs: [],
                                                                                                                        left: Expr::Binary {
                                                                                                                            attrs: [],
                                                                                                                            left: Expr::Path {
                                                                                                                                attrs: [],
                                                                                                                                qself: None,
                                                                                                                                path: Path {
                                                                                                                                    leading_colon: None,
                                                                                                                                    segments: [
                                                                                                                                        PathSegment {
                                                                                                                                            ident: Ident {
                                                                                                                                                sym: index,
                                                                                                                                                span: bytes(80511..80516),
                                                                                                                                            },
                                                                                                                                            arguments: PathArguments::None,
                                                                                                                                        },
                                                                                                                                    ],
                                                                                                                                },
                                                                                                                            },
                                                                                                                            op: BinOp::Add(
                                                                                                                                Plus,
                                                                                                                            ),
                                                                                                                            right: Expr::Path {
                                                                                                                                attrs: [],
                                                                                                                                qself: None,
                                                                                                                                path: Path {
                                                                                                                                    leading_colon: None,
                                                                                                                                    segments: [
                                                                                                                                        PathSegment {
                                                                                                                                            ident: Ident {
                                                                                                                                                sym: length,
                                                                                                                                                span: bytes(80519..80525),
                                                                                                                                            },
                                                                                                                                            arguments: PathArguments::None,
                                                                                                                                        },
                                                                                                                                    ],
                                                                                                                                },
                                                                                                                            },
                                                                                                                        },
                                                                                                                        op: BinOp::Add(
                                                                                                                            Plus,
                                                                                                                        ),
                                                                                                                        right: Expr::Lit {
                                                                                                                            attrs: [],
                                                                                                                            lit: Lit::Int {
                                                                                                                                token: 1,
                                                                                                                            },
                                                                                                                        },
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                    Some(
                                                                                                        Semi,
                                                                                                    ),
                                                                                                ),
                                                                                                Stmt::Expr(
                                                                                                    Expr::Assign {
                                                                                                        attrs: [],
                                                                                                        left: Expr::Unary {
                                                                                                            attrs: [],
                                                                                                            op: UnOp::Deref(
                                                                                                                Star,
                                                                                                            ),
                                                                                                            expr: Expr::MethodCall {
                                                                                                                attrs: [],
                                                                                                                receiver: Expr::Path {
                                                                                                                    attrs: [],
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: result,
                                                                                                                                    span: bytes(80542..80548),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                                dot_token: Dot,
                                                                                                                method: Ident {
                                                                                                                    sym: offset,
                                                                                                                    span: bytes(80549..80555),
                                                                                                                },
                                                                                                                turbofish: None,
                                                                                                                paren_token: Paren,
                                                                                                                args: [
                                                                                                                    Expr::Path {
                                                                                                                        attrs: [],
                                                                                                                        qself: None,
                                                                                                                        path: Path {
                                                                                                                            leading_colon: None,
                                                                                                                            segments: [
                                                                                                                                PathSegment {
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: index,
                                                                                                                                        span: bytes(80556..80561),
                                                                                                                                    },
                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                },
                                                                                                                            ],
                                                                                                                        },
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                        eq_token: Eq,
                                                                                                        right: Expr::Unary {
                                                                                                            attrs: [],
                                                                                                            op: UnOp::Deref(
                                                                                                                Star,
                                                                                                            ),
                                                                                                            expr: Expr::MethodCall {
                                                                                                                attrs: [],
                                                                                                                receiver: Expr::Path {
                                                                                                                    attrs: [],
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: result,
                                                                                                                                    span: bytes(80566..80572),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                                dot_token: Dot,
                                                                                                                method: Ident {
                                                                                                                    sym: offset,
                                                                                                                    span: bytes(80573..80579),
                                                                                                                },
                                                                                                                turbofish: None,
                                                                                                                paren_token: Paren,
                                                                                                                args: [
                                                                                                                    Expr::Binary {
                                                                                                                        attrs: [],
                                                                                                                        left: Expr::Path {
                                                                                                                            attrs: [],
                                                                                                                            qself: None,
                                                                                                                            path: Path {
                                                                                                                                leading_colon: None,
                                                                                                                                segments: [
                                                                                                                                    PathSegment {
                                                                                                                                        ident: Ident {
                                                                                                                                            sym: index,
                                                                                                                                            span: bytes(80580..80585),
                                                                                                                                        },
                                                                                                                                        arguments: PathArguments::None,
                                                                                                                                    },
                                                                                                                                ],
                                                                                                                            },
                                                                                                                        },
                                                                                                                        op: BinOp::Add(
                                                                                                                            Plus,
                                                                                                                        ),
                                                                                                                        right: Expr::Lit {
                                                                                                                            attrs: [],
                                                                                                                            lit: Lit::Int {
                                                                                                                                token: 1,
                                                                                                                            },
                                                                                                                        },
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                    },
                                                                                                    Some(
                                                                                                        Semi,
                                                                                                    ),
                                                                                                ),
                                                                                                Stmt::Expr(
                                                                                                    Expr::Assign {
                                                                                                        attrs: [],
                                                                                                        left: Expr::Unary {
                                                                                                            attrs: [],
                                                                                                            op: UnOp::Deref(
                                                                                                                Star,
                                                                                                            ),
                                                                                                            expr: Expr::MethodCall {
                                                                                                                attrs: [],
                                                                                                                receiver: Expr::Path {
                                                                                                                    attrs: [],
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: result,
                                                                                                                                    span: bytes(80601..80607),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                                dot_token: Dot,
                                                                                                                method: Ident {
                                                                                                                    sym: offset,
                                                                                                                    span: bytes(80608..80614),
                                                                                                                },
                                                                                                                turbofish: None,
                                                                                                                paren_token: Paren,
                                                                                                                args: [
                                                                                                                    Expr::Binary {
                                                                                                                        attrs: [],
                                                                                                                        left: Expr::Path {
                                                                                                                            attrs: [],
                                                                                                                            qself: None,
                                                                                                                            path: Path {
                                                                                                                                leading_colon: None,
                                                                                                                                segments: [
                                                                                                                                    PathSegment {
                                                                                                                                        ident: Ident {
                                                                                                                                            sym: index,
                                                                                                                                            span: bytes(80615..80620),
                                                                                                                                        },
                                                                                                                                        arguments: PathArguments::None,
                                                                                                                                    },
                                                                                                                                ],
                                                                                                                            },
                                                                                                                        },
                                                                                                                        op: BinOp::Add(
                                                                                                                            Plus,
                                                                                                                        ),
                                                                                                                        right: Expr::Lit {
                                                                                                                            attrs: [],
                                                                                                                            lit: Lit::Int {
                                                                                                                                token: 1,
                                                                                                                            },
                                                                                                                        },
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                        eq_token: Eq,
                                                                                                        right: Expr::Lit {
                                                                                                            attrs: [],
                                                                                                            lit: Lit::Byte {
                                                                                                                token: b'.',
                                                                                                            },
                                                                                                        },
                                                                                                    },
                                                                                                    Some(
                                                                                                        Semi,
                                                                                                    ),
                                                                                                ),
                                                                                                Stmt::Expr(
                                                                                                    Expr::Assign {
                                                                                                        attrs: [],
                                                                                                        left: Expr::Unary {
                                                                                                            attrs: [],
                                                                                                            op: UnOp::Deref(
                                                                                                                Star,
                                                                                                            ),
                                                                                                            expr: Expr::MethodCall {
                                                                                                                attrs: [],
                                                                                                                receiver: Expr::Path {
                                                                                                                    attrs: [],
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: result,
                                                                                                                                    span: bytes(80643..80649),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                                dot_token: Dot,
                                                                                                                method: Ident {
                                                                                                                    sym: offset,
                                                                                                                    span: bytes(80650..80656),
                                                                                                                },
                                                                                                                turbofish: None,
                                                                                                                paren_token: Paren,
                                                                                                                args: [
                                                                                                                    Expr::Binary {
                                                                                                                        attrs: [],
                                                                                                                        left: Expr::Binary {
                                                                                                                            attrs: [],
                                                                                                                            left: Expr::Path {
                                                                                                                                attrs: [],
                                                                                                                                qself: None,
                                                                                                                                path: Path {
                                                                                                                                    leading_colon: None,
                                                                                                                                    segments: [
                                                                                                                                        PathSegment {
                                                                                                                                            ident: Ident {
                                                                                                                                                sym: index,
                                                                                                                                                span: bytes(80657..80662),
                                                                                                                                            },
                                                                                                                                            arguments: PathArguments::None,
                                                                                                                                        },
                                                                                                                                    ],
                                                                                                                                },
                                                                                                                            },
                                                                                                                            op: BinOp::Add(
                                                                                                                                Plus,
                                                                                                                            ),
                                                                                                                            right: Expr::Path {
                                                                                                                                attrs: [],
                                                                                                                                qself: None,
                                                                                                                                path: Path {
                                                                                                                                    leading_colon: None,
                                                                                                                                    segments: [
                                                                                                                                        PathSegment {
                                                                                                                                            ident: Ident {
                                                                                                                                                sym: length,
                                                                                                                                                span: bytes(80665..80671),
                                                                                                                                            },
                                                                                                                                            arguments: PathArguments::None,
                                                                                                                                        },
                                                                                                                                    ],
                                                                                                                                },
                                                                                                                            },
                                                                                                                        },
                                                                                                                        op: BinOp::Add(
                                                                                                                            Plus,
                                                                                                                        ),
                                                                                                                        right: Expr::Lit {
                                                                                                                            attrs: [],
                                                                                                                            lit: Lit::Int {
                                                                                                                                token: 1,
                                                                                                                            },
                                                                                                                        },
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                        eq_token: Eq,
                                                                                                        right: Expr::Lit {
                                                                                                            attrs: [],
                                                                                                            lit: Lit::Byte {
                                                                                                                token: b'e',
                                                                                                            },
                                                                                                        },
                                                                                                    },
                                                                                                    Some(
                                                                                                        Semi,
                                                                                                    ),
                                                                                                ),
                                                                                                Stmt::Expr(
                                                                                                    Expr::Binary {
                                                                                                        attrs: [],
                                                                                                        left: Expr::Binary {
                                                                                                            attrs: [],
                                                                                                            left: Expr::Binary {
                                                                                                                attrs: [],
                                                                                                                left: Expr::Cast {
                                                                                                                    attrs: [],
                                                                                                                    expr: Expr::Path {
                                                                                                                        attrs: [],
                                                                                                                        qself: None,
                                                                                                                        path: Path {
                                                                                                                            leading_colon: None,
                                                                                                                            segments: [
                                                                                                                                PathSegment {
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: index,
                                                                                                                                        span: bytes(80693..80698),
                                                                                                                                    },
                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                },
                                                                                                                            ],
                                                                                                                        },
                                                                                                                    },
                                                                                                                    as_token: As,
                                                                                                                    ty: Type::Path {
                                                                                                                        qself: None,
                                                                                                                        path: Path {
                                                                                                                            leading_colon: None,
                                                                                                                            segments: [
                                                                                                                                PathSegment {
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: usize,
                                                                                                                                        span: bytes(80702..80707),
                                                                                                                                    },
                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                },
                                                                                                                            ],
                                                                                                                        },
                                                                                                                    },
                                                                                                                },
                                                                                                                op: BinOp::Add(
                                                                                                                    Plus,
                                                                                                                ),
                                                                                                                right: Expr::Cast {
                                                                                                                    attrs: [],
                                                                                                                    expr: Expr::Path {
                                                                                                                        attrs: [],
                                                                                                                        qself: None,
                                                                                                                        path: Path {
                                                                                                                            leading_colon: None,
                                                                                                                            segments: [
                                                                                                                                PathSegment {
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: length,
                                                                                                                                        span: bytes(80722..80728),
                                                                                                                                    },
                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                },
                                                                                                                            ],
                                                                                                                        },
                                                                                                                    },
                                                                                                                    as_token: As,
                                                                                                                    ty: Type::Path {
                                                                                                                        qself: None,
                                                                                                                        path: Path {
                                                                                                                            leading_colon: None,
                                                                                                                            segments: [
                                                                                                                                PathSegment {
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: usize,
                                                                                                                                        span: bytes(80732..80737),
                                                                                                                                    },
                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                },
                                                                                                                            ],
                                                                                                                        },
                                                                                                                    },
                                                                                                                },
                                                                                                            },
                                                                                                            op: BinOp::Add(
                                                                                                                Plus,
                                                                                                            ),
                                                                                                            right: Expr::Lit {
                                                                                                                attrs: [],
                                                                                                                lit: Lit::Int {
                                                                                                                    token: 2,
                                                                                                                },
                                                                                                            },
                                                                                                        },
                                                                                                        op: BinOp::Add(
                                                                                                            Plus,
                                                                                                        ),
                                                                                                        right: Expr::Call {
                                                                                                            attrs: [],
                                                                                                            func: Expr::Path {
                                                                                                                attrs: [],
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: write_exponent3,
                                                                                                                                span: bytes(80768..80783),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                            paren_token: Paren,
                                                                                                            args: [
                                                                                                                Expr::Binary {
                                                                                                                    attrs: [],
                                                                                                                    left: Expr::Path {
                                                                                                                        attrs: [],
                                                                                                                        qself: None,
                                                                                                                        path: Path {
                                                                                                                            leading_colon: None,
                                                                                                                            segments: [
                                                                                                                                PathSegment {
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: kk,
                                                                                                                                        span: bytes(80784..80786),
                                                                                                                                    },
                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                },
                                                                                                                            ],
                                                                                                                        },
                                                                                                                    },
                                                                                                                    op: BinOp::Sub(
                                                                                                                        Minus,
                                                                                                                    ),
                                                                                                                    right: Expr::Lit {
                                                                                                                        attrs: [],
                                                                                                                        lit: Lit::Int {
                                                                                                                            token: 1,
                                                                                                                        },
                                                                                                                    },
                                                                                                                },
                                                                                                                Comma,
                                                                                                                Expr::MethodCall {
                                                                                                                    attrs: [],
                                                                                                                    receiver: Expr::Path {
                                                                                                                        attrs: [],
                                                                                                                        qself: None,
                                                                                                                        path: Path {
                                                                                                                            leading_colon: None,
                                                                                                                            segments: [
                                                                                                                                PathSegment {
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: result,
                                                                                                                                        span: bytes(80792..80798),
                                                                                                                                    },
                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                },
                                                                                                                            ],
                                                                                                                        },
                                                                                                                    },
                                                                                                                    dot_token: Dot,
                                                                                                                    method: Ident {
                                                                                                                        sym: offset,
                                                                                                                        span: bytes(80799..80805),
                                                                                                                    },
                                                                                                                    turbofish: None,
                                                                                                                    paren_token: Paren,
                                                                                                                    args: [
                                                                                                                        Expr::Binary {
                                                                                                                            attrs: [],
                                                                                                                            left: Expr::Binary {
                                                                                                                                attrs: [],
                                                                                                                                left: Expr::Path {
                                                                                                                                    attrs: [],
                                                                                                                                    qself: None,
                                                                                                                                    path: Path {
                                                                                                                                        leading_colon: None,
                                                                                                                                        segments: [
                                                                                                                                            PathSegment {
                                                                                                                                                ident: Ident {
                                                                                                                                                    sym: index,
                                                                                                                                                    span: bytes(80806..80811),
                                                                                                                                                },
                                                                                                                                                arguments: PathArguments::None,
                                                                                                                                            },
                                                                                                                                        ],
                                                                                                                                    },
                                                                                                                                },
                                                                                                                                op: BinOp::Add(
                                                                                                                                    Plus,
                                                                                                                                ),
                                                                                                                                right: Expr::Path {
                                                                                                                                    attrs: [],
                                                                                                                                    qself: None,
                                                                                                                                    path: Path {
                                                                                                                                        leading_colon: None,
                                                                                                                                        segments: [
                                                                                                                                            PathSegment {
                                                                                                                                                ident: Ident {
                                                                                                                                                    sym: length,
                                                                                                                                                    span: bytes(80814..80820),
                                                                                                                                                },
                                                                                                                                                arguments: PathArguments::None,
                                                                                                                                            },
                                                                                                                                        ],
                                                                                                                                    },
                                                                                                                                },
                                                                                                                            },
                                                                                                                            op: BinOp::Add(
                                                                                                                                Plus,
                                                                                                                            ),
                                                                                                                            right: Expr::Lit {
                                                                                                                                attrs: [],
                                                                                                                                lit: Lit::Int {
                                                                                                                                    token: 2,
                                                                                                                                },
                                                                                                                            },
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    None,
                                                                                                ),
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            ),
                                                                        },
                                                                    ),
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                },
                                            ),
                                        ),
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: PubT,
            },
        ),
    },
    "ryu::pretty::format32": FnData {
        fn_name: "format32",
        complete_fn_name: "ryu::pretty::format32",
        fn_type: Fn(
            FnItem {
                fn_name: Name {
                    name: "format32",
                    complete_name: "ryu::pretty::format32",
                    import_name: MyPath {
                        name: "ryu",
                        next: Some(
                            MyPath {
                                name: "pretty",
                                next: Some(
                                    MyPath {
                                        name: "format32",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "format32",
                item: Some(
                    ItemFn {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident {
                                                sym: must_use,
                                                span: bytes(82013..82021),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                    ],
                                },
                            },
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::List {
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: cfg_attr,
                                                    span: bytes(82025..82033),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                    delimiter: MacroDelimiter::Paren(
                                        Paren,
                                    ),
                                    tokens: TokenStream [
                                        Ident {
                                            sym: feature,
                                            span: bytes(82034..82041),
                                        },
                                        Punct {
                                            char: '=',
                                            spacing: Alone,
                                            span: bytes(82042..82043),
                                        },
                                        Literal {
                                            lit: "no-panic",
                                            span: bytes(82044..82054),
                                        },
                                        Punct {
                                            char: ',',
                                            spacing: Alone,
                                            span: bytes(82054..82055),
                                        },
                                        Ident {
                                            sym: no_panic,
                                            span: bytes(82056..82064),
                                        },
                                    ],
                                },
                            },
                        ],
                        vis: Visibility::Public(
                            Pub,
                        ),
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: Some(
                                Unsafe,
                            ),
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: format32,
                                span: bytes(82081..82089),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: f,
                                                span: bytes(82090..82091),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: f32,
                                                            span: bytes(82093..82096),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                                Comma,
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: result,
                                                span: bytes(82098..82104),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Ptr {
                                            star_token: Star,
                                            const_token: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: u8,
                                                                span: bytes(82111..82113),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: usize,
                                                    span: bytes(82118..82123),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: bits,
                                            span: bytes(82134..82138),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::MethodCall {
                                                attrs: [],
                                                receiver: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: f,
                                                                    span: bytes(82141..82142),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                dot_token: Dot,
                                                method: Ident {
                                                    sym: to_bits,
                                                    span: bytes(82143..82150),
                                                },
                                                turbofish: None,
                                                paren_token: Paren,
                                                args: [],
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: sign,
                                            span: bytes(82162..82166),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Binary {
                                                attrs: [],
                                                left: Expr::Paren {
                                                    attrs: [],
                                                    paren_token: Paren,
                                                    expr: Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Paren {
                                                            attrs: [],
                                                            paren_token: Paren,
                                                            expr: Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: bits,
                                                                                    span: bytes(82171..82175),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                op: BinOp::Shr(
                                                                    Shr,
                                                                ),
                                                                right: Expr::Paren {
                                                                    attrs: [],
                                                                    paren_token: Paren,
                                                                    expr: Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: FLOAT_MANTISSA_BITS,
                                                                                            span: bytes(82180..82199),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        op: BinOp::Add(
                                                                            Plus,
                                                                        ),
                                                                        right: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: FLOAT_EXPONENT_BITS,
                                                                                            span: bytes(82202..82221),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        },
                                                        op: BinOp::BitAnd(
                                                            And,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 1,
                                                            },
                                                        },
                                                    },
                                                },
                                                op: BinOp::Ne(
                                                    Ne,
                                                ),
                                                right: Expr::Lit {
                                                    attrs: [],
                                                    lit: Lit::Int {
                                                        token: 0,
                                                    },
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: ieee_mantissa,
                                            span: bytes(82243..82256),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Binary {
                                                attrs: [],
                                                left: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: bits,
                                                                    span: bytes(82259..82263),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                op: BinOp::BitAnd(
                                                    And,
                                                ),
                                                right: Expr::Paren {
                                                    attrs: [],
                                                    paren_token: Paren,
                                                    expr: Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Paren {
                                                            attrs: [],
                                                            paren_token: Paren,
                                                            expr: Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 1u32,
                                                                    },
                                                                },
                                                                op: BinOp::Shl(
                                                                    Shl,
                                                                ),
                                                                right: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: FLOAT_MANTISSA_BITS,
                                                                                    span: bytes(82276..82295),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        },
                                                        op: BinOp::Sub(
                                                            Minus,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 1,
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: ieee_exponent,
                                            span: bytes(82311..82324),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Binary {
                                                attrs: [],
                                                left: Expr::Paren {
                                                    attrs: [],
                                                    paren_token: Paren,
                                                    expr: Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: bits,
                                                                            span: bytes(82328..82332),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        op: BinOp::Shr(
                                                            Shr,
                                                        ),
                                                        right: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: FLOAT_MANTISSA_BITS,
                                                                            span: bytes(82336..82355),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                },
                                                op: BinOp::BitAnd(
                                                    And,
                                                ),
                                                right: Expr::Paren {
                                                    attrs: [],
                                                    paren_token: Paren,
                                                    expr: Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Paren {
                                                            attrs: [],
                                                            paren_token: Paren,
                                                            expr: Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 1u32,
                                                                    },
                                                                },
                                                                op: BinOp::Shl(
                                                                    Shl,
                                                                ),
                                                                right: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: FLOAT_EXPONENT_BITS,
                                                                                    span: bytes(82369..82388),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        },
                                                        op: BinOp::Sub(
                                                            Minus,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 1,
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: Some(
                                            Mut,
                                        ),
                                        ident: Ident {
                                            sym: index,
                                            span: bytes(82409..82414),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Lit {
                                                attrs: [],
                                                lit: Lit::Int {
                                                    token: 0isize,
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Expr(
                                    Expr::If {
                                        attrs: [],
                                        if_token: If,
                                        cond: Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: sign,
                                                            span: bytes(82432..82436),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        then_branch: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::Assign {
                                                        attrs: [],
                                                        left: Expr::Unary {
                                                            attrs: [],
                                                            op: UnOp::Deref(
                                                                Star,
                                                            ),
                                                            expr: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: result,
                                                                                span: bytes(82448..82454),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                        eq_token: Eq,
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Byte {
                                                                token: b'-',
                                                            },
                                                        },
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                                Stmt::Expr(
                                                    Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: index,
                                                                            span: bytes(82471..82476),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        op: BinOp::AddAssign(
                                                            PlusEq,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 1,
                                                            },
                                                        },
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                            ],
                                        },
                                        else_branch: None,
                                    },
                                    None,
                                ),
                                Stmt::Expr(
                                    Expr::If {
                                        attrs: [],
                                        if_token: If,
                                        cond: Expr::Binary {
                                            attrs: [],
                                            left: Expr::Binary {
                                                attrs: [],
                                                left: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: ieee_exponent,
                                                                    span: bytes(82497..82510),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                op: BinOp::Eq(
                                                    EqEq,
                                                ),
                                                right: Expr::Lit {
                                                    attrs: [],
                                                    lit: Lit::Int {
                                                        token: 0,
                                                    },
                                                },
                                            },
                                            op: BinOp::And(
                                                AndAnd,
                                            ),
                                            right: Expr::Binary {
                                                attrs: [],
                                                left: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: ieee_mantissa,
                                                                    span: bytes(82519..82532),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                op: BinOp::Eq(
                                                    EqEq,
                                                ),
                                                right: Expr::Lit {
                                                    attrs: [],
                                                    lit: Lit::Int {
                                                        token: 0,
                                                    },
                                                },
                                            },
                                        },
                                        then_branch: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::Call {
                                                        attrs: [],
                                                        func: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: ptr,
                                                                            span: bytes(82548..82551),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: copy_nonoverlapping,
                                                                            span: bytes(82553..82572),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        paren_token: Paren,
                                                        args: [
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::ByteStr {
                                                                        token: b"0.0",
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: as_ptr,
                                                                    span: bytes(82580..82586),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [],
                                                            },
                                                            Comma,
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: result,
                                                                                    span: bytes(82590..82596),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: offset,
                                                                    span: bytes(82597..82603),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: index,
                                                                                        span: bytes(82604..82609),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            Comma,
                                                            Expr::Lit {
                                                                attrs: [],
                                                                lit: Lit::Int {
                                                                    token: 3,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                                Stmt::Expr(
                                                    Expr::Return {
                                                        attrs: [],
                                                        return_token: Return,
                                                        expr: Some(
                                                            Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Cast {
                                                                    attrs: [],
                                                                    expr: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: sign,
                                                                                        span: bytes(82631..82635),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    as_token: As,
                                                                    ty: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: usize,
                                                                                        span: bytes(82639..82644),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                                op: BinOp::Add(
                                                                    Plus,
                                                                ),
                                                                right: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 3,
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                            ],
                                        },
                                        else_branch: None,
                                    },
                                    None,
                                ),
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: v,
                                            span: bytes(82665..82666),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Call {
                                                attrs: [],
                                                func: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: f2d,
                                                                    span: bytes(82669..82672),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                paren_token: Paren,
                                                args: [
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: ieee_mantissa,
                                                                        span: bytes(82673..82686),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    Comma,
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: ieee_exponent,
                                                                        span: bytes(82688..82701),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: length,
                                            span: bytes(82713..82719),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Cast {
                                                attrs: [],
                                                expr: Expr::Call {
                                                    attrs: [],
                                                    func: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: common,
                                                                        span: bytes(82722..82728),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                                PathSep,
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: decimal_length9,
                                                                        span: bytes(82730..82745),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    paren_token: Paren,
                                                    args: [
                                                        Expr::Field {
                                                            attrs: [],
                                                            base: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: v,
                                                                                span: bytes(82746..82747),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            dot_token: Dot,
                                                            member: Member::Named(
                                                                Ident {
                                                                    sym: mantissa,
                                                                    span: bytes(82748..82756),
                                                                },
                                                            ),
                                                        },
                                                    ],
                                                },
                                                as_token: As,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: isize,
                                                                    span: bytes(82761..82766),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: k,
                                            span: bytes(82776..82777),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Cast {
                                                attrs: [],
                                                expr: Expr::Field {
                                                    attrs: [],
                                                    base: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: v,
                                                                        span: bytes(82780..82781),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    dot_token: Dot,
                                                    member: Member::Named(
                                                        Ident {
                                                            sym: exponent,
                                                            span: bytes(82782..82790),
                                                        },
                                                    ),
                                                },
                                                as_token: As,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: isize,
                                                                    span: bytes(82794..82799),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: kk,
                                            span: bytes(82809..82811),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Binary {
                                                attrs: [],
                                                left: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: length,
                                                                    span: bytes(82814..82820),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                op: BinOp::Add(
                                                    Plus,
                                                ),
                                                right: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: k,
                                                                    span: bytes(82823..82824),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Macro {
                                    attrs: [],
                                    mac: Macro {
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: debug_assert,
                                                        span: bytes(82856..82868),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                        bang_token: Not,
                                        delimiter: MacroDelimiter::Paren(
                                            Paren,
                                        ),
                                        tokens: TokenStream [
                                            Ident {
                                                sym: k,
                                                span: bytes(82870..82871),
                                            },
                                            Punct {
                                                char: '>',
                                                spacing: Joint,
                                                span: bytes(82872..82873),
                                            },
                                            Punct {
                                                char: '=',
                                                spacing: Alone,
                                                span: bytes(82873..82874),
                                            },
                                            Punct {
                                                char: '-',
                                                spacing: Alone,
                                                span: bytes(82875..82876),
                                            },
                                            Literal {
                                                lit: 45,
                                                span: bytes(82876..82878),
                                            },
                                        ],
                                    },
                                    semi_token: Some(
                                        Semi,
                                    ),
                                },
                                Stmt::Expr(
                                    Expr::If {
                                        attrs: [],
                                        if_token: If,
                                        cond: Expr::Binary {
                                            attrs: [],
                                            left: Expr::Binary {
                                                attrs: [],
                                                left: Expr::Lit {
                                                    attrs: [],
                                                    lit: Lit::Int {
                                                        token: 0,
                                                    },
                                                },
                                                op: BinOp::Le(
                                                    Le,
                                                ),
                                                right: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: k,
                                                                    span: bytes(82894..82895),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                            op: BinOp::And(
                                                AndAnd,
                                            ),
                                            right: Expr::Binary {
                                                attrs: [],
                                                left: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: kk,
                                                                    span: bytes(82899..82901),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                op: BinOp::Le(
                                                    Le,
                                                ),
                                                right: Expr::Lit {
                                                    attrs: [],
                                                    lit: Lit::Int {
                                                        token: 13,
                                                    },
                                                },
                                            },
                                        },
                                        then_branch: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::Call {
                                                        attrs: [],
                                                        func: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: write_mantissa,
                                                                            span: bytes(82953..82967),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        paren_token: Paren,
                                                        args: [
                                                            Expr::Field {
                                                                attrs: [],
                                                                base: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: v,
                                                                                    span: bytes(82968..82969),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                member: Member::Named(
                                                                    Ident {
                                                                        sym: mantissa,
                                                                        span: bytes(82970..82978),
                                                                    },
                                                                ),
                                                            },
                                                            Comma,
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: result,
                                                                                    span: bytes(82980..82986),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: offset,
                                                                    span: bytes(82987..82993),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: index,
                                                                                            span: bytes(82994..82999),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        op: BinOp::Add(
                                                                            Plus,
                                                                        ),
                                                                        right: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: length,
                                                                                            span: bytes(83002..83008),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        ],
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                                Stmt::Expr(
                                                    Expr::ForLoop {
                                                        attrs: [],
                                                        label: None,
                                                        for_token: For,
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: i,
                                                                span: bytes(83024..83025),
                                                            },
                                                            subpat: None,
                                                        },
                                                        in_token: In,
                                                        expr: Expr::Range {
                                                            attrs: [],
                                                            start: Some(
                                                                Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: length,
                                                                                    span: bytes(83029..83035),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                            limits: RangeLimits::HalfOpen(
                                                                DotDot,
                                                            ),
                                                            end: Some(
                                                                Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: kk,
                                                                                    span: bytes(83037..83039),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                        },
                                                        body: Block {
                                                            brace_token: Brace,
                                                            stmts: [
                                                                Stmt::Expr(
                                                                    Expr::Assign {
                                                                        attrs: [],
                                                                        left: Expr::Unary {
                                                                            attrs: [],
                                                                            op: UnOp::Deref(
                                                                                Star,
                                                                            ),
                                                                            expr: Expr::MethodCall {
                                                                                attrs: [],
                                                                                receiver: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: result,
                                                                                                    span: bytes(83055..83061),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                dot_token: Dot,
                                                                                method: Ident {
                                                                                    sym: offset,
                                                                                    span: bytes(83062..83068),
                                                                                },
                                                                                turbofish: None,
                                                                                paren_token: Paren,
                                                                                args: [
                                                                                    Expr::Binary {
                                                                                        attrs: [],
                                                                                        left: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: index,
                                                                                                            span: bytes(83069..83074),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        op: BinOp::Add(
                                                                                            Plus,
                                                                                        ),
                                                                                        right: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: i,
                                                                                                            span: bytes(83077..83078),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        eq_token: Eq,
                                                                        right: Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Byte {
                                                                                token: b'0',
                                                                            },
                                                                        },
                                                                    },
                                                                    Some(
                                                                        Semi,
                                                                    ),
                                                                ),
                                                            ],
                                                        },
                                                    },
                                                    None,
                                                ),
                                                Stmt::Expr(
                                                    Expr::Assign {
                                                        attrs: [],
                                                        left: Expr::Unary {
                                                            attrs: [],
                                                            op: UnOp::Deref(
                                                                Star,
                                                            ),
                                                            expr: Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: result,
                                                                                    span: bytes(83107..83113),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: offset,
                                                                    span: bytes(83114..83120),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: index,
                                                                                            span: bytes(83121..83126),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        op: BinOp::Add(
                                                                            Plus,
                                                                        ),
                                                                        right: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: kk,
                                                                                            span: bytes(83129..83131),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        eq_token: Eq,
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Byte {
                                                                token: b'.',
                                                            },
                                                        },
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                                Stmt::Expr(
                                                    Expr::Assign {
                                                        attrs: [],
                                                        left: Expr::Unary {
                                                            attrs: [],
                                                            op: UnOp::Deref(
                                                                Star,
                                                            ),
                                                            expr: Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: result,
                                                                                    span: bytes(83150..83156),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: offset,
                                                                    span: bytes(83157..83163),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Binary {
                                                                            attrs: [],
                                                                            left: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: index,
                                                                                                span: bytes(83164..83169),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            op: BinOp::Add(
                                                                                Plus,
                                                                            ),
                                                                            right: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: kk,
                                                                                                span: bytes(83172..83174),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        },
                                                                        op: BinOp::Add(
                                                                            Plus,
                                                                        ),
                                                                        right: Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Int {
                                                                                token: 1,
                                                                            },
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        eq_token: Eq,
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Byte {
                                                                token: b'0',
                                                            },
                                                        },
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                                Stmt::Expr(
                                                    Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Binary {
                                                            attrs: [],
                                                            left: Expr::Cast {
                                                                attrs: [],
                                                                expr: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: index,
                                                                                    span: bytes(83196..83201),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                as_token: As,
                                                                ty: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: usize,
                                                                                    span: bytes(83205..83210),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                            op: BinOp::Add(
                                                                Plus,
                                                            ),
                                                            right: Expr::Cast {
                                                                attrs: [],
                                                                expr: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: kk,
                                                                                    span: bytes(83213..83215),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                as_token: As,
                                                                ty: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: usize,
                                                                                    span: bytes(83219..83224),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        },
                                                        op: BinOp::Add(
                                                            Plus,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 2,
                                                            },
                                                        },
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                        else_branch: Some(
                                            (
                                                Else,
                                                Expr::If {
                                                    attrs: [],
                                                    if_token: If,
                                                    cond: Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Binary {
                                                            attrs: [],
                                                            left: Expr::Lit {
                                                                attrs: [],
                                                                lit: Lit::Int {
                                                                    token: 0,
                                                                },
                                                            },
                                                            op: BinOp::Lt(
                                                                Lt,
                                                            ),
                                                            right: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: kk,
                                                                                span: bytes(83247..83249),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                        op: BinOp::And(
                                                            AndAnd,
                                                        ),
                                                        right: Expr::Binary {
                                                            attrs: [],
                                                            left: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: kk,
                                                                                span: bytes(83253..83255),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            op: BinOp::Le(
                                                                Le,
                                                            ),
                                                            right: Expr::Lit {
                                                                attrs: [],
                                                                lit: Lit::Int {
                                                                    token: 13,
                                                                },
                                                            },
                                                        },
                                                    },
                                                    then_branch: Block {
                                                        brace_token: Brace,
                                                        stmts: [
                                                            Stmt::Expr(
                                                                Expr::Call {
                                                                    attrs: [],
                                                                    func: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: write_mantissa,
                                                                                        span: bytes(83300..83314),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    paren_token: Paren,
                                                                    args: [
                                                                        Expr::Field {
                                                                            attrs: [],
                                                                            base: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: v,
                                                                                                span: bytes(83315..83316),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            dot_token: Dot,
                                                                            member: Member::Named(
                                                                                Ident {
                                                                                    sym: mantissa,
                                                                                    span: bytes(83317..83325),
                                                                                },
                                                                            ),
                                                                        },
                                                                        Comma,
                                                                        Expr::MethodCall {
                                                                            attrs: [],
                                                                            receiver: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: result,
                                                                                                span: bytes(83327..83333),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            dot_token: Dot,
                                                                            method: Ident {
                                                                                sym: offset,
                                                                                span: bytes(83334..83340),
                                                                            },
                                                                            turbofish: None,
                                                                            paren_token: Paren,
                                                                            args: [
                                                                                Expr::Binary {
                                                                                    attrs: [],
                                                                                    left: Expr::Binary {
                                                                                        attrs: [],
                                                                                        left: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: index,
                                                                                                            span: bytes(83341..83346),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        op: BinOp::Add(
                                                                                            Plus,
                                                                                        ),
                                                                                        right: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: length,
                                                                                                            span: bytes(83349..83355),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                    op: BinOp::Add(
                                                                                        Plus,
                                                                                    ),
                                                                                    right: Expr::Lit {
                                                                                        attrs: [],
                                                                                        lit: Lit::Int {
                                                                                            token: 1,
                                                                                        },
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    ],
                                                                },
                                                                Some(
                                                                    Semi,
                                                                ),
                                                            ),
                                                            Stmt::Expr(
                                                                Expr::Call {
                                                                    attrs: [],
                                                                    func: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: ptr,
                                                                                        span: bytes(83371..83374),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                                PathSep,
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: copy,
                                                                                        span: bytes(83376..83380),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    paren_token: Paren,
                                                                    args: [
                                                                        Expr::MethodCall {
                                                                            attrs: [],
                                                                            receiver: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: result,
                                                                                                span: bytes(83381..83387),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            dot_token: Dot,
                                                                            method: Ident {
                                                                                sym: offset,
                                                                                span: bytes(83388..83394),
                                                                            },
                                                                            turbofish: None,
                                                                            paren_token: Paren,
                                                                            args: [
                                                                                Expr::Binary {
                                                                                    attrs: [],
                                                                                    left: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: index,
                                                                                                        span: bytes(83395..83400),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    op: BinOp::Add(
                                                                                        Plus,
                                                                                    ),
                                                                                    right: Expr::Lit {
                                                                                        attrs: [],
                                                                                        lit: Lit::Int {
                                                                                            token: 1,
                                                                                        },
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                        Comma,
                                                                        Expr::MethodCall {
                                                                            attrs: [],
                                                                            receiver: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: result,
                                                                                                span: bytes(83407..83413),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            dot_token: Dot,
                                                                            method: Ident {
                                                                                sym: offset,
                                                                                span: bytes(83414..83420),
                                                                            },
                                                                            turbofish: None,
                                                                            paren_token: Paren,
                                                                            args: [
                                                                                Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: index,
                                                                                                    span: bytes(83421..83426),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                        Comma,
                                                                        Expr::Cast {
                                                                            attrs: [],
                                                                            expr: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: kk,
                                                                                                span: bytes(83429..83431),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            as_token: As,
                                                                            ty: Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: usize,
                                                                                                span: bytes(83435..83440),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                                Some(
                                                                    Semi,
                                                                ),
                                                            ),
                                                            Stmt::Expr(
                                                                Expr::Assign {
                                                                    attrs: [],
                                                                    left: Expr::Unary {
                                                                        attrs: [],
                                                                        op: UnOp::Deref(
                                                                            Star,
                                                                        ),
                                                                        expr: Expr::MethodCall {
                                                                            attrs: [],
                                                                            receiver: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: result,
                                                                                                span: bytes(83452..83458),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            dot_token: Dot,
                                                                            method: Ident {
                                                                                sym: offset,
                                                                                span: bytes(83459..83465),
                                                                            },
                                                                            turbofish: None,
                                                                            paren_token: Paren,
                                                                            args: [
                                                                                Expr::Binary {
                                                                                    attrs: [],
                                                                                    left: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: index,
                                                                                                        span: bytes(83466..83471),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    op: BinOp::Add(
                                                                                        Plus,
                                                                                    ),
                                                                                    right: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: kk,
                                                                                                        span: bytes(83474..83476),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    eq_token: Eq,
                                                                    right: Expr::Lit {
                                                                        attrs: [],
                                                                        lit: Lit::Byte {
                                                                            token: b'.',
                                                                        },
                                                                    },
                                                                },
                                                                Some(
                                                                    Semi,
                                                                ),
                                                            ),
                                                            Stmt::Expr(
                                                                Expr::Binary {
                                                                    attrs: [],
                                                                    left: Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Cast {
                                                                            attrs: [],
                                                                            expr: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: index,
                                                                                                span: bytes(83494..83499),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            as_token: As,
                                                                            ty: Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: usize,
                                                                                                span: bytes(83503..83508),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        },
                                                                        op: BinOp::Add(
                                                                            Plus,
                                                                        ),
                                                                        right: Expr::Cast {
                                                                            attrs: [],
                                                                            expr: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: length,
                                                                                                span: bytes(83511..83517),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            as_token: As,
                                                                            ty: Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: usize,
                                                                                                span: bytes(83521..83526),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        },
                                                                    },
                                                                    op: BinOp::Add(
                                                                        Plus,
                                                                    ),
                                                                    right: Expr::Lit {
                                                                        attrs: [],
                                                                        lit: Lit::Int {
                                                                            token: 1,
                                                                        },
                                                                    },
                                                                },
                                                                None,
                                                            ),
                                                        ],
                                                    },
                                                    else_branch: Some(
                                                        (
                                                            Else,
                                                            Expr::If {
                                                                attrs: [],
                                                                if_token: If,
                                                                cond: Expr::Binary {
                                                                    attrs: [],
                                                                    left: Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Unary {
                                                                            attrs: [],
                                                                            op: UnOp::Neg(
                                                                                Minus,
                                                                            ),
                                                                            expr: Expr::Lit {
                                                                                attrs: [],
                                                                                lit: Lit::Int {
                                                                                    token: 6,
                                                                                },
                                                                            },
                                                                        },
                                                                        op: BinOp::Lt(
                                                                            Lt,
                                                                        ),
                                                                        right: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: kk,
                                                                                            span: bytes(83550..83552),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                    op: BinOp::And(
                                                                        AndAnd,
                                                                    ),
                                                                    right: Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: kk,
                                                                                            span: bytes(83556..83558),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        op: BinOp::Le(
                                                                            Le,
                                                                        ),
                                                                        right: Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Int {
                                                                                token: 0,
                                                                            },
                                                                        },
                                                                    },
                                                                },
                                                                then_branch: Block {
                                                                    brace_token: Brace,
                                                                    stmts: [
                                                                        Stmt::Expr(
                                                                            Expr::Assign {
                                                                                attrs: [],
                                                                                left: Expr::Unary {
                                                                                    attrs: [],
                                                                                    op: UnOp::Deref(
                                                                                        Star,
                                                                                    ),
                                                                                    expr: Expr::MethodCall {
                                                                                        attrs: [],
                                                                                        receiver: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: result,
                                                                                                            span: bytes(83606..83612),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        dot_token: Dot,
                                                                                        method: Ident {
                                                                                            sym: offset,
                                                                                            span: bytes(83613..83619),
                                                                                        },
                                                                                        turbofish: None,
                                                                                        paren_token: Paren,
                                                                                        args: [
                                                                                            Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: index,
                                                                                                                span: bytes(83620..83625),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                eq_token: Eq,
                                                                                right: Expr::Lit {
                                                                                    attrs: [],
                                                                                    lit: Lit::Byte {
                                                                                        token: b'0',
                                                                                    },
                                                                                },
                                                                            },
                                                                            Some(
                                                                                Semi,
                                                                            ),
                                                                        ),
                                                                        Stmt::Expr(
                                                                            Expr::Assign {
                                                                                attrs: [],
                                                                                left: Expr::Unary {
                                                                                    attrs: [],
                                                                                    op: UnOp::Deref(
                                                                                        Star,
                                                                                    ),
                                                                                    expr: Expr::MethodCall {
                                                                                        attrs: [],
                                                                                        receiver: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: result,
                                                                                                            span: bytes(83644..83650),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        dot_token: Dot,
                                                                                        method: Ident {
                                                                                            sym: offset,
                                                                                            span: bytes(83651..83657),
                                                                                        },
                                                                                        turbofish: None,
                                                                                        paren_token: Paren,
                                                                                        args: [
                                                                                            Expr::Binary {
                                                                                                attrs: [],
                                                                                                left: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: index,
                                                                                                                    span: bytes(83658..83663),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                op: BinOp::Add(
                                                                                                    Plus,
                                                                                                ),
                                                                                                right: Expr::Lit {
                                                                                                    attrs: [],
                                                                                                    lit: Lit::Int {
                                                                                                        token: 1,
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                eq_token: Eq,
                                                                                right: Expr::Lit {
                                                                                    attrs: [],
                                                                                    lit: Lit::Byte {
                                                                                        token: b'.',
                                                                                    },
                                                                                },
                                                                            },
                                                                            Some(
                                                                                Semi,
                                                                            ),
                                                                        ),
                                                                        Stmt::Local {
                                                                            attrs: [],
                                                                            let_token: Let,
                                                                            pat: Pat::Ident {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident {
                                                                                    sym: offset,
                                                                                    span: bytes(83689..83695),
                                                                                },
                                                                                subpat: None,
                                                                            },
                                                                            init: Some(
                                                                                LocalInit {
                                                                                    eq_token: Eq,
                                                                                    expr: Expr::Binary {
                                                                                        attrs: [],
                                                                                        left: Expr::Lit {
                                                                                            attrs: [],
                                                                                            lit: Lit::Int {
                                                                                                token: 2,
                                                                                            },
                                                                                        },
                                                                                        op: BinOp::Sub(
                                                                                            Minus,
                                                                                        ),
                                                                                        right: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: kk,
                                                                                                            span: bytes(83702..83704),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                    diverge: None,
                                                                                },
                                                                            ),
                                                                            semi_token: Semi,
                                                                        },
                                                                        Stmt::Expr(
                                                                            Expr::ForLoop {
                                                                                attrs: [],
                                                                                label: None,
                                                                                for_token: For,
                                                                                pat: Pat::Ident {
                                                                                    attrs: [],
                                                                                    by_ref: None,
                                                                                    mutability: None,
                                                                                    ident: Ident {
                                                                                        sym: i,
                                                                                        span: bytes(83718..83719),
                                                                                    },
                                                                                    subpat: None,
                                                                                },
                                                                                in_token: In,
                                                                                expr: Expr::Range {
                                                                                    attrs: [],
                                                                                    start: Some(
                                                                                        Expr::Lit {
                                                                                            attrs: [],
                                                                                            lit: Lit::Int {
                                                                                                token: 2,
                                                                                            },
                                                                                        },
                                                                                    ),
                                                                                    limits: RangeLimits::HalfOpen(
                                                                                        DotDot,
                                                                                    ),
                                                                                    end: Some(
                                                                                        Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: offset,
                                                                                                            span: bytes(83726..83732),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    ),
                                                                                },
                                                                                body: Block {
                                                                                    brace_token: Brace,
                                                                                    stmts: [
                                                                                        Stmt::Expr(
                                                                                            Expr::Assign {
                                                                                                attrs: [],
                                                                                                left: Expr::Unary {
                                                                                                    attrs: [],
                                                                                                    op: UnOp::Deref(
                                                                                                        Star,
                                                                                                    ),
                                                                                                    expr: Expr::MethodCall {
                                                                                                        attrs: [],
                                                                                                        receiver: Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: result,
                                                                                                                            span: bytes(83748..83754),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                        dot_token: Dot,
                                                                                                        method: Ident {
                                                                                                            sym: offset,
                                                                                                            span: bytes(83755..83761),
                                                                                                        },
                                                                                                        turbofish: None,
                                                                                                        paren_token: Paren,
                                                                                                        args: [
                                                                                                            Expr::Binary {
                                                                                                                attrs: [],
                                                                                                                left: Expr::Path {
                                                                                                                    attrs: [],
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: index,
                                                                                                                                    span: bytes(83762..83767),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                                op: BinOp::Add(
                                                                                                                    Plus,
                                                                                                                ),
                                                                                                                right: Expr::Path {
                                                                                                                    attrs: [],
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: i,
                                                                                                                                    span: bytes(83770..83771),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                eq_token: Eq,
                                                                                                right: Expr::Lit {
                                                                                                    attrs: [],
                                                                                                    lit: Lit::Byte {
                                                                                                        token: b'0',
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                            Some(
                                                                                                Semi,
                                                                                            ),
                                                                                        ),
                                                                                    ],
                                                                                },
                                                                            },
                                                                            None,
                                                                        ),
                                                                        Stmt::Expr(
                                                                            Expr::Call {
                                                                                attrs: [],
                                                                                func: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: write_mantissa,
                                                                                                    span: bytes(83799..83813),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                paren_token: Paren,
                                                                                args: [
                                                                                    Expr::Field {
                                                                                        attrs: [],
                                                                                        base: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: v,
                                                                                                            span: bytes(83814..83815),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        dot_token: Dot,
                                                                                        member: Member::Named(
                                                                                            Ident {
                                                                                                sym: mantissa,
                                                                                                span: bytes(83816..83824),
                                                                                            },
                                                                                        ),
                                                                                    },
                                                                                    Comma,
                                                                                    Expr::MethodCall {
                                                                                        attrs: [],
                                                                                        receiver: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: result,
                                                                                                            span: bytes(83826..83832),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        dot_token: Dot,
                                                                                        method: Ident {
                                                                                            sym: offset,
                                                                                            span: bytes(83833..83839),
                                                                                        },
                                                                                        turbofish: None,
                                                                                        paren_token: Paren,
                                                                                        args: [
                                                                                            Expr::Binary {
                                                                                                attrs: [],
                                                                                                left: Expr::Binary {
                                                                                                    attrs: [],
                                                                                                    left: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: index,
                                                                                                                        span: bytes(83840..83845),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    op: BinOp::Add(
                                                                                                        Plus,
                                                                                                    ),
                                                                                                    right: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: length,
                                                                                                                        span: bytes(83848..83854),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                                op: BinOp::Add(
                                                                                                    Plus,
                                                                                                ),
                                                                                                right: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: offset,
                                                                                                                    span: bytes(83857..83863),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                ],
                                                                            },
                                                                            Some(
                                                                                Semi,
                                                                            ),
                                                                        ),
                                                                        Stmt::Expr(
                                                                            Expr::Binary {
                                                                                attrs: [],
                                                                                left: Expr::Binary {
                                                                                    attrs: [],
                                                                                    left: Expr::Cast {
                                                                                        attrs: [],
                                                                                        expr: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: index,
                                                                                                            span: bytes(83875..83880),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        as_token: As,
                                                                                        ty: Type::Path {
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: usize,
                                                                                                            span: bytes(83884..83889),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                    op: BinOp::Add(
                                                                                        Plus,
                                                                                    ),
                                                                                    right: Expr::Cast {
                                                                                        attrs: [],
                                                                                        expr: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: length,
                                                                                                            span: bytes(83892..83898),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        as_token: As,
                                                                                        ty: Type::Path {
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: usize,
                                                                                                            span: bytes(83902..83907),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                },
                                                                                op: BinOp::Add(
                                                                                    Plus,
                                                                                ),
                                                                                right: Expr::Cast {
                                                                                    attrs: [],
                                                                                    expr: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: offset,
                                                                                                        span: bytes(83910..83916),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    as_token: As,
                                                                                    ty: Type::Path {
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: usize,
                                                                                                        span: bytes(83920..83925),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                },
                                                                            },
                                                                            None,
                                                                        ),
                                                                    ],
                                                                },
                                                                else_branch: Some(
                                                                    (
                                                                        Else,
                                                                        Expr::If {
                                                                            attrs: [],
                                                                            if_token: If,
                                                                            cond: Expr::Binary {
                                                                                attrs: [],
                                                                                left: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: length,
                                                                                                    span: bytes(83940..83946),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                op: BinOp::Eq(
                                                                                    EqEq,
                                                                                ),
                                                                                right: Expr::Lit {
                                                                                    attrs: [],
                                                                                    lit: Lit::Int {
                                                                                        token: 1,
                                                                                    },
                                                                                },
                                                                            },
                                                                            then_branch: Block {
                                                                                brace_token: Brace,
                                                                                stmts: [
                                                                                    Stmt::Expr(
                                                                                        Expr::Assign {
                                                                                            attrs: [],
                                                                                            left: Expr::Unary {
                                                                                                attrs: [],
                                                                                                op: UnOp::Deref(
                                                                                                    Star,
                                                                                                ),
                                                                                                expr: Expr::MethodCall {
                                                                                                    attrs: [],
                                                                                                    receiver: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: result,
                                                                                                                        span: bytes(83979..83985),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    dot_token: Dot,
                                                                                                    method: Ident {
                                                                                                        sym: offset,
                                                                                                        span: bytes(83986..83992),
                                                                                                    },
                                                                                                    turbofish: None,
                                                                                                    paren_token: Paren,
                                                                                                    args: [
                                                                                                        Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: index,
                                                                                                                            span: bytes(83993..83998),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            eq_token: Eq,
                                                                                            right: Expr::Binary {
                                                                                                attrs: [],
                                                                                                left: Expr::Lit {
                                                                                                    attrs: [],
                                                                                                    lit: Lit::Byte {
                                                                                                        token: b'0',
                                                                                                    },
                                                                                                },
                                                                                                op: BinOp::Add(
                                                                                                    Plus,
                                                                                                ),
                                                                                                right: Expr::Cast {
                                                                                                    attrs: [],
                                                                                                    expr: Expr::Field {
                                                                                                        attrs: [],
                                                                                                        base: Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: v,
                                                                                                                            span: bytes(84009..84010),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                        dot_token: Dot,
                                                                                                        member: Member::Named(
                                                                                                            Ident {
                                                                                                                sym: mantissa,
                                                                                                                span: bytes(84011..84019),
                                                                                                            },
                                                                                                        ),
                                                                                                    },
                                                                                                    as_token: As,
                                                                                                    ty: Type::Path {
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: u8,
                                                                                                                        span: bytes(84023..84025),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                        Some(
                                                                                            Semi,
                                                                                        ),
                                                                                    ),
                                                                                    Stmt::Expr(
                                                                                        Expr::Assign {
                                                                                            attrs: [],
                                                                                            left: Expr::Unary {
                                                                                                attrs: [],
                                                                                                op: UnOp::Deref(
                                                                                                    Star,
                                                                                                ),
                                                                                                expr: Expr::MethodCall {
                                                                                                    attrs: [],
                                                                                                    receiver: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: result,
                                                                                                                        span: bytes(84036..84042),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    dot_token: Dot,
                                                                                                    method: Ident {
                                                                                                        sym: offset,
                                                                                                        span: bytes(84043..84049),
                                                                                                    },
                                                                                                    turbofish: None,
                                                                                                    paren_token: Paren,
                                                                                                    args: [
                                                                                                        Expr::Binary {
                                                                                                            attrs: [],
                                                                                                            left: Expr::Path {
                                                                                                                attrs: [],
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: index,
                                                                                                                                span: bytes(84050..84055),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                            op: BinOp::Add(
                                                                                                                Plus,
                                                                                                            ),
                                                                                                            right: Expr::Lit {
                                                                                                                attrs: [],
                                                                                                                lit: Lit::Int {
                                                                                                                    token: 1,
                                                                                                                },
                                                                                                            },
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            eq_token: Eq,
                                                                                            right: Expr::Lit {
                                                                                                attrs: [],
                                                                                                lit: Lit::Byte {
                                                                                                    token: b'e',
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                        Some(
                                                                                            Semi,
                                                                                        ),
                                                                                    ),
                                                                                    Stmt::Expr(
                                                                                        Expr::Binary {
                                                                                            attrs: [],
                                                                                            left: Expr::Binary {
                                                                                                attrs: [],
                                                                                                left: Expr::Cast {
                                                                                                    attrs: [],
                                                                                                    expr: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: index,
                                                                                                                        span: bytes(84077..84082),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    as_token: As,
                                                                                                    ty: Type::Path {
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: usize,
                                                                                                                        span: bytes(84086..84091),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                                op: BinOp::Add(
                                                                                                    Plus,
                                                                                                ),
                                                                                                right: Expr::Lit {
                                                                                                    attrs: [],
                                                                                                    lit: Lit::Int {
                                                                                                        token: 2,
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                            op: BinOp::Add(
                                                                                                Plus,
                                                                                            ),
                                                                                            right: Expr::Call {
                                                                                                attrs: [],
                                                                                                func: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: write_exponent2,
                                                                                                                    span: bytes(84098..84113),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                paren_token: Paren,
                                                                                                args: [
                                                                                                    Expr::Binary {
                                                                                                        attrs: [],
                                                                                                        left: Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: kk,
                                                                                                                            span: bytes(84114..84116),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                        op: BinOp::Sub(
                                                                                                            Minus,
                                                                                                        ),
                                                                                                        right: Expr::Lit {
                                                                                                            attrs: [],
                                                                                                            lit: Lit::Int {
                                                                                                                token: 1,
                                                                                                            },
                                                                                                        },
                                                                                                    },
                                                                                                    Comma,
                                                                                                    Expr::MethodCall {
                                                                                                        attrs: [],
                                                                                                        receiver: Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: result,
                                                                                                                            span: bytes(84122..84128),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                        dot_token: Dot,
                                                                                                        method: Ident {
                                                                                                            sym: offset,
                                                                                                            span: bytes(84129..84135),
                                                                                                        },
                                                                                                        turbofish: None,
                                                                                                        paren_token: Paren,
                                                                                                        args: [
                                                                                                            Expr::Binary {
                                                                                                                attrs: [],
                                                                                                                left: Expr::Path {
                                                                                                                    attrs: [],
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: index,
                                                                                                                                    span: bytes(84136..84141),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                                op: BinOp::Add(
                                                                                                                    Plus,
                                                                                                                ),
                                                                                                                right: Expr::Lit {
                                                                                                                    attrs: [],
                                                                                                                    lit: Lit::Int {
                                                                                                                        token: 2,
                                                                                                                    },
                                                                                                                },
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        None,
                                                                                    ),
                                                                                ],
                                                                            },
                                                                            else_branch: Some(
                                                                                (
                                                                                    Else,
                                                                                    Expr::Block {
                                                                                        attrs: [],
                                                                                        label: None,
                                                                                        block: Block {
                                                                                            brace_token: Brace,
                                                                                            stmts: [
                                                                                                Stmt::Expr(
                                                                                                    Expr::Call {
                                                                                                        attrs: [],
                                                                                                        func: Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: write_mantissa,
                                                                                                                            span: bytes(84200..84214),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                        paren_token: Paren,
                                                                                                        args: [
                                                                                                            Expr::Field {
                                                                                                                attrs: [],
                                                                                                                base: Expr::Path {
                                                                                                                    attrs: [],
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: v,
                                                                                                                                    span: bytes(84215..84216),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                                dot_token: Dot,
                                                                                                                member: Member::Named(
                                                                                                                    Ident {
                                                                                                                        sym: mantissa,
                                                                                                                        span: bytes(84217..84225),
                                                                                                                    },
                                                                                                                ),
                                                                                                            },
                                                                                                            Comma,
                                                                                                            Expr::MethodCall {
                                                                                                                attrs: [],
                                                                                                                receiver: Expr::Path {
                                                                                                                    attrs: [],
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: result,
                                                                                                                                    span: bytes(84227..84233),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                                dot_token: Dot,
                                                                                                                method: Ident {
                                                                                                                    sym: offset,
                                                                                                                    span: bytes(84234..84240),
                                                                                                                },
                                                                                                                turbofish: None,
                                                                                                                paren_token: Paren,
                                                                                                                args: [
                                                                                                                    Expr::Binary {
                                                                                                                        attrs: [],
                                                                                                                        left: Expr::Binary {
                                                                                                                            attrs: [],
                                                                                                                            left: Expr::Path {
                                                                                                                                attrs: [],
                                                                                                                                qself: None,
                                                                                                                                path: Path {
                                                                                                                                    leading_colon: None,
                                                                                                                                    segments: [
                                                                                                                                        PathSegment {
                                                                                                                                            ident: Ident {
                                                                                                                                                sym: index,
                                                                                                                                                span: bytes(84241..84246),
                                                                                                                                            },
                                                                                                                                            arguments: PathArguments::None,
                                                                                                                                        },
                                                                                                                                    ],
                                                                                                                                },
                                                                                                                            },
                                                                                                                            op: BinOp::Add(
                                                                                                                                Plus,
                                                                                                                            ),
                                                                                                                            right: Expr::Path {
                                                                                                                                attrs: [],
                                                                                                                                qself: None,
                                                                                                                                path: Path {
                                                                                                                                    leading_colon: None,
                                                                                                                                    segments: [
                                                                                                                                        PathSegment {
                                                                                                                                            ident: Ident {
                                                                                                                                                sym: length,
                                                                                                                                                span: bytes(84249..84255),
                                                                                                                                            },
                                                                                                                                            arguments: PathArguments::None,
                                                                                                                                        },
                                                                                                                                    ],
                                                                                                                                },
                                                                                                                            },
                                                                                                                        },
                                                                                                                        op: BinOp::Add(
                                                                                                                            Plus,
                                                                                                                        ),
                                                                                                                        right: Expr::Lit {
                                                                                                                            attrs: [],
                                                                                                                            lit: Lit::Int {
                                                                                                                                token: 1,
                                                                                                                            },
                                                                                                                        },
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                    Some(
                                                                                                        Semi,
                                                                                                    ),
                                                                                                ),
                                                                                                Stmt::Expr(
                                                                                                    Expr::Assign {
                                                                                                        attrs: [],
                                                                                                        left: Expr::Unary {
                                                                                                            attrs: [],
                                                                                                            op: UnOp::Deref(
                                                                                                                Star,
                                                                                                            ),
                                                                                                            expr: Expr::MethodCall {
                                                                                                                attrs: [],
                                                                                                                receiver: Expr::Path {
                                                                                                                    attrs: [],
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: result,
                                                                                                                                    span: bytes(84272..84278),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                                dot_token: Dot,
                                                                                                                method: Ident {
                                                                                                                    sym: offset,
                                                                                                                    span: bytes(84279..84285),
                                                                                                                },
                                                                                                                turbofish: None,
                                                                                                                paren_token: Paren,
                                                                                                                args: [
                                                                                                                    Expr::Path {
                                                                                                                        attrs: [],
                                                                                                                        qself: None,
                                                                                                                        path: Path {
                                                                                                                            leading_colon: None,
                                                                                                                            segments: [
                                                                                                                                PathSegment {
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: index,
                                                                                                                                        span: bytes(84286..84291),
                                                                                                                                    },
                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                },
                                                                                                                            ],
                                                                                                                        },
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                        eq_token: Eq,
                                                                                                        right: Expr::Unary {
                                                                                                            attrs: [],
                                                                                                            op: UnOp::Deref(
                                                                                                                Star,
                                                                                                            ),
                                                                                                            expr: Expr::MethodCall {
                                                                                                                attrs: [],
                                                                                                                receiver: Expr::Path {
                                                                                                                    attrs: [],
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: result,
                                                                                                                                    span: bytes(84296..84302),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                                dot_token: Dot,
                                                                                                                method: Ident {
                                                                                                                    sym: offset,
                                                                                                                    span: bytes(84303..84309),
                                                                                                                },
                                                                                                                turbofish: None,
                                                                                                                paren_token: Paren,
                                                                                                                args: [
                                                                                                                    Expr::Binary {
                                                                                                                        attrs: [],
                                                                                                                        left: Expr::Path {
                                                                                                                            attrs: [],
                                                                                                                            qself: None,
                                                                                                                            path: Path {
                                                                                                                                leading_colon: None,
                                                                                                                                segments: [
                                                                                                                                    PathSegment {
                                                                                                                                        ident: Ident {
                                                                                                                                            sym: index,
                                                                                                                                            span: bytes(84310..84315),
                                                                                                                                        },
                                                                                                                                        arguments: PathArguments::None,
                                                                                                                                    },
                                                                                                                                ],
                                                                                                                            },
                                                                                                                        },
                                                                                                                        op: BinOp::Add(
                                                                                                                            Plus,
                                                                                                                        ),
                                                                                                                        right: Expr::Lit {
                                                                                                                            attrs: [],
                                                                                                                            lit: Lit::Int {
                                                                                                                                token: 1,
                                                                                                                            },
                                                                                                                        },
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                    },
                                                                                                    Some(
                                                                                                        Semi,
                                                                                                    ),
                                                                                                ),
                                                                                                Stmt::Expr(
                                                                                                    Expr::Assign {
                                                                                                        attrs: [],
                                                                                                        left: Expr::Unary {
                                                                                                            attrs: [],
                                                                                                            op: UnOp::Deref(
                                                                                                                Star,
                                                                                                            ),
                                                                                                            expr: Expr::MethodCall {
                                                                                                                attrs: [],
                                                                                                                receiver: Expr::Path {
                                                                                                                    attrs: [],
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: result,
                                                                                                                                    span: bytes(84331..84337),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                                dot_token: Dot,
                                                                                                                method: Ident {
                                                                                                                    sym: offset,
                                                                                                                    span: bytes(84338..84344),
                                                                                                                },
                                                                                                                turbofish: None,
                                                                                                                paren_token: Paren,
                                                                                                                args: [
                                                                                                                    Expr::Binary {
                                                                                                                        attrs: [],
                                                                                                                        left: Expr::Path {
                                                                                                                            attrs: [],
                                                                                                                            qself: None,
                                                                                                                            path: Path {
                                                                                                                                leading_colon: None,
                                                                                                                                segments: [
                                                                                                                                    PathSegment {
                                                                                                                                        ident: Ident {
                                                                                                                                            sym: index,
                                                                                                                                            span: bytes(84345..84350),
                                                                                                                                        },
                                                                                                                                        arguments: PathArguments::None,
                                                                                                                                    },
                                                                                                                                ],
                                                                                                                            },
                                                                                                                        },
                                                                                                                        op: BinOp::Add(
                                                                                                                            Plus,
                                                                                                                        ),
                                                                                                                        right: Expr::Lit {
                                                                                                                            attrs: [],
                                                                                                                            lit: Lit::Int {
                                                                                                                                token: 1,
                                                                                                                            },
                                                                                                                        },
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                        eq_token: Eq,
                                                                                                        right: Expr::Lit {
                                                                                                            attrs: [],
                                                                                                            lit: Lit::Byte {
                                                                                                                token: b'.',
                                                                                                            },
                                                                                                        },
                                                                                                    },
                                                                                                    Some(
                                                                                                        Semi,
                                                                                                    ),
                                                                                                ),
                                                                                                Stmt::Expr(
                                                                                                    Expr::Assign {
                                                                                                        attrs: [],
                                                                                                        left: Expr::Unary {
                                                                                                            attrs: [],
                                                                                                            op: UnOp::Deref(
                                                                                                                Star,
                                                                                                            ),
                                                                                                            expr: Expr::MethodCall {
                                                                                                                attrs: [],
                                                                                                                receiver: Expr::Path {
                                                                                                                    attrs: [],
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: result,
                                                                                                                                    span: bytes(84373..84379),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                                dot_token: Dot,
                                                                                                                method: Ident {
                                                                                                                    sym: offset,
                                                                                                                    span: bytes(84380..84386),
                                                                                                                },
                                                                                                                turbofish: None,
                                                                                                                paren_token: Paren,
                                                                                                                args: [
                                                                                                                    Expr::Binary {
                                                                                                                        attrs: [],
                                                                                                                        left: Expr::Binary {
                                                                                                                            attrs: [],
                                                                                                                            left: Expr::Path {
                                                                                                                                attrs: [],
                                                                                                                                qself: None,
                                                                                                                                path: Path {
                                                                                                                                    leading_colon: None,
                                                                                                                                    segments: [
                                                                                                                                        PathSegment {
                                                                                                                                            ident: Ident {
                                                                                                                                                sym: index,
                                                                                                                                                span: bytes(84387..84392),
                                                                                                                                            },
                                                                                                                                            arguments: PathArguments::None,
                                                                                                                                        },
                                                                                                                                    ],
                                                                                                                                },
                                                                                                                            },
                                                                                                                            op: BinOp::Add(
                                                                                                                                Plus,
                                                                                                                            ),
                                                                                                                            right: Expr::Path {
                                                                                                                                attrs: [],
                                                                                                                                qself: None,
                                                                                                                                path: Path {
                                                                                                                                    leading_colon: None,
                                                                                                                                    segments: [
                                                                                                                                        PathSegment {
                                                                                                                                            ident: Ident {
                                                                                                                                                sym: length,
                                                                                                                                                span: bytes(84395..84401),
                                                                                                                                            },
                                                                                                                                            arguments: PathArguments::None,
                                                                                                                                        },
                                                                                                                                    ],
                                                                                                                                },
                                                                                                                            },
                                                                                                                        },
                                                                                                                        op: BinOp::Add(
                                                                                                                            Plus,
                                                                                                                        ),
                                                                                                                        right: Expr::Lit {
                                                                                                                            attrs: [],
                                                                                                                            lit: Lit::Int {
                                                                                                                                token: 1,
                                                                                                                            },
                                                                                                                        },
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                        eq_token: Eq,
                                                                                                        right: Expr::Lit {
                                                                                                            attrs: [],
                                                                                                            lit: Lit::Byte {
                                                                                                                token: b'e',
                                                                                                            },
                                                                                                        },
                                                                                                    },
                                                                                                    Some(
                                                                                                        Semi,
                                                                                                    ),
                                                                                                ),
                                                                                                Stmt::Expr(
                                                                                                    Expr::Binary {
                                                                                                        attrs: [],
                                                                                                        left: Expr::Binary {
                                                                                                            attrs: [],
                                                                                                            left: Expr::Binary {
                                                                                                                attrs: [],
                                                                                                                left: Expr::Cast {
                                                                                                                    attrs: [],
                                                                                                                    expr: Expr::Path {
                                                                                                                        attrs: [],
                                                                                                                        qself: None,
                                                                                                                        path: Path {
                                                                                                                            leading_colon: None,
                                                                                                                            segments: [
                                                                                                                                PathSegment {
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: index,
                                                                                                                                        span: bytes(84423..84428),
                                                                                                                                    },
                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                },
                                                                                                                            ],
                                                                                                                        },
                                                                                                                    },
                                                                                                                    as_token: As,
                                                                                                                    ty: Type::Path {
                                                                                                                        qself: None,
                                                                                                                        path: Path {
                                                                                                                            leading_colon: None,
                                                                                                                            segments: [
                                                                                                                                PathSegment {
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: usize,
                                                                                                                                        span: bytes(84432..84437),
                                                                                                                                    },
                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                },
                                                                                                                            ],
                                                                                                                        },
                                                                                                                    },
                                                                                                                },
                                                                                                                op: BinOp::Add(
                                                                                                                    Plus,
                                                                                                                ),
                                                                                                                right: Expr::Cast {
                                                                                                                    attrs: [],
                                                                                                                    expr: Expr::Path {
                                                                                                                        attrs: [],
                                                                                                                        qself: None,
                                                                                                                        path: Path {
                                                                                                                            leading_colon: None,
                                                                                                                            segments: [
                                                                                                                                PathSegment {
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: length,
                                                                                                                                        span: bytes(84452..84458),
                                                                                                                                    },
                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                },
                                                                                                                            ],
                                                                                                                        },
                                                                                                                    },
                                                                                                                    as_token: As,
                                                                                                                    ty: Type::Path {
                                                                                                                        qself: None,
                                                                                                                        path: Path {
                                                                                                                            leading_colon: None,
                                                                                                                            segments: [
                                                                                                                                PathSegment {
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: usize,
                                                                                                                                        span: bytes(84462..84467),
                                                                                                                                    },
                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                },
                                                                                                                            ],
                                                                                                                        },
                                                                                                                    },
                                                                                                                },
                                                                                                            },
                                                                                                            op: BinOp::Add(
                                                                                                                Plus,
                                                                                                            ),
                                                                                                            right: Expr::Lit {
                                                                                                                attrs: [],
                                                                                                                lit: Lit::Int {
                                                                                                                    token: 2,
                                                                                                                },
                                                                                                            },
                                                                                                        },
                                                                                                        op: BinOp::Add(
                                                                                                            Plus,
                                                                                                        ),
                                                                                                        right: Expr::Call {
                                                                                                            attrs: [],
                                                                                                            func: Expr::Path {
                                                                                                                attrs: [],
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: write_exponent2,
                                                                                                                                span: bytes(84498..84513),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                            paren_token: Paren,
                                                                                                            args: [
                                                                                                                Expr::Binary {
                                                                                                                    attrs: [],
                                                                                                                    left: Expr::Path {
                                                                                                                        attrs: [],
                                                                                                                        qself: None,
                                                                                                                        path: Path {
                                                                                                                            leading_colon: None,
                                                                                                                            segments: [
                                                                                                                                PathSegment {
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: kk,
                                                                                                                                        span: bytes(84514..84516),
                                                                                                                                    },
                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                },
                                                                                                                            ],
                                                                                                                        },
                                                                                                                    },
                                                                                                                    op: BinOp::Sub(
                                                                                                                        Minus,
                                                                                                                    ),
                                                                                                                    right: Expr::Lit {
                                                                                                                        attrs: [],
                                                                                                                        lit: Lit::Int {
                                                                                                                            token: 1,
                                                                                                                        },
                                                                                                                    },
                                                                                                                },
                                                                                                                Comma,
                                                                                                                Expr::MethodCall {
                                                                                                                    attrs: [],
                                                                                                                    receiver: Expr::Path {
                                                                                                                        attrs: [],
                                                                                                                        qself: None,
                                                                                                                        path: Path {
                                                                                                                            leading_colon: None,
                                                                                                                            segments: [
                                                                                                                                PathSegment {
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: result,
                                                                                                                                        span: bytes(84522..84528),
                                                                                                                                    },
                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                },
                                                                                                                            ],
                                                                                                                        },
                                                                                                                    },
                                                                                                                    dot_token: Dot,
                                                                                                                    method: Ident {
                                                                                                                        sym: offset,
                                                                                                                        span: bytes(84529..84535),
                                                                                                                    },
                                                                                                                    turbofish: None,
                                                                                                                    paren_token: Paren,
                                                                                                                    args: [
                                                                                                                        Expr::Binary {
                                                                                                                            attrs: [],
                                                                                                                            left: Expr::Binary {
                                                                                                                                attrs: [],
                                                                                                                                left: Expr::Path {
                                                                                                                                    attrs: [],
                                                                                                                                    qself: None,
                                                                                                                                    path: Path {
                                                                                                                                        leading_colon: None,
                                                                                                                                        segments: [
                                                                                                                                            PathSegment {
                                                                                                                                                ident: Ident {
                                                                                                                                                    sym: index,
                                                                                                                                                    span: bytes(84536..84541),
                                                                                                                                                },
                                                                                                                                                arguments: PathArguments::None,
                                                                                                                                            },
                                                                                                                                        ],
                                                                                                                                    },
                                                                                                                                },
                                                                                                                                op: BinOp::Add(
                                                                                                                                    Plus,
                                                                                                                                ),
                                                                                                                                right: Expr::Path {
                                                                                                                                    attrs: [],
                                                                                                                                    qself: None,
                                                                                                                                    path: Path {
                                                                                                                                        leading_colon: None,
                                                                                                                                        segments: [
                                                                                                                                            PathSegment {
                                                                                                                                                ident: Ident {
                                                                                                                                                    sym: length,
                                                                                                                                                    span: bytes(84544..84550),
                                                                                                                                                },
                                                                                                                                                arguments: PathArguments::None,
                                                                                                                                            },
                                                                                                                                        ],
                                                                                                                                    },
                                                                                                                                },
                                                                                                                            },
                                                                                                                            op: BinOp::Add(
                                                                                                                                Plus,
                                                                                                                            ),
                                                                                                                            right: Expr::Lit {
                                                                                                                                attrs: [],
                                                                                                                                lit: Lit::Int {
                                                                                                                                    token: 2,
                                                                                                                                },
                                                                                                                            },
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    None,
                                                                                                ),
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            ),
                                                                        },
                                                                    ),
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                },
                                            ),
                                        ),
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: PubT,
            },
        ),
    },
}
structs:
{
    "ryu::buffer::Float": StructData {
        struct_name: "Float",
        complete_struct_name: "ryu::buffer::Float",
        struct_type: Trait(
            TraitItem {
                trait_name: Name {
                    name: "Float",
                    complete_name: "ryu::buffer::Float",
                    import_name: MyPath {
                        name: "ryu",
                        next: Some(
                            MyPath {
                                name: "buffer",
                                next: Some(
                                    MyPath {
                                        name: "Float",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                item: Some(
                    ItemTrait {
                        attrs: [],
                        vis: Visibility::Public(
                            Pub,
                        ),
                        unsafety: None,
                        auto_token: None,
                        restriction: None,
                        trait_token: Trait,
                        ident: Ident {
                            sym: Float,
                            span: bytes(7331..7336),
                        },
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        colon_token: Some(
                            Colon,
                        ),
                        supertraits: [
                            TypeParamBound::Trait(
                                TraitBound {
                                    paren_token: None,
                                    modifier: TraitBoundModifier::None,
                                    lifetimes: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: Sealed,
                                                    span: bytes(7338..7344),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        ],
                        brace_token: Brace,
                        items: [],
                    },
                ),
                types: [],
                consts: [],
                functions: [],
                visibility: PubT,
                relative_types: [
                    "Sealed",
                ],
            },
        ),
    },
    "ryu::buffer::Sealed": StructData {
        struct_name: "Sealed",
        complete_struct_name: "ryu::buffer::Sealed",
        struct_type: Trait(
            TraitItem {
                trait_name: Name {
                    name: "Sealed",
                    complete_name: "ryu::buffer::Sealed",
                    import_name: MyPath {
                        name: "ryu",
                        next: Some(
                            MyPath {
                                name: "buffer",
                                next: Some(
                                    MyPath {
                                        name: "Sealed",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                item: Some(
                    ItemTrait {
                        attrs: [],
                        vis: Visibility::Public(
                            Pub,
                        ),
                        unsafety: None,
                        auto_token: None,
                        restriction: None,
                        trait_token: Trait,
                        ident: Ident {
                            sym: Sealed,
                            span: bytes(7403..7409),
                        },
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        colon_token: Some(
                            Colon,
                        ),
                        supertraits: [
                            TypeParamBound::Trait(
                                TraitBound {
                                    paren_token: None,
                                    modifier: TraitBoundModifier::None,
                                    lifetimes: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: Copy,
                                                    span: bytes(7411..7415),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        ],
                        brace_token: Brace,
                        items: [],
                    },
                ),
                types: [],
                consts: [],
                functions: [
                    TraitFnItem {
                        fn_name: Name {
                            name: "is_nonfinite",
                            complete_name: "<  as ryu::buffer::Sealed>::is_nonfinite",
                            import_name: MyPath {
                                name: "<  as ryu",
                                next: Some(
                                    MyPath {
                                        name: "buffer",
                                        next: Some(
                                            MyPath {
                                                name: "Sealed>",
                                                next: Some(
                                                    MyPath {
                                                        name: "is_nonfinite",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "Sealed::is_nonfinite",
                        item: Some(
                            TraitItemFn {
                                attrs: [],
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: is_nonfinite,
                                        span: bytes(7425..7437),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: None,
                                                mutability: None,
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Self,
                                                                    span: bytes(7438..7442),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: bool,
                                                            span: bytes(7447..7451),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                default: None,
                                semi_token: Some(
                                    Semi,
                                ),
                            },
                        ),
                        inside_items: [],
                        is_constructor: false,
                    },
                    TraitFnItem {
                        fn_name: Name {
                            name: "format_nonfinite",
                            complete_name: "<  as ryu::buffer::Sealed>::format_nonfinite",
                            import_name: MyPath {
                                name: "<  as ryu",
                                next: Some(
                                    MyPath {
                                        name: "buffer",
                                        next: Some(
                                            MyPath {
                                                name: "Sealed>",
                                                next: Some(
                                                    MyPath {
                                                        name: "format_nonfinite",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "Sealed::format_nonfinite",
                        item: Some(
                            TraitItemFn {
                                attrs: [],
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: format_nonfinite,
                                        span: bytes(7460..7476),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: None,
                                                mutability: None,
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Self,
                                                                    span: bytes(7477..7481),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Reference {
                                            and_token: And,
                                            lifetime: Some(
                                                Lifetime {
                                                    apostrophe: bytes(7487..7488),
                                                    ident: Ident {
                                                        sym: static,
                                                        span: bytes(7488..7494),
                                                    },
                                                },
                                            ),
                                            mutability: None,
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: str,
                                                                span: bytes(7495..7498),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    ),
                                },
                                default: None,
                                semi_token: Some(
                                    Semi,
                                ),
                            },
                        ),
                        inside_items: [],
                        is_constructor: false,
                    },
                    TraitFnItem {
                        fn_name: Name {
                            name: "write_to_ryu_buffer",
                            complete_name: "<  as ryu::buffer::Sealed>::write_to_ryu_buffer",
                            import_name: MyPath {
                                name: "<  as ryu",
                                next: Some(
                                    MyPath {
                                        name: "buffer",
                                        next: Some(
                                            MyPath {
                                                name: "Sealed>",
                                                next: Some(
                                                    MyPath {
                                                        name: "write_to_ryu_buffer",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "Sealed::write_to_ryu_buffer",
                        item: Some(
                            TraitItemFn {
                                attrs: [],
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: Some(
                                        Unsafe,
                                    ),
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: write_to_ryu_buffer,
                                        span: bytes(7514..7533),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: None,
                                                mutability: None,
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Self,
                                                                    span: bytes(7534..7538),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: result,
                                                        span: bytes(7540..7546),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Ptr {
                                                    star_token: Star,
                                                    const_token: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: u8,
                                                                        span: bytes(7553..7555),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: usize,
                                                            span: bytes(7560..7565),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                default: None,
                                semi_token: Some(
                                    Semi,
                                ),
                            },
                        ),
                        inside_items: [],
                        is_constructor: false,
                    },
                ],
                visibility: PubT,
                relative_types: [
                    "Copy",
                ],
            },
        ),
    },
    "ryu::d2s::FloatingDecimal64": StructData {
        struct_name: "FloatingDecimal64",
        complete_struct_name: "ryu::d2s::FloatingDecimal64",
        struct_type: Struct(
            StructItem {
                struct_name: Name {
                    name: "FloatingDecimal64",
                    complete_name: "ryu::d2s::FloatingDecimal64",
                    import_name: MyPath {
                        name: "ryu",
                        next: Some(
                            MyPath {
                                name: "d2s",
                                next: Some(
                                    MyPath {
                                        name: "FloatingDecimal64",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                item: Some(
                    ItemStruct {
                        attrs: [],
                        vis: Visibility::Public(
                            Pub,
                        ),
                        struct_token: Struct,
                        ident: Ident {
                            sym: FloatingDecimal64,
                            span: bytes(14813..14830),
                        },
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        fields: Fields::Named {
                            brace_token: Brace,
                            named: [
                                Field {
                                    attrs: [],
                                    vis: Visibility::Public(
                                        Pub,
                                    ),
                                    mutability: FieldMutability::None,
                                    ident: Some(
                                        Ident {
                                            sym: mantissa,
                                            span: bytes(14841..14849),
                                        },
                                    ),
                                    colon_token: Some(
                                        Colon,
                                    ),
                                    ty: Type::Path {
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: u64,
                                                        span: bytes(14851..14854),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                },
                                Comma,
                                Field {
                                    attrs: [],
                                    vis: Visibility::Public(
                                        Pub,
                                    ),
                                    mutability: FieldMutability::None,
                                    ident: Some(
                                        Ident {
                                            sym: exponent,
                                            span: bytes(14959..14967),
                                        },
                                    ),
                                    colon_token: Some(
                                        Colon,
                                    ),
                                    ty: Type::Path {
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: i32,
                                                        span: bytes(14969..14972),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                },
                                Comma,
                            ],
                        },
                        semi_token: None,
                    },
                ),
                visibility: PubT,
                relative_types: [
                    "i32",
                    "u64",
                ],
            },
        ),
    },
    "ryu::f2s::FloatingDecimal32": StructData {
        struct_name: "FloatingDecimal32",
        complete_struct_name: "ryu::f2s::FloatingDecimal32",
        struct_type: Struct(
            StructItem {
                struct_name: Name {
                    name: "FloatingDecimal32",
                    complete_name: "ryu::f2s::FloatingDecimal32",
                    import_name: MyPath {
                        name: "ryu",
                        next: Some(
                            MyPath {
                                name: "f2s",
                                next: Some(
                                    MyPath {
                                        name: "FloatingDecimal32",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                item: Some(
                    ItemStruct {
                        attrs: [],
                        vis: Visibility::Public(
                            Pub,
                        ),
                        struct_token: Struct,
                        ident: Ident {
                            sym: FloatingDecimal32,
                            span: bytes(67128..67145),
                        },
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        fields: Fields::Named {
                            brace_token: Brace,
                            named: [
                                Field {
                                    attrs: [],
                                    vis: Visibility::Public(
                                        Pub,
                                    ),
                                    mutability: FieldMutability::None,
                                    ident: Some(
                                        Ident {
                                            sym: mantissa,
                                            span: bytes(67156..67164),
                                        },
                                    ),
                                    colon_token: Some(
                                        Colon,
                                    ),
                                    ty: Type::Path {
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: u32,
                                                        span: bytes(67166..67169),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                },
                                Comma,
                                Field {
                                    attrs: [],
                                    vis: Visibility::Public(
                                        Pub,
                                    ),
                                    mutability: FieldMutability::None,
                                    ident: Some(
                                        Ident {
                                            sym: exponent,
                                            span: bytes(67272..67280),
                                        },
                                    ),
                                    colon_token: Some(
                                        Colon,
                                    ),
                                    ty: Type::Path {
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: i32,
                                                        span: bytes(67282..67285),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                },
                                Comma,
                            ],
                        },
                        semi_token: None,
                    },
                ),
                visibility: PubT,
                relative_types: [
                    "i32",
                    "u32",
                ],
            },
        ),
    },
    "ryu::buffer::Buffer": StructData {
        struct_name: "Buffer",
        complete_struct_name: "ryu::buffer::Buffer",
        struct_type: Struct(
            StructItem {
                struct_name: Name {
                    name: "Buffer",
                    complete_name: "ryu::buffer::Buffer",
                    import_name: MyPath {
                        name: "ryu",
                        next: Some(
                            MyPath {
                                name: "buffer",
                                next: Some(
                                    MyPath {
                                        name: "Buffer",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                item: Some(
                    ItemStruct {
                        attrs: [],
                        vis: Visibility::Public(
                            Pub,
                        ),
                        struct_token: Struct,
                        ident: Ident {
                            sym: Buffer,
                            span: bytes(4516..4522),
                        },
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        fields: Fields::Named {
                            brace_token: Brace,
                            named: [
                                Field {
                                    attrs: [],
                                    vis: Visibility::Inherited,
                                    mutability: FieldMutability::None,
                                    ident: Some(
                                        Ident {
                                            sym: bytes,
                                            span: bytes(4529..4534),
                                        },
                                    ),
                                    colon_token: Some(
                                        Colon,
                                    ),
                                    ty: Type::Array {
                                        bracket_token: Bracket,
                                        elem: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: MaybeUninit,
                                                            span: bytes(4537..4548),
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: None,
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Type(
                                                                    Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: u8,
                                                                                        span: bytes(4549..4551),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        semi_token: Semi,
                                        len: Expr::Lit {
                                            attrs: [],
                                            lit: Lit::Int {
                                                token: 24,
                                            },
                                        },
                                    },
                                },
                                Comma,
                            ],
                        },
                        semi_token: None,
                    },
                ),
                visibility: PubT,
                relative_types: [
                    "MaybeUninit",
                    "u8",
                ],
            },
        ),
    },
}