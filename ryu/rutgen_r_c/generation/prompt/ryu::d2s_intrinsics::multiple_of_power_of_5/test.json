{
  "system_pt": "As a software testing expert, please generate Rust test functions based on the following guidelines:\n1. Provide the code in plain text format, without explanations or Markdown.\n2. If the method under test belongs to a trait, construct appropriate structs within the test function, but avoid method overrides. If the method under test uses generics, instantiate them with suitable types based on the context.\n3. Generate test code with minimal scope: avoid creating external structures or implementations. Instead, define any necessary helper structures or implementations directly within the test function when required.\n4. Whenever possible, initialize the corresponding data structures using the initialization methods provided in the context if exist.\n5. Ensure the generated function is fully implemented and can be compiled and executed directly without any missing parts.\n6. Create a minimal yet complete set of test functions, ensuring they adhere to all provided preconditions and cover boundary conditions.\n7. Do not create a test module, but include intrinsic attributes like #[test] or #[should_panic] where necessary.\n",
  "static_pt": "The context for the focal function is as follows:\n// src/d2s_intrinsics.rs\n// crate name is ryu\nuse core::ptr;\n#[cfg_attr(feature = \"no-panic\", inline)]\npub fn multiple_of_power_of_5(value: u64, p: u32) -> bool {\n    pow5_factor(value) >= p\n}\n#[cfg_attr(feature = \"no-panic\", inline)]\npub(crate) fn pow5_factor(mut value: u64) -> u32 {\n    const M_INV_5: u64 = 14757395258967641293;\n    const N_DIV_5: u64 = 3689348814741910323;\n    let mut count = 0u32;\n    loop {\n        debug_assert!(value != 0);\n        value = value.wrapping_mul(M_INV_5);\n        if value > N_DIV_5 {\n            break;\n        }\n        count += 1;\n    }\n    count\n}\n\nThe function to be tested is presented with each line formatted as 'line number + code':\n56 pub fn multiple_of_power_of_5(value: u64, p: u32) -> bool {\n57     // I tried a case distinction on p, but there was no performance difference.\n58     pow5_factor(value) >= p\n59 }\n\nGenerate each test function in such a manner that it concurrently satisfies all the following preconditions:\n",
  "depend_pt": ""
}