{
  "name": "ryu::common::decimal_length9",
  "mod_info": {
    "name": "common",
    "loc": "src/lib.rs:107:1:107:12"
  },
  "visible": true,
  "loc": "src/common.rs:24:1:48:2",
  "fn_tests": [
    {
      "chain_id": 1,
      "prompt_conds": [
        "precondition: v < 1000000000 at line 27 is true\n",
        "precondition: v >= 100000000 at line 29 is true, with bound v == 100000000\n",
        "expected return value/type: 9\n"
      ],
      "input_infer": "",
      "answers": [
        {
          "uses": [],
          "has_test_mod": false,
          "common": [],
          "chain_tests": [
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let v: u32 = 100000000;",
                "    let result = decimal_length9(v);",
                "    assert_eq!(result, 9);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let v: u32 = 999999999; // Test upper boundary just below the limit",
                "    let result = decimal_length9(v);",
                "    assert_eq!(result, 9);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            }
          ]
        }
      ]
    },
    {
      "chain_id": 2,
      "prompt_conds": [
        "precondition: v < 1000000000 at line 27 is true\n",
        "precondition: v >= 100000000 at line 29 is false\n",
        "precondition: v >= 10000000 at line 31 is true, with bound v == 10000000\n",
        "expected return value/type: 8\n"
      ],
      "input_infer": "",
      "answers": [
        {
          "uses": [],
          "has_test_mod": false,
          "common": [],
          "chain_tests": [
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let v: u32 = 10000000;",
                "    let result = decimal_length9(v);",
                "    assert_eq!(result, 8);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let v: u32 = 9999999;",
                "    let result = decimal_length9(v);",
                "    assert_eq!(result, 7);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            }
          ]
        }
      ]
    },
    {
      "chain_id": 3,
      "prompt_conds": [
        "precondition: v < 1000000000 at line 27 is true\n",
        "precondition: v >= 100000000 at line 29 is false\n",
        "precondition: v >= 10000000 at line 31 is false\n",
        "precondition: v >= 1000000 at line 33 is true, with bound v == 1000000\n",
        "expected return value/type: 7\n"
      ],
      "input_infer": "",
      "answers": [
        {
          "uses": [],
          "has_test_mod": false,
          "common": [],
          "chain_tests": [
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let v: u32 = 1000000;",
                "    let result = decimal_length9(v);",
                "    assert_eq!(result, 7);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            }
          ]
        }
      ]
    },
    {
      "chain_id": 4,
      "prompt_conds": [
        "precondition: v < 1000000000 at line 27 is true\n",
        "precondition: v >= 100000000 at line 29 is false\n",
        "precondition: v >= 10000000 at line 31 is false\n",
        "precondition: v >= 1000000 at line 33 is false\n",
        "precondition: v >= 100000 at line 35 is true, with bound v == 100000\n",
        "expected return value/type: 6\n"
      ],
      "input_infer": "",
      "answers": [
        {
          "uses": [],
          "has_test_mod": false,
          "common": [],
          "chain_tests": [
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let v: u32 = 100000;",
                "    let result = decimal_length9(v);",
                "    assert_eq!(result, 6);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            }
          ]
        }
      ]
    },
    {
      "chain_id": 5,
      "prompt_conds": [
        "precondition: v < 1000000000 at line 27 is true\n",
        "precondition: v >= 100000000 at line 29 is false\n",
        "precondition: v >= 10000000 at line 31 is false\n",
        "precondition: v >= 1000000 at line 33 is false\n",
        "precondition: v >= 100000 at line 35 is false\n",
        "precondition: v >= 10000 at line 37 is true, with bound v == 10000\n",
        "expected return value/type: 5\n"
      ],
      "input_infer": "",
      "answers": [
        {
          "uses": [],
          "has_test_mod": false,
          "common": [],
          "chain_tests": [
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let v: u32 = 10000;",
                "    let result = decimal_length9(v);",
                "    assert_eq!(result, 5);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            }
          ]
        }
      ]
    },
    {
      "chain_id": 6,
      "prompt_conds": [
        "precondition: v < 1000000000 at line 27 is true\n",
        "precondition: v >= 100000000 at line 29 is false\n",
        "precondition: v >= 10000000 at line 31 is false\n",
        "precondition: v >= 1000000 at line 33 is false\n",
        "precondition: v >= 100000 at line 35 is false\n",
        "precondition: v >= 10000 at line 37 is false\n",
        "precondition: v >= 1000 at line 39 is true, with bound v == 1000\n",
        "expected return value/type: 4\n"
      ],
      "input_infer": "",
      "answers": [
        {
          "uses": [],
          "has_test_mod": false,
          "common": [],
          "chain_tests": [
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let v: u32 = 1000;",
                "    let result = decimal_length9(v);",
                "    assert_eq!(result, 4);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            }
          ]
        }
      ]
    },
    {
      "chain_id": 7,
      "prompt_conds": [
        "precondition: v < 1000000000 at line 27 is true\n",
        "precondition: v >= 100000000 at line 29 is false\n",
        "precondition: v >= 10000000 at line 31 is false\n",
        "precondition: v >= 1000000 at line 33 is false\n",
        "precondition: v >= 100000 at line 35 is false\n",
        "precondition: v >= 10000 at line 37 is false\n",
        "precondition: v >= 1000 at line 39 is false\n",
        "precondition: v >= 100 at line 41 is true, with bound v == 100\n",
        "expected return value/type: 3\n"
      ],
      "input_infer": "",
      "answers": [
        {
          "uses": [],
          "has_test_mod": false,
          "common": [],
          "chain_tests": [
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let v: u32 = 100;",
                "    let result = decimal_length9(v);",
                "    assert_eq!(result, 3);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let v: u32 = 99;",
                "    let result = decimal_length9(v);",
                "    assert_eq!(result, 2);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let v: u32 = 1;",
                "    let result = decimal_length9(v);",
                "    assert_eq!(result, 1);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let v: u32 = 10;",
                "    let result = decimal_length9(v);",
                "    assert_eq!(result, 2);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let v: u32 = 99999;",
                "    let result = decimal_length9(v);",
                "    assert_eq!(result, 5);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            }
          ]
        }
      ]
    },
    {
      "chain_id": 8,
      "prompt_conds": [
        "precondition: v < 1000000000 at line 27 is true\n",
        "precondition: v >= 100000000 at line 29 is false\n",
        "precondition: v >= 10000000 at line 31 is false\n",
        "precondition: v >= 1000000 at line 33 is false\n",
        "precondition: v >= 100000 at line 35 is false\n",
        "precondition: v >= 10000 at line 37 is false\n",
        "precondition: v >= 1000 at line 39 is false\n",
        "precondition: v >= 100 at line 41 is false\n",
        "precondition: v >= 10 at line 43 is true, with bound v == 10\n",
        "expected return value/type: 2\n"
      ],
      "input_infer": "",
      "answers": [
        {
          "uses": [],
          "has_test_mod": false,
          "common": [],
          "chain_tests": [
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let value: u32 = 10;",
                "    let result = decimal_length9(value);",
                "    assert_eq!(result, 2);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let value: u32 = 9;",
                "    let result = decimal_length9(value);",
                "    assert_eq!(result, 1);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let value: u32 = 99;",
                "    let result = decimal_length9(value);",
                "    assert_eq!(result, 2);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let value: u32 = 100;",
                "    let result = decimal_length9(value);",
                "    assert_eq!(result, 3);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let value: u32 = 999;",
                "    let result = decimal_length9(value);",
                "    assert_eq!(result, 4);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let value: u32 = 9999;",
                "    let result = decimal_length9(value);",
                "    assert_eq!(result, 5);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let value: u32 = 99999;",
                "    let result = decimal_length9(value);",
                "    assert_eq!(result, 6);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let value: u32 = 999999;",
                "    let result = decimal_length9(value);",
                "    assert_eq!(result, 7);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let value: u32 = 9999999;",
                "    let result = decimal_length9(value);",
                "    assert_eq!(result, 8);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let value: u32 = 99999999;",
                "    let result = decimal_length9(value);",
                "    assert_eq!(result, 9);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            }
          ]
        }
      ]
    },
    {
      "chain_id": 9,
      "prompt_conds": [
        "precondition: v < 1000000000 at line 27 is true\n",
        "precondition: v >= 100000000 at line 29 is false\n",
        "precondition: v >= 10000000 at line 31 is false\n",
        "precondition: v >= 1000000 at line 33 is false\n",
        "precondition: v >= 100000 at line 35 is false\n",
        "precondition: v >= 10000 at line 37 is false\n",
        "precondition: v >= 1000 at line 39 is false\n",
        "precondition: v >= 100 at line 41 is false\n",
        "precondition: v >= 10 at line 43 is false\n",
        "expected return value/type: 1\n"
      ],
      "input_infer": "",
      "answers": [
        {
          "uses": [],
          "has_test_mod": false,
          "common": [],
          "chain_tests": [
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let v: u32 = 0;",
                "    assert_eq!(decimal_length9(v), 1);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let v: u32 = 1;",
                "    assert_eq!(decimal_length9(v), 1);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let v: u32 = 5;",
                "    assert_eq!(decimal_length9(v), 1);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let v: u32 = 9;",
                "    assert_eq!(decimal_length9(v), 1);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            }
          ]
        }
      ]
    },
    {
      "chain_id": 10,
      "prompt_conds": [
        "precondition: v < 1000000000 at line 27 is false, with bound v == 1000000000\n"
      ],
      "input_infer": "",
      "answers": [
        {
          "uses": [],
          "has_test_mod": false,
          "common": [
            "#[should_panic]",
            "fn test_decimal_length9_too_large() {",
            "    decimal_length9(1000000000);",
            "}"
          ],
          "chain_tests": []
        }
      ]
    }
  ]
}