{
  "name": "ryu::common::log2_pow5",
  "mod_info": {
    "name": "common",
    "loc": "src/lib.rs:107:1:107:12"
  },
  "visible": true,
  "loc": "src/common.rs:53:1:60:2",
  "fn_tests": [
    {
      "chain_id": 1,
      "prompt_conds": [
        "precondition: e >= 0 at line 57 is true, with bound e == 0\n",
        "precondition: e <= 3528 at line 58 is true, with bound e == 3528\n",
        "expected return value/type: ((e as u32 * 1217359) >> 19) as i32\n"
      ],
      "input_infer": "",
      "answers": [
        {
          "uses": [],
          "has_test_mod": false,
          "common": [],
          "chain_tests": [
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let e = 0;",
                "    let result = log2_pow5(e);",
                "    assert_eq!(result, 0);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let e = 3528;",
                "    let expected_result = ((e as u32 * 1217359) >> 19) as i32;",
                "    let result = log2_pow5(e);",
                "    assert_eq!(result, expected_result);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            }
          ]
        }
      ]
    },
    {
      "chain_id": 2,
      "prompt_conds": [
        "precondition: e >= 0 at line 57 is true, with bound e == 0\n",
        "precondition: e <= 3528 at line 58 is false\n"
      ],
      "input_infer": "",
      "answers": [
        {
          "uses": [],
          "has_test_mod": false,
          "common": [],
          "chain_tests": [
            {
              "attrs": [
                "#[should_panic]"
              ],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let e = -1; // Test input that triggers a panicking debug assert",
                "    let _result = log2_pow5(e);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [
                "#[should_panic]"
              ],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let e = 3529; // Test input that triggers a panicking debug assert",
                "    let _result = log2_pow5(e);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let e = 0; // Valid lower bound input",
                "    let result = log2_pow5(e);",
                "    assert_eq!(result, 0); // Expected output of log2_pow5(0)",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let e = 3528; // Valid upper bound input",
                "    let result = log2_pow5(e);",
                "    assert_eq!(result, 419430); // Expected output of log2_pow5(3528)",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            }
          ]
        }
      ]
    },
    {
      "chain_id": 3,
      "prompt_conds": [
        "precondition: e >= 0 at line 57 is false\n"
      ],
      "input_infer": "",
      "answers": [
        {
          "uses": [],
          "has_test_mod": false,
          "common": [],
          "chain_tests": []
        }
      ]
    }
  ]
}