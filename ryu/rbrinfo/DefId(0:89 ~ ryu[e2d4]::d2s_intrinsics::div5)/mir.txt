bb0
  0: StorageLive(_2)
    SourceInfo(src/d2s_intrinsics.rs:25:5-25:6)
  1: _2 = _1
    SourceInfo(src/d2s_intrinsics.rs:25:5-25:6)
  2: _3 = Eq(const 5_u64, const 0_u64)
    SourceInfo(src/d2s_intrinsics.rs:25:5-25:10)
  Terminator {
      source_info: SourceInfo(src/d2s_intrinsics.rs:25:5-25:10)
      kind: assert(!move _3, "attempt to divide `{}` by zero", _2) -> [success: bb1, unwind: bb2]
  }
  preds []
  succs [bb1, bb2]

bb1
  0: _0 = Div(move _2, const 5_u64)
    SourceInfo(src/d2s_intrinsics.rs:25:5-25:10)
  1: StorageDead(_2)
    SourceInfo(src/d2s_intrinsics.rs:25:9-25:10)
  Terminator {
      source_info: SourceInfo(src/d2s_intrinsics.rs:26:2-26:2)
      kind: return
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(src/d2s_intrinsics.rs:24:1-26:2)
      kind: resume
  }
  preds [bb0]
  succs []

