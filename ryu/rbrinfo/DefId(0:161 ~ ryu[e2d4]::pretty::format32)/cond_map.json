{
  "src/pretty/mod.rs:162:25:162:67": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "bits & ((1u32 << FLOAT_MANTISSA_BITS) - 1)",
          "lhs": "bits",
          "rhs": "((1u32 << FLOAT_MANTISSA_BITS) - 1)",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/pretty/mod.rs:192:25:192:33": [
    {
      "Bool": {
        "Binary": {
          "kind": "Le",
          "expr": "kk <= 13",
          "lhs": "kk",
          "rhs": "13",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/mod.rs:204:28:204:37": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "index + i",
          "lhs": "index",
          "rhs": "i",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/pretty/mod.rs:202:22:202:28": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "2 - kk",
          "lhs": "2",
          "rhs": "kk",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/mod.rs:206:50:206:73": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "index + length + offset",
          "lhs": "index + length",
          "rhs": "offset",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/pretty/mod.rs:211:24:211:33": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "index + 1",
          "lhs": "index",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/mod.rs:191:9:191:37": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "index as usize + kk as usize",
          "lhs": "index as usize",
          "rhs": "kk as usize",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/pretty/mod.rs:207:9:207:59": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "index as usize + length as usize + offset as usize",
          "lhs": "index as usize + length as usize",
          "rhs": "offset as usize",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/pretty/mod.rs:218:24:218:38": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "index + length",
          "lhs": "index",
          "rhs": "length",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/pretty/mod.rs:210:33:210:56": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "b'0' + v.mantissa as u8",
          "lhs": "b'0'",
          "rhs": "v.mantissa as u8",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/mod.rs:171:30:171:48": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "ieee_mantissa == 0",
          "lhs": "ieee_mantissa",
          "rhs": "0",
          "cmp_with_int": true
        }
      }
    }
  ],
  "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12:316:42": [
    {
      "Bool": {
        "Other": "$crate::cfg!(debug_assertions)"
      }
    }
  ],
  "src/pretty/mod.rs:189:24:189:34": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "index + kk",
          "lhs": "index",
          "rhs": "kk",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/pretty/mod.rs:190:24:190:34": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "index + kk",
          "lhs": "index",
          "rhs": "kk",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/pretty/mod.rs:162:32:162:67": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "((1u32 << FLOAT_MANTISSA_BITS) - 1)",
          "lhs": "(1u32 << FLOAT_MANTISSA_BITS)",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/mod.rs:163:57:163:92": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "((1u32 << FLOAT_EXPONENT_BITS) - 1)",
          "lhs": "(1u32 << FLOAT_EXPONENT_BITS)",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/mod.rs:161:17:161:70": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(bits >> (FLOAT_MANTISSA_BITS + FLOAT_EXPONENT_BITS))",
          "lhs": "bits",
          "rhs": "(FLOAT_MANTISSA_BITS + FLOAT_EXPONENT_BITS)",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/pretty/mod.rs:212:46:212:52": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "kk - 1",
          "lhs": "kk",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/mod.rs:186:18:186:28": [
    {
      "For": {
        "iter_var": "i",
        "iter_range": "length..kk"
      }
    }
  ],
  "src/pretty/mod.rs:196:24:196:34": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "index + kk",
          "lhs": "index",
          "rhs": "kk",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/pretty/mod.rs:212:68:212:77": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "index + 2",
          "lhs": "index",
          "rhs": "2",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/mod.rs:203:18:203:27": [
    {
      "For": {
        "iter_var": "i",
        "iter_range": "2..offset"
      }
    }
  ],
  "src/pretty/mod.rs:173:16:173:33": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "sign as usize + 3",
          "lhs": "sign as usize",
          "rhs": "3",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/mod.rs:163:58:163:87": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(1u32 << FLOAT_EXPONENT_BITS)",
          "lhs": "1u32",
          "rhs": "FLOAT_EXPONENT_BITS",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/mod.rs:201:24:201:33": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "index + 1",
          "lhs": "index",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/mod.rs:222:53:222:67": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "index + length",
          "lhs": "index",
          "rhs": "length",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/pretty/mod.rs:190:24:190:38": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "index + kk + 1",
          "lhs": "index + kk",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/mod.rs:166:8:166:12": [
    {
      "Bool": {
        "Other": "sign"
      }
    }
  ],
  "src/pretty/mod.rs:187:28:187:37": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "index + i",
          "lhs": "index",
          "rhs": "i",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/pretty/mod.rs:197:9:197:45": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "index as usize + length as usize + 1",
          "lhs": "index as usize + length as usize",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/mod.rs:219:9:220:30": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "index as usize\n            + length as usize",
          "lhs": "index as usize",
          "rhs": "length as usize",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/pretty/mod.rs:206:50:206:64": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "index + length",
          "lhs": "index",
          "rhs": "length",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/pretty/mod.rs:198:15:198:22": [
    {
      "Bool": {
        "Binary": {
          "kind": "Lt",
          "expr": "-6 < kk",
          "lhs": "-6",
          "rhs": "kk",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/mod.rs:208:15:208:26": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "length == 1",
          "lhs": "length",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/mod.rs:195:33:195:42": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "index + 1",
          "lhs": "index",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/mod.rs:161:16:161:80": [
    {
      "Bool": {
        "Binary": {
          "kind": "Ne",
          "expr": "((bits >> (FLOAT_MANTISSA_BITS + FLOAT_EXPONENT_BITS)) & 1) != 0",
          "lhs": "((bits >> (FLOAT_MANTISSA_BITS + FLOAT_EXPONENT_BITS)) & 1)",
          "rhs": "0",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/mod.rs:219:9:221:16": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "index as usize\n            + length as usize\n            + 2",
          "lhs": "index as usize\n            + length as usize",
          "rhs": "2",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/mod.rs:183:8:183:14": [
    {
      "Bool": {
        "Binary": {
          "kind": "Le",
          "expr": "0 <= k",
          "lhs": "0",
          "rhs": "k",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/mod.rs:183:18:183:26": [
    {
      "Bool": {
        "Binary": {
          "kind": "Le",
          "expr": "kk <= 13",
          "lhs": "kk",
          "rhs": "13",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/mod.rs:194:50:194:64": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "index + length",
          "lhs": "index",
          "rhs": "length",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/pretty/mod.rs:171:8:171:26": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "ieee_exponent == 0",
          "lhs": "ieee_exponent",
          "rhs": "0",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/mod.rs:197:9:197:41": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "index as usize + length as usize",
          "lhs": "index as usize",
          "rhs": "length as usize",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/pretty/mod.rs:219:9:222:73": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "index as usize\n            + length as usize\n            + 2\n            + write_exponent2(kk - 1, result.offset(index + length + 2))",
          "lhs": "index as usize\n            + length as usize\n            + 2",
          "rhs": "write_exponent2(kk - 1, result.offset(index + length + 2))",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/pretty/mod.rs:217:24:217:33": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "index + 1",
          "lhs": "index",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/mod.rs:185:50:185:64": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "index + length",
          "lhs": "index",
          "rhs": "length",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/pretty/mod.rs:215:50:215:68": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "index + length + 1",
          "lhs": "index + length",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/mod.rs:161:16:161:75": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "((bits >> (FLOAT_MANTISSA_BITS + FLOAT_EXPONENT_BITS)) & 1)",
          "lhs": "(bits >> (FLOAT_MANTISSA_BITS + FLOAT_EXPONENT_BITS))",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/mod.rs:180:14:180:24": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "length + k",
          "lhs": "length",
          "rhs": "k",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/pretty/mod.rs:212:9:212:27": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "index as usize + 2",
          "lhs": "index as usize",
          "rhs": "2",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/mod.rs:163:25:163:92": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(bits >> FLOAT_MANTISSA_BITS) & ((1u32 << FLOAT_EXPONENT_BITS) - 1)",
          "lhs": "(bits >> FLOAT_MANTISSA_BITS)",
          "rhs": "((1u32 << FLOAT_EXPONENT_BITS) - 1)",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/pretty/mod.rs:163:25:163:54": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(bits >> FLOAT_MANTISSA_BITS)",
          "lhs": "bits",
          "rhs": "FLOAT_MANTISSA_BITS",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/pretty/mod.rs:216:48:216:57": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "index + 1",
          "lhs": "index",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/mod.rs:222:31:222:37": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "kk - 1",
          "lhs": "kk",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/mod.rs:192:15:192:21": [
    {
      "Bool": {
        "Binary": {
          "kind": "Lt",
          "expr": "0 < kk",
          "lhs": "0",
          "rhs": "kk",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/mod.rs:198:26:198:33": [
    {
      "Bool": {
        "Binary": {
          "kind": "Le",
          "expr": "kk <= 0",
          "lhs": "kk",
          "rhs": "0",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/mod.rs:218:24:218:42": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "index + length + 1",
          "lhs": "index + length",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/mod.rs:207:9:207:41": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "index as usize + length as usize",
          "lhs": "index as usize",
          "rhs": "length as usize",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/pretty/mod.rs:191:9:191:41": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "index as usize + kk as usize + 2",
          "lhs": "index as usize + kk as usize",
          "rhs": "2",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/mod.rs:181:19:181:27": [
    {
      "Bool": {
        "Binary": {
          "kind": "Ge",
          "expr": "k >= -45",
          "lhs": "k",
          "rhs": "-45",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/mod.rs:162:33:162:62": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(1u32 << FLOAT_MANTISSA_BITS)",
          "lhs": "1u32",
          "rhs": "FLOAT_MANTISSA_BITS",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/mod.rs:161:26:161:69": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(FLOAT_MANTISSA_BITS + FLOAT_EXPONENT_BITS)",
          "lhs": "FLOAT_MANTISSA_BITS",
          "rhs": "FLOAT_EXPONENT_BITS",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/pretty/mod.rs:212:9:212:79": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "index as usize + 2 + write_exponent2(kk - 1, result.offset(index + 2))",
          "lhs": "index as usize + 2",
          "rhs": "write_exponent2(kk - 1, result.offset(index + 2))",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/pretty/mod.rs:194:50:194:68": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "index + length + 1",
          "lhs": "index + length",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/mod.rs:222:53:222:71": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "index + length + 2",
          "lhs": "index + length",
          "rhs": "2",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/mod.rs:215:50:215:64": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "index + length",
          "lhs": "index",
          "rhs": "length",
          "cmp_with_int": false
        }
      }
    }
  ]
}