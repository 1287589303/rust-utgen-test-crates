{
  "src/pretty/exponent.rs:26:9:26:26": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "sign as usize + 1",
          "lhs": "sign as usize",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/exponent.rs:7:8:7:12": [
    {
      "Bool": {
        "Other": "sign"
      }
    }
  ],
  "src/pretty/exponent.rs:25:19:25:33": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "b'0' + k as u8",
          "lhs": "b'0'",
          "rhs": "k as u8",
          "cmp_with_int": true
        }
      }
    }
  ],
  "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12:316:42": [
    {
      "Bool": {
        "Other": "$crate::cfg!(debug_assertions)"
      }
    }
  ],
  "src/pretty/exponent.rs:20:15:20:22": [
    {
      "Bool": {
        "Binary": {
          "kind": "Ge",
          "expr": "k >= 10",
          "lhs": "k",
          "rhs": "10",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/exponent.rs:6:16:6:21": [
    {
      "Bool": {
        "Binary": {
          "kind": "Lt",
          "expr": "k < 0",
          "lhs": "k",
          "rhs": "0",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/exponent.rs:15:26:15:35": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(k / 100)",
          "lhs": "k",
          "rhs": "100",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/exponent.rs:14:8:14:16": [
    {
      "Bool": {
        "Binary": {
          "kind": "Ge",
          "expr": "k >= 100",
          "lhs": "k",
          "rhs": "100",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/exponent.rs:15:19:15:41": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "b'0' + (k / 100) as u8",
          "lhs": "b'0'",
          "rhs": "(k / 100) as u8",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/exponent.rs:13:19:13:27": [
    {
      "Bool": {
        "Binary": {
          "kind": "Lt",
          "expr": "k < 1000",
          "lhs": "k",
          "rhs": "1000",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/exponent.rs:23:9:23:26": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "sign as usize + 2",
          "lhs": "sign as usize",
          "rhs": "2",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/exponent.rs:17:45:17:50": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "k * 2",
          "lhs": "k",
          "rhs": "2",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/exponent.rs:21:45:21:50": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "k * 2",
          "lhs": "k",
          "rhs": "2",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/exponent.rs:19:9:19:26": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "sign as usize + 3",
          "lhs": "sign as usize",
          "rhs": "3",
          "cmp_with_int": true
        }
      }
    }
  ]
}