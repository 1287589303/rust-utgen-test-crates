bb0
  0: StorageLive(_4)
    SourceInfo(src/d2s_intrinsics.rs:72:9-72:11)
  1: StorageLive(_5)
    SourceInfo(src/d2s_intrinsics.rs:72:14-72:23)
  2: StorageLive(_6)
    SourceInfo(src/d2s_intrinsics.rs:72:14-72:15)
  3: _6 = _1
    SourceInfo(src/d2s_intrinsics.rs:72:14-72:15)
  4: _5 = move _6 as u128 (IntToInt)
    SourceInfo(src/d2s_intrinsics.rs:72:14-72:23)
  5: StorageDead(_6)
    SourceInfo(src/d2s_intrinsics.rs:72:22-72:23)
  6: StorageLive(_7)
    SourceInfo(src/d2s_intrinsics.rs:72:26-72:39)
  7: StorageLive(_8)
    SourceInfo(src/d2s_intrinsics.rs:72:26-72:31)
  8: _8 = ((*_2).0: u64)
    SourceInfo(src/d2s_intrinsics.rs:72:26-72:31)
  9: _7 = move _8 as u128 (IntToInt)
    SourceInfo(src/d2s_intrinsics.rs:72:26-72:39)
  10: StorageDead(_8)
    SourceInfo(src/d2s_intrinsics.rs:72:38-72:39)
  11: _9 = MulWithOverflow(_5, _7)
    SourceInfo(src/d2s_intrinsics.rs:72:14-72:39)
  Terminator {
      source_info: SourceInfo(src/d2s_intrinsics.rs:72:14-72:39)
      kind: assert(!move (_9.1: bool), "attempt to compute `{} * {}`, which would overflow", move _5, move _7) -> [success: bb1, unwind: bb7]
  }
  preds []
  succs [bb1, bb7]

bb1
  0: _4 = move (_9.0: u128)
    SourceInfo(src/d2s_intrinsics.rs:72:14-72:39)
  1: StorageDead(_7)
    SourceInfo(src/d2s_intrinsics.rs:72:38-72:39)
  2: StorageDead(_5)
    SourceInfo(src/d2s_intrinsics.rs:72:38-72:39)
  3: FakeRead(ForLet(None), _4)
    SourceInfo(src/d2s_intrinsics.rs:72:9-72:11)
  4: StorageLive(_10)
    SourceInfo(src/d2s_intrinsics.rs:73:9-73:11)
  5: StorageLive(_11)
    SourceInfo(src/d2s_intrinsics.rs:73:14-73:23)
  6: StorageLive(_12)
    SourceInfo(src/d2s_intrinsics.rs:73:14-73:15)
  7: _12 = _1
    SourceInfo(src/d2s_intrinsics.rs:73:14-73:15)
  8: _11 = move _12 as u128 (IntToInt)
    SourceInfo(src/d2s_intrinsics.rs:73:14-73:23)
  9: StorageDead(_12)
    SourceInfo(src/d2s_intrinsics.rs:73:22-73:23)
  10: StorageLive(_13)
    SourceInfo(src/d2s_intrinsics.rs:73:26-73:39)
  11: StorageLive(_14)
    SourceInfo(src/d2s_intrinsics.rs:73:26-73:31)
  12: _14 = ((*_2).1: u64)
    SourceInfo(src/d2s_intrinsics.rs:73:26-73:31)
  13: _13 = move _14 as u128 (IntToInt)
    SourceInfo(src/d2s_intrinsics.rs:73:26-73:39)
  14: StorageDead(_14)
    SourceInfo(src/d2s_intrinsics.rs:73:38-73:39)
  15: _15 = MulWithOverflow(_11, _13)
    SourceInfo(src/d2s_intrinsics.rs:73:14-73:39)
  Terminator {
      source_info: SourceInfo(src/d2s_intrinsics.rs:73:14-73:39)
      kind: assert(!move (_15.1: bool), "attempt to compute `{} * {}`, which would overflow", move _11, move _13) -> [success: bb2, unwind: bb7]
  }
  preds [bb0]
  succs [bb2, bb7]

bb2
  0: _10 = move (_15.0: u128)
    SourceInfo(src/d2s_intrinsics.rs:73:14-73:39)
  1: StorageDead(_13)
    SourceInfo(src/d2s_intrinsics.rs:73:38-73:39)
  2: StorageDead(_11)
    SourceInfo(src/d2s_intrinsics.rs:73:38-73:39)
  3: FakeRead(ForLet(None), _10)
    SourceInfo(src/d2s_intrinsics.rs:73:9-73:11)
  4: StorageLive(_16)
    SourceInfo(src/d2s_intrinsics.rs:74:5-74:36)
  5: StorageLive(_17)
    SourceInfo(src/d2s_intrinsics.rs:74:6-74:23)
  6: StorageLive(_18)
    SourceInfo(src/d2s_intrinsics.rs:74:7-74:17)
  7: StorageLive(_19)
    SourceInfo(src/d2s_intrinsics.rs:74:8-74:10)
  8: _19 = _4
    SourceInfo(src/d2s_intrinsics.rs:74:8-74:10)
  9: _20 = const 64_i32 as u32 (IntToInt)
    SourceInfo(src/d2s_intrinsics.rs:74:7-74:17)
  10: _21 = Lt(move _20, const 128_u32)
    SourceInfo(src/d2s_intrinsics.rs:74:7-74:17)
  Terminator {
      source_info: SourceInfo(src/d2s_intrinsics.rs:74:7-74:17)
      kind: assert(move _21, "attempt to shift right by `{}`, which would overflow", const 64_i32) -> [success: bb3, unwind: bb7]
  }
  preds [bb1]
  succs [bb3, bb7]

bb3
  0: _18 = Shr(move _19, const 64_i32)
    SourceInfo(src/d2s_intrinsics.rs:74:7-74:17)
  1: StorageDead(_19)
    SourceInfo(src/d2s_intrinsics.rs:74:16-74:17)
  2: StorageLive(_22)
    SourceInfo(src/d2s_intrinsics.rs:74:20-74:22)
  3: _22 = _10
    SourceInfo(src/d2s_intrinsics.rs:74:20-74:22)
  4: _23 = AddWithOverflow(_18, _22)
    SourceInfo(src/d2s_intrinsics.rs:74:6-74:23)
  Terminator {
      source_info: SourceInfo(src/d2s_intrinsics.rs:74:6-74:23)
      kind: assert(!move (_23.1: bool), "attempt to compute `{} + {}`, which would overflow", move _18, move _22) -> [success: bb4, unwind: bb7]
  }
  preds [bb2]
  succs [bb4, bb7]

bb4
  0: _17 = move (_23.0: u128)
    SourceInfo(src/d2s_intrinsics.rs:74:6-74:23)
  1: StorageDead(_22)
    SourceInfo(src/d2s_intrinsics.rs:74:22-74:23)
  2: StorageDead(_18)
    SourceInfo(src/d2s_intrinsics.rs:74:22-74:23)
  3: StorageLive(_24)
    SourceInfo(src/d2s_intrinsics.rs:74:27-74:35)
  4: StorageLive(_25)
    SourceInfo(src/d2s_intrinsics.rs:74:28-74:29)
  5: _25 = _3
    SourceInfo(src/d2s_intrinsics.rs:74:28-74:29)
  6: _26 = SubWithOverflow(_25, const 64_u32)
    SourceInfo(src/d2s_intrinsics.rs:74:27-74:35)
  Terminator {
      source_info: SourceInfo(src/d2s_intrinsics.rs:74:27-74:35)
      kind: assert(!move (_26.1: bool), "attempt to compute `{} - {}`, which would overflow", move _25, const 64_u32) -> [success: bb5, unwind: bb7]
  }
  preds [bb3]
  succs [bb5, bb7]

bb5
  0: _24 = move (_26.0: u32)
    SourceInfo(src/d2s_intrinsics.rs:74:27-74:35)
  1: StorageDead(_25)
    SourceInfo(src/d2s_intrinsics.rs:74:34-74:35)
  2: _27 = Lt(_24, const 128_u32)
    SourceInfo(src/d2s_intrinsics.rs:74:5-74:36)
  Terminator {
      source_info: SourceInfo(src/d2s_intrinsics.rs:74:5-74:36)
      kind: assert(move _27, "attempt to shift right by `{}`, which would overflow", _24) -> [success: bb6, unwind: bb7]
  }
  preds [bb4]
  succs [bb6, bb7]

bb6
  0: _16 = Shr(move _17, move _24)
    SourceInfo(src/d2s_intrinsics.rs:74:5-74:36)
  1: StorageDead(_24)
    SourceInfo(src/d2s_intrinsics.rs:74:35-74:36)
  2: StorageDead(_17)
    SourceInfo(src/d2s_intrinsics.rs:74:35-74:36)
  3: _0 = move _16 as u64 (IntToInt)
    SourceInfo(src/d2s_intrinsics.rs:74:5-74:43)
  4: StorageDead(_16)
    SourceInfo(src/d2s_intrinsics.rs:74:42-74:43)
  5: StorageDead(_10)
    SourceInfo(src/d2s_intrinsics.rs:75:1-75:2)
  6: StorageDead(_4)
    SourceInfo(src/d2s_intrinsics.rs:75:1-75:2)
  Terminator {
      source_info: SourceInfo(src/d2s_intrinsics.rs:75:2-75:2)
      kind: return
  }
  preds [bb5]
  succs []

bb7
  Terminator {
      source_info: SourceInfo(src/d2s_intrinsics.rs:71:1-75:2)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3, bb4, bb5]
  succs []

