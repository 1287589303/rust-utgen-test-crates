bb0
  0: StorageLive(_2)
    SourceInfo(src/common.rs:76:5-76:17)
  1: StorageLive(_3)
    SourceInfo(src/common.rs:76:15-76:16)
  2: _3 = _1
    SourceInfo(src/common.rs:76:15-76:16)
  Terminator {
      source_info: SourceInfo(src/common.rs:76:5-76:17)
      kind: _2 = common::log2_pow5(move _3) -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: StorageDead(_3)
    SourceInfo(src/common.rs:76:16-76:17)
  1: _4 = AddWithOverflow(_2, const 1_i32)
    SourceInfo(src/common.rs:76:5-76:21)
  Terminator {
      source_info: SourceInfo(src/common.rs:76:5-76:21)
      kind: assert(!move (_4.1: bool), "attempt to compute `{} + {}`, which would overflow", move _2, const 1_i32) -> [success: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: _0 = move (_4.0: i32)
    SourceInfo(src/common.rs:76:5-76:21)
  1: StorageDead(_2)
    SourceInfo(src/common.rs:76:20-76:21)
  Terminator {
      source_info: SourceInfo(src/common.rs:77:2-77:2)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(src/common.rs:75:1-77:2)
      kind: resume
  }
  preds [bb0, bb1]
  succs []

