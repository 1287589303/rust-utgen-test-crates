{
  "src/f2s.rs:109:57:109:64": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(i + 1)",
          "lhs": "i",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/f2s.rs:101:17:101:31": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "-e2 - q as i32",
          "lhs": "-e2",
          "rhs": "q as i32",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/f2s.rs:100:15:100:28": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "q as i32 + e2",
          "lhs": "q as i32",
          "rhs": "e2",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/f2s.rs:163:34:163:43": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(vr % 10)",
          "lhs": "vr",
          "rhs": "10",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/f2s.rs:107:39:107:46": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "vm / 10",
          "lhs": "vm",
          "rhs": "10",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/f2s.rs:122:19:122:25": [
    {
      "Bool": {
        "Binary": {
          "kind": "Lt",
          "expr": "q < 31",
          "lhs": "q",
          "rhs": "31",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/f2s.rs:130:21:130:41": [
    {
      "Bool": {
        "Other": "vm_is_trailing_zeros"
      }
    }
  ],
  "src/f2s.rs:74:17:74:65": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "FLOAT_POW5_INV_BITCOUNT + pow5bits(q as i32) - 1",
          "lhs": "FLOAT_POW5_INV_BITCOUNT + pow5bits(q as i32)",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/f2s.rs:151:36:151:59": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "last_removed_digit == 5",
          "lhs": "last_removed_digit",
          "rhs": "5",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/f2s.rs:75:17:75:31": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "-e2 + q as i32",
          "lhs": "-e2",
          "rhs": "q as i32",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/f2s.rs:90:16:90:27": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "mv % 5 == 0",
          "lhs": "mv % 5",
          "rhs": "0",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/f2s.rs:133:42:133:51": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(vm / 10)",
          "lhs": "vm",
          "rhs": "10",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/f2s.rs:107:22:107:35": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(vp - 1) / 10",
          "lhs": "(vp - 1)",
          "rhs": "10",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/f2s.rs:108:42:108:47": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "i + 1",
          "lhs": "i",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/f2s.rs:79:12:79:18": [
    {
      "Bool": {
        "Binary": {
          "kind": "Ne",
          "expr": "q != 0",
          "lhs": "q",
          "rhs": "0",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/f2s.rs:172:15:172:28": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "e10 + removed",
          "lhs": "e10",
          "rhs": "removed",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/f2s.rs:162:15:162:22": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "vp / 10",
          "lhs": "vp",
          "rhs": "10",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/f2s.rs:170:9:170:58": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "vr + (vr == vm || last_removed_digit >= 5) as u32",
          "lhs": "vr",
          "rhs": "(vr == vm || last_removed_digit >= 5) as u32",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/f2s.rs:85:51:85:65": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "-e2 + q as i32",
          "lhs": "-e2",
          "rhs": "q as i32",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/f2s.rs:132:15:132:22": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "vp / 10",
          "lhs": "vp",
          "rhs": "10",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/f2s.rs:143:41:143:64": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "last_removed_digit == 0",
          "lhs": "last_removed_digit",
          "rhs": "0",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/f2s.rs:133:37:133:56": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "vm - (vm / 10) * 10",
          "lhs": "vm",
          "rhs": "(vm / 10) * 10",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/f2s.rs:135:34:135:43": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(vr % 10)",
          "lhs": "vr",
          "rhs": "10",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/f2s.rs:79:22:79:35": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(vp - 1) / 10",
          "lhs": "(vp - 1)",
          "rhs": "10",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/f2s.rs:141:12:141:32": [
    {
      "Bool": {
        "Other": "vm_is_trailing_zeros"
      }
    }
  ],
  "src/f2s.rs:151:12:151:32": [
    {
      "Bool": {
        "Other": "vr_is_trailing_zeros"
      }
    }
  ],
  "src/f2s.rs:85:17:85:80": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(mul_pow5_inv_div_pow2(mv, q - 1, -e2 + q as i32 - 1 + l) % 10)",
          "lhs": "mul_pow5_inv_div_pow2(mv, q - 1, -e2 + q as i32 - 1 + l)",
          "rhs": "10",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/f2s.rs:117:40:117:53": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "mm_shift == 1",
          "lhs": "mm_shift",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/f2s.rs:49:13:49:75": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "ieee_exponent as i32 - FLOAT_BIAS - FLOAT_MANTISSA_BITS as i32",
          "lhs": "ieee_exponent as i32 - FLOAT_BIAS",
          "rhs": "FLOAT_MANTISSA_BITS as i32",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/f2s.rs:85:51:85:69": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "-e2 + q as i32 - 1",
          "lhs": "-e2 + q as i32",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/f2s.rs:111:12:111:18": [
    {
      "Bool": {
        "Binary": {
          "kind": "Le",
          "expr": "q <= 1",
          "lhs": "q",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/f2s.rs:61:14:61:24": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "4 * m2 - 1",
          "lhs": "4 * m2",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/f2s.rs:108:17:108:71": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "q as i32 - 1 - (pow5bits(i + 1) - FLOAT_POW5_BITCOUNT)",
          "lhs": "q as i32 - 1",
          "rhs": "(pow5bits(i + 1) - FLOAT_POW5_BITCOUNT)",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/f2s.rs:74:17:74:61": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "FLOAT_POW5_INV_BITCOUNT + pow5bits(q as i32)",
          "lhs": "FLOAT_POW5_INV_BITCOUNT",
          "rhs": "pow5bits(q as i32)",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/f2s.rs:58:14:58:24": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "4 * m2 + 2",
          "lhs": "4 * m2",
          "rhs": "2",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/f2s.rs:108:32:108:71": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(pow5bits(i + 1) - FLOAT_POW5_BITCOUNT)",
          "lhs": "pow5bits(i + 1)",
          "rhs": "FLOAT_POW5_BITCOUNT",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/f2s.rs:79:22:79:46": [
    {
      "Bool": {
        "Binary": {
          "kind": "Le",
          "expr": "(vp - 1) / 10 <= vm / 10",
          "lhs": "(vp - 1) / 10",
          "rhs": "vm / 10",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/f2s.rs:142:19:142:26": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "vm % 10",
          "lhs": "vm",
          "rhs": "10",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/f2s.rs:44:13:44:60": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "1 - FLOAT_BIAS - FLOAT_MANTISSA_BITS as i32 - 2",
          "lhs": "1 - FLOAT_BIAS - FLOAT_MANTISSA_BITS as i32",
          "rhs": "2",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/f2s.rs:130:45:130:65": [
    {
      "Bool": {
        "Other": "vr_is_trailing_zeros"
      }
    }
  ],
  "src/f2s.rs:102:17:102:50": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "pow5bits(i) - FLOAT_POW5_BITCOUNT",
          "lhs": "pow5bits(i)",
          "rhs": "FLOAT_POW5_BITCOUNT",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/f2s.rs:132:15:132:32": [
    {
      "Bool": {
        "Binary": {
          "kind": "Gt",
          "expr": "vp / 10 > vm / 10",
          "lhs": "vp / 10",
          "rhs": "vm / 10",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/f2s.rs:108:17:108:29": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "q as i32 - 1",
          "lhs": "q as i32",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/f2s.rs:49:13:49:79": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "ieee_exponent as i32 - FLOAT_BIAS - FLOAT_MANTISSA_BITS as i32 - 2",
          "lhs": "ieee_exponent as i32 - FLOAT_BIAS - FLOAT_MANTISSA_BITS as i32",
          "rhs": "2",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/f2s.rs:85:51:85:73": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "-e2 + q as i32 - 1 + l",
          "lhs": "-e2 + q as i32 - 1",
          "rhs": "l",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/f2s.rs:151:63:151:69": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "vr % 2",
          "lhs": "vr",
          "rhs": "2",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/f2s.rs:71:8:71:15": [
    {
      "Bool": {
        "Binary": {
          "kind": "Ge",
          "expr": "e2 >= 0",
          "lhs": "e2",
          "rhs": "0",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/f2s.rs:156:30:156:43": [
    {
      "Bool": {
        "Other": "accept_bounds"
      }
    }
  ],
  "src/f2s.rs:83:56:83:68": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "q as i32 - 1",
          "lhs": "q as i32",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/f2s.rs:83:21:83:73": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "FLOAT_POW5_INV_BITCOUNT + pow5bits(q as i32 - 1) - 1",
          "lhs": "FLOAT_POW5_INV_BITCOUNT + pow5bits(q as i32 - 1)",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/f2s.rs:115:16:115:29": [
    {
      "Bool": {
        "Other": "accept_bounds"
      }
    }
  ],
  "src/f2s.rs:53:16:53:29": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "(m2 & 1) == 0",
          "lhs": "(m2 & 1)",
          "rhs": "0",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/f2s.rs:162:15:162:32": [
    {
      "Bool": {
        "Binary": {
          "kind": "Gt",
          "expr": "vp / 10 > vm / 10",
          "lhs": "vp / 10",
          "rhs": "vm / 10",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/f2s.rs:61:14:61:20": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "4 * m2",
          "lhs": "4",
          "rhs": "m2",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/f2s.rs:49:13:49:46": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "ieee_exponent as i32 - FLOAT_BIAS",
          "lhs": "ieee_exponent as i32",
          "rhs": "FLOAT_BIAS",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/f2s.rs:83:21:83:69": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "FLOAT_POW5_INV_BITCOUNT + pow5bits(q as i32 - 1)",
          "lhs": "FLOAT_POW5_INV_BITCOUNT",
          "rhs": "pow5bits(q as i32 - 1)",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/f2s.rs:53:16:53:24": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(m2 & 1)",
          "lhs": "m2",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/f2s.rs:85:44:85:49": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "q - 1",
          "lhs": "q",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/f2s.rs:132:25:132:32": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "vm / 10",
          "lhs": "vm",
          "rhs": "10",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/f2s.rs:170:27:170:50": [
    {
      "Bool": {
        "Binary": {
          "kind": "Ge",
          "expr": "last_removed_digit >= 5",
          "lhs": "last_removed_digit",
          "rhs": "5",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/f2s.rs:60:43:60:61": [
    {
      "Bool": {
        "Binary": {
          "kind": "Le",
          "expr": "ieee_exponent <= 1",
          "lhs": "ieee_exponent",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/f2s.rs:156:74:156:97": [
    {
      "Bool": {
        "Binary": {
          "kind": "Ge",
          "expr": "last_removed_digit >= 5",
          "lhs": "last_removed_digit",
          "rhs": "5",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/f2s.rs:103:21:103:33": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "q as i32 - k",
          "lhs": "q as i32",
          "rhs": "k",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/f2s.rs:142:19:142:31": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "vm % 10 == 0",
          "lhs": "vm % 10",
          "rhs": "0",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/f2s.rs:133:42:133:56": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(vm / 10) * 10",
          "lhs": "(vm / 10)",
          "rhs": "10",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/f2s.rs:41:23:41:41": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "ieee_exponent == 0",
          "lhs": "ieee_exponent",
          "rhs": "0",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/f2s.rs:107:22:107:46": [
    {
      "Bool": {
        "Binary": {
          "kind": "Le",
          "expr": "(vp - 1) / 10 <= vm / 10",
          "lhs": "(vp - 1) / 10",
          "rhs": "vm / 10",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/f2s.rs:50:13:50:42": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(1u32 << FLOAT_MANTISSA_BITS)",
          "lhs": "1u32",
          "rhs": "FLOAT_MANTISSA_BITS",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/f2s.rs:57:14:57:20": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "4 * m2",
          "lhs": "4",
          "rhs": "m2",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/f2s.rs:107:12:107:18": [
    {
      "Bool": {
        "Binary": {
          "kind": "Ne",
          "expr": "q != 0",
          "lhs": "q",
          "rhs": "0",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/f2s.rs:75:17:75:35": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "-e2 + q as i32 + k",
          "lhs": "-e2 + q as i32",
          "rhs": "k",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/f2s.rs:107:22:107:30": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(vp - 1)",
          "lhs": "vp",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/f2s.rs:44:13:44:27": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "1 - FLOAT_BIAS",
          "lhs": "1",
          "rhs": "FLOAT_BIAS",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/f2s.rs:134:37:134:60": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "last_removed_digit == 0",
          "lhs": "last_removed_digit",
          "rhs": "0",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/f2s.rs:151:63:151:74": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "vr % 2 == 0",
          "lhs": "vr % 2",
          "rhs": "0",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/f2s.rs:58:14:58:20": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "4 * m2",
          "lhs": "4",
          "rhs": "m2",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/f2s.rs:92:23:92:36": [
    {
      "Bool": {
        "Other": "accept_bounds"
      }
    }
  ],
  "src/f2s.rs:60:21:60:39": [
    {
      "Bool": {
        "Binary": {
          "kind": "Ne",
          "expr": "ieee_mantissa != 0",
          "lhs": "ieee_mantissa",
          "rhs": "0",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/f2s.rs:144:38:144:47": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(vr % 10)",
          "lhs": "vr",
          "rhs": "10",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/f2s.rs:109:34:109:81": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(mul_pow5_div_pow2(mv, (i + 1) as u32, j) % 10)",
          "lhs": "mul_pow5_div_pow2(mv, (i + 1) as u32, j)",
          "rhs": "10",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/f2s.rs:61:14:61:35": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "4 * m2 - 1 - mm_shift",
          "lhs": "4 * m2 - 1",
          "rhs": "mm_shift",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/f2s.rs:79:22:79:30": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(vp - 1)",
          "lhs": "vp",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/f2s.rs:156:9:157:19": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "vr + ((vr == vm && (!accept_bounds || !vm_is_trailing_zeros)) || last_removed_digit >= 5)\n            as u32",
          "lhs": "vr",
          "rhs": "((vr == vm && (!accept_bounds || !vm_is_trailing_zeros)) || last_removed_digit >= 5)\n            as u32",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/f2s.rs:156:48:156:68": [
    {
      "Bool": {
        "Other": "vm_is_trailing_zeros"
      }
    }
  ],
  "src/f2s.rs:124:66:124:71": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "q - 1",
          "lhs": "q",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/f2s.rs:79:39:79:46": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "vm / 10",
          "lhs": "vm",
          "rhs": "10",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/f2s.rs:90:16:90:22": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "mv % 5",
          "lhs": "mv",
          "rhs": "5",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/f2s.rs:162:25:162:32": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "vm / 10",
          "lhs": "vm",
          "rhs": "10",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/f2s.rs:156:16:156:24": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "vr == vm",
          "lhs": "vr",
          "rhs": "vm",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/f2s.rs:50:13:50:58": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(1u32 << FLOAT_MANTISSA_BITS) | ieee_mantissa",
          "lhs": "(1u32 << FLOAT_MANTISSA_BITS)",
          "rhs": "ieee_mantissa",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/f2s.rs:170:15:170:23": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "vr == vm",
          "lhs": "vr",
          "rhs": "vm",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/f2s.rs:133:37:133:61": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "vm - (vm / 10) * 10 == 0",
          "lhs": "vm - (vm / 10) * 10",
          "rhs": "0",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/f2s.rs:44:13:44:56": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "1 - FLOAT_BIAS - FLOAT_MANTISSA_BITS as i32",
          "lhs": "1 - FLOAT_BIAS",
          "rhs": "FLOAT_MANTISSA_BITS as i32",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/f2s.rs:87:12:87:18": [
    {
      "Bool": {
        "Binary": {
          "kind": "Le",
          "expr": "q <= 9",
          "lhs": "q",
          "rhs": "9",
          "cmp_with_int": true
        }
      }
    }
  ]
}