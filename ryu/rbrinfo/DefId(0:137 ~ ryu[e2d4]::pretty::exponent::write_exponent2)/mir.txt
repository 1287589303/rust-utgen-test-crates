bb0
  0: StorageLive(_3)
    SourceInfo(src/pretty/exponent.rs:32:9-32:13)
  1: StorageLive(_4)
    SourceInfo(src/pretty/exponent.rs:32:16-32:17)
  2: _4 = _1
    SourceInfo(src/pretty/exponent.rs:32:16-32:17)
  3: _3 = Lt(move _4, const 0_isize)
    SourceInfo(src/pretty/exponent.rs:32:16-32:21)
  4: StorageDead(_4)
    SourceInfo(src/pretty/exponent.rs:32:20-32:21)
  5: FakeRead(ForLet(None), _3)
    SourceInfo(src/pretty/exponent.rs:32:9-32:13)
  6: StorageLive(_5)
    SourceInfo(src/pretty/exponent.rs:33:5-37:6)
  7: StorageLive(_6)
    SourceInfo(src/pretty/exponent.rs:33:8-33:12)
  8: _6 = _3
    SourceInfo(src/pretty/exponent.rs:33:8-33:12)
  Terminator {
      source_info: SourceInfo(src/pretty/exponent.rs:33:8-33:12)
      kind: switchInt(move _6) -> [0: bb4, otherwise: bb1]
  }
  preds []
  succs [bb1, bb4]

bb1
  0: (*_2) = const 45_u8
    SourceInfo(src/pretty/exponent.rs:34:9-34:23)
  1: StorageLive(_7)
    SourceInfo(src/pretty/exponent.rs:35:18-35:34)
  2: StorageLive(_8)
    SourceInfo(src/pretty/exponent.rs:35:18-35:24)
  3: _8 = _2
    SourceInfo(src/pretty/exponent.rs:35:18-35:24)
  Terminator {
      source_info: SourceInfo(src/pretty/exponent.rs:35:18-35:34)
      kind: _7 = core::ptr::mut_ptr::<impl *mut u8>::offset(move _8, const 1_isize) -> [return: bb2, unwind: bb21]
  }
  preds [bb0]
  succs [bb2, bb21]

bb2
  0: StorageDead(_8)
    SourceInfo(src/pretty/exponent.rs:35:33-35:34)
  1: _2 = move _7
    SourceInfo(src/pretty/exponent.rs:35:9-35:34)
  2: StorageDead(_7)
    SourceInfo(src/pretty/exponent.rs:35:33-35:34)
  3: StorageLive(_9)
    SourceInfo(src/pretty/exponent.rs:36:14-36:15)
  4: _9 = _1
    SourceInfo(src/pretty/exponent.rs:36:14-36:15)
  5: _10 = Eq(_9, const isize::MIN)
    SourceInfo(src/pretty/exponent.rs:36:13-36:15)
  Terminator {
      source_info: SourceInfo(src/pretty/exponent.rs:36:13-36:15)
      kind: assert(!move _10, "attempt to negate `{}`, which would overflow", _9) -> [success: bb3, unwind: bb21]
  }
  preds [bb1]
  succs [bb3, bb21]

bb3
  0: _1 = Neg(move _9)
    SourceInfo(src/pretty/exponent.rs:36:9-36:15)
  1: StorageDead(_9)
    SourceInfo(src/pretty/exponent.rs:36:14-36:15)
  2: _5 = const ()
    SourceInfo(src/pretty/exponent.rs:33:13-37:6)
  Terminator {
      source_info: SourceInfo(src/pretty/exponent.rs:33:5-37:6)
      kind: goto -> bb5
  }
  preds [bb2]
  succs [bb5]

bb4
  0: _5 = const ()
    SourceInfo(src/pretty/exponent.rs:37:6-37:6)
  Terminator {
      source_info: SourceInfo(src/pretty/exponent.rs:33:5-37:6)
      kind: goto -> bb5
  }
  preds [bb0]
  succs [bb5]

bb5
  0: StorageDead(_6)
    SourceInfo(src/pretty/exponent.rs:37:5-37:6)
  1: StorageDead(_5)
    SourceInfo(src/pretty/exponent.rs:37:5-37:6)
  2: StorageLive(_11)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
  3: StorageLive(_12)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
  4: _12 = const true
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
      kind: switchInt(move _12) -> [0: bb9, otherwise: bb6]
  }
  preds [bb3, bb4]
  succs [bb6, bb9]

bb6
  0: StorageLive(_13)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
  1: StorageLive(_14)
    SourceInfo(src/pretty/exponent.rs:39:19-39:26)
  2: StorageLive(_15)
    SourceInfo(src/pretty/exponent.rs:39:19-39:20)
  3: _15 = _1
    SourceInfo(src/pretty/exponent.rs:39:19-39:20)
  4: _14 = Lt(move _15, const 100_isize)
    SourceInfo(src/pretty/exponent.rs:39:19-39:26)
  Terminator {
      source_info: SourceInfo(src/pretty/exponent.rs:39:19-39:26)
      kind: switchInt(move _14) -> [0: bb8, otherwise: bb7]
  }
  preds [bb5]
  succs [bb7, bb8]

bb7
  0: StorageDead(_15)
    SourceInfo(src/pretty/exponent.rs:39:25-39:26)
  1: _13 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:38-317:38)
  2: StorageDead(_14)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:37-317:38)
  3: StorageDead(_13)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:37-317:38)
  4: _11 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:43-318:10)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
      kind: goto -> bb10
  }
  preds [bb6]
  succs [bb10]

bb8
  0: StorageDead(_15)
    SourceInfo(src/pretty/exponent.rs:39:25-39:26)
  1: StorageLive(_16)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
      kind: _16 = core::panicking::panic(const "assertion failed: k < 100") -> bb21
  }
  preds [bb6]
  succs [bb21]

bb9
  0: _11 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:10-318:10)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
      kind: goto -> bb10
  }
  preds [bb5]
  succs [bb10]

bb10
  0: StorageDead(_12)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:9-318:10)
  1: StorageDead(_11)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:9-318:10)
  2: StorageLive(_17)
    SourceInfo(src/pretty/exponent.rs:40:8-40:15)
  3: StorageLive(_18)
    SourceInfo(src/pretty/exponent.rs:40:8-40:9)
  4: _18 = _1
    SourceInfo(src/pretty/exponent.rs:40:8-40:9)
  5: _17 = Ge(move _18, const 10_isize)
    SourceInfo(src/pretty/exponent.rs:40:8-40:15)
  Terminator {
      source_info: SourceInfo(src/pretty/exponent.rs:40:8-40:15)
      kind: switchInt(move _17) -> [0: bb17, otherwise: bb11]
  }
  preds [bb7, bb9]
  succs [bb11, bb17]

bb11
  0: StorageDead(_18)
    SourceInfo(src/pretty/exponent.rs:40:14-40:15)
  1: StorageLive(_19)
    SourceInfo(src/pretty/exponent.rs:41:13-41:14)
  2: StorageLive(_20)
    SourceInfo(src/pretty/exponent.rs:41:17-41:37)
  3: StorageLive(_21)
    SourceInfo(src/pretty/exponent.rs:41:17-41:28)
  4: StorageLive(_22)
    SourceInfo(src/pretty/exponent.rs:41:17-41:28)
  5: StorageLive(_23)
    SourceInfo(src/pretty/exponent.rs:41:17-41:28)
  6: _23 = const <static(DefId(0:100 ~ ryu[e2d4]::digit_table::DIGIT_TABLE))>
    SourceInfo(src/pretty/exponent.rs:41:17-41:28)
  7: _22 = &(*_23)
    SourceInfo(src/pretty/exponent.rs:41:17-41:28)
  8: _21 = move _22 as &[u8] (PointerCoercion(Unsize))
    SourceInfo(src/pretty/exponent.rs:41:17-41:28)
  9: StorageDead(_22)
    SourceInfo(src/pretty/exponent.rs:41:27-41:28)
  Terminator {
      source_info: SourceInfo(src/pretty/exponent.rs:41:17-41:37)
      kind: _20 = core::slice::<impl [u8]>::as_ptr(move _21) -> [return: bb12, unwind: bb21]
  }
  preds [bb10]
  succs [bb12, bb21]

bb12
  0: StorageDead(_21)
    SourceInfo(src/pretty/exponent.rs:41:36-41:37)
  1: StorageLive(_24)
    SourceInfo(src/pretty/exponent.rs:41:45-41:50)
  2: StorageLive(_25)
    SourceInfo(src/pretty/exponent.rs:41:45-41:46)
  3: _25 = _1
    SourceInfo(src/pretty/exponent.rs:41:45-41:46)
  4: _26 = MulWithOverflow(_25, const 2_isize)
    SourceInfo(src/pretty/exponent.rs:41:45-41:50)
  Terminator {
      source_info: SourceInfo(src/pretty/exponent.rs:41:45-41:50)
      kind: assert(!move (_26.1: bool), "attempt to compute `{} * {}`, which would overflow", move _25, const 2_isize) -> [success: bb13, unwind: bb21]
  }
  preds [bb11]
  succs [bb13, bb21]

bb13
  0: _24 = move (_26.0: isize)
    SourceInfo(src/pretty/exponent.rs:41:45-41:50)
  1: StorageDead(_25)
    SourceInfo(src/pretty/exponent.rs:41:49-41:50)
  Terminator {
      source_info: SourceInfo(src/pretty/exponent.rs:41:17-41:51)
      kind: _19 = core::ptr::const_ptr::<impl *const u8>::offset(move _20, move _24) -> [return: bb14, unwind: bb21]
  }
  preds [bb12]
  succs [bb14, bb21]

bb14
  0: StorageDead(_24)
    SourceInfo(src/pretty/exponent.rs:41:50-41:51)
  1: StorageDead(_20)
    SourceInfo(src/pretty/exponent.rs:41:50-41:51)
  2: FakeRead(ForLet(None), _19)
    SourceInfo(src/pretty/exponent.rs:41:13-41:14)
  3: StorageDead(_23)
    SourceInfo(src/pretty/exponent.rs:41:51-41:52)
  4: StorageLive(_27)
    SourceInfo(src/pretty/exponent.rs:42:9-42:47)
  5: StorageLive(_28)
    SourceInfo(src/pretty/exponent.rs:42:34-42:35)
  6: _28 = _19
    SourceInfo(src/pretty/exponent.rs:42:34-42:35)
  7: StorageLive(_29)
    SourceInfo(src/pretty/exponent.rs:42:37-42:43)
  8: _29 = _2
    SourceInfo(src/pretty/exponent.rs:42:37-42:43)
  Terminator {
      source_info: SourceInfo(src/pretty/exponent.rs:42:9-42:47)
      kind: _27 = core::intrinsics::copy_nonoverlapping::<u8>(move _28, move _29, const 2_usize) -> [return: bb15, unwind: bb21]
  }
  preds [bb13]
  succs [bb15, bb21]

bb15
  0: StorageDead(_29)
    SourceInfo(src/pretty/exponent.rs:42:46-42:47)
  1: StorageDead(_28)
    SourceInfo(src/pretty/exponent.rs:42:46-42:47)
  2: StorageDead(_27)
    SourceInfo(src/pretty/exponent.rs:42:47-42:48)
  3: StorageLive(_30)
    SourceInfo(src/pretty/exponent.rs:43:9-43:22)
  4: StorageLive(_31)
    SourceInfo(src/pretty/exponent.rs:43:9-43:13)
  5: _31 = _3
    SourceInfo(src/pretty/exponent.rs:43:9-43:13)
  6: _30 = move _31 as usize (IntToInt)
    SourceInfo(src/pretty/exponent.rs:43:9-43:22)
  7: StorageDead(_31)
    SourceInfo(src/pretty/exponent.rs:43:21-43:22)
  8: _32 = AddWithOverflow(_30, const 2_usize)
    SourceInfo(src/pretty/exponent.rs:43:9-43:26)
  Terminator {
      source_info: SourceInfo(src/pretty/exponent.rs:43:9-43:26)
      kind: assert(!move (_32.1: bool), "attempt to compute `{} + {}`, which would overflow", move _30, const 2_usize) -> [success: bb16, unwind: bb21]
  }
  preds [bb14]
  succs [bb16, bb21]

bb16
  0: _0 = move (_32.0: usize)
    SourceInfo(src/pretty/exponent.rs:43:9-43:26)
  1: StorageDead(_30)
    SourceInfo(src/pretty/exponent.rs:43:25-43:26)
  2: StorageDead(_19)
    SourceInfo(src/pretty/exponent.rs:44:5-44:6)
  Terminator {
      source_info: SourceInfo(src/pretty/exponent.rs:40:5-47:6)
      kind: goto -> bb20
  }
  preds [bb15]
  succs [bb20]

bb17
  0: StorageDead(_18)
    SourceInfo(src/pretty/exponent.rs:40:14-40:15)
  1: StorageLive(_33)
    SourceInfo(src/pretty/exponent.rs:45:26-45:33)
  2: StorageLive(_34)
    SourceInfo(src/pretty/exponent.rs:45:26-45:27)
  3: _34 = _1
    SourceInfo(src/pretty/exponent.rs:45:26-45:27)
  4: _33 = move _34 as u8 (IntToInt)
    SourceInfo(src/pretty/exponent.rs:45:26-45:33)
  5: StorageDead(_34)
    SourceInfo(src/pretty/exponent.rs:45:32-45:33)
  6: _35 = AddWithOverflow(const 48_u8, _33)
    SourceInfo(src/pretty/exponent.rs:45:19-45:33)
  Terminator {
      source_info: SourceInfo(src/pretty/exponent.rs:45:19-45:33)
      kind: assert(!move (_35.1: bool), "attempt to compute `{} + {}`, which would overflow", const 48_u8, move _33) -> [success: bb18, unwind: bb21]
  }
  preds [bb10]
  succs [bb18, bb21]

bb18
  0: (*_2) = move (_35.0: u8)
    SourceInfo(src/pretty/exponent.rs:45:9-45:33)
  1: StorageDead(_33)
    SourceInfo(src/pretty/exponent.rs:45:32-45:33)
  2: StorageLive(_36)
    SourceInfo(src/pretty/exponent.rs:46:9-46:22)
  3: StorageLive(_37)
    SourceInfo(src/pretty/exponent.rs:46:9-46:13)
  4: _37 = _3
    SourceInfo(src/pretty/exponent.rs:46:9-46:13)
  5: _36 = move _37 as usize (IntToInt)
    SourceInfo(src/pretty/exponent.rs:46:9-46:22)
  6: StorageDead(_37)
    SourceInfo(src/pretty/exponent.rs:46:21-46:22)
  7: _38 = AddWithOverflow(_36, const 1_usize)
    SourceInfo(src/pretty/exponent.rs:46:9-46:26)
  Terminator {
      source_info: SourceInfo(src/pretty/exponent.rs:46:9-46:26)
      kind: assert(!move (_38.1: bool), "attempt to compute `{} + {}`, which would overflow", move _36, const 1_usize) -> [success: bb19, unwind: bb21]
  }
  preds [bb17]
  succs [bb19, bb21]

bb19
  0: _0 = move (_38.0: usize)
    SourceInfo(src/pretty/exponent.rs:46:9-46:26)
  1: StorageDead(_36)
    SourceInfo(src/pretty/exponent.rs:46:25-46:26)
  Terminator {
      source_info: SourceInfo(src/pretty/exponent.rs:40:5-47:6)
      kind: goto -> bb20
  }
  preds [bb18]
  succs [bb20]

bb20
  0: StorageDead(_17)
    SourceInfo(src/pretty/exponent.rs:47:5-47:6)
  1: StorageDead(_3)
    SourceInfo(src/pretty/exponent.rs:48:1-48:2)
  Terminator {
      source_info: SourceInfo(src/pretty/exponent.rs:48:2-48:2)
      kind: return
  }
  preds [bb16, bb19]
  succs []

bb21
  Terminator {
      source_info: SourceInfo(src/pretty/exponent.rs:31:1-48:2)
      kind: resume
  }
  preds [bb1, bb2, bb8, bb11, bb12, bb13, bb14, bb15, bb17, bb18]
  succs []

