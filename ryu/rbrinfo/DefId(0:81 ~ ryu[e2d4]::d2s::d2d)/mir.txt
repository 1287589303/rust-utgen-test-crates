bb0
  0: StorageLive(_5)
    SourceInfo(src/d2s.rs:92:20-103:6)
  1: StorageLive(_6)
    SourceInfo(src/d2s.rs:92:23-92:41)
  2: StorageLive(_7)
    SourceInfo(src/d2s.rs:92:23-92:36)
  3: _7 = _2
    SourceInfo(src/d2s.rs:92:23-92:36)
  4: _6 = Eq(move _7, const 0_u32)
    SourceInfo(src/d2s.rs:92:23-92:41)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:92:23-92:41)
      kind: switchInt(move _6) -> [0: bb5, otherwise: bb1]
  }
  preds []
  succs [bb1, bb5]

bb1
  0: StorageDead(_7)
    SourceInfo(src/d2s.rs:92:40-92:41)
  1: StorageLive(_8)
    SourceInfo(src/d2s.rs:95:13-95:62)
  2: StorageLive(_9)
    SourceInfo(src/d2s.rs:95:13-95:58)
  3: StorageLive(_10)
    SourceInfo(src/d2s.rs:95:13-95:28)
  4: _11 = SubWithOverflow(const 1_i32, const d2s::DOUBLE_BIAS)
    SourceInfo(src/d2s.rs:95:13-95:28)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:95:13-95:28)
      kind: assert(!move (_11.1: bool), "attempt to compute `{} - {}`, which would overflow", const 1_i32, const d2s::DOUBLE_BIAS) -> [success: bb2, unwind: bb161]
  }
  preds [bb0]
  succs [bb2, bb161]

bb2
  0: _10 = move (_11.0: i32)
    SourceInfo(src/d2s.rs:95:13-95:28)
  1: StorageLive(_12)
    SourceInfo(src/d2s.rs:95:31-95:58)
  2: _12 = const d2s::DOUBLE_MANTISSA_BITS as i32 (IntToInt)
    SourceInfo(src/d2s.rs:95:31-95:58)
  3: _13 = SubWithOverflow(_10, _12)
    SourceInfo(src/d2s.rs:95:13-95:58)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:95:13-95:58)
      kind: assert(!move (_13.1: bool), "attempt to compute `{} - {}`, which would overflow", move _10, move _12) -> [success: bb3, unwind: bb161]
  }
  preds [bb1]
  succs [bb3, bb161]

bb3
  0: _9 = move (_13.0: i32)
    SourceInfo(src/d2s.rs:95:13-95:58)
  1: StorageDead(_12)
    SourceInfo(src/d2s.rs:95:57-95:58)
  2: StorageDead(_10)
    SourceInfo(src/d2s.rs:95:57-95:58)
  3: _14 = SubWithOverflow(_9, const 2_i32)
    SourceInfo(src/d2s.rs:95:13-95:62)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:95:13-95:62)
      kind: assert(!move (_14.1: bool), "attempt to compute `{} - {}`, which would overflow", move _9, const 2_i32) -> [success: bb4, unwind: bb161]
  }
  preds [bb2]
  succs [bb4, bb161]

bb4
  0: _8 = move (_14.0: i32)
    SourceInfo(src/d2s.rs:95:13-95:62)
  1: StorageDead(_9)
    SourceInfo(src/d2s.rs:95:61-95:62)
  2: StorageLive(_15)
    SourceInfo(src/d2s.rs:96:13-96:26)
  3: _15 = _1
    SourceInfo(src/d2s.rs:96:13-96:26)
  4: _5 = (move _8, move _15)
    SourceInfo(src/d2s.rs:93:9-97:10)
  5: StorageDead(_15)
    SourceInfo(src/d2s.rs:97:9-97:10)
  6: StorageDead(_8)
    SourceInfo(src/d2s.rs:97:9-97:10)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:92:20-103:6)
      kind: goto -> bb10
  }
  preds [bb3]
  succs [bb10]

bb5
  0: StorageDead(_7)
    SourceInfo(src/d2s.rs:92:40-92:41)
  1: StorageLive(_16)
    SourceInfo(src/d2s.rs:100:13-100:81)
  2: StorageLive(_17)
    SourceInfo(src/d2s.rs:100:13-100:77)
  3: StorageLive(_18)
    SourceInfo(src/d2s.rs:100:13-100:47)
  4: StorageLive(_19)
    SourceInfo(src/d2s.rs:100:13-100:33)
  5: StorageLive(_20)
    SourceInfo(src/d2s.rs:100:13-100:26)
  6: _20 = _2
    SourceInfo(src/d2s.rs:100:13-100:26)
  7: _19 = move _20 as i32 (IntToInt)
    SourceInfo(src/d2s.rs:100:13-100:33)
  8: StorageDead(_20)
    SourceInfo(src/d2s.rs:100:32-100:33)
  9: _21 = SubWithOverflow(_19, const d2s::DOUBLE_BIAS)
    SourceInfo(src/d2s.rs:100:13-100:47)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:100:13-100:47)
      kind: assert(!move (_21.1: bool), "attempt to compute `{} - {}`, which would overflow", move _19, const d2s::DOUBLE_BIAS) -> [success: bb6, unwind: bb161]
  }
  preds [bb0]
  succs [bb6, bb161]

bb6
  0: _18 = move (_21.0: i32)
    SourceInfo(src/d2s.rs:100:13-100:47)
  1: StorageDead(_19)
    SourceInfo(src/d2s.rs:100:46-100:47)
  2: StorageLive(_22)
    SourceInfo(src/d2s.rs:100:50-100:77)
  3: _22 = const d2s::DOUBLE_MANTISSA_BITS as i32 (IntToInt)
    SourceInfo(src/d2s.rs:100:50-100:77)
  4: _23 = SubWithOverflow(_18, _22)
    SourceInfo(src/d2s.rs:100:13-100:77)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:100:13-100:77)
      kind: assert(!move (_23.1: bool), "attempt to compute `{} - {}`, which would overflow", move _18, move _22) -> [success: bb7, unwind: bb161]
  }
  preds [bb5]
  succs [bb7, bb161]

bb7
  0: _17 = move (_23.0: i32)
    SourceInfo(src/d2s.rs:100:13-100:77)
  1: StorageDead(_22)
    SourceInfo(src/d2s.rs:100:76-100:77)
  2: StorageDead(_18)
    SourceInfo(src/d2s.rs:100:76-100:77)
  3: _24 = SubWithOverflow(_17, const 2_i32)
    SourceInfo(src/d2s.rs:100:13-100:81)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:100:13-100:81)
      kind: assert(!move (_24.1: bool), "attempt to compute `{} - {}`, which would overflow", move _17, const 2_i32) -> [success: bb8, unwind: bb161]
  }
  preds [bb6]
  succs [bb8, bb161]

bb8
  0: _16 = move (_24.0: i32)
    SourceInfo(src/d2s.rs:100:13-100:81)
  1: StorageDead(_17)
    SourceInfo(src/d2s.rs:100:80-100:81)
  2: StorageLive(_25)
    SourceInfo(src/d2s.rs:101:13-101:59)
  3: StorageLive(_26)
    SourceInfo(src/d2s.rs:101:13-101:43)
  4: _27 = Lt(const d2s::DOUBLE_MANTISSA_BITS, const 64_u32)
    SourceInfo(src/d2s.rs:101:13-101:43)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:101:13-101:43)
      kind: assert(move _27, "attempt to shift left by `{}`, which would overflow", const d2s::DOUBLE_MANTISSA_BITS) -> [success: bb9, unwind: bb161]
  }
  preds [bb7]
  succs [bb9, bb161]

bb9
  0: _26 = Shl(const 1_u64, const d2s::DOUBLE_MANTISSA_BITS)
    SourceInfo(src/d2s.rs:101:13-101:43)
  1: StorageLive(_28)
    SourceInfo(src/d2s.rs:101:46-101:59)
  2: _28 = _1
    SourceInfo(src/d2s.rs:101:46-101:59)
  3: _25 = BitOr(move _26, move _28)
    SourceInfo(src/d2s.rs:101:13-101:59)
  4: StorageDead(_28)
    SourceInfo(src/d2s.rs:101:58-101:59)
  5: StorageDead(_26)
    SourceInfo(src/d2s.rs:101:58-101:59)
  6: _5 = (move _16, move _25)
    SourceInfo(src/d2s.rs:99:9-102:10)
  7: StorageDead(_25)
    SourceInfo(src/d2s.rs:102:9-102:10)
  8: StorageDead(_16)
    SourceInfo(src/d2s.rs:102:9-102:10)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:92:20-103:6)
      kind: goto -> bb10
  }
  preds [bb8]
  succs [bb10]

bb10
  0: StorageDead(_6)
    SourceInfo(src/d2s.rs:103:5-103:6)
  1: PlaceMention(_5)
    SourceInfo(src/d2s.rs:92:20-103:6)
  2: StorageLive(_3)
    SourceInfo(src/d2s.rs:92:10-92:12)
  3: _3 = (_5.0: i32)
    SourceInfo(src/d2s.rs:92:10-92:12)
  4: StorageLive(_4)
    SourceInfo(src/d2s.rs:92:14-92:16)
  5: _4 = (_5.1: u64)
    SourceInfo(src/d2s.rs:92:14-92:16)
  6: StorageDead(_5)
    SourceInfo(src/d2s.rs:103:6-103:7)
  7: StorageLive(_29)
    SourceInfo(src/d2s.rs:104:9-104:13)
  8: StorageLive(_30)
    SourceInfo(src/d2s.rs:104:16-104:24)
  9: StorageLive(_31)
    SourceInfo(src/d2s.rs:104:17-104:19)
  10: _31 = _4
    SourceInfo(src/d2s.rs:104:17-104:19)
  11: _30 = BitAnd(move _31, const 1_u64)
    SourceInfo(src/d2s.rs:104:16-104:24)
  12: StorageDead(_31)
    SourceInfo(src/d2s.rs:104:23-104:24)
  13: _29 = Eq(move _30, const 0_u64)
    SourceInfo(src/d2s.rs:104:16-104:29)
  14: StorageDead(_30)
    SourceInfo(src/d2s.rs:104:28-104:29)
  15: FakeRead(ForLet(None), _29)
    SourceInfo(src/d2s.rs:104:9-104:13)
  16: StorageLive(_32)
    SourceInfo(src/d2s.rs:105:9-105:22)
  17: _32 = _29
    SourceInfo(src/d2s.rs:105:25-105:29)
  18: FakeRead(ForLet(None), _32)
    SourceInfo(src/d2s.rs:105:9-105:22)
  19: StorageLive(_33)
    SourceInfo(src/d2s.rs:108:9-108:11)
  20: StorageLive(_34)
    SourceInfo(src/d2s.rs:108:18-108:20)
  21: _34 = _4
    SourceInfo(src/d2s.rs:108:18-108:20)
  22: _35 = MulWithOverflow(const 4_u64, _34)
    SourceInfo(src/d2s.rs:108:14-108:20)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:108:14-108:20)
      kind: assert(!move (_35.1: bool), "attempt to compute `{} * {}`, which would overflow", const 4_u64, move _34) -> [success: bb11, unwind: bb161]
  }
  preds [bb4, bb9]
  succs [bb11, bb161]

bb11
  0: _33 = move (_35.0: u64)
    SourceInfo(src/d2s.rs:108:14-108:20)
  1: StorageDead(_34)
    SourceInfo(src/d2s.rs:108:19-108:20)
  2: FakeRead(ForLet(None), _33)
    SourceInfo(src/d2s.rs:108:9-108:11)
  3: StorageLive(_36)
    SourceInfo(src/d2s.rs:110:9-110:17)
  4: StorageLive(_37)
    SourceInfo(src/d2s.rs:110:20-110:62)
  5: StorageLive(_38)
    SourceInfo(src/d2s.rs:110:21-110:39)
  6: StorageLive(_39)
    SourceInfo(src/d2s.rs:110:21-110:34)
  7: _39 = _1
    SourceInfo(src/d2s.rs:110:21-110:34)
  8: _38 = Ne(move _39, const 0_u64)
    SourceInfo(src/d2s.rs:110:21-110:39)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:110:21-110:39)
      kind: switchInt(move _38) -> [0: bb13, otherwise: bb12]
  }
  preds [bb10]
  succs [bb12, bb13]

bb12
  0: StorageDead(_39)
    SourceInfo(src/d2s.rs:110:38-110:39)
  1: _37 = const true
    SourceInfo(src/d2s.rs:110:20-110:62)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:110:20-110:62)
      kind: goto -> bb14
  }
  preds [bb11]
  succs [bb14]

bb13
  0: StorageDead(_39)
    SourceInfo(src/d2s.rs:110:38-110:39)
  1: StorageLive(_40)
    SourceInfo(src/d2s.rs:110:43-110:56)
  2: _40 = _2
    SourceInfo(src/d2s.rs:110:43-110:56)
  3: _37 = Le(move _40, const 1_u32)
    SourceInfo(src/d2s.rs:110:43-110:61)
  4: StorageDead(_40)
    SourceInfo(src/d2s.rs:110:60-110:61)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:110:20-110:62)
      kind: goto -> bb14
  }
  preds [bb11]
  succs [bb14]

bb14
  0: StorageDead(_38)
    SourceInfo(src/d2s.rs:110:61-110:62)
  1: _36 = move _37 as u32 (IntToInt)
    SourceInfo(src/d2s.rs:110:20-110:69)
  2: StorageDead(_37)
    SourceInfo(src/d2s.rs:110:68-110:69)
  3: FakeRead(ForLet(None), _36)
    SourceInfo(src/d2s.rs:110:9-110:17)
  4: StorageLive(_41)
    SourceInfo(src/d2s.rs:116:9-116:15)
  5: StorageLive(_42)
    SourceInfo(src/d2s.rs:117:9-117:15)
  6: StorageLive(_43)
    SourceInfo(src/d2s.rs:118:9-118:15)
  7: StorageLive(_44)
    SourceInfo(src/d2s.rs:119:9-119:22)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:119:43-119:64)
      kind: _44 = core::mem::MaybeUninit::<u64>::uninit() -> [return: bb15, unwind: bb161]
  }
  preds [bb12, bb13]
  succs [bb15, bb161]

bb15
  0: FakeRead(ForLet(None), _44)
    SourceInfo(src/d2s.rs:119:9-119:22)
  1: AscribeUserType(_44, o, UserTypeProjection { base: UserType(8), projs: [] })
    SourceInfo(src/d2s.rs:119:24-119:40)
  2: StorageLive(_45)
    SourceInfo(src/d2s.rs:120:9-120:22)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:120:43-120:64)
      kind: _45 = core::mem::MaybeUninit::<u64>::uninit() -> [return: bb16, unwind: bb161]
  }
  preds [bb14]
  succs [bb16, bb161]

bb16
  0: FakeRead(ForLet(None), _45)
    SourceInfo(src/d2s.rs:120:9-120:22)
  1: AscribeUserType(_45, o, UserTypeProjection { base: UserType(11), projs: [] })
    SourceInfo(src/d2s.rs:120:24-120:40)
  2: StorageLive(_46)
    SourceInfo(src/d2s.rs:121:9-121:12)
  3: StorageLive(_47)
    SourceInfo(src/d2s.rs:122:9-122:33)
  4: _47 = const false
    SourceInfo(src/d2s.rs:122:36-122:41)
  5: FakeRead(ForLet(None), _47)
    SourceInfo(src/d2s.rs:122:9-122:33)
  6: StorageLive(_48)
    SourceInfo(src/d2s.rs:123:9-123:33)
  7: _48 = const false
    SourceInfo(src/d2s.rs:123:36-123:41)
  8: FakeRead(ForLet(None), _48)
    SourceInfo(src/d2s.rs:123:9-123:33)
  9: StorageLive(_49)
    SourceInfo(src/d2s.rs:124:5-210:6)
  10: StorageLive(_50)
    SourceInfo(src/d2s.rs:124:8-124:15)
  11: StorageLive(_51)
    SourceInfo(src/d2s.rs:124:8-124:10)
  12: _51 = _3
    SourceInfo(src/d2s.rs:124:8-124:10)
  13: _50 = Ge(move _51, const 0_i32)
    SourceInfo(src/d2s.rs:124:8-124:15)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:124:8-124:15)
      kind: switchInt(move _50) -> [0: bb57, otherwise: bb17]
  }
  preds [bb15]
  succs [bb17, bb57]

bb17
  0: StorageDead(_51)
    SourceInfo(src/d2s.rs:124:14-124:15)
  1: StorageLive(_52)
    SourceInfo(src/d2s.rs:127:13-127:14)
  2: StorageLive(_53)
    SourceInfo(src/d2s.rs:127:17-127:31)
  3: StorageLive(_54)
    SourceInfo(src/d2s.rs:127:28-127:30)
  4: _54 = _3
    SourceInfo(src/d2s.rs:127:28-127:30)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:127:17-127:31)
      kind: _53 = common::log10_pow2(move _54) -> [return: bb18, unwind: bb161]
  }
  preds [bb16]
  succs [bb18, bb161]

bb18
  0: StorageDead(_54)
    SourceInfo(src/d2s.rs:127:30-127:31)
  1: StorageLive(_55)
    SourceInfo(src/d2s.rs:127:34-127:49)
  2: StorageLive(_56)
    SourceInfo(src/d2s.rs:127:34-127:42)
  3: StorageLive(_57)
    SourceInfo(src/d2s.rs:127:35-127:37)
  4: _57 = _3
    SourceInfo(src/d2s.rs:127:35-127:37)
  5: _56 = Gt(move _57, const 3_i32)
    SourceInfo(src/d2s.rs:127:34-127:42)
  6: StorageDead(_57)
    SourceInfo(src/d2s.rs:127:41-127:42)
  7: _55 = move _56 as u32 (IntToInt)
    SourceInfo(src/d2s.rs:127:34-127:49)
  8: StorageDead(_56)
    SourceInfo(src/d2s.rs:127:48-127:49)
  9: _58 = SubWithOverflow(_53, _55)
    SourceInfo(src/d2s.rs:127:17-127:49)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:127:17-127:49)
      kind: assert(!move (_58.1: bool), "attempt to compute `{} - {}`, which would overflow", move _53, move _55) -> [success: bb19, unwind: bb161]
  }
  preds [bb17]
  succs [bb19, bb161]

bb19
  0: _52 = move (_58.0: u32)
    SourceInfo(src/d2s.rs:127:17-127:49)
  1: StorageDead(_55)
    SourceInfo(src/d2s.rs:127:48-127:49)
  2: StorageDead(_53)
    SourceInfo(src/d2s.rs:127:48-127:49)
  3: FakeRead(ForLet(None), _52)
    SourceInfo(src/d2s.rs:127:13-127:14)
  4: StorageLive(_59)
    SourceInfo(src/d2s.rs:128:15-128:16)
  5: _59 = _52
    SourceInfo(src/d2s.rs:128:15-128:16)
  6: _46 = move _59 as i32 (IntToInt)
    SourceInfo(src/d2s.rs:128:9-128:23)
  7: StorageDead(_59)
    SourceInfo(src/d2s.rs:128:22-128:23)
  8: StorageLive(_60)
    SourceInfo(src/d2s.rs:129:13-129:14)
  9: StorageLive(_61)
    SourceInfo(src/d2s.rs:129:17-129:62)
  10: StorageLive(_62)
    SourceInfo(src/d2s.rs:129:44-129:62)
  11: StorageLive(_63)
    SourceInfo(src/d2s.rs:129:53-129:61)
  12: StorageLive(_64)
    SourceInfo(src/d2s.rs:129:53-129:54)
  13: _64 = _52
    SourceInfo(src/d2s.rs:129:53-129:54)
  14: _63 = move _64 as i32 (IntToInt)
    SourceInfo(src/d2s.rs:129:53-129:61)
  15: StorageDead(_64)
    SourceInfo(src/d2s.rs:129:60-129:61)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:129:44-129:62)
      kind: _62 = common::pow5bits(move _63) -> [return: bb20, unwind: bb161]
  }
  preds [bb18]
  succs [bb20, bb161]

bb20
  0: StorageDead(_63)
    SourceInfo(src/d2s.rs:129:61-129:62)
  1: _65 = AddWithOverflow(const d2s::DOUBLE_POW5_INV_BITCOUNT, _62)
    SourceInfo(src/d2s.rs:129:17-129:62)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:129:17-129:62)
      kind: assert(!move (_65.1: bool), "attempt to compute `{} + {}`, which would overflow", const d2s::DOUBLE_POW5_INV_BITCOUNT, move _62) -> [success: bb21, unwind: bb161]
  }
  preds [bb19]
  succs [bb21, bb161]

bb21
  0: _61 = move (_65.0: i32)
    SourceInfo(src/d2s.rs:129:17-129:62)
  1: StorageDead(_62)
    SourceInfo(src/d2s.rs:129:61-129:62)
  2: _66 = SubWithOverflow(_61, const 1_i32)
    SourceInfo(src/d2s.rs:129:17-129:66)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:129:17-129:66)
      kind: assert(!move (_66.1: bool), "attempt to compute `{} - {}`, which would overflow", move _61, const 1_i32) -> [success: bb22, unwind: bb161]
  }
  preds [bb20]
  succs [bb22, bb161]

bb22
  0: _60 = move (_66.0: i32)
    SourceInfo(src/d2s.rs:129:17-129:66)
  1: StorageDead(_61)
    SourceInfo(src/d2s.rs:129:65-129:66)
  2: FakeRead(ForLet(None), _60)
    SourceInfo(src/d2s.rs:129:13-129:14)
  3: StorageLive(_67)
    SourceInfo(src/d2s.rs:130:13-130:14)
  4: StorageLive(_68)
    SourceInfo(src/d2s.rs:130:17-130:31)
  5: StorageLive(_69)
    SourceInfo(src/d2s.rs:130:17-130:20)
  6: StorageLive(_70)
    SourceInfo(src/d2s.rs:130:18-130:20)
  7: _70 = _3
    SourceInfo(src/d2s.rs:130:18-130:20)
  8: _71 = Eq(_70, const i32::MIN)
    SourceInfo(src/d2s.rs:130:17-130:20)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:130:17-130:20)
      kind: assert(!move _71, "attempt to negate `{}`, which would overflow", _70) -> [success: bb23, unwind: bb161]
  }
  preds [bb21]
  succs [bb23, bb161]

bb23
  0: _69 = Neg(move _70)
    SourceInfo(src/d2s.rs:130:17-130:20)
  1: StorageDead(_70)
    SourceInfo(src/d2s.rs:130:19-130:20)
  2: StorageLive(_72)
    SourceInfo(src/d2s.rs:130:23-130:31)
  3: StorageLive(_73)
    SourceInfo(src/d2s.rs:130:23-130:24)
  4: _73 = _52
    SourceInfo(src/d2s.rs:130:23-130:24)
  5: _72 = move _73 as i32 (IntToInt)
    SourceInfo(src/d2s.rs:130:23-130:31)
  6: StorageDead(_73)
    SourceInfo(src/d2s.rs:130:30-130:31)
  7: _74 = AddWithOverflow(_69, _72)
    SourceInfo(src/d2s.rs:130:17-130:31)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:130:17-130:31)
      kind: assert(!move (_74.1: bool), "attempt to compute `{} + {}`, which would overflow", move _69, move _72) -> [success: bb24, unwind: bb161]
  }
  preds [bb22]
  succs [bb24, bb161]

bb24
  0: _68 = move (_74.0: i32)
    SourceInfo(src/d2s.rs:130:17-130:31)
  1: StorageDead(_72)
    SourceInfo(src/d2s.rs:130:30-130:31)
  2: StorageDead(_69)
    SourceInfo(src/d2s.rs:130:30-130:31)
  3: StorageLive(_75)
    SourceInfo(src/d2s.rs:130:34-130:35)
  4: _75 = _60
    SourceInfo(src/d2s.rs:130:34-130:35)
  5: _76 = AddWithOverflow(_68, _75)
    SourceInfo(src/d2s.rs:130:17-130:35)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:130:17-130:35)
      kind: assert(!move (_76.1: bool), "attempt to compute `{} + {}`, which would overflow", move _68, move _75) -> [success: bb25, unwind: bb161]
  }
  preds [bb23]
  succs [bb25, bb161]

bb25
  0: _67 = move (_76.0: i32)
    SourceInfo(src/d2s.rs:130:17-130:35)
  1: StorageDead(_75)
    SourceInfo(src/d2s.rs:130:34-130:35)
  2: StorageDead(_68)
    SourceInfo(src/d2s.rs:130:34-130:35)
  3: FakeRead(ForLet(None), _67)
    SourceInfo(src/d2s.rs:130:13-130:14)
  4: StorageLive(_77)
    SourceInfo(src/d2s.rs:131:14-146:10)
  5: StorageLive(_78)
    SourceInfo(src/d2s.rs:133:17-133:19)
  6: _78 = _4
    SourceInfo(src/d2s.rs:133:17-133:19)
  7: StorageLive(_79)
    SourceInfo(src/d2s.rs:137:17-140:18)
  8: StorageLive(_80)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
  9: StorageLive(_81)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
  10: _81 = const true
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
      kind: switchInt(move _81) -> [0: bb30, otherwise: bb26]
  }
  preds [bb24]
  succs [bb26, bb30]

bb26
  0: StorageLive(_82)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
  1: StorageLive(_83)
    SourceInfo(src/d2s.rs:138:35-138:73)
  2: StorageLive(_84)
    SourceInfo(src/d2s.rs:138:35-138:36)
  3: _84 = _52
    SourceInfo(src/d2s.rs:138:35-138:36)
  4: StorageLive(_85)
    SourceInfo(src/d2s.rs:138:39-138:73)
  5: StorageLive(_86)
    SourceInfo(src/d2s.rs:138:39-138:66)
  6: StorageLive(_87)
    SourceInfo(src/d2s.rs:138:39-138:60)
  7: StorageLive(_88)
    SourceInfo(src/d2s.rs:138:39-138:60)
  8: StorageLive(_89)
    SourceInfo(src/d2s.rs:138:39-138:60)
  9: _89 = const {alloc5: &[(u64, u64); 342]}
    SourceInfo(src/d2s.rs:138:39-138:60)
  10: _88 = &(*_89)
    SourceInfo(src/d2s.rs:138:39-138:60)
  11: _87 = move _88 as &[(u64, u64)] (PointerCoercion(Unsize))
    SourceInfo(src/d2s.rs:138:39-138:60)
  12: StorageDead(_88)
    SourceInfo(src/d2s.rs:138:59-138:60)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:138:39-138:66)
      kind: _86 = core::slice::<impl [(u64, u64)]>::len(move _87) -> [return: bb27, unwind: bb161]
  }
  preds [bb25]
  succs [bb27, bb161]

bb27
  0: StorageDead(_87)
    SourceInfo(src/d2s.rs:138:65-138:66)
  1: _85 = move _86 as u32 (IntToInt)
    SourceInfo(src/d2s.rs:138:39-138:73)
  2: StorageDead(_86)
    SourceInfo(src/d2s.rs:138:72-138:73)
  3: _83 = Lt(move _84, move _85)
    SourceInfo(src/d2s.rs:138:35-138:73)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:138:35-138:73)
      kind: switchInt(move _83) -> [0: bb29, otherwise: bb28]
  }
  preds [bb26]
  succs [bb28, bb29]

bb28
  0: StorageDead(_85)
    SourceInfo(src/d2s.rs:138:72-138:73)
  1: StorageDead(_84)
    SourceInfo(src/d2s.rs:138:72-138:73)
  2: StorageDead(_89)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:37-317:38)
  3: _82 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:38-317:38)
  4: StorageDead(_83)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:37-317:38)
  5: StorageDead(_82)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:37-317:38)
  6: _80 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:43-318:10)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
      kind: goto -> bb31
  }
  preds [bb27]
  succs [bb31]

bb29
  0: StorageDead(_85)
    SourceInfo(src/d2s.rs:138:72-138:73)
  1: StorageDead(_84)
    SourceInfo(src/d2s.rs:138:72-138:73)
  2: StorageDead(_89)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:37-317:38)
  3: StorageLive(_90)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
      kind: _90 = core::panicking::panic(const "assertion failed: q < DOUBLE_POW5_INV_SPLIT.len() as u32") -> bb161
  }
  preds [bb27]
  succs [bb161]

bb30
  0: _80 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:10-318:10)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
      kind: goto -> bb31
  }
  preds [bb25]
  succs [bb31]

bb31
  0: StorageDead(_81)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:9-318:10)
  1: StorageDead(_80)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:9-318:10)
  2: StorageLive(_91)
    SourceInfo(src/d2s.rs:139:21-139:68)
  3: StorageLive(_92)
    SourceInfo(src/d2s.rs:139:21-139:42)
  4: StorageLive(_93)
    SourceInfo(src/d2s.rs:139:21-139:42)
  5: StorageLive(_94)
    SourceInfo(src/d2s.rs:139:21-139:42)
  6: _94 = const {alloc5: &[(u64, u64); 342]}
    SourceInfo(src/d2s.rs:139:21-139:42)
  7: _93 = &(*_94)
    SourceInfo(src/d2s.rs:139:21-139:42)
  8: _92 = move _93 as &[(u64, u64)] (PointerCoercion(Unsize))
    SourceInfo(src/d2s.rs:139:21-139:42)
  9: StorageDead(_93)
    SourceInfo(src/d2s.rs:139:41-139:42)
  10: StorageLive(_95)
    SourceInfo(src/d2s.rs:139:57-139:67)
  11: StorageLive(_96)
    SourceInfo(src/d2s.rs:139:57-139:58)
  12: _96 = _52
    SourceInfo(src/d2s.rs:139:57-139:58)
  13: _95 = move _96 as usize (IntToInt)
    SourceInfo(src/d2s.rs:139:57-139:67)
  14: StorageDead(_96)
    SourceInfo(src/d2s.rs:139:66-139:67)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:139:21-139:68)
      kind: _91 = core::slice::<impl [(u64, u64)]>::get_unchecked::<usize>(move _92, move _95) -> [return: bb32, unwind: bb161]
  }
  preds [bb28, bb30]
  succs [bb32, bb161]

bb32
  0: _79 = &(*_91)
    SourceInfo(src/d2s.rs:139:21-139:68)
  1: StorageDead(_95)
    SourceInfo(src/d2s.rs:139:67-139:68)
  2: StorageDead(_92)
    SourceInfo(src/d2s.rs:139:67-139:68)
  3: StorageLive(_97)
    SourceInfo(src/d2s.rs:141:17-141:25)
  4: StorageLive(_98)
    SourceInfo(src/d2s.rs:141:17-141:18)
  5: _98 = _67
    SourceInfo(src/d2s.rs:141:17-141:18)
  6: _97 = move _98 as u32 (IntToInt)
    SourceInfo(src/d2s.rs:141:17-141:25)
  7: StorageDead(_98)
    SourceInfo(src/d2s.rs:141:24-141:25)
  8: StorageLive(_99)
    SourceInfo(src/d2s.rs:142:17-142:39)
  9: StorageLive(_100)
    SourceInfo(src/d2s.rs:142:17-142:26)
  10: _100 = &mut _44
    SourceInfo(src/d2s.rs:142:17-142:26)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:142:17-142:39)
      kind: _99 = core::mem::MaybeUninit::<u64>::as_mut_ptr(move _100) -> [return: bb33, unwind: bb161]
  }
  preds [bb31]
  succs [bb33, bb161]

bb33
  0: StorageDead(_100)
    SourceInfo(src/d2s.rs:142:38-142:39)
  1: StorageLive(_101)
    SourceInfo(src/d2s.rs:143:17-143:39)
  2: StorageLive(_102)
    SourceInfo(src/d2s.rs:143:17-143:26)
  3: _102 = &mut _45
    SourceInfo(src/d2s.rs:143:17-143:26)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:143:17-143:39)
      kind: _101 = core::mem::MaybeUninit::<u64>::as_mut_ptr(move _102) -> [return: bb34, unwind: bb161]
  }
  preds [bb32]
  succs [bb34, bb161]

bb34
  0: StorageDead(_102)
    SourceInfo(src/d2s.rs:143:38-143:39)
  1: StorageLive(_103)
    SourceInfo(src/d2s.rs:144:17-144:25)
  2: _103 = _36
    SourceInfo(src/d2s.rs:144:17-144:25)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:132:13-145:14)
      kind: _77 = d2s_intrinsics::mul_shift_all_64(move _78, move _79, move _97, move _99, move _101, move _103) -> [return: bb35, unwind: bb161]
  }
  preds [bb33]
  succs [bb35, bb161]

bb35
  0: StorageDead(_103)
    SourceInfo(src/d2s.rs:145:13-145:14)
  1: StorageDead(_101)
    SourceInfo(src/d2s.rs:145:13-145:14)
  2: StorageDead(_99)
    SourceInfo(src/d2s.rs:145:13-145:14)
  3: StorageDead(_97)
    SourceInfo(src/d2s.rs:145:13-145:14)
  4: StorageDead(_79)
    SourceInfo(src/d2s.rs:145:13-145:14)
  5: StorageDead(_78)
    SourceInfo(src/d2s.rs:145:13-145:14)
  6: _41 = move _77
    SourceInfo(src/d2s.rs:131:9-146:10)
  7: StorageDead(_77)
    SourceInfo(src/d2s.rs:146:9-146:10)
  8: StorageDead(_94)
    SourceInfo(src/d2s.rs:146:10-146:11)
  9: StorageDead(_91)
    SourceInfo(src/d2s.rs:146:10-146:11)
  10: StorageLive(_104)
    SourceInfo(src/d2s.rs:147:14-147:48)
  11: StorageLive(_105)
    SourceInfo(src/d2s.rs:147:23-147:32)
  12: _105 = _44
    SourceInfo(src/d2s.rs:147:23-147:32)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:147:23-147:46)
      kind: _104 = core::mem::MaybeUninit::<u64>::assume_init(move _105) -> [return: bb36, unwind: bb161]
  }
  preds [bb34]
  succs [bb36, bb161]

bb36
  0: StorageDead(_105)
    SourceInfo(src/d2s.rs:147:45-147:46)
  1: _42 = move _104
    SourceInfo(src/d2s.rs:147:9-147:48)
  2: StorageDead(_104)
    SourceInfo(src/d2s.rs:147:47-147:48)
  3: StorageLive(_106)
    SourceInfo(src/d2s.rs:148:14-148:48)
  4: StorageLive(_107)
    SourceInfo(src/d2s.rs:148:23-148:32)
  5: _107 = _45
    SourceInfo(src/d2s.rs:148:23-148:32)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:148:23-148:46)
      kind: _106 = core::mem::MaybeUninit::<u64>::assume_init(move _107) -> [return: bb37, unwind: bb161]
  }
  preds [bb35]
  succs [bb37, bb161]

bb37
  0: StorageDead(_107)
    SourceInfo(src/d2s.rs:148:45-148:46)
  1: _43 = move _106
    SourceInfo(src/d2s.rs:148:9-148:48)
  2: StorageDead(_106)
    SourceInfo(src/d2s.rs:148:47-148:48)
  3: StorageLive(_108)
    SourceInfo(src/d2s.rs:149:12-149:19)
  4: StorageLive(_109)
    SourceInfo(src/d2s.rs:149:12-149:13)
  5: _109 = _52
    SourceInfo(src/d2s.rs:149:12-149:13)
  6: _108 = Le(move _109, const 21_u32)
    SourceInfo(src/d2s.rs:149:12-149:19)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:149:12-149:19)
      kind: switchInt(move _108) -> [0: bb55, otherwise: bb38]
  }
  preds [bb36]
  succs [bb38, bb55]

bb38
  0: StorageDead(_109)
    SourceInfo(src/d2s.rs:149:18-149:19)
  1: StorageLive(_110)
    SourceInfo(src/d2s.rs:153:17-153:24)
  2: StorageLive(_111)
    SourceInfo(src/d2s.rs:153:27-153:38)
  3: StorageLive(_112)
    SourceInfo(src/d2s.rs:153:28-153:30)
  4: _112 = _33
    SourceInfo(src/d2s.rs:153:28-153:30)
  5: _111 = move _112 as u32 (IntToInt)
    SourceInfo(src/d2s.rs:153:27-153:38)
  6: StorageDead(_112)
    SourceInfo(src/d2s.rs:153:37-153:38)
  7: StorageLive(_113)
    SourceInfo(src/d2s.rs:153:52-153:86)
  8: StorageLive(_114)
    SourceInfo(src/d2s.rs:153:70-153:85)
  9: StorageLive(_115)
    SourceInfo(src/d2s.rs:153:70-153:78)
  10: StorageLive(_116)
    SourceInfo(src/d2s.rs:153:75-153:77)
  11: _116 = _33
    SourceInfo(src/d2s.rs:153:75-153:77)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:153:70-153:78)
      kind: _115 = d2s_intrinsics::div5(move _116) -> [return: bb39, unwind: bb161]
  }
  preds [bb37]
  succs [bb39, bb161]

bb39
  0: StorageDead(_116)
    SourceInfo(src/d2s.rs:153:77-153:78)
  1: _114 = move _115 as u32 (IntToInt)
    SourceInfo(src/d2s.rs:153:70-153:85)
  2: StorageDead(_115)
    SourceInfo(src/d2s.rs:153:84-153:85)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:153:52-153:86)
      kind: _113 = core::num::<impl u32>::wrapping_mul(const 5_u32, move _114) -> [return: bb40, unwind: bb161]
  }
  preds [bb38]
  succs [bb40, bb161]

bb40
  0: StorageDead(_114)
    SourceInfo(src/d2s.rs:153:85-153:86)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:153:27-153:87)
      kind: _110 = core::num::<impl u32>::wrapping_sub(move _111, move _113) -> [return: bb41, unwind: bb161]
  }
  preds [bb39]
  succs [bb41, bb161]

bb41
  0: StorageDead(_113)
    SourceInfo(src/d2s.rs:153:86-153:87)
  1: StorageDead(_111)
    SourceInfo(src/d2s.rs:153:86-153:87)
  2: FakeRead(ForLet(None), _110)
    SourceInfo(src/d2s.rs:153:17-153:24)
  3: StorageLive(_117)
    SourceInfo(src/d2s.rs:154:16-154:28)
  4: StorageLive(_118)
    SourceInfo(src/d2s.rs:154:16-154:23)
  5: _118 = _110
    SourceInfo(src/d2s.rs:154:16-154:23)
  6: _117 = Eq(move _118, const 0_u32)
    SourceInfo(src/d2s.rs:154:16-154:28)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:154:16-154:28)
      kind: switchInt(move _117) -> [0: bb44, otherwise: bb42]
  }
  preds [bb40]
  succs [bb42, bb44]

bb42
  0: StorageDead(_118)
    SourceInfo(src/d2s.rs:154:27-154:28)
  1: StorageLive(_119)
    SourceInfo(src/d2s.rs:155:40-155:69)
  2: StorageLive(_120)
    SourceInfo(src/d2s.rs:155:63-155:65)
  3: _120 = _33
    SourceInfo(src/d2s.rs:155:63-155:65)
  4: StorageLive(_121)
    SourceInfo(src/d2s.rs:155:67-155:68)
  5: _121 = _52
    SourceInfo(src/d2s.rs:155:67-155:68)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:155:40-155:69)
      kind: _119 = d2s_intrinsics::multiple_of_power_of_5(move _120, move _121) -> [return: bb43, unwind: bb161]
  }
  preds [bb41]
  succs [bb43, bb161]

bb43
  0: StorageDead(_121)
    SourceInfo(src/d2s.rs:155:68-155:69)
  1: StorageDead(_120)
    SourceInfo(src/d2s.rs:155:68-155:69)
  2: _48 = move _119
    SourceInfo(src/d2s.rs:155:17-155:69)
  3: StorageDead(_119)
    SourceInfo(src/d2s.rs:155:68-155:69)
  4: _49 = const ()
    SourceInfo(src/d2s.rs:154:29-156:14)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:154:13-164:14)
      kind: goto -> bb54
  }
  preds [bb42]
  succs [bb54]

bb44
  0: StorageDead(_118)
    SourceInfo(src/d2s.rs:154:27-154:28)
  1: StorageLive(_122)
    SourceInfo(src/d2s.rs:156:23-156:36)
  2: _122 = _32
    SourceInfo(src/d2s.rs:156:23-156:36)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:156:23-156:36)
      kind: switchInt(move _122) -> [0: bb49, otherwise: bb45]
  }
  preds [bb41]
  succs [bb45, bb49]

bb45
  0: StorageLive(_123)
    SourceInfo(src/d2s.rs:160:40-160:91)
  1: StorageLive(_124)
    SourceInfo(src/d2s.rs:160:63-160:87)
  2: StorageLive(_125)
    SourceInfo(src/d2s.rs:160:63-160:69)
  3: StorageLive(_126)
    SourceInfo(src/d2s.rs:160:63-160:65)
  4: _126 = _33
    SourceInfo(src/d2s.rs:160:63-160:65)
  5: _127 = SubWithOverflow(_126, const 1_u64)
    SourceInfo(src/d2s.rs:160:63-160:69)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:160:63-160:69)
      kind: assert(!move (_127.1: bool), "attempt to compute `{} - {}`, which would overflow", move _126, const 1_u64) -> [success: bb46, unwind: bb161]
  }
  preds [bb44]
  succs [bb46, bb161]

bb46
  0: _125 = move (_127.0: u64)
    SourceInfo(src/d2s.rs:160:63-160:69)
  1: StorageDead(_126)
    SourceInfo(src/d2s.rs:160:68-160:69)
  2: StorageLive(_128)
    SourceInfo(src/d2s.rs:160:72-160:87)
  3: StorageLive(_129)
    SourceInfo(src/d2s.rs:160:72-160:80)
  4: _129 = _36
    SourceInfo(src/d2s.rs:160:72-160:80)
  5: _128 = move _129 as u64 (IntToInt)
    SourceInfo(src/d2s.rs:160:72-160:87)
  6: StorageDead(_129)
    SourceInfo(src/d2s.rs:160:86-160:87)
  7: _130 = SubWithOverflow(_125, _128)
    SourceInfo(src/d2s.rs:160:63-160:87)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:160:63-160:87)
      kind: assert(!move (_130.1: bool), "attempt to compute `{} - {}`, which would overflow", move _125, move _128) -> [success: bb47, unwind: bb161]
  }
  preds [bb45]
  succs [bb47, bb161]

bb47
  0: _124 = move (_130.0: u64)
    SourceInfo(src/d2s.rs:160:63-160:87)
  1: StorageDead(_128)
    SourceInfo(src/d2s.rs:160:86-160:87)
  2: StorageDead(_125)
    SourceInfo(src/d2s.rs:160:86-160:87)
  3: StorageLive(_131)
    SourceInfo(src/d2s.rs:160:89-160:90)
  4: _131 = _52
    SourceInfo(src/d2s.rs:160:89-160:90)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:160:40-160:91)
      kind: _123 = d2s_intrinsics::multiple_of_power_of_5(move _124, move _131) -> [return: bb48, unwind: bb161]
  }
  preds [bb46]
  succs [bb48, bb161]

bb48
  0: StorageDead(_131)
    SourceInfo(src/d2s.rs:160:90-160:91)
  1: StorageDead(_124)
    SourceInfo(src/d2s.rs:160:90-160:91)
  2: _47 = move _123
    SourceInfo(src/d2s.rs:160:17-160:91)
  3: StorageDead(_123)
    SourceInfo(src/d2s.rs:160:90-160:91)
  4: _49 = const ()
    SourceInfo(src/d2s.rs:156:37-161:14)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:156:20-164:14)
      kind: goto -> bb53
  }
  preds [bb47]
  succs [bb53]

bb49
  0: StorageLive(_132)
    SourceInfo(src/d2s.rs:163:23-163:63)
  1: StorageLive(_133)
    SourceInfo(src/d2s.rs:163:23-163:56)
  2: StorageLive(_134)
    SourceInfo(src/d2s.rs:163:46-163:52)
  3: StorageLive(_135)
    SourceInfo(src/d2s.rs:163:46-163:48)
  4: _135 = _33
    SourceInfo(src/d2s.rs:163:46-163:48)
  5: _136 = AddWithOverflow(_135, const 2_u64)
    SourceInfo(src/d2s.rs:163:46-163:52)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:163:46-163:52)
      kind: assert(!move (_136.1: bool), "attempt to compute `{} + {}`, which would overflow", move _135, const 2_u64) -> [success: bb50, unwind: bb161]
  }
  preds [bb44]
  succs [bb50, bb161]

bb50
  0: _134 = move (_136.0: u64)
    SourceInfo(src/d2s.rs:163:46-163:52)
  1: StorageDead(_135)
    SourceInfo(src/d2s.rs:163:51-163:52)
  2: StorageLive(_137)
    SourceInfo(src/d2s.rs:163:54-163:55)
  3: _137 = _52
    SourceInfo(src/d2s.rs:163:54-163:55)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:163:23-163:56)
      kind: _133 = d2s_intrinsics::multiple_of_power_of_5(move _134, move _137) -> [return: bb51, unwind: bb161]
  }
  preds [bb49]
  succs [bb51, bb161]

bb51
  0: StorageDead(_137)
    SourceInfo(src/d2s.rs:163:55-163:56)
  1: StorageDead(_134)
    SourceInfo(src/d2s.rs:163:55-163:56)
  2: _132 = move _133 as u64 (IntToInt)
    SourceInfo(src/d2s.rs:163:23-163:63)
  3: StorageDead(_133)
    SourceInfo(src/d2s.rs:163:62-163:63)
  4: _138 = SubWithOverflow(_42, _132)
    SourceInfo(src/d2s.rs:163:17-163:63)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:163:17-163:63)
      kind: assert(!move (_138.1: bool), "attempt to compute `{} - {}`, which would overflow", _42, move _132) -> [success: bb52, unwind: bb161]
  }
  preds [bb50]
  succs [bb52, bb161]

bb52
  0: _42 = move (_138.0: u64)
    SourceInfo(src/d2s.rs:163:17-163:63)
  1: StorageDead(_132)
    SourceInfo(src/d2s.rs:163:62-163:63)
  2: _49 = const ()
    SourceInfo(src/d2s.rs:161:20-164:14)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:156:20-164:14)
      kind: goto -> bb53
  }
  preds [bb51]
  succs [bb53]

bb53
  0: StorageDead(_122)
    SourceInfo(src/d2s.rs:164:13-164:14)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:154:13-164:14)
      kind: goto -> bb54
  }
  preds [bb48, bb52]
  succs [bb54]

bb54
  0: StorageDead(_117)
    SourceInfo(src/d2s.rs:164:13-164:14)
  1: StorageDead(_110)
    SourceInfo(src/d2s.rs:165:9-165:10)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:149:9-165:10)
      kind: goto -> bb56
  }
  preds [bb43, bb53]
  succs [bb56]

bb55
  0: StorageDead(_109)
    SourceInfo(src/d2s.rs:149:18-149:19)
  1: _49 = const ()
    SourceInfo(src/d2s.rs:165:10-165:10)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:149:9-165:10)
      kind: goto -> bb56
  }
  preds [bb37]
  succs [bb56]

bb56
  0: StorageDead(_108)
    SourceInfo(src/d2s.rs:165:9-165:10)
  1: StorageDead(_67)
    SourceInfo(src/d2s.rs:166:5-166:6)
  2: StorageDead(_60)
    SourceInfo(src/d2s.rs:166:5-166:6)
  3: StorageDead(_52)
    SourceInfo(src/d2s.rs:166:5-166:6)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:124:5-210:6)
      kind: goto -> bb91
  }
  preds [bb54, bb55]
  succs [bb91]

bb57
  0: StorageDead(_51)
    SourceInfo(src/d2s.rs:124:14-124:15)
  1: StorageLive(_139)
    SourceInfo(src/d2s.rs:168:13-168:14)
  2: StorageLive(_140)
    SourceInfo(src/d2s.rs:168:17-168:32)
  3: StorageLive(_141)
    SourceInfo(src/d2s.rs:168:28-168:31)
  4: StorageLive(_142)
    SourceInfo(src/d2s.rs:168:29-168:31)
  5: _142 = _3
    SourceInfo(src/d2s.rs:168:29-168:31)
  6: _143 = Eq(_142, const i32::MIN)
    SourceInfo(src/d2s.rs:168:28-168:31)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:168:28-168:31)
      kind: assert(!move _143, "attempt to negate `{}`, which would overflow", _142) -> [success: bb58, unwind: bb161]
  }
  preds [bb16]
  succs [bb58, bb161]

bb58
  0: _141 = Neg(move _142)
    SourceInfo(src/d2s.rs:168:28-168:31)
  1: StorageDead(_142)
    SourceInfo(src/d2s.rs:168:30-168:31)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:168:17-168:32)
      kind: _140 = common::log10_pow5(move _141) -> [return: bb59, unwind: bb161]
  }
  preds [bb57]
  succs [bb59, bb161]

bb59
  0: StorageDead(_141)
    SourceInfo(src/d2s.rs:168:31-168:32)
  1: StorageLive(_144)
    SourceInfo(src/d2s.rs:168:35-168:51)
  2: StorageLive(_145)
    SourceInfo(src/d2s.rs:168:35-168:44)
  3: StorageLive(_146)
    SourceInfo(src/d2s.rs:168:36-168:39)
  4: StorageLive(_147)
    SourceInfo(src/d2s.rs:168:37-168:39)
  5: _147 = _3
    SourceInfo(src/d2s.rs:168:37-168:39)
  6: _148 = Eq(_147, const i32::MIN)
    SourceInfo(src/d2s.rs:168:36-168:39)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:168:36-168:39)
      kind: assert(!move _148, "attempt to negate `{}`, which would overflow", _147) -> [success: bb60, unwind: bb161]
  }
  preds [bb58]
  succs [bb60, bb161]

bb60
  0: _146 = Neg(move _147)
    SourceInfo(src/d2s.rs:168:36-168:39)
  1: StorageDead(_147)
    SourceInfo(src/d2s.rs:168:38-168:39)
  2: _145 = Gt(move _146, const 1_i32)
    SourceInfo(src/d2s.rs:168:35-168:44)
  3: StorageDead(_146)
    SourceInfo(src/d2s.rs:168:43-168:44)
  4: _144 = move _145 as u32 (IntToInt)
    SourceInfo(src/d2s.rs:168:35-168:51)
  5: StorageDead(_145)
    SourceInfo(src/d2s.rs:168:50-168:51)
  6: _149 = SubWithOverflow(_140, _144)
    SourceInfo(src/d2s.rs:168:17-168:51)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:168:17-168:51)
      kind: assert(!move (_149.1: bool), "attempt to compute `{} - {}`, which would overflow", move _140, move _144) -> [success: bb61, unwind: bb161]
  }
  preds [bb59]
  succs [bb61, bb161]

bb61
  0: _139 = move (_149.0: u32)
    SourceInfo(src/d2s.rs:168:17-168:51)
  1: StorageDead(_144)
    SourceInfo(src/d2s.rs:168:50-168:51)
  2: StorageDead(_140)
    SourceInfo(src/d2s.rs:168:50-168:51)
  3: FakeRead(ForLet(None), _139)
    SourceInfo(src/d2s.rs:168:13-168:14)
  4: StorageLive(_150)
    SourceInfo(src/d2s.rs:169:15-169:23)
  5: StorageLive(_151)
    SourceInfo(src/d2s.rs:169:15-169:16)
  6: _151 = _139
    SourceInfo(src/d2s.rs:169:15-169:16)
  7: _150 = move _151 as i32 (IntToInt)
    SourceInfo(src/d2s.rs:169:15-169:23)
  8: StorageDead(_151)
    SourceInfo(src/d2s.rs:169:22-169:23)
  9: StorageLive(_152)
    SourceInfo(src/d2s.rs:169:26-169:28)
  10: _152 = _3
    SourceInfo(src/d2s.rs:169:26-169:28)
  11: _153 = AddWithOverflow(_150, _152)
    SourceInfo(src/d2s.rs:169:15-169:28)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:169:15-169:28)
      kind: assert(!move (_153.1: bool), "attempt to compute `{} + {}`, which would overflow", move _150, move _152) -> [success: bb62, unwind: bb161]
  }
  preds [bb60]
  succs [bb62, bb161]

bb62
  0: _46 = move (_153.0: i32)
    SourceInfo(src/d2s.rs:169:9-169:28)
  1: StorageDead(_152)
    SourceInfo(src/d2s.rs:169:27-169:28)
  2: StorageDead(_150)
    SourceInfo(src/d2s.rs:169:27-169:28)
  3: StorageLive(_154)
    SourceInfo(src/d2s.rs:170:13-170:14)
  4: StorageLive(_155)
    SourceInfo(src/d2s.rs:170:17-170:20)
  5: StorageLive(_156)
    SourceInfo(src/d2s.rs:170:18-170:20)
  6: _156 = _3
    SourceInfo(src/d2s.rs:170:18-170:20)
  7: _157 = Eq(_156, const i32::MIN)
    SourceInfo(src/d2s.rs:170:17-170:20)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:170:17-170:20)
      kind: assert(!move _157, "attempt to negate `{}`, which would overflow", _156) -> [success: bb63, unwind: bb161]
  }
  preds [bb61]
  succs [bb63, bb161]

bb63
  0: _155 = Neg(move _156)
    SourceInfo(src/d2s.rs:170:17-170:20)
  1: StorageDead(_156)
    SourceInfo(src/d2s.rs:170:19-170:20)
  2: StorageLive(_158)
    SourceInfo(src/d2s.rs:170:23-170:31)
  3: StorageLive(_159)
    SourceInfo(src/d2s.rs:170:23-170:24)
  4: _159 = _139
    SourceInfo(src/d2s.rs:170:23-170:24)
  5: _158 = move _159 as i32 (IntToInt)
    SourceInfo(src/d2s.rs:170:23-170:31)
  6: StorageDead(_159)
    SourceInfo(src/d2s.rs:170:30-170:31)
  7: _160 = SubWithOverflow(_155, _158)
    SourceInfo(src/d2s.rs:170:17-170:31)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:170:17-170:31)
      kind: assert(!move (_160.1: bool), "attempt to compute `{} - {}`, which would overflow", move _155, move _158) -> [success: bb64, unwind: bb161]
  }
  preds [bb62]
  succs [bb64, bb161]

bb64
  0: _154 = move (_160.0: i32)
    SourceInfo(src/d2s.rs:170:17-170:31)
  1: StorageDead(_158)
    SourceInfo(src/d2s.rs:170:30-170:31)
  2: StorageDead(_155)
    SourceInfo(src/d2s.rs:170:30-170:31)
  3: FakeRead(ForLet(None), _154)
    SourceInfo(src/d2s.rs:170:13-170:14)
  4: StorageLive(_161)
    SourceInfo(src/d2s.rs:171:13-171:14)
  5: StorageLive(_162)
    SourceInfo(src/d2s.rs:171:17-171:28)
  6: StorageLive(_163)
    SourceInfo(src/d2s.rs:171:26-171:27)
  7: _163 = _154
    SourceInfo(src/d2s.rs:171:26-171:27)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:171:17-171:28)
      kind: _162 = common::pow5bits(move _163) -> [return: bb65, unwind: bb161]
  }
  preds [bb63]
  succs [bb65, bb161]

bb65
  0: StorageDead(_163)
    SourceInfo(src/d2s.rs:171:27-171:28)
  1: _164 = SubWithOverflow(_162, const d2s::DOUBLE_POW5_BITCOUNT)
    SourceInfo(src/d2s.rs:171:17-171:51)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:171:17-171:51)
      kind: assert(!move (_164.1: bool), "attempt to compute `{} - {}`, which would overflow", move _162, const d2s::DOUBLE_POW5_BITCOUNT) -> [success: bb66, unwind: bb161]
  }
  preds [bb64]
  succs [bb66, bb161]

bb66
  0: _161 = move (_164.0: i32)
    SourceInfo(src/d2s.rs:171:17-171:51)
  1: StorageDead(_162)
    SourceInfo(src/d2s.rs:171:50-171:51)
  2: FakeRead(ForLet(None), _161)
    SourceInfo(src/d2s.rs:171:13-171:14)
  3: StorageLive(_165)
    SourceInfo(src/d2s.rs:172:13-172:14)
  4: StorageLive(_166)
    SourceInfo(src/d2s.rs:172:17-172:25)
  5: StorageLive(_167)
    SourceInfo(src/d2s.rs:172:17-172:18)
  6: _167 = _139
    SourceInfo(src/d2s.rs:172:17-172:18)
  7: _166 = move _167 as i32 (IntToInt)
    SourceInfo(src/d2s.rs:172:17-172:25)
  8: StorageDead(_167)
    SourceInfo(src/d2s.rs:172:24-172:25)
  9: StorageLive(_168)
    SourceInfo(src/d2s.rs:172:28-172:29)
  10: _168 = _161
    SourceInfo(src/d2s.rs:172:28-172:29)
  11: _169 = SubWithOverflow(_166, _168)
    SourceInfo(src/d2s.rs:172:17-172:29)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:172:17-172:29)
      kind: assert(!move (_169.1: bool), "attempt to compute `{} - {}`, which would overflow", move _166, move _168) -> [success: bb67, unwind: bb161]
  }
  preds [bb65]
  succs [bb67, bb161]

bb67
  0: _165 = move (_169.0: i32)
    SourceInfo(src/d2s.rs:172:17-172:29)
  1: StorageDead(_168)
    SourceInfo(src/d2s.rs:172:28-172:29)
  2: StorageDead(_166)
    SourceInfo(src/d2s.rs:172:28-172:29)
  3: FakeRead(ForLet(None), _165)
    SourceInfo(src/d2s.rs:172:13-172:14)
  4: StorageLive(_170)
    SourceInfo(src/d2s.rs:173:14-188:10)
  5: StorageLive(_171)
    SourceInfo(src/d2s.rs:175:17-175:19)
  6: _171 = _4
    SourceInfo(src/d2s.rs:175:17-175:19)
  7: StorageLive(_172)
    SourceInfo(src/d2s.rs:179:17-182:18)
  8: StorageLive(_173)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
  9: StorageLive(_174)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
  10: _174 = const true
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
      kind: switchInt(move _174) -> [0: bb72, otherwise: bb68]
  }
  preds [bb66]
  succs [bb68, bb72]

bb68
  0: StorageLive(_175)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
  1: StorageLive(_176)
    SourceInfo(src/d2s.rs:180:35-180:69)
  2: StorageLive(_177)
    SourceInfo(src/d2s.rs:180:35-180:36)
  3: _177 = _154
    SourceInfo(src/d2s.rs:180:35-180:36)
  4: StorageLive(_178)
    SourceInfo(src/d2s.rs:180:39-180:69)
  5: StorageLive(_179)
    SourceInfo(src/d2s.rs:180:39-180:62)
  6: StorageLive(_180)
    SourceInfo(src/d2s.rs:180:39-180:56)
  7: StorageLive(_181)
    SourceInfo(src/d2s.rs:180:39-180:56)
  8: StorageLive(_182)
    SourceInfo(src/d2s.rs:180:39-180:56)
  9: _182 = const {alloc6: &[(u64, u64); 326]}
    SourceInfo(src/d2s.rs:180:39-180:56)
  10: _181 = &(*_182)
    SourceInfo(src/d2s.rs:180:39-180:56)
  11: _180 = move _181 as &[(u64, u64)] (PointerCoercion(Unsize))
    SourceInfo(src/d2s.rs:180:39-180:56)
  12: StorageDead(_181)
    SourceInfo(src/d2s.rs:180:55-180:56)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:180:39-180:62)
      kind: _179 = core::slice::<impl [(u64, u64)]>::len(move _180) -> [return: bb69, unwind: bb161]
  }
  preds [bb67]
  succs [bb69, bb161]

bb69
  0: StorageDead(_180)
    SourceInfo(src/d2s.rs:180:61-180:62)
  1: _178 = move _179 as i32 (IntToInt)
    SourceInfo(src/d2s.rs:180:39-180:69)
  2: StorageDead(_179)
    SourceInfo(src/d2s.rs:180:68-180:69)
  3: _176 = Lt(move _177, move _178)
    SourceInfo(src/d2s.rs:180:35-180:69)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:180:35-180:69)
      kind: switchInt(move _176) -> [0: bb71, otherwise: bb70]
  }
  preds [bb68]
  succs [bb70, bb71]

bb70
  0: StorageDead(_178)
    SourceInfo(src/d2s.rs:180:68-180:69)
  1: StorageDead(_177)
    SourceInfo(src/d2s.rs:180:68-180:69)
  2: StorageDead(_182)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:37-317:38)
  3: _175 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:38-317:38)
  4: StorageDead(_176)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:37-317:38)
  5: StorageDead(_175)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:37-317:38)
  6: _173 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:43-318:10)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
      kind: goto -> bb73
  }
  preds [bb69]
  succs [bb73]

bb71
  0: StorageDead(_178)
    SourceInfo(src/d2s.rs:180:68-180:69)
  1: StorageDead(_177)
    SourceInfo(src/d2s.rs:180:68-180:69)
  2: StorageDead(_182)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:37-317:38)
  3: StorageLive(_183)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
      kind: _183 = core::panicking::panic(const "assertion failed: i < DOUBLE_POW5_SPLIT.len() as i32") -> bb161
  }
  preds [bb69]
  succs [bb161]

bb72
  0: _173 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:10-318:10)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
      kind: goto -> bb73
  }
  preds [bb67]
  succs [bb73]

bb73
  0: StorageDead(_174)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:9-318:10)
  1: StorageDead(_173)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:9-318:10)
  2: StorageLive(_184)
    SourceInfo(src/d2s.rs:181:21-181:64)
  3: StorageLive(_185)
    SourceInfo(src/d2s.rs:181:21-181:38)
  4: StorageLive(_186)
    SourceInfo(src/d2s.rs:181:21-181:38)
  5: StorageLive(_187)
    SourceInfo(src/d2s.rs:181:21-181:38)
  6: _187 = const {alloc6: &[(u64, u64); 326]}
    SourceInfo(src/d2s.rs:181:21-181:38)
  7: _186 = &(*_187)
    SourceInfo(src/d2s.rs:181:21-181:38)
  8: _185 = move _186 as &[(u64, u64)] (PointerCoercion(Unsize))
    SourceInfo(src/d2s.rs:181:21-181:38)
  9: StorageDead(_186)
    SourceInfo(src/d2s.rs:181:37-181:38)
  10: StorageLive(_188)
    SourceInfo(src/d2s.rs:181:53-181:63)
  11: StorageLive(_189)
    SourceInfo(src/d2s.rs:181:53-181:54)
  12: _189 = _154
    SourceInfo(src/d2s.rs:181:53-181:54)
  13: _188 = move _189 as usize (IntToInt)
    SourceInfo(src/d2s.rs:181:53-181:63)
  14: StorageDead(_189)
    SourceInfo(src/d2s.rs:181:62-181:63)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:181:21-181:64)
      kind: _184 = core::slice::<impl [(u64, u64)]>::get_unchecked::<usize>(move _185, move _188) -> [return: bb74, unwind: bb161]
  }
  preds [bb70, bb72]
  succs [bb74, bb161]

bb74
  0: _172 = &(*_184)
    SourceInfo(src/d2s.rs:181:21-181:64)
  1: StorageDead(_188)
    SourceInfo(src/d2s.rs:181:63-181:64)
  2: StorageDead(_185)
    SourceInfo(src/d2s.rs:181:63-181:64)
  3: StorageLive(_190)
    SourceInfo(src/d2s.rs:183:17-183:25)
  4: StorageLive(_191)
    SourceInfo(src/d2s.rs:183:17-183:18)
  5: _191 = _165
    SourceInfo(src/d2s.rs:183:17-183:18)
  6: _190 = move _191 as u32 (IntToInt)
    SourceInfo(src/d2s.rs:183:17-183:25)
  7: StorageDead(_191)
    SourceInfo(src/d2s.rs:183:24-183:25)
  8: StorageLive(_192)
    SourceInfo(src/d2s.rs:184:17-184:39)
  9: StorageLive(_193)
    SourceInfo(src/d2s.rs:184:17-184:26)
  10: _193 = &mut _44
    SourceInfo(src/d2s.rs:184:17-184:26)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:184:17-184:39)
      kind: _192 = core::mem::MaybeUninit::<u64>::as_mut_ptr(move _193) -> [return: bb75, unwind: bb161]
  }
  preds [bb73]
  succs [bb75, bb161]

bb75
  0: StorageDead(_193)
    SourceInfo(src/d2s.rs:184:38-184:39)
  1: StorageLive(_194)
    SourceInfo(src/d2s.rs:185:17-185:39)
  2: StorageLive(_195)
    SourceInfo(src/d2s.rs:185:17-185:26)
  3: _195 = &mut _45
    SourceInfo(src/d2s.rs:185:17-185:26)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:185:17-185:39)
      kind: _194 = core::mem::MaybeUninit::<u64>::as_mut_ptr(move _195) -> [return: bb76, unwind: bb161]
  }
  preds [bb74]
  succs [bb76, bb161]

bb76
  0: StorageDead(_195)
    SourceInfo(src/d2s.rs:185:38-185:39)
  1: StorageLive(_196)
    SourceInfo(src/d2s.rs:186:17-186:25)
  2: _196 = _36
    SourceInfo(src/d2s.rs:186:17-186:25)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:174:13-187:14)
      kind: _170 = d2s_intrinsics::mul_shift_all_64(move _171, move _172, move _190, move _192, move _194, move _196) -> [return: bb77, unwind: bb161]
  }
  preds [bb75]
  succs [bb77, bb161]

bb77
  0: StorageDead(_196)
    SourceInfo(src/d2s.rs:187:13-187:14)
  1: StorageDead(_194)
    SourceInfo(src/d2s.rs:187:13-187:14)
  2: StorageDead(_192)
    SourceInfo(src/d2s.rs:187:13-187:14)
  3: StorageDead(_190)
    SourceInfo(src/d2s.rs:187:13-187:14)
  4: StorageDead(_172)
    SourceInfo(src/d2s.rs:187:13-187:14)
  5: StorageDead(_171)
    SourceInfo(src/d2s.rs:187:13-187:14)
  6: _41 = move _170
    SourceInfo(src/d2s.rs:173:9-188:10)
  7: StorageDead(_170)
    SourceInfo(src/d2s.rs:188:9-188:10)
  8: StorageDead(_187)
    SourceInfo(src/d2s.rs:188:10-188:11)
  9: StorageDead(_184)
    SourceInfo(src/d2s.rs:188:10-188:11)
  10: StorageLive(_197)
    SourceInfo(src/d2s.rs:189:14-189:48)
  11: StorageLive(_198)
    SourceInfo(src/d2s.rs:189:23-189:32)
  12: _198 = _44
    SourceInfo(src/d2s.rs:189:23-189:32)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:189:23-189:46)
      kind: _197 = core::mem::MaybeUninit::<u64>::assume_init(move _198) -> [return: bb78, unwind: bb161]
  }
  preds [bb76]
  succs [bb78, bb161]

bb78
  0: StorageDead(_198)
    SourceInfo(src/d2s.rs:189:45-189:46)
  1: _42 = move _197
    SourceInfo(src/d2s.rs:189:9-189:48)
  2: StorageDead(_197)
    SourceInfo(src/d2s.rs:189:47-189:48)
  3: StorageLive(_199)
    SourceInfo(src/d2s.rs:190:14-190:48)
  4: StorageLive(_200)
    SourceInfo(src/d2s.rs:190:23-190:32)
  5: _200 = _45
    SourceInfo(src/d2s.rs:190:23-190:32)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:190:23-190:46)
      kind: _199 = core::mem::MaybeUninit::<u64>::assume_init(move _200) -> [return: bb79, unwind: bb161]
  }
  preds [bb77]
  succs [bb79, bb161]

bb79
  0: StorageDead(_200)
    SourceInfo(src/d2s.rs:190:45-190:46)
  1: _43 = move _199
    SourceInfo(src/d2s.rs:190:9-190:48)
  2: StorageDead(_199)
    SourceInfo(src/d2s.rs:190:47-190:48)
  3: StorageLive(_201)
    SourceInfo(src/d2s.rs:191:12-191:18)
  4: StorageLive(_202)
    SourceInfo(src/d2s.rs:191:12-191:13)
  5: _202 = _139
    SourceInfo(src/d2s.rs:191:12-191:13)
  6: _201 = Le(move _202, const 1_u32)
    SourceInfo(src/d2s.rs:191:12-191:18)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:191:12-191:18)
      kind: switchInt(move _201) -> [0: bb85, otherwise: bb80]
  }
  preds [bb78]
  succs [bb80, bb85]

bb80
  0: StorageDead(_202)
    SourceInfo(src/d2s.rs:191:17-191:18)
  1: _48 = const true
    SourceInfo(src/d2s.rs:194:13-194:40)
  2: StorageLive(_203)
    SourceInfo(src/d2s.rs:195:16-195:29)
  3: _203 = _32
    SourceInfo(src/d2s.rs:195:16-195:29)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:195:16-195:29)
      kind: switchInt(move _203) -> [0: bb82, otherwise: bb81]
  }
  preds [bb79]
  succs [bb81, bb82]

bb81
  0: StorageLive(_204)
    SourceInfo(src/d2s.rs:197:40-197:48)
  1: _204 = _36
    SourceInfo(src/d2s.rs:197:40-197:48)
  2: _47 = Eq(move _204, const 1_u32)
    SourceInfo(src/d2s.rs:197:17-197:53)
  3: StorageDead(_204)
    SourceInfo(src/d2s.rs:197:52-197:53)
  4: _49 = const ()
    SourceInfo(src/d2s.rs:195:30-198:14)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:195:13-201:14)
      kind: goto -> bb84
  }
  preds [bb80]
  succs [bb84]

bb82
  0: _205 = SubWithOverflow(_42, const 1_u64)
    SourceInfo(src/d2s.rs:200:17-200:24)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:200:17-200:24)
      kind: assert(!move (_205.1: bool), "attempt to compute `{} - {}`, which would overflow", _42, const 1_u64) -> [success: bb83, unwind: bb161]
  }
  preds [bb80]
  succs [bb83, bb161]

bb83
  0: _42 = move (_205.0: u64)
    SourceInfo(src/d2s.rs:200:17-200:24)
  1: _49 = const ()
    SourceInfo(src/d2s.rs:198:20-201:14)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:195:13-201:14)
      kind: goto -> bb84
  }
  preds [bb82]
  succs [bb84]

bb84
  0: StorageDead(_203)
    SourceInfo(src/d2s.rs:201:13-201:14)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:191:9-209:10)
      kind: goto -> bb90
  }
  preds [bb81, bb83]
  succs [bb90]

bb85
  0: StorageDead(_202)
    SourceInfo(src/d2s.rs:191:17-191:18)
  1: StorageLive(_206)
    SourceInfo(src/d2s.rs:202:19-202:25)
  2: StorageLive(_207)
    SourceInfo(src/d2s.rs:202:19-202:20)
  3: _207 = _139
    SourceInfo(src/d2s.rs:202:19-202:20)
  4: _206 = Lt(move _207, const 63_u32)
    SourceInfo(src/d2s.rs:202:19-202:25)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:202:19-202:25)
      kind: switchInt(move _206) -> [0: bb88, otherwise: bb86]
  }
  preds [bb79]
  succs [bb86, bb88]

bb86
  0: StorageDead(_207)
    SourceInfo(src/d2s.rs:202:24-202:25)
  1: StorageLive(_208)
    SourceInfo(src/d2s.rs:208:36-208:65)
  2: StorageLive(_209)
    SourceInfo(src/d2s.rs:208:59-208:61)
  3: _209 = _33
    SourceInfo(src/d2s.rs:208:59-208:61)
  4: StorageLive(_210)
    SourceInfo(src/d2s.rs:208:63-208:64)
  5: _210 = _139
    SourceInfo(src/d2s.rs:208:63-208:64)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:208:36-208:65)
      kind: _208 = d2s_intrinsics::multiple_of_power_of_2(move _209, move _210) -> [return: bb87, unwind: bb161]
  }
  preds [bb85]
  succs [bb87, bb161]

bb87
  0: StorageDead(_210)
    SourceInfo(src/d2s.rs:208:64-208:65)
  1: StorageDead(_209)
    SourceInfo(src/d2s.rs:208:64-208:65)
  2: _48 = move _208
    SourceInfo(src/d2s.rs:208:13-208:65)
  3: StorageDead(_208)
    SourceInfo(src/d2s.rs:208:64-208:65)
  4: _49 = const ()
    SourceInfo(src/d2s.rs:202:26-209:10)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:202:16-209:10)
      kind: goto -> bb89
  }
  preds [bb86]
  succs [bb89]

bb88
  0: StorageDead(_207)
    SourceInfo(src/d2s.rs:202:24-202:25)
  1: _49 = const ()
    SourceInfo(src/d2s.rs:209:10-209:10)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:202:16-209:10)
      kind: goto -> bb89
  }
  preds [bb85]
  succs [bb89]

bb89
  0: StorageDead(_206)
    SourceInfo(src/d2s.rs:209:9-209:10)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:191:9-209:10)
      kind: goto -> bb90
  }
  preds [bb87, bb88]
  succs [bb90]

bb90
  0: StorageDead(_201)
    SourceInfo(src/d2s.rs:209:9-209:10)
  1: StorageDead(_165)
    SourceInfo(src/d2s.rs:210:5-210:6)
  2: StorageDead(_161)
    SourceInfo(src/d2s.rs:210:5-210:6)
  3: StorageDead(_154)
    SourceInfo(src/d2s.rs:210:5-210:6)
  4: StorageDead(_139)
    SourceInfo(src/d2s.rs:210:5-210:6)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:124:5-210:6)
      kind: goto -> bb91
  }
  preds [bb84, bb89]
  succs [bb91]

bb91
  0: StorageDead(_50)
    SourceInfo(src/d2s.rs:210:5-210:6)
  1: StorageDead(_49)
    SourceInfo(src/d2s.rs:210:5-210:6)
  2: StorageLive(_211)
    SourceInfo(src/d2s.rs:213:9-213:20)
  3: _211 = const 0_i32
    SourceInfo(src/d2s.rs:213:23-213:27)
  4: FakeRead(ForLet(None), _211)
    SourceInfo(src/d2s.rs:213:9-213:20)
  5: StorageLive(_212)
    SourceInfo(src/d2s.rs:214:9-214:31)
  6: _212 = const 0_u8
    SourceInfo(src/d2s.rs:214:34-214:37)
  7: FakeRead(ForLet(None), _212)
    SourceInfo(src/d2s.rs:214:9-214:31)
  8: StorageLive(_213)
    SourceInfo(src/d2s.rs:216:9-216:15)
  9: StorageLive(_214)
    SourceInfo(src/d2s.rs:216:21-216:41)
  10: _214 = _47
    SourceInfo(src/d2s.rs:216:21-216:41)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:216:21-216:41)
      kind: switchInt(move _214) -> [0: bb92, otherwise: bb93]
  }
  preds [bb56, bb90]
  succs [bb92, bb93]

bb92
  0: StorageLive(_215)
    SourceInfo(src/d2s.rs:216:45-216:65)
  1: _215 = _48
    SourceInfo(src/d2s.rs:216:45-216:65)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:216:45-216:65)
      kind: switchInt(move _215) -> [0: bb135, otherwise: bb93]
  }
  preds [bb91]
  succs [bb93, bb135]

bb93
  0: StorageLive(_216)
    SourceInfo(src/d2s.rs:218:9-234:10)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:218:9-234:10)
      kind: goto -> bb94
  }
  preds [bb91, bb92]
  succs [bb94]

bb94
  Terminator {
      source_info: SourceInfo(src/d2s.rs:218:9-234:10)
      kind: falseUnwind -> [real: bb95, unwind: bb161]
  }
  preds [bb93, bb105]
  succs [bb95, bb161]

bb95
  0: StorageLive(_218)
    SourceInfo(src/d2s.rs:219:17-219:25)
  1: StorageLive(_219)
    SourceInfo(src/d2s.rs:219:34-219:36)
  2: _219 = _42
    SourceInfo(src/d2s.rs:219:34-219:36)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:219:28-219:37)
      kind: _218 = d2s_intrinsics::div10(move _219) -> [return: bb96, unwind: bb161]
  }
  preds [bb94]
  succs [bb96, bb161]

bb96
  0: StorageDead(_219)
    SourceInfo(src/d2s.rs:219:36-219:37)
  1: FakeRead(ForLet(None), _218)
    SourceInfo(src/d2s.rs:219:17-219:25)
  2: StorageLive(_220)
    SourceInfo(src/d2s.rs:220:17-220:25)
  3: StorageLive(_221)
    SourceInfo(src/d2s.rs:220:34-220:36)
  4: _221 = _43
    SourceInfo(src/d2s.rs:220:34-220:36)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:220:28-220:37)
      kind: _220 = d2s_intrinsics::div10(move _221) -> [return: bb97, unwind: bb161]
  }
  preds [bb95]
  succs [bb97, bb161]

bb97
  0: StorageDead(_221)
    SourceInfo(src/d2s.rs:220:36-220:37)
  1: FakeRead(ForLet(None), _220)
    SourceInfo(src/d2s.rs:220:17-220:25)
  2: StorageLive(_222)
    SourceInfo(src/d2s.rs:221:13-223:14)
  3: StorageLive(_223)
    SourceInfo(src/d2s.rs:221:16-221:36)
  4: StorageLive(_224)
    SourceInfo(src/d2s.rs:221:16-221:24)
  5: _224 = _218
    SourceInfo(src/d2s.rs:221:16-221:24)
  6: StorageLive(_225)
    SourceInfo(src/d2s.rs:221:28-221:36)
  7: _225 = _220
    SourceInfo(src/d2s.rs:221:28-221:36)
  8: _223 = Le(move _224, move _225)
    SourceInfo(src/d2s.rs:221:16-221:36)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:221:16-221:36)
      kind: switchInt(move _223) -> [0: bb99, otherwise: bb98]
  }
  preds [bb96]
  succs [bb98, bb99]

bb98
  0: StorageDead(_225)
    SourceInfo(src/d2s.rs:221:35-221:36)
  1: StorageDead(_224)
    SourceInfo(src/d2s.rs:221:35-221:36)
  2: _216 = const ()
    SourceInfo(src/d2s.rs:222:17-222:22)
  3: StorageDead(_223)
    SourceInfo(src/d2s.rs:223:13-223:14)
  4: StorageDead(_222)
    SourceInfo(src/d2s.rs:223:13-223:14)
  5: StorageDead(_220)
    SourceInfo(src/d2s.rs:234:9-234:10)
  6: StorageDead(_218)
    SourceInfo(src/d2s.rs:234:9-234:10)
  7: StorageDead(_216)
    SourceInfo(src/d2s.rs:234:9-234:10)
  8: StorageLive(_250)
    SourceInfo(src/d2s.rs:235:9-252:10)
  9: StorageLive(_251)
    SourceInfo(src/d2s.rs:235:12-235:32)
  10: _251 = _47
    SourceInfo(src/d2s.rs:235:12-235:32)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:235:12-235:32)
      kind: switchInt(move _251) -> [0: bb106, otherwise: bb107]
  }
  preds [bb97]
  succs [bb106, bb107]

bb99
  0: StorageDead(_225)
    SourceInfo(src/d2s.rs:221:35-221:36)
  1: StorageDead(_224)
    SourceInfo(src/d2s.rs:221:35-221:36)
  2: _222 = const ()
    SourceInfo(src/d2s.rs:223:14-223:14)
  3: StorageDead(_223)
    SourceInfo(src/d2s.rs:223:13-223:14)
  4: StorageDead(_222)
    SourceInfo(src/d2s.rs:223:13-223:14)
  5: StorageLive(_227)
    SourceInfo(src/d2s.rs:224:17-224:25)
  6: StorageLive(_228)
    SourceInfo(src/d2s.rs:224:28-224:39)
  7: StorageLive(_229)
    SourceInfo(src/d2s.rs:224:29-224:31)
  8: _229 = _43
    SourceInfo(src/d2s.rs:224:29-224:31)
  9: _228 = move _229 as u32 (IntToInt)
    SourceInfo(src/d2s.rs:224:28-224:39)
  10: StorageDead(_229)
    SourceInfo(src/d2s.rs:224:38-224:39)
  11: StorageLive(_230)
    SourceInfo(src/d2s.rs:224:53-224:88)
  12: StorageLive(_231)
    SourceInfo(src/d2s.rs:224:72-224:87)
  13: StorageLive(_232)
    SourceInfo(src/d2s.rs:224:72-224:80)
  14: _232 = _220
    SourceInfo(src/d2s.rs:224:72-224:80)
  15: _231 = move _232 as u32 (IntToInt)
    SourceInfo(src/d2s.rs:224:72-224:87)
  16: StorageDead(_232)
    SourceInfo(src/d2s.rs:224:86-224:87)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:224:53-224:88)
      kind: _230 = core::num::<impl u32>::wrapping_mul(const 10_u32, move _231) -> [return: bb100, unwind: bb161]
  }
  preds [bb97]
  succs [bb100, bb161]

bb100
  0: StorageDead(_231)
    SourceInfo(src/d2s.rs:224:87-224:88)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:224:28-224:89)
      kind: _227 = core::num::<impl u32>::wrapping_sub(move _228, move _230) -> [return: bb101, unwind: bb161]
  }
  preds [bb99]
  succs [bb101, bb161]

bb101
  0: StorageDead(_230)
    SourceInfo(src/d2s.rs:224:88-224:89)
  1: StorageDead(_228)
    SourceInfo(src/d2s.rs:224:88-224:89)
  2: FakeRead(ForLet(None), _227)
    SourceInfo(src/d2s.rs:224:17-224:25)
  3: StorageLive(_233)
    SourceInfo(src/d2s.rs:225:17-225:25)
  4: StorageLive(_234)
    SourceInfo(src/d2s.rs:225:34-225:36)
  5: _234 = _41
    SourceInfo(src/d2s.rs:225:34-225:36)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:225:28-225:37)
      kind: _233 = d2s_intrinsics::div10(move _234) -> [return: bb102, unwind: bb161]
  }
  preds [bb100]
  succs [bb102, bb161]

bb102
  0: StorageDead(_234)
    SourceInfo(src/d2s.rs:225:36-225:37)
  1: FakeRead(ForLet(None), _233)
    SourceInfo(src/d2s.rs:225:17-225:25)
  2: StorageLive(_235)
    SourceInfo(src/d2s.rs:226:17-226:25)
  3: StorageLive(_236)
    SourceInfo(src/d2s.rs:226:28-226:39)
  4: StorageLive(_237)
    SourceInfo(src/d2s.rs:226:29-226:31)
  5: _237 = _41
    SourceInfo(src/d2s.rs:226:29-226:31)
  6: _236 = move _237 as u32 (IntToInt)
    SourceInfo(src/d2s.rs:226:28-226:39)
  7: StorageDead(_237)
    SourceInfo(src/d2s.rs:226:38-226:39)
  8: StorageLive(_238)
    SourceInfo(src/d2s.rs:226:53-226:88)
  9: StorageLive(_239)
    SourceInfo(src/d2s.rs:226:72-226:87)
  10: StorageLive(_240)
    SourceInfo(src/d2s.rs:226:72-226:80)
  11: _240 = _233
    SourceInfo(src/d2s.rs:226:72-226:80)
  12: _239 = move _240 as u32 (IntToInt)
    SourceInfo(src/d2s.rs:226:72-226:87)
  13: StorageDead(_240)
    SourceInfo(src/d2s.rs:226:86-226:87)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:226:53-226:88)
      kind: _238 = core::num::<impl u32>::wrapping_mul(const 10_u32, move _239) -> [return: bb103, unwind: bb161]
  }
  preds [bb101]
  succs [bb103, bb161]

bb103
  0: StorageDead(_239)
    SourceInfo(src/d2s.rs:226:87-226:88)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:226:28-226:89)
      kind: _235 = core::num::<impl u32>::wrapping_sub(move _236, move _238) -> [return: bb104, unwind: bb161]
  }
  preds [bb102]
  succs [bb104, bb161]

bb104
  0: StorageDead(_238)
    SourceInfo(src/d2s.rs:226:88-226:89)
  1: StorageDead(_236)
    SourceInfo(src/d2s.rs:226:88-226:89)
  2: FakeRead(ForLet(None), _235)
    SourceInfo(src/d2s.rs:226:17-226:25)
  3: StorageLive(_241)
    SourceInfo(src/d2s.rs:227:37-227:50)
  4: StorageLive(_242)
    SourceInfo(src/d2s.rs:227:37-227:45)
  5: _242 = _227
    SourceInfo(src/d2s.rs:227:37-227:45)
  6: _241 = Eq(move _242, const 0_u32)
    SourceInfo(src/d2s.rs:227:37-227:50)
  7: StorageDead(_242)
    SourceInfo(src/d2s.rs:227:49-227:50)
  8: _47 = BitAnd(_47, move _241)
    SourceInfo(src/d2s.rs:227:13-227:50)
  9: StorageDead(_241)
    SourceInfo(src/d2s.rs:227:49-227:50)
  10: StorageLive(_243)
    SourceInfo(src/d2s.rs:228:37-228:60)
  11: StorageLive(_244)
    SourceInfo(src/d2s.rs:228:37-228:55)
  12: _244 = _212
    SourceInfo(src/d2s.rs:228:37-228:55)
  13: _243 = Eq(move _244, const 0_u8)
    SourceInfo(src/d2s.rs:228:37-228:60)
  14: StorageDead(_244)
    SourceInfo(src/d2s.rs:228:59-228:60)
  15: _48 = BitAnd(_48, move _243)
    SourceInfo(src/d2s.rs:228:13-228:60)
  16: StorageDead(_243)
    SourceInfo(src/d2s.rs:228:59-228:60)
  17: StorageLive(_245)
    SourceInfo(src/d2s.rs:229:34-229:42)
  18: _245 = _235
    SourceInfo(src/d2s.rs:229:34-229:42)
  19: _212 = move _245 as u8 (IntToInt)
    SourceInfo(src/d2s.rs:229:13-229:48)
  20: StorageDead(_245)
    SourceInfo(src/d2s.rs:229:47-229:48)
  21: StorageLive(_246)
    SourceInfo(src/d2s.rs:230:18-230:26)
  22: _246 = _233
    SourceInfo(src/d2s.rs:230:18-230:26)
  23: _41 = move _246
    SourceInfo(src/d2s.rs:230:13-230:26)
  24: StorageDead(_246)
    SourceInfo(src/d2s.rs:230:25-230:26)
  25: StorageLive(_247)
    SourceInfo(src/d2s.rs:231:18-231:26)
  26: _247 = _218
    SourceInfo(src/d2s.rs:231:18-231:26)
  27: _42 = move _247
    SourceInfo(src/d2s.rs:231:13-231:26)
  28: StorageDead(_247)
    SourceInfo(src/d2s.rs:231:25-231:26)
  29: StorageLive(_248)
    SourceInfo(src/d2s.rs:232:18-232:26)
  30: _248 = _220
    SourceInfo(src/d2s.rs:232:18-232:26)
  31: _43 = move _248
    SourceInfo(src/d2s.rs:232:13-232:26)
  32: StorageDead(_248)
    SourceInfo(src/d2s.rs:232:25-232:26)
  33: _249 = AddWithOverflow(_211, const 1_i32)
    SourceInfo(src/d2s.rs:233:13-233:25)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:233:13-233:25)
      kind: assert(!move (_249.1: bool), "attempt to compute `{} + {}`, which would overflow", _211, const 1_i32) -> [success: bb105, unwind: bb161]
  }
  preds [bb103]
  succs [bb105, bb161]

bb105
  0: _211 = move (_249.0: i32)
    SourceInfo(src/d2s.rs:233:13-233:25)
  1: _217 = const ()
    SourceInfo(src/d2s.rs:218:14-234:10)
  2: StorageDead(_235)
    SourceInfo(src/d2s.rs:234:9-234:10)
  3: StorageDead(_233)
    SourceInfo(src/d2s.rs:234:9-234:10)
  4: StorageDead(_227)
    SourceInfo(src/d2s.rs:234:9-234:10)
  5: StorageDead(_220)
    SourceInfo(src/d2s.rs:234:9-234:10)
  6: StorageDead(_218)
    SourceInfo(src/d2s.rs:234:9-234:10)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:218:9-234:10)
      kind: goto -> bb94
  }
  preds [bb104]
  succs [bb94]

bb106
  0: _250 = const ()
    SourceInfo(src/d2s.rs:252:10-252:10)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:235:9-252:10)
      kind: goto -> bb119
  }
  preds [bb98]
  succs [bb119]

bb107
  Terminator {
      source_info: SourceInfo(src/d2s.rs:236:13-251:14)
      kind: falseUnwind -> [real: bb108, unwind: bb161]
  }
  preds [bb98, bb118]
  succs [bb108, bb161]

bb108
  0: StorageLive(_252)
    SourceInfo(src/d2s.rs:237:21-237:29)
  1: StorageLive(_253)
    SourceInfo(src/d2s.rs:237:38-237:40)
  2: _253 = _43
    SourceInfo(src/d2s.rs:237:38-237:40)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:237:32-237:41)
      kind: _252 = d2s_intrinsics::div10(move _253) -> [return: bb109, unwind: bb161]
  }
  preds [bb107]
  succs [bb109, bb161]

bb109
  0: StorageDead(_253)
    SourceInfo(src/d2s.rs:237:40-237:41)
  1: FakeRead(ForLet(None), _252)
    SourceInfo(src/d2s.rs:237:21-237:29)
  2: StorageLive(_254)
    SourceInfo(src/d2s.rs:238:21-238:29)
  3: StorageLive(_255)
    SourceInfo(src/d2s.rs:238:32-238:43)
  4: StorageLive(_256)
    SourceInfo(src/d2s.rs:238:33-238:35)
  5: _256 = _43
    SourceInfo(src/d2s.rs:238:33-238:35)
  6: _255 = move _256 as u32 (IntToInt)
    SourceInfo(src/d2s.rs:238:32-238:43)
  7: StorageDead(_256)
    SourceInfo(src/d2s.rs:238:42-238:43)
  8: StorageLive(_257)
    SourceInfo(src/d2s.rs:238:57-238:92)
  9: StorageLive(_258)
    SourceInfo(src/d2s.rs:238:76-238:91)
  10: StorageLive(_259)
    SourceInfo(src/d2s.rs:238:76-238:84)
  11: _259 = _252
    SourceInfo(src/d2s.rs:238:76-238:84)
  12: _258 = move _259 as u32 (IntToInt)
    SourceInfo(src/d2s.rs:238:76-238:91)
  13: StorageDead(_259)
    SourceInfo(src/d2s.rs:238:90-238:91)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:238:57-238:92)
      kind: _257 = core::num::<impl u32>::wrapping_mul(const 10_u32, move _258) -> [return: bb110, unwind: bb161]
  }
  preds [bb108]
  succs [bb110, bb161]

bb110
  0: StorageDead(_258)
    SourceInfo(src/d2s.rs:238:91-238:92)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:238:32-238:93)
      kind: _254 = core::num::<impl u32>::wrapping_sub(move _255, move _257) -> [return: bb111, unwind: bb161]
  }
  preds [bb109]
  succs [bb111, bb161]

bb111
  0: StorageDead(_257)
    SourceInfo(src/d2s.rs:238:92-238:93)
  1: StorageDead(_255)
    SourceInfo(src/d2s.rs:238:92-238:93)
  2: FakeRead(ForLet(None), _254)
    SourceInfo(src/d2s.rs:238:21-238:29)
  3: StorageLive(_260)
    SourceInfo(src/d2s.rs:239:17-241:18)
  4: StorageLive(_261)
    SourceInfo(src/d2s.rs:239:20-239:33)
  5: StorageLive(_262)
    SourceInfo(src/d2s.rs:239:20-239:28)
  6: _262 = _254
    SourceInfo(src/d2s.rs:239:20-239:28)
  7: _261 = Ne(move _262, const 0_u32)
    SourceInfo(src/d2s.rs:239:20-239:33)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:239:20-239:33)
      kind: switchInt(move _261) -> [0: bb113, otherwise: bb112]
  }
  preds [bb110]
  succs [bb112, bb113]

bb112
  0: StorageDead(_262)
    SourceInfo(src/d2s.rs:239:32-239:33)
  1: _250 = const ()
    SourceInfo(src/d2s.rs:240:21-240:26)
  2: StorageDead(_261)
    SourceInfo(src/d2s.rs:241:17-241:18)
  3: StorageDead(_260)
    SourceInfo(src/d2s.rs:241:17-241:18)
  4: StorageDead(_254)
    SourceInfo(src/d2s.rs:251:13-251:14)
  5: StorageDead(_252)
    SourceInfo(src/d2s.rs:251:13-251:14)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:235:9-252:10)
      kind: goto -> bb119
  }
  preds [bb111]
  succs [bb119]

bb113
  0: StorageDead(_262)
    SourceInfo(src/d2s.rs:239:32-239:33)
  1: _260 = const ()
    SourceInfo(src/d2s.rs:241:18-241:18)
  2: StorageDead(_261)
    SourceInfo(src/d2s.rs:241:17-241:18)
  3: StorageDead(_260)
    SourceInfo(src/d2s.rs:241:17-241:18)
  4: StorageLive(_264)
    SourceInfo(src/d2s.rs:242:21-242:29)
  5: StorageLive(_265)
    SourceInfo(src/d2s.rs:242:38-242:40)
  6: _265 = _42
    SourceInfo(src/d2s.rs:242:38-242:40)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:242:32-242:41)
      kind: _264 = d2s_intrinsics::div10(move _265) -> [return: bb114, unwind: bb161]
  }
  preds [bb111]
  succs [bb114, bb161]

bb114
  0: StorageDead(_265)
    SourceInfo(src/d2s.rs:242:40-242:41)
  1: FakeRead(ForLet(None), _264)
    SourceInfo(src/d2s.rs:242:21-242:29)
  2: StorageLive(_266)
    SourceInfo(src/d2s.rs:243:21-243:29)
  3: StorageLive(_267)
    SourceInfo(src/d2s.rs:243:38-243:40)
  4: _267 = _41
    SourceInfo(src/d2s.rs:243:38-243:40)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:243:32-243:41)
      kind: _266 = d2s_intrinsics::div10(move _267) -> [return: bb115, unwind: bb161]
  }
  preds [bb113]
  succs [bb115, bb161]

bb115
  0: StorageDead(_267)
    SourceInfo(src/d2s.rs:243:40-243:41)
  1: FakeRead(ForLet(None), _266)
    SourceInfo(src/d2s.rs:243:21-243:29)
  2: StorageLive(_268)
    SourceInfo(src/d2s.rs:244:21-244:29)
  3: StorageLive(_269)
    SourceInfo(src/d2s.rs:244:32-244:43)
  4: StorageLive(_270)
    SourceInfo(src/d2s.rs:244:33-244:35)
  5: _270 = _41
    SourceInfo(src/d2s.rs:244:33-244:35)
  6: _269 = move _270 as u32 (IntToInt)
    SourceInfo(src/d2s.rs:244:32-244:43)
  7: StorageDead(_270)
    SourceInfo(src/d2s.rs:244:42-244:43)
  8: StorageLive(_271)
    SourceInfo(src/d2s.rs:244:57-244:92)
  9: StorageLive(_272)
    SourceInfo(src/d2s.rs:244:76-244:91)
  10: StorageLive(_273)
    SourceInfo(src/d2s.rs:244:76-244:84)
  11: _273 = _266
    SourceInfo(src/d2s.rs:244:76-244:84)
  12: _272 = move _273 as u32 (IntToInt)
    SourceInfo(src/d2s.rs:244:76-244:91)
  13: StorageDead(_273)
    SourceInfo(src/d2s.rs:244:90-244:91)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:244:57-244:92)
      kind: _271 = core::num::<impl u32>::wrapping_mul(const 10_u32, move _272) -> [return: bb116, unwind: bb161]
  }
  preds [bb114]
  succs [bb116, bb161]

bb116
  0: StorageDead(_272)
    SourceInfo(src/d2s.rs:244:91-244:92)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:244:32-244:93)
      kind: _268 = core::num::<impl u32>::wrapping_sub(move _269, move _271) -> [return: bb117, unwind: bb161]
  }
  preds [bb115]
  succs [bb117, bb161]

bb117
  0: StorageDead(_271)
    SourceInfo(src/d2s.rs:244:92-244:93)
  1: StorageDead(_269)
    SourceInfo(src/d2s.rs:244:92-244:93)
  2: FakeRead(ForLet(None), _268)
    SourceInfo(src/d2s.rs:244:21-244:29)
  3: StorageLive(_274)
    SourceInfo(src/d2s.rs:245:41-245:64)
  4: StorageLive(_275)
    SourceInfo(src/d2s.rs:245:41-245:59)
  5: _275 = _212
    SourceInfo(src/d2s.rs:245:41-245:59)
  6: _274 = Eq(move _275, const 0_u8)
    SourceInfo(src/d2s.rs:245:41-245:64)
  7: StorageDead(_275)
    SourceInfo(src/d2s.rs:245:63-245:64)
  8: _48 = BitAnd(_48, move _274)
    SourceInfo(src/d2s.rs:245:17-245:64)
  9: StorageDead(_274)
    SourceInfo(src/d2s.rs:245:63-245:64)
  10: StorageLive(_276)
    SourceInfo(src/d2s.rs:246:38-246:46)
  11: _276 = _268
    SourceInfo(src/d2s.rs:246:38-246:46)
  12: _212 = move _276 as u8 (IntToInt)
    SourceInfo(src/d2s.rs:246:17-246:52)
  13: StorageDead(_276)
    SourceInfo(src/d2s.rs:246:51-246:52)
  14: StorageLive(_277)
    SourceInfo(src/d2s.rs:247:22-247:30)
  15: _277 = _266
    SourceInfo(src/d2s.rs:247:22-247:30)
  16: _41 = move _277
    SourceInfo(src/d2s.rs:247:17-247:30)
  17: StorageDead(_277)
    SourceInfo(src/d2s.rs:247:29-247:30)
  18: StorageLive(_278)
    SourceInfo(src/d2s.rs:248:22-248:30)
  19: _278 = _264
    SourceInfo(src/d2s.rs:248:22-248:30)
  20: _42 = move _278
    SourceInfo(src/d2s.rs:248:17-248:30)
  21: StorageDead(_278)
    SourceInfo(src/d2s.rs:248:29-248:30)
  22: StorageLive(_279)
    SourceInfo(src/d2s.rs:249:22-249:30)
  23: _279 = _252
    SourceInfo(src/d2s.rs:249:22-249:30)
  24: _43 = move _279
    SourceInfo(src/d2s.rs:249:17-249:30)
  25: StorageDead(_279)
    SourceInfo(src/d2s.rs:249:29-249:30)
  26: _280 = AddWithOverflow(_211, const 1_i32)
    SourceInfo(src/d2s.rs:250:17-250:29)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:250:17-250:29)
      kind: assert(!move (_280.1: bool), "attempt to compute `{} + {}`, which would overflow", _211, const 1_i32) -> [success: bb118, unwind: bb161]
  }
  preds [bb116]
  succs [bb118, bb161]

bb118
  0: _211 = move (_280.0: i32)
    SourceInfo(src/d2s.rs:250:17-250:29)
  1: _217 = const ()
    SourceInfo(src/d2s.rs:236:18-251:14)
  2: StorageDead(_268)
    SourceInfo(src/d2s.rs:251:13-251:14)
  3: StorageDead(_266)
    SourceInfo(src/d2s.rs:251:13-251:14)
  4: StorageDead(_264)
    SourceInfo(src/d2s.rs:251:13-251:14)
  5: StorageDead(_254)
    SourceInfo(src/d2s.rs:251:13-251:14)
  6: StorageDead(_252)
    SourceInfo(src/d2s.rs:251:13-251:14)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:236:13-251:14)
      kind: goto -> bb107
  }
  preds [bb117]
  succs [bb107]

bb119
  0: StorageDead(_251)
    SourceInfo(src/d2s.rs:252:9-252:10)
  1: StorageDead(_250)
    SourceInfo(src/d2s.rs:252:9-252:10)
  2: StorageLive(_281)
    SourceInfo(src/d2s.rs:253:9-256:10)
  3: StorageLive(_282)
    SourceInfo(src/d2s.rs:253:12-253:32)
  4: _282 = _48
    SourceInfo(src/d2s.rs:253:12-253:32)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:253:12-253:32)
      kind: switchInt(move _282) -> [0: bb126, otherwise: bb120]
  }
  preds [bb106, bb112]
  succs [bb120, bb126]

bb120
  0: StorageLive(_283)
    SourceInfo(src/d2s.rs:253:36-253:59)
  1: StorageLive(_284)
    SourceInfo(src/d2s.rs:253:36-253:54)
  2: _284 = _212
    SourceInfo(src/d2s.rs:253:36-253:54)
  3: _283 = Eq(move _284, const 5_u8)
    SourceInfo(src/d2s.rs:253:36-253:59)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:253:36-253:59)
      kind: switchInt(move _283) -> [0: bb125, otherwise: bb121]
  }
  preds [bb119]
  succs [bb121, bb125]

bb121
  0: StorageDead(_284)
    SourceInfo(src/d2s.rs:253:58-253:59)
  1: StorageLive(_285)
    SourceInfo(src/d2s.rs:253:63-253:74)
  2: StorageLive(_286)
    SourceInfo(src/d2s.rs:253:63-253:69)
  3: StorageLive(_287)
    SourceInfo(src/d2s.rs:253:63-253:65)
  4: _287 = _41
    SourceInfo(src/d2s.rs:253:63-253:65)
  5: _288 = Eq(const 2_u64, const 0_u64)
    SourceInfo(src/d2s.rs:253:63-253:69)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:253:63-253:69)
      kind: assert(!move _288, "attempt to calculate the remainder of `{}` with a divisor of zero", _287) -> [success: bb122, unwind: bb161]
  }
  preds [bb120]
  succs [bb122, bb161]

bb122
  0: _286 = Rem(move _287, const 2_u64)
    SourceInfo(src/d2s.rs:253:63-253:69)
  1: StorageDead(_287)
    SourceInfo(src/d2s.rs:253:68-253:69)
  2: _285 = Eq(move _286, const 0_u64)
    SourceInfo(src/d2s.rs:253:63-253:74)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:253:63-253:74)
      kind: switchInt(move _285) -> [0: bb124, otherwise: bb123]
  }
  preds [bb121]
  succs [bb123, bb124]

bb123
  0: StorageDead(_286)
    SourceInfo(src/d2s.rs:253:73-253:74)
  1: _212 = const 4_u8
    SourceInfo(src/d2s.rs:255:13-255:35)
  2: _281 = const ()
    SourceInfo(src/d2s.rs:253:75-256:10)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:253:9-256:10)
      kind: goto -> bb127
  }
  preds [bb122]
  succs [bb127]

bb124
  0: StorageDead(_286)
    SourceInfo(src/d2s.rs:253:73-253:74)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb126
  }
  preds [bb122]
  succs [bb126]

bb125
  0: StorageDead(_284)
    SourceInfo(src/d2s.rs:253:58-253:59)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb126
  }
  preds [bb120]
  succs [bb126]

bb126
  0: _281 = const ()
    SourceInfo(src/d2s.rs:256:10-256:10)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:253:9-256:10)
      kind: goto -> bb127
  }
  preds [bb119, bb124, bb125]
  succs [bb127]

bb127
  0: StorageDead(_285)
    SourceInfo(src/d2s.rs:256:9-256:10)
  1: StorageDead(_283)
    SourceInfo(src/d2s.rs:256:9-256:10)
  2: StorageDead(_282)
    SourceInfo(src/d2s.rs:256:9-256:10)
  3: StorageDead(_281)
    SourceInfo(src/d2s.rs:256:9-256:10)
  4: StorageLive(_289)
    SourceInfo(src/d2s.rs:258:9-258:11)
  5: _289 = _41
    SourceInfo(src/d2s.rs:258:9-258:11)
  6: StorageLive(_290)
    SourceInfo(src/d2s.rs:258:14-259:19)
  7: StorageLive(_291)
    SourceInfo(src/d2s.rs:258:14-258:98)
  8: StorageLive(_292)
    SourceInfo(src/d2s.rs:258:16-258:24)
  9: StorageLive(_293)
    SourceInfo(src/d2s.rs:258:16-258:18)
  10: _293 = _41
    SourceInfo(src/d2s.rs:258:16-258:18)
  11: StorageLive(_294)
    SourceInfo(src/d2s.rs:258:22-258:24)
  12: _294 = _43
    SourceInfo(src/d2s.rs:258:22-258:24)
  13: _292 = Eq(move _293, move _294)
    SourceInfo(src/d2s.rs:258:16-258:24)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:258:16-258:24)
      kind: switchInt(move _292) -> [0: bb131, otherwise: bb128]
  }
  preds [bb123, bb126]
  succs [bb128, bb131]

bb128
  0: StorageDead(_294)
    SourceInfo(src/d2s.rs:258:23-258:24)
  1: StorageDead(_293)
    SourceInfo(src/d2s.rs:258:23-258:24)
  2: StorageLive(_295)
    SourceInfo(src/d2s.rs:258:30-258:43)
  3: _295 = _32
    SourceInfo(src/d2s.rs:258:30-258:43)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:258:30-258:43)
      kind: switchInt(move _295) -> [0: bb130, otherwise: bb129]
  }
  preds [bb127]
  succs [bb129, bb130]

bb129
  0: StorageLive(_296)
    SourceInfo(src/d2s.rs:258:48-258:68)
  1: _296 = _47
    SourceInfo(src/d2s.rs:258:48-258:68)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:258:48-258:68)
      kind: switchInt(move _296) -> [0: bb130, otherwise: bb132]
  }
  preds [bb128]
  succs [bb130, bb132]

bb130
  0: _291 = const true
    SourceInfo(src/d2s.rs:258:14-258:98)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:258:14-258:98)
      kind: goto -> bb133
  }
  preds [bb128, bb129]
  succs [bb133]

bb131
  0: StorageDead(_294)
    SourceInfo(src/d2s.rs:258:23-258:24)
  1: StorageDead(_293)
    SourceInfo(src/d2s.rs:258:23-258:24)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb132
  }
  preds [bb127]
  succs [bb132]

bb132
  0: StorageLive(_297)
    SourceInfo(src/d2s.rs:258:74-258:92)
  1: _297 = _212
    SourceInfo(src/d2s.rs:258:74-258:92)
  2: _291 = Ge(move _297, const 5_u8)
    SourceInfo(src/d2s.rs:258:74-258:97)
  3: StorageDead(_297)
    SourceInfo(src/d2s.rs:258:96-258:97)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:258:14-258:98)
      kind: goto -> bb133
  }
  preds [bb129, bb131]
  succs [bb133]

bb133
  0: StorageDead(_296)
    SourceInfo(src/d2s.rs:258:97-258:98)
  1: StorageDead(_295)
    SourceInfo(src/d2s.rs:258:97-258:98)
  2: StorageDead(_292)
    SourceInfo(src/d2s.rs:258:97-258:98)
  3: _290 = move _291 as u64 (IntToInt)
    SourceInfo(src/d2s.rs:258:14-259:19)
  4: StorageDead(_291)
    SourceInfo(src/d2s.rs:259:18-259:19)
  5: _298 = AddWithOverflow(_289, _290)
    SourceInfo(src/d2s.rs:258:9-259:19)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:258:9-259:19)
      kind: assert(!move (_298.1: bool), "attempt to compute `{} + {}`, which would overflow", move _289, move _290) -> [success: bb134, unwind: bb161]
  }
  preds [bb130, bb132]
  succs [bb134, bb161]

bb134
  0: _213 = move (_298.0: u64)
    SourceInfo(src/d2s.rs:258:9-259:19)
  1: StorageDead(_290)
    SourceInfo(src/d2s.rs:259:18-259:19)
  2: StorageDead(_289)
    SourceInfo(src/d2s.rs:259:18-259:19)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:216:18-295:6)
      kind: goto -> bb159
  }
  preds [bb133]
  succs [bb159]

bb135
  0: StorageLive(_299)
    SourceInfo(src/d2s.rs:262:13-262:25)
  1: _299 = const false
    SourceInfo(src/d2s.rs:262:28-262:33)
  2: FakeRead(ForLet(None), _299)
    SourceInfo(src/d2s.rs:262:13-262:25)
  3: StorageLive(_300)
    SourceInfo(src/d2s.rs:263:13-263:22)
  4: StorageLive(_301)
    SourceInfo(src/d2s.rs:263:32-263:34)
  5: _301 = _42
    SourceInfo(src/d2s.rs:263:32-263:34)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:263:25-263:35)
      kind: _300 = d2s_intrinsics::div100(move _301) -> [return: bb136, unwind: bb161]
  }
  preds [bb92]
  succs [bb136, bb161]

bb136
  0: StorageDead(_301)
    SourceInfo(src/d2s.rs:263:34-263:35)
  1: FakeRead(ForLet(None), _300)
    SourceInfo(src/d2s.rs:263:13-263:22)
  2: StorageLive(_302)
    SourceInfo(src/d2s.rs:264:13-264:22)
  3: StorageLive(_303)
    SourceInfo(src/d2s.rs:264:32-264:34)
  4: _303 = _43
    SourceInfo(src/d2s.rs:264:32-264:34)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:264:25-264:35)
      kind: _302 = d2s_intrinsics::div100(move _303) -> [return: bb137, unwind: bb161]
  }
  preds [bb135]
  succs [bb137, bb161]

bb137
  0: StorageDead(_303)
    SourceInfo(src/d2s.rs:264:34-264:35)
  1: FakeRead(ForLet(None), _302)
    SourceInfo(src/d2s.rs:264:13-264:22)
  2: StorageLive(_304)
    SourceInfo(src/d2s.rs:266:9-274:10)
  3: StorageLive(_305)
    SourceInfo(src/d2s.rs:266:12-266:33)
  4: StorageLive(_306)
    SourceInfo(src/d2s.rs:266:12-266:21)
  5: _306 = _300
    SourceInfo(src/d2s.rs:266:12-266:21)
  6: StorageLive(_307)
    SourceInfo(src/d2s.rs:266:24-266:33)
  7: _307 = _302
    SourceInfo(src/d2s.rs:266:24-266:33)
  8: _305 = Gt(move _306, move _307)
    SourceInfo(src/d2s.rs:266:12-266:33)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:266:12-266:33)
      kind: switchInt(move _305) -> [0: bb143, otherwise: bb138]
  }
  preds [bb136]
  succs [bb138, bb143]

bb138
  0: StorageDead(_307)
    SourceInfo(src/d2s.rs:266:32-266:33)
  1: StorageDead(_306)
    SourceInfo(src/d2s.rs:266:32-266:33)
  2: StorageLive(_308)
    SourceInfo(src/d2s.rs:267:17-267:26)
  3: StorageLive(_309)
    SourceInfo(src/d2s.rs:267:36-267:38)
  4: _309 = _41
    SourceInfo(src/d2s.rs:267:36-267:38)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:267:29-267:39)
      kind: _308 = d2s_intrinsics::div100(move _309) -> [return: bb139, unwind: bb161]
  }
  preds [bb137]
  succs [bb139, bb161]

bb139
  0: StorageDead(_309)
    SourceInfo(src/d2s.rs:267:38-267:39)
  1: FakeRead(ForLet(None), _308)
    SourceInfo(src/d2s.rs:267:17-267:26)
  2: StorageLive(_310)
    SourceInfo(src/d2s.rs:268:17-268:26)
  3: StorageLive(_311)
    SourceInfo(src/d2s.rs:268:29-268:40)
  4: StorageLive(_312)
    SourceInfo(src/d2s.rs:268:30-268:32)
  5: _312 = _41
    SourceInfo(src/d2s.rs:268:30-268:32)
  6: _311 = move _312 as u32 (IntToInt)
    SourceInfo(src/d2s.rs:268:29-268:40)
  7: StorageDead(_312)
    SourceInfo(src/d2s.rs:268:39-268:40)
  8: StorageLive(_313)
    SourceInfo(src/d2s.rs:268:54-268:91)
  9: StorageLive(_314)
    SourceInfo(src/d2s.rs:268:74-268:90)
  10: StorageLive(_315)
    SourceInfo(src/d2s.rs:268:74-268:83)
  11: _315 = _308
    SourceInfo(src/d2s.rs:268:74-268:83)
  12: _314 = move _315 as u32 (IntToInt)
    SourceInfo(src/d2s.rs:268:74-268:90)
  13: StorageDead(_315)
    SourceInfo(src/d2s.rs:268:89-268:90)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:268:54-268:91)
      kind: _313 = core::num::<impl u32>::wrapping_mul(const 100_u32, move _314) -> [return: bb140, unwind: bb161]
  }
  preds [bb138]
  succs [bb140, bb161]

bb140
  0: StorageDead(_314)
    SourceInfo(src/d2s.rs:268:90-268:91)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:268:29-268:92)
      kind: _310 = core::num::<impl u32>::wrapping_sub(move _311, move _313) -> [return: bb141, unwind: bb161]
  }
  preds [bb139]
  succs [bb141, bb161]

bb141
  0: StorageDead(_313)
    SourceInfo(src/d2s.rs:268:91-268:92)
  1: StorageDead(_311)
    SourceInfo(src/d2s.rs:268:91-268:92)
  2: FakeRead(ForLet(None), _310)
    SourceInfo(src/d2s.rs:268:17-268:26)
  3: StorageLive(_316)
    SourceInfo(src/d2s.rs:269:24-269:33)
  4: _316 = _310
    SourceInfo(src/d2s.rs:269:24-269:33)
  5: _299 = Ge(move _316, const 50_u32)
    SourceInfo(src/d2s.rs:269:13-269:39)
  6: StorageDead(_316)
    SourceInfo(src/d2s.rs:269:38-269:39)
  7: StorageLive(_317)
    SourceInfo(src/d2s.rs:270:18-270:27)
  8: _317 = _308
    SourceInfo(src/d2s.rs:270:18-270:27)
  9: _41 = move _317
    SourceInfo(src/d2s.rs:270:13-270:27)
  10: StorageDead(_317)
    SourceInfo(src/d2s.rs:270:26-270:27)
  11: StorageLive(_318)
    SourceInfo(src/d2s.rs:271:18-271:27)
  12: _318 = _300
    SourceInfo(src/d2s.rs:271:18-271:27)
  13: _42 = move _318
    SourceInfo(src/d2s.rs:271:13-271:27)
  14: StorageDead(_318)
    SourceInfo(src/d2s.rs:271:26-271:27)
  15: StorageLive(_319)
    SourceInfo(src/d2s.rs:272:18-272:27)
  16: _319 = _302
    SourceInfo(src/d2s.rs:272:18-272:27)
  17: _43 = move _319
    SourceInfo(src/d2s.rs:272:13-272:27)
  18: StorageDead(_319)
    SourceInfo(src/d2s.rs:272:26-272:27)
  19: _320 = AddWithOverflow(_211, const 2_i32)
    SourceInfo(src/d2s.rs:273:13-273:25)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:273:13-273:25)
      kind: assert(!move (_320.1: bool), "attempt to compute `{} + {}`, which would overflow", _211, const 2_i32) -> [success: bb142, unwind: bb161]
  }
  preds [bb140]
  succs [bb142, bb161]

bb142
  0: _211 = move (_320.0: i32)
    SourceInfo(src/d2s.rs:273:13-273:25)
  1: _304 = const ()
    SourceInfo(src/d2s.rs:266:34-274:10)
  2: StorageDead(_310)
    SourceInfo(src/d2s.rs:274:9-274:10)
  3: StorageDead(_308)
    SourceInfo(src/d2s.rs:274:9-274:10)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:266:9-274:10)
      kind: goto -> bb144
  }
  preds [bb141]
  succs [bb144]

bb143
  0: StorageDead(_307)
    SourceInfo(src/d2s.rs:266:32-266:33)
  1: StorageDead(_306)
    SourceInfo(src/d2s.rs:266:32-266:33)
  2: _304 = const ()
    SourceInfo(src/d2s.rs:274:10-274:10)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:266:9-274:10)
      kind: goto -> bb144
  }
  preds [bb137]
  succs [bb144]

bb144
  0: StorageDead(_305)
    SourceInfo(src/d2s.rs:274:9-274:10)
  1: StorageDead(_304)
    SourceInfo(src/d2s.rs:274:9-274:10)
  2: StorageLive(_321)
    SourceInfo(src/d2s.rs:279:9-292:10)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:279:9-292:10)
      kind: goto -> bb145
  }
  preds [bb142, bb143]
  succs [bb145]

bb145
  Terminator {
      source_info: SourceInfo(src/d2s.rs:279:9-292:10)
      kind: falseUnwind -> [real: bb146, unwind: bb161]
  }
  preds [bb144, bb154]
  succs [bb146, bb161]

bb146
  0: StorageLive(_322)
    SourceInfo(src/d2s.rs:280:17-280:25)
  1: StorageLive(_323)
    SourceInfo(src/d2s.rs:280:34-280:36)
  2: _323 = _42
    SourceInfo(src/d2s.rs:280:34-280:36)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:280:28-280:37)
      kind: _322 = d2s_intrinsics::div10(move _323) -> [return: bb147, unwind: bb161]
  }
  preds [bb145]
  succs [bb147, bb161]

bb147
  0: StorageDead(_323)
    SourceInfo(src/d2s.rs:280:36-280:37)
  1: FakeRead(ForLet(None), _322)
    SourceInfo(src/d2s.rs:280:17-280:25)
  2: StorageLive(_324)
    SourceInfo(src/d2s.rs:281:17-281:25)
  3: StorageLive(_325)
    SourceInfo(src/d2s.rs:281:34-281:36)
  4: _325 = _43
    SourceInfo(src/d2s.rs:281:34-281:36)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:281:28-281:37)
      kind: _324 = d2s_intrinsics::div10(move _325) -> [return: bb148, unwind: bb161]
  }
  preds [bb146]
  succs [bb148, bb161]

bb148
  0: StorageDead(_325)
    SourceInfo(src/d2s.rs:281:36-281:37)
  1: FakeRead(ForLet(None), _324)
    SourceInfo(src/d2s.rs:281:17-281:25)
  2: StorageLive(_326)
    SourceInfo(src/d2s.rs:282:13-284:14)
  3: StorageLive(_327)
    SourceInfo(src/d2s.rs:282:16-282:36)
  4: StorageLive(_328)
    SourceInfo(src/d2s.rs:282:16-282:24)
  5: _328 = _322
    SourceInfo(src/d2s.rs:282:16-282:24)
  6: StorageLive(_329)
    SourceInfo(src/d2s.rs:282:28-282:36)
  7: _329 = _324
    SourceInfo(src/d2s.rs:282:28-282:36)
  8: _327 = Le(move _328, move _329)
    SourceInfo(src/d2s.rs:282:16-282:36)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:282:16-282:36)
      kind: switchInt(move _327) -> [0: bb150, otherwise: bb149]
  }
  preds [bb147]
  succs [bb149, bb150]

bb149
  0: StorageDead(_329)
    SourceInfo(src/d2s.rs:282:35-282:36)
  1: StorageDead(_328)
    SourceInfo(src/d2s.rs:282:35-282:36)
  2: _321 = const ()
    SourceInfo(src/d2s.rs:283:17-283:22)
  3: StorageDead(_327)
    SourceInfo(src/d2s.rs:284:13-284:14)
  4: StorageDead(_326)
    SourceInfo(src/d2s.rs:284:13-284:14)
  5: StorageDead(_324)
    SourceInfo(src/d2s.rs:292:9-292:10)
  6: StorageDead(_322)
    SourceInfo(src/d2s.rs:292:9-292:10)
  7: StorageDead(_321)
    SourceInfo(src/d2s.rs:292:9-292:10)
  8: StorageLive(_344)
    SourceInfo(src/d2s.rs:294:9-294:11)
  9: _344 = _41
    SourceInfo(src/d2s.rs:294:9-294:11)
  10: StorageLive(_345)
    SourceInfo(src/d2s.rs:294:14-294:43)
  11: StorageLive(_346)
    SourceInfo(src/d2s.rs:294:14-294:36)
  12: StorageLive(_347)
    SourceInfo(src/d2s.rs:294:15-294:23)
  13: StorageLive(_348)
    SourceInfo(src/d2s.rs:294:15-294:17)
  14: _348 = _41
    SourceInfo(src/d2s.rs:294:15-294:17)
  15: StorageLive(_349)
    SourceInfo(src/d2s.rs:294:21-294:23)
  16: _349 = _43
    SourceInfo(src/d2s.rs:294:21-294:23)
  17: _347 = Eq(move _348, move _349)
    SourceInfo(src/d2s.rs:294:15-294:23)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:294:15-294:23)
      kind: switchInt(move _347) -> [0: bb156, otherwise: bb155]
  }
  preds [bb148]
  succs [bb155, bb156]

bb150
  0: StorageDead(_329)
    SourceInfo(src/d2s.rs:282:35-282:36)
  1: StorageDead(_328)
    SourceInfo(src/d2s.rs:282:35-282:36)
  2: _326 = const ()
    SourceInfo(src/d2s.rs:284:14-284:14)
  3: StorageDead(_327)
    SourceInfo(src/d2s.rs:284:13-284:14)
  4: StorageDead(_326)
    SourceInfo(src/d2s.rs:284:13-284:14)
  5: StorageLive(_331)
    SourceInfo(src/d2s.rs:285:17-285:25)
  6: StorageLive(_332)
    SourceInfo(src/d2s.rs:285:34-285:36)
  7: _332 = _41
    SourceInfo(src/d2s.rs:285:34-285:36)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:285:28-285:37)
      kind: _331 = d2s_intrinsics::div10(move _332) -> [return: bb151, unwind: bb161]
  }
  preds [bb148]
  succs [bb151, bb161]

bb151
  0: StorageDead(_332)
    SourceInfo(src/d2s.rs:285:36-285:37)
  1: FakeRead(ForLet(None), _331)
    SourceInfo(src/d2s.rs:285:17-285:25)
  2: StorageLive(_333)
    SourceInfo(src/d2s.rs:286:17-286:25)
  3: StorageLive(_334)
    SourceInfo(src/d2s.rs:286:28-286:39)
  4: StorageLive(_335)
    SourceInfo(src/d2s.rs:286:29-286:31)
  5: _335 = _41
    SourceInfo(src/d2s.rs:286:29-286:31)
  6: _334 = move _335 as u32 (IntToInt)
    SourceInfo(src/d2s.rs:286:28-286:39)
  7: StorageDead(_335)
    SourceInfo(src/d2s.rs:286:38-286:39)
  8: StorageLive(_336)
    SourceInfo(src/d2s.rs:286:53-286:88)
  9: StorageLive(_337)
    SourceInfo(src/d2s.rs:286:72-286:87)
  10: StorageLive(_338)
    SourceInfo(src/d2s.rs:286:72-286:80)
  11: _338 = _331
    SourceInfo(src/d2s.rs:286:72-286:80)
  12: _337 = move _338 as u32 (IntToInt)
    SourceInfo(src/d2s.rs:286:72-286:87)
  13: StorageDead(_338)
    SourceInfo(src/d2s.rs:286:86-286:87)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:286:53-286:88)
      kind: _336 = core::num::<impl u32>::wrapping_mul(const 10_u32, move _337) -> [return: bb152, unwind: bb161]
  }
  preds [bb150]
  succs [bb152, bb161]

bb152
  0: StorageDead(_337)
    SourceInfo(src/d2s.rs:286:87-286:88)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:286:28-286:89)
      kind: _333 = core::num::<impl u32>::wrapping_sub(move _334, move _336) -> [return: bb153, unwind: bb161]
  }
  preds [bb151]
  succs [bb153, bb161]

bb153
  0: StorageDead(_336)
    SourceInfo(src/d2s.rs:286:88-286:89)
  1: StorageDead(_334)
    SourceInfo(src/d2s.rs:286:88-286:89)
  2: FakeRead(ForLet(None), _333)
    SourceInfo(src/d2s.rs:286:17-286:25)
  3: StorageLive(_339)
    SourceInfo(src/d2s.rs:287:24-287:32)
  4: _339 = _333
    SourceInfo(src/d2s.rs:287:24-287:32)
  5: _299 = Ge(move _339, const 5_u32)
    SourceInfo(src/d2s.rs:287:13-287:37)
  6: StorageDead(_339)
    SourceInfo(src/d2s.rs:287:36-287:37)
  7: StorageLive(_340)
    SourceInfo(src/d2s.rs:288:18-288:26)
  8: _340 = _331
    SourceInfo(src/d2s.rs:288:18-288:26)
  9: _41 = move _340
    SourceInfo(src/d2s.rs:288:13-288:26)
  10: StorageDead(_340)
    SourceInfo(src/d2s.rs:288:25-288:26)
  11: StorageLive(_341)
    SourceInfo(src/d2s.rs:289:18-289:26)
  12: _341 = _322
    SourceInfo(src/d2s.rs:289:18-289:26)
  13: _42 = move _341
    SourceInfo(src/d2s.rs:289:13-289:26)
  14: StorageDead(_341)
    SourceInfo(src/d2s.rs:289:25-289:26)
  15: StorageLive(_342)
    SourceInfo(src/d2s.rs:290:18-290:26)
  16: _342 = _324
    SourceInfo(src/d2s.rs:290:18-290:26)
  17: _43 = move _342
    SourceInfo(src/d2s.rs:290:13-290:26)
  18: StorageDead(_342)
    SourceInfo(src/d2s.rs:290:25-290:26)
  19: _343 = AddWithOverflow(_211, const 1_i32)
    SourceInfo(src/d2s.rs:291:13-291:25)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:291:13-291:25)
      kind: assert(!move (_343.1: bool), "attempt to compute `{} + {}`, which would overflow", _211, const 1_i32) -> [success: bb154, unwind: bb161]
  }
  preds [bb152]
  succs [bb154, bb161]

bb154
  0: _211 = move (_343.0: i32)
    SourceInfo(src/d2s.rs:291:13-291:25)
  1: _217 = const ()
    SourceInfo(src/d2s.rs:279:14-292:10)
  2: StorageDead(_333)
    SourceInfo(src/d2s.rs:292:9-292:10)
  3: StorageDead(_331)
    SourceInfo(src/d2s.rs:292:9-292:10)
  4: StorageDead(_324)
    SourceInfo(src/d2s.rs:292:9-292:10)
  5: StorageDead(_322)
    SourceInfo(src/d2s.rs:292:9-292:10)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:279:9-292:10)
      kind: goto -> bb145
  }
  preds [bb153]
  succs [bb145]

bb155
  0: StorageDead(_349)
    SourceInfo(src/d2s.rs:294:22-294:23)
  1: StorageDead(_348)
    SourceInfo(src/d2s.rs:294:22-294:23)
  2: _346 = const true
    SourceInfo(src/d2s.rs:294:14-294:36)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:294:14-294:36)
      kind: goto -> bb157
  }
  preds [bb149]
  succs [bb157]

bb156
  0: StorageDead(_349)
    SourceInfo(src/d2s.rs:294:22-294:23)
  1: StorageDead(_348)
    SourceInfo(src/d2s.rs:294:22-294:23)
  2: _346 = _299
    SourceInfo(src/d2s.rs:294:27-294:35)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:294:14-294:36)
      kind: goto -> bb157
  }
  preds [bb149]
  succs [bb157]

bb157
  0: StorageDead(_347)
    SourceInfo(src/d2s.rs:294:35-294:36)
  1: _345 = move _346 as u64 (IntToInt)
    SourceInfo(src/d2s.rs:294:14-294:43)
  2: StorageDead(_346)
    SourceInfo(src/d2s.rs:294:42-294:43)
  3: _350 = AddWithOverflow(_344, _345)
    SourceInfo(src/d2s.rs:294:9-294:43)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:294:9-294:43)
      kind: assert(!move (_350.1: bool), "attempt to compute `{} + {}`, which would overflow", move _344, move _345) -> [success: bb158, unwind: bb161]
  }
  preds [bb155, bb156]
  succs [bb158, bb161]

bb158
  0: _213 = move (_350.0: u64)
    SourceInfo(src/d2s.rs:294:9-294:43)
  1: StorageDead(_345)
    SourceInfo(src/d2s.rs:294:42-294:43)
  2: StorageDead(_344)
    SourceInfo(src/d2s.rs:294:42-294:43)
  3: StorageDead(_302)
    SourceInfo(src/d2s.rs:295:5-295:6)
  4: StorageDead(_300)
    SourceInfo(src/d2s.rs:295:5-295:6)
  5: StorageDead(_299)
    SourceInfo(src/d2s.rs:295:5-295:6)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:216:18-295:6)
      kind: goto -> bb159
  }
  preds [bb157]
  succs [bb159]

bb159
  0: StorageDead(_215)
    SourceInfo(src/d2s.rs:295:5-295:6)
  1: StorageDead(_214)
    SourceInfo(src/d2s.rs:295:5-295:6)
  2: FakeRead(ForLet(None), _213)
    SourceInfo(src/d2s.rs:216:9-216:15)
  3: StorageLive(_351)
    SourceInfo(src/d2s.rs:296:9-296:12)
  4: StorageLive(_352)
    SourceInfo(src/d2s.rs:296:15-296:18)
  5: _352 = _46
    SourceInfo(src/d2s.rs:296:15-296:18)
  6: StorageLive(_353)
    SourceInfo(src/d2s.rs:296:21-296:28)
  7: _353 = _211
    SourceInfo(src/d2s.rs:296:21-296:28)
  8: _354 = AddWithOverflow(_352, _353)
    SourceInfo(src/d2s.rs:296:15-296:28)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:296:15-296:28)
      kind: assert(!move (_354.1: bool), "attempt to compute `{} + {}`, which would overflow", move _352, move _353) -> [success: bb160, unwind: bb161]
  }
  preds [bb134, bb158]
  succs [bb160, bb161]

bb160
  0: _351 = move (_354.0: i32)
    SourceInfo(src/d2s.rs:296:15-296:28)
  1: StorageDead(_353)
    SourceInfo(src/d2s.rs:296:27-296:28)
  2: StorageDead(_352)
    SourceInfo(src/d2s.rs:296:27-296:28)
  3: FakeRead(ForLet(None), _351)
    SourceInfo(src/d2s.rs:296:9-296:12)
  4: StorageLive(_355)
    SourceInfo(src/d2s.rs:299:19-299:22)
  5: _355 = _351
    SourceInfo(src/d2s.rs:299:19-299:22)
  6: StorageLive(_356)
    SourceInfo(src/d2s.rs:300:19-300:25)
  7: _356 = _213
    SourceInfo(src/d2s.rs:300:19-300:25)
  8: _0 = d2s::FloatingDecimal64 { mantissa: move _356, exponent: move _355 }
    SourceInfo(src/d2s.rs:298:5-301:6)
  9: StorageDead(_356)
    SourceInfo(src/d2s.rs:301:5-301:6)
  10: StorageDead(_355)
    SourceInfo(src/d2s.rs:301:5-301:6)
  11: StorageDead(_351)
    SourceInfo(src/d2s.rs:302:1-302:2)
  12: StorageDead(_213)
    SourceInfo(src/d2s.rs:302:1-302:2)
  13: StorageDead(_212)
    SourceInfo(src/d2s.rs:302:1-302:2)
  14: StorageDead(_211)
    SourceInfo(src/d2s.rs:302:1-302:2)
  15: StorageDead(_48)
    SourceInfo(src/d2s.rs:302:1-302:2)
  16: StorageDead(_47)
    SourceInfo(src/d2s.rs:302:1-302:2)
  17: StorageDead(_46)
    SourceInfo(src/d2s.rs:302:1-302:2)
  18: StorageDead(_45)
    SourceInfo(src/d2s.rs:302:1-302:2)
  19: StorageDead(_44)
    SourceInfo(src/d2s.rs:302:1-302:2)
  20: StorageDead(_43)
    SourceInfo(src/d2s.rs:302:1-302:2)
  21: StorageDead(_42)
    SourceInfo(src/d2s.rs:302:1-302:2)
  22: StorageDead(_41)
    SourceInfo(src/d2s.rs:302:1-302:2)
  23: StorageDead(_36)
    SourceInfo(src/d2s.rs:302:1-302:2)
  24: StorageDead(_33)
    SourceInfo(src/d2s.rs:302:1-302:2)
  25: StorageDead(_32)
    SourceInfo(src/d2s.rs:302:1-302:2)
  26: StorageDead(_29)
    SourceInfo(src/d2s.rs:302:1-302:2)
  27: StorageDead(_4)
    SourceInfo(src/d2s.rs:302:1-302:2)
  28: StorageDead(_3)
    SourceInfo(src/d2s.rs:302:1-302:2)
  Terminator {
      source_info: SourceInfo(src/d2s.rs:302:2-302:2)
      kind: return
  }
  preds [bb159]
  succs []

bb161
  Terminator {
      source_info: SourceInfo(src/d2s.rs:91:1-302:2)
      kind: resume
  }
  preds [bb1, bb2, bb3, bb5, bb6, bb7, bb8, bb10, bb14, bb15, bb17, bb18, bb19, bb20, bb21, bb22, bb23, bb24, bb26, bb29, bb31, bb32, bb33, bb34, bb35, bb36, bb38, bb39, bb40, bb42, bb45, bb46, bb47, bb49, bb50, bb51, bb57, bb58, bb59, bb60, bb61, bb62, bb63, bb64, bb65, bb66, bb68, bb71, bb73, bb74, bb75, bb76, bb77, bb78, bb82, bb86, bb94, bb95, bb96, bb99, bb100, bb101, bb102, bb103, bb104, bb107, bb108, bb109, bb110, bb113, bb114, bb115, bb116, bb117, bb121, bb133, bb135, bb136, bb138, bb139, bb140, bb141, bb145, bb146, bb147, bb150, bb151, bb152, bb153, bb157, bb159]
  succs []

