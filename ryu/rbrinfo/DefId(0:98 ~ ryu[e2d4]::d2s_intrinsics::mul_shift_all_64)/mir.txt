bb0
  0: StorageLive(_7)
    SourceInfo(src/d2s_intrinsics.rs:86:5-86:52)
  1: StorageLive(_8)
    SourceInfo(src/d2s_intrinsics.rs:86:16-86:18)
  2: _8 = _4
    SourceInfo(src/d2s_intrinsics.rs:86:16-86:18)
  3: StorageLive(_9)
    SourceInfo(src/d2s_intrinsics.rs:86:20-86:51)
  4: StorageLive(_10)
    SourceInfo(src/d2s_intrinsics.rs:86:33-86:42)
  5: StorageLive(_11)
    SourceInfo(src/d2s_intrinsics.rs:86:33-86:38)
  6: StorageLive(_12)
    SourceInfo(src/d2s_intrinsics.rs:86:37-86:38)
  7: _12 = _1
    SourceInfo(src/d2s_intrinsics.rs:86:37-86:38)
  8: _13 = MulWithOverflow(const 4_u64, _12)
    SourceInfo(src/d2s_intrinsics.rs:86:33-86:38)
  Terminator {
      source_info: SourceInfo(src/d2s_intrinsics.rs:86:33-86:38)
      kind: assert(!move (_13.1: bool), "attempt to compute `{} * {}`, which would overflow", const 4_u64, move _12) -> [success: bb1, unwind: bb12]
  }
  preds []
  succs [bb1, bb12]

bb1
  0: _11 = move (_13.0: u64)
    SourceInfo(src/d2s_intrinsics.rs:86:33-86:38)
  1: StorageDead(_12)
    SourceInfo(src/d2s_intrinsics.rs:86:37-86:38)
  2: _14 = AddWithOverflow(_11, const 2_u64)
    SourceInfo(src/d2s_intrinsics.rs:86:33-86:42)
  Terminator {
      source_info: SourceInfo(src/d2s_intrinsics.rs:86:33-86:42)
      kind: assert(!move (_14.1: bool), "attempt to compute `{} + {}`, which would overflow", move _11, const 2_u64) -> [success: bb2, unwind: bb12]
  }
  preds [bb0]
  succs [bb2, bb12]

bb2
  0: _10 = move (_14.0: u64)
    SourceInfo(src/d2s_intrinsics.rs:86:33-86:42)
  1: StorageDead(_11)
    SourceInfo(src/d2s_intrinsics.rs:86:41-86:42)
  2: StorageLive(_15)
    SourceInfo(src/d2s_intrinsics.rs:86:44-86:47)
  3: _15 = &(*_2)
    SourceInfo(src/d2s_intrinsics.rs:86:44-86:47)
  4: StorageLive(_16)
    SourceInfo(src/d2s_intrinsics.rs:86:49-86:50)
  5: _16 = _3
    SourceInfo(src/d2s_intrinsics.rs:86:49-86:50)
  Terminator {
      source_info: SourceInfo(src/d2s_intrinsics.rs:86:20-86:51)
      kind: _9 = d2s_intrinsics::mul_shift_64(move _10, move _15, move _16) -> [return: bb3, unwind: bb12]
  }
  preds [bb1]
  succs [bb3, bb12]

bb3
  0: StorageDead(_16)
    SourceInfo(src/d2s_intrinsics.rs:86:50-86:51)
  1: StorageDead(_15)
    SourceInfo(src/d2s_intrinsics.rs:86:50-86:51)
  2: StorageDead(_10)
    SourceInfo(src/d2s_intrinsics.rs:86:50-86:51)
  Terminator {
      source_info: SourceInfo(src/d2s_intrinsics.rs:86:5-86:52)
      kind: _7 = core::ptr::write::<u64>(move _8, move _9) -> [return: bb4, unwind: bb12]
  }
  preds [bb2]
  succs [bb4, bb12]

bb4
  0: StorageDead(_9)
    SourceInfo(src/d2s_intrinsics.rs:86:51-86:52)
  1: StorageDead(_8)
    SourceInfo(src/d2s_intrinsics.rs:86:51-86:52)
  2: StorageDead(_7)
    SourceInfo(src/d2s_intrinsics.rs:86:52-86:53)
  3: StorageLive(_17)
    SourceInfo(src/d2s_intrinsics.rs:87:5-87:70)
  4: StorageLive(_18)
    SourceInfo(src/d2s_intrinsics.rs:87:16-87:18)
  5: _18 = _5
    SourceInfo(src/d2s_intrinsics.rs:87:16-87:18)
  6: StorageLive(_19)
    SourceInfo(src/d2s_intrinsics.rs:87:20-87:69)
  7: StorageLive(_20)
    SourceInfo(src/d2s_intrinsics.rs:87:33-87:60)
  8: StorageLive(_21)
    SourceInfo(src/d2s_intrinsics.rs:87:33-87:42)
  9: StorageLive(_22)
    SourceInfo(src/d2s_intrinsics.rs:87:33-87:38)
  10: StorageLive(_23)
    SourceInfo(src/d2s_intrinsics.rs:87:37-87:38)
  11: _23 = _1
    SourceInfo(src/d2s_intrinsics.rs:87:37-87:38)
  12: _24 = MulWithOverflow(const 4_u64, _23)
    SourceInfo(src/d2s_intrinsics.rs:87:33-87:38)
  Terminator {
      source_info: SourceInfo(src/d2s_intrinsics.rs:87:33-87:38)
      kind: assert(!move (_24.1: bool), "attempt to compute `{} * {}`, which would overflow", const 4_u64, move _23) -> [success: bb5, unwind: bb12]
  }
  preds [bb3]
  succs [bb5, bb12]

bb5
  0: _22 = move (_24.0: u64)
    SourceInfo(src/d2s_intrinsics.rs:87:33-87:38)
  1: StorageDead(_23)
    SourceInfo(src/d2s_intrinsics.rs:87:37-87:38)
  2: _25 = SubWithOverflow(_22, const 1_u64)
    SourceInfo(src/d2s_intrinsics.rs:87:33-87:42)
  Terminator {
      source_info: SourceInfo(src/d2s_intrinsics.rs:87:33-87:42)
      kind: assert(!move (_25.1: bool), "attempt to compute `{} - {}`, which would overflow", move _22, const 1_u64) -> [success: bb6, unwind: bb12]
  }
  preds [bb4]
  succs [bb6, bb12]

bb6
  0: _21 = move (_25.0: u64)
    SourceInfo(src/d2s_intrinsics.rs:87:33-87:42)
  1: StorageDead(_22)
    SourceInfo(src/d2s_intrinsics.rs:87:41-87:42)
  2: StorageLive(_26)
    SourceInfo(src/d2s_intrinsics.rs:87:45-87:60)
  3: StorageLive(_27)
    SourceInfo(src/d2s_intrinsics.rs:87:45-87:53)
  4: _27 = _6
    SourceInfo(src/d2s_intrinsics.rs:87:45-87:53)
  5: _26 = move _27 as u64 (IntToInt)
    SourceInfo(src/d2s_intrinsics.rs:87:45-87:60)
  6: StorageDead(_27)
    SourceInfo(src/d2s_intrinsics.rs:87:59-87:60)
  7: _28 = SubWithOverflow(_21, _26)
    SourceInfo(src/d2s_intrinsics.rs:87:33-87:60)
  Terminator {
      source_info: SourceInfo(src/d2s_intrinsics.rs:87:33-87:60)
      kind: assert(!move (_28.1: bool), "attempt to compute `{} - {}`, which would overflow", move _21, move _26) -> [success: bb7, unwind: bb12]
  }
  preds [bb5]
  succs [bb7, bb12]

bb7
  0: _20 = move (_28.0: u64)
    SourceInfo(src/d2s_intrinsics.rs:87:33-87:60)
  1: StorageDead(_26)
    SourceInfo(src/d2s_intrinsics.rs:87:59-87:60)
  2: StorageDead(_21)
    SourceInfo(src/d2s_intrinsics.rs:87:59-87:60)
  3: StorageLive(_29)
    SourceInfo(src/d2s_intrinsics.rs:87:62-87:65)
  4: _29 = &(*_2)
    SourceInfo(src/d2s_intrinsics.rs:87:62-87:65)
  5: StorageLive(_30)
    SourceInfo(src/d2s_intrinsics.rs:87:67-87:68)
  6: _30 = _3
    SourceInfo(src/d2s_intrinsics.rs:87:67-87:68)
  Terminator {
      source_info: SourceInfo(src/d2s_intrinsics.rs:87:20-87:69)
      kind: _19 = d2s_intrinsics::mul_shift_64(move _20, move _29, move _30) -> [return: bb8, unwind: bb12]
  }
  preds [bb6]
  succs [bb8, bb12]

bb8
  0: StorageDead(_30)
    SourceInfo(src/d2s_intrinsics.rs:87:68-87:69)
  1: StorageDead(_29)
    SourceInfo(src/d2s_intrinsics.rs:87:68-87:69)
  2: StorageDead(_20)
    SourceInfo(src/d2s_intrinsics.rs:87:68-87:69)
  Terminator {
      source_info: SourceInfo(src/d2s_intrinsics.rs:87:5-87:70)
      kind: _17 = core::ptr::write::<u64>(move _18, move _19) -> [return: bb9, unwind: bb12]
  }
  preds [bb7]
  succs [bb9, bb12]

bb9
  0: StorageDead(_19)
    SourceInfo(src/d2s_intrinsics.rs:87:69-87:70)
  1: StorageDead(_18)
    SourceInfo(src/d2s_intrinsics.rs:87:69-87:70)
  2: StorageDead(_17)
    SourceInfo(src/d2s_intrinsics.rs:87:70-87:71)
  3: StorageLive(_31)
    SourceInfo(src/d2s_intrinsics.rs:88:18-88:23)
  4: StorageLive(_32)
    SourceInfo(src/d2s_intrinsics.rs:88:22-88:23)
  5: _32 = _1
    SourceInfo(src/d2s_intrinsics.rs:88:22-88:23)
  6: _33 = MulWithOverflow(const 4_u64, _32)
    SourceInfo(src/d2s_intrinsics.rs:88:18-88:23)
  Terminator {
      source_info: SourceInfo(src/d2s_intrinsics.rs:88:18-88:23)
      kind: assert(!move (_33.1: bool), "attempt to compute `{} * {}`, which would overflow", const 4_u64, move _32) -> [success: bb10, unwind: bb12]
  }
  preds [bb8]
  succs [bb10, bb12]

bb10
  0: _31 = move (_33.0: u64)
    SourceInfo(src/d2s_intrinsics.rs:88:18-88:23)
  1: StorageDead(_32)
    SourceInfo(src/d2s_intrinsics.rs:88:22-88:23)
  2: StorageLive(_34)
    SourceInfo(src/d2s_intrinsics.rs:88:25-88:28)
  3: _34 = &(*_2)
    SourceInfo(src/d2s_intrinsics.rs:88:25-88:28)
  4: StorageLive(_35)
    SourceInfo(src/d2s_intrinsics.rs:88:30-88:31)
  5: _35 = _3
    SourceInfo(src/d2s_intrinsics.rs:88:30-88:31)
  Terminator {
      source_info: SourceInfo(src/d2s_intrinsics.rs:88:5-88:32)
      kind: _0 = d2s_intrinsics::mul_shift_64(move _31, move _34, move _35) -> [return: bb11, unwind: bb12]
  }
  preds [bb9]
  succs [bb11, bb12]

bb11
  0: StorageDead(_35)
    SourceInfo(src/d2s_intrinsics.rs:88:31-88:32)
  1: StorageDead(_34)
    SourceInfo(src/d2s_intrinsics.rs:88:31-88:32)
  2: StorageDead(_31)
    SourceInfo(src/d2s_intrinsics.rs:88:31-88:32)
  Terminator {
      source_info: SourceInfo(src/d2s_intrinsics.rs:89:2-89:2)
      kind: return
  }
  preds [bb10]
  succs []

bb12
  Terminator {
      source_info: SourceInfo(src/d2s_intrinsics.rs:78:1-89:2)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3, bb4, bb5, bb6, bb7, bb8, bb9, bb10]
  succs []

