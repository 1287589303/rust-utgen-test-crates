bb0
  0: StorageLive(_3)
    SourceInfo(src/pretty/mantissa.rs:6:5-39:6)
  1: StorageLive(_4)
    SourceInfo(src/pretty/mantissa.rs:6:8-6:27)
  2: StorageLive(_5)
    SourceInfo(src/pretty/mantissa.rs:6:8-6:22)
  3: StorageLive(_6)
    SourceInfo(src/pretty/mantissa.rs:6:9-6:15)
  4: _6 = _1
    SourceInfo(src/pretty/mantissa.rs:6:9-6:15)
  5: _7 = const 32_i32 as u32 (IntToInt)
    SourceInfo(src/pretty/mantissa.rs:6:8-6:22)
  6: _8 = Lt(move _7, const 64_u32)
    SourceInfo(src/pretty/mantissa.rs:6:8-6:22)
  Terminator {
      source_info: SourceInfo(src/pretty/mantissa.rs:6:8-6:22)
      kind: assert(move _8, "attempt to shift right by `{}`, which would overflow", const 32_i32) -> [success: bb1, unwind: bb38]
  }
  preds []
  succs [bb1, bb38]

bb1
  0: _5 = Shr(move _6, const 32_i32)
    SourceInfo(src/pretty/mantissa.rs:6:8-6:22)
  1: StorageDead(_6)
    SourceInfo(src/pretty/mantissa.rs:6:21-6:22)
  2: _4 = Ne(move _5, const 0_u64)
    SourceInfo(src/pretty/mantissa.rs:6:8-6:27)
  Terminator {
      source_info: SourceInfo(src/pretty/mantissa.rs:6:8-6:27)
      kind: switchInt(move _4) -> [0: bb35, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb35]

bb2
  0: StorageDead(_5)
    SourceInfo(src/pretty/mantissa.rs:6:26-6:27)
  1: StorageLive(_9)
    SourceInfo(src/pretty/mantissa.rs:8:13-8:24)
  2: StorageLive(_10)
    SourceInfo(src/pretty/mantissa.rs:8:27-8:74)
  3: StorageLive(_11)
    SourceInfo(src/pretty/mantissa.rs:8:28-8:34)
  4: _11 = _1
    SourceInfo(src/pretty/mantissa.rs:8:28-8:34)
  5: StorageLive(_12)
    SourceInfo(src/pretty/mantissa.rs:8:37-8:73)
  6: StorageLive(_13)
    SourceInfo(src/pretty/mantissa.rs:8:51-8:73)
  7: StorageLive(_14)
    SourceInfo(src/pretty/mantissa.rs:8:52-8:58)
  8: _14 = _1
    SourceInfo(src/pretty/mantissa.rs:8:52-8:58)
  9: _15 = Eq(const 100000000_u64, const 0_u64)
    SourceInfo(src/pretty/mantissa.rs:8:51-8:73)
  Terminator {
      source_info: SourceInfo(src/pretty/mantissa.rs:8:51-8:73)
      kind: assert(!move _15, "attempt to divide `{}` by zero", _14) -> [success: bb3, unwind: bb38]
  }
  preds [bb1]
  succs [bb3, bb38]

bb3
  0: _13 = Div(move _14, const 100000000_u64)
    SourceInfo(src/pretty/mantissa.rs:8:51-8:73)
  1: StorageDead(_14)
    SourceInfo(src/pretty/mantissa.rs:8:72-8:73)
  2: _16 = MulWithOverflow(const 100000000_u64, _13)
    SourceInfo(src/pretty/mantissa.rs:8:37-8:73)
  Terminator {
      source_info: SourceInfo(src/pretty/mantissa.rs:8:37-8:73)
      kind: assert(!move (_16.1: bool), "attempt to compute `{} * {}`, which would overflow", const 100000000_u64, move _13) -> [success: bb4, unwind: bb38]
  }
  preds [bb2]
  succs [bb4, bb38]

bb4
  0: _12 = move (_16.0: u64)
    SourceInfo(src/pretty/mantissa.rs:8:37-8:73)
  1: StorageDead(_13)
    SourceInfo(src/pretty/mantissa.rs:8:72-8:73)
  2: _17 = SubWithOverflow(_11, _12)
    SourceInfo(src/pretty/mantissa.rs:8:27-8:74)
  Terminator {
      source_info: SourceInfo(src/pretty/mantissa.rs:8:27-8:74)
      kind: assert(!move (_17.1: bool), "attempt to compute `{} - {}`, which would overflow", move _11, move _12) -> [success: bb5, unwind: bb38]
  }
  preds [bb3]
  succs [bb5, bb38]

bb5
  0: _10 = move (_17.0: u64)
    SourceInfo(src/pretty/mantissa.rs:8:27-8:74)
  1: StorageDead(_12)
    SourceInfo(src/pretty/mantissa.rs:8:73-8:74)
  2: StorageDead(_11)
    SourceInfo(src/pretty/mantissa.rs:8:73-8:74)
  3: _9 = move _10 as u32 (IntToInt)
    SourceInfo(src/pretty/mantissa.rs:8:27-8:81)
  4: StorageDead(_10)
    SourceInfo(src/pretty/mantissa.rs:8:80-8:81)
  5: FakeRead(ForLet(None), _9)
    SourceInfo(src/pretty/mantissa.rs:8:13-8:24)
  6: _18 = Eq(const 100000000_u64, const 0_u64)
    SourceInfo(src/pretty/mantissa.rs:9:9-9:30)
  Terminator {
      source_info: SourceInfo(src/pretty/mantissa.rs:9:9-9:30)
      kind: assert(!move _18, "attempt to divide `{}` by zero", _1) -> [success: bb6, unwind: bb38]
  }
  preds [bb4]
  succs [bb6, bb38]

bb6
  0: _1 = Div(_1, const 100000000_u64)
    SourceInfo(src/pretty/mantissa.rs:9:9-9:30)
  1: StorageLive(_19)
    SourceInfo(src/pretty/mantissa.rs:11:13-11:14)
  2: StorageLive(_20)
    SourceInfo(src/pretty/mantissa.rs:11:17-11:24)
  3: _20 = _9
    SourceInfo(src/pretty/mantissa.rs:11:17-11:24)
  4: _21 = Eq(const 10000_u32, const 0_u32)
    SourceInfo(src/pretty/mantissa.rs:11:17-11:33)
  Terminator {
      source_info: SourceInfo(src/pretty/mantissa.rs:11:17-11:33)
      kind: assert(!move _21, "attempt to calculate the remainder of `{}` with a divisor of zero", _20) -> [success: bb7, unwind: bb38]
  }
  preds [bb5]
  succs [bb7, bb38]

bb7
  0: _19 = Rem(move _20, const 10000_u32)
    SourceInfo(src/pretty/mantissa.rs:11:17-11:33)
  1: StorageDead(_20)
    SourceInfo(src/pretty/mantissa.rs:11:32-11:33)
  2: FakeRead(ForLet(None), _19)
    SourceInfo(src/pretty/mantissa.rs:11:13-11:14)
  3: _22 = Eq(const 10000_u32, const 0_u32)
    SourceInfo(src/pretty/mantissa.rs:12:9-12:26)
  Terminator {
      source_info: SourceInfo(src/pretty/mantissa.rs:12:9-12:26)
      kind: assert(!move _22, "attempt to divide `{}` by zero", _9) -> [success: bb8, unwind: bb38]
  }
  preds [bb6]
  succs [bb8, bb38]

bb8
  0: _9 = Div(_9, const 10000_u32)
    SourceInfo(src/pretty/mantissa.rs:12:9-12:26)
  1: StorageLive(_23)
    SourceInfo(src/pretty/mantissa.rs:13:13-13:14)
  2: StorageLive(_24)
    SourceInfo(src/pretty/mantissa.rs:13:17-13:24)
  3: _24 = _9
    SourceInfo(src/pretty/mantissa.rs:13:17-13:24)
  4: _25 = Eq(const 10000_u32, const 0_u32)
    SourceInfo(src/pretty/mantissa.rs:13:17-13:33)
  Terminator {
      source_info: SourceInfo(src/pretty/mantissa.rs:13:17-13:33)
      kind: assert(!move _25, "attempt to calculate the remainder of `{}` with a divisor of zero", _24) -> [success: bb9, unwind: bb38]
  }
  preds [bb7]
  succs [bb9, bb38]

bb9
  0: _23 = Rem(move _24, const 10000_u32)
    SourceInfo(src/pretty/mantissa.rs:13:17-13:33)
  1: StorageDead(_24)
    SourceInfo(src/pretty/mantissa.rs:13:32-13:33)
  2: FakeRead(ForLet(None), _23)
    SourceInfo(src/pretty/mantissa.rs:13:13-13:14)
  3: StorageLive(_26)
    SourceInfo(src/pretty/mantissa.rs:14:13-14:15)
  4: StorageLive(_27)
    SourceInfo(src/pretty/mantissa.rs:14:18-14:27)
  5: StorageLive(_28)
    SourceInfo(src/pretty/mantissa.rs:14:19-14:20)
  6: _28 = _19
    SourceInfo(src/pretty/mantissa.rs:14:19-14:20)
  7: _29 = Eq(const 100_u32, const 0_u32)
    SourceInfo(src/pretty/mantissa.rs:14:18-14:27)
  Terminator {
      source_info: SourceInfo(src/pretty/mantissa.rs:14:18-14:27)
      kind: assert(!move _29, "attempt to calculate the remainder of `{}` with a divisor of zero", _28) -> [success: bb10, unwind: bb38]
  }
  preds [bb8]
  succs [bb10, bb38]

bb10
  0: _27 = Rem(move _28, const 100_u32)
    SourceInfo(src/pretty/mantissa.rs:14:18-14:27)
  1: StorageDead(_28)
    SourceInfo(src/pretty/mantissa.rs:14:26-14:27)
  2: _30 = const 1_i32 as u32 (IntToInt)
    SourceInfo(src/pretty/mantissa.rs:14:18-14:32)
  3: _31 = Lt(move _30, const 32_u32)
    SourceInfo(src/pretty/mantissa.rs:14:18-14:32)
  Terminator {
      source_info: SourceInfo(src/pretty/mantissa.rs:14:18-14:32)
      kind: assert(move _31, "attempt to shift left by `{}`, which would overflow", const 1_i32) -> [success: bb11, unwind: bb38]
  }
  preds [bb9]
  succs [bb11, bb38]

bb11
  0: _26 = Shl(move _27, const 1_i32)
    SourceInfo(src/pretty/mantissa.rs:14:18-14:32)
  1: StorageDead(_27)
    SourceInfo(src/pretty/mantissa.rs:14:31-14:32)
  2: FakeRead(ForLet(None), _26)
    SourceInfo(src/pretty/mantissa.rs:14:13-14:15)
  3: StorageLive(_32)
    SourceInfo(src/pretty/mantissa.rs:15:13-15:15)
  4: StorageLive(_33)
    SourceInfo(src/pretty/mantissa.rs:15:18-15:27)
  5: StorageLive(_34)
    SourceInfo(src/pretty/mantissa.rs:15:19-15:20)
  6: _34 = _19
    SourceInfo(src/pretty/mantissa.rs:15:19-15:20)
  7: _35 = Eq(const 100_u32, const 0_u32)
    SourceInfo(src/pretty/mantissa.rs:15:18-15:27)
  Terminator {
      source_info: SourceInfo(src/pretty/mantissa.rs:15:18-15:27)
      kind: assert(!move _35, "attempt to divide `{}` by zero", _34) -> [success: bb12, unwind: bb38]
  }
  preds [bb10]
  succs [bb12, bb38]

bb12
  0: _33 = Div(move _34, const 100_u32)
    SourceInfo(src/pretty/mantissa.rs:15:18-15:27)
  1: StorageDead(_34)
    SourceInfo(src/pretty/mantissa.rs:15:26-15:27)
  2: _36 = const 1_i32 as u32 (IntToInt)
    SourceInfo(src/pretty/mantissa.rs:15:18-15:32)
  3: _37 = Lt(move _36, const 32_u32)
    SourceInfo(src/pretty/mantissa.rs:15:18-15:32)
  Terminator {
      source_info: SourceInfo(src/pretty/mantissa.rs:15:18-15:32)
      kind: assert(move _37, "attempt to shift left by `{}`, which would overflow", const 1_i32) -> [success: bb13, unwind: bb38]
  }
  preds [bb11]
  succs [bb13, bb38]

bb13
  0: _32 = Shl(move _33, const 1_i32)
    SourceInfo(src/pretty/mantissa.rs:15:18-15:32)
  1: StorageDead(_33)
    SourceInfo(src/pretty/mantissa.rs:15:31-15:32)
  2: FakeRead(ForLet(None), _32)
    SourceInfo(src/pretty/mantissa.rs:15:13-15:15)
  3: StorageLive(_38)
    SourceInfo(src/pretty/mantissa.rs:16:13-16:15)
  4: StorageLive(_39)
    SourceInfo(src/pretty/mantissa.rs:16:18-16:27)
  5: StorageLive(_40)
    SourceInfo(src/pretty/mantissa.rs:16:19-16:20)
  6: _40 = _23
    SourceInfo(src/pretty/mantissa.rs:16:19-16:20)
  7: _41 = Eq(const 100_u32, const 0_u32)
    SourceInfo(src/pretty/mantissa.rs:16:18-16:27)
  Terminator {
      source_info: SourceInfo(src/pretty/mantissa.rs:16:18-16:27)
      kind: assert(!move _41, "attempt to calculate the remainder of `{}` with a divisor of zero", _40) -> [success: bb14, unwind: bb38]
  }
  preds [bb12]
  succs [bb14, bb38]

bb14
  0: _39 = Rem(move _40, const 100_u32)
    SourceInfo(src/pretty/mantissa.rs:16:18-16:27)
  1: StorageDead(_40)
    SourceInfo(src/pretty/mantissa.rs:16:26-16:27)
  2: _42 = const 1_i32 as u32 (IntToInt)
    SourceInfo(src/pretty/mantissa.rs:16:18-16:32)
  3: _43 = Lt(move _42, const 32_u32)
    SourceInfo(src/pretty/mantissa.rs:16:18-16:32)
  Terminator {
      source_info: SourceInfo(src/pretty/mantissa.rs:16:18-16:32)
      kind: assert(move _43, "attempt to shift left by `{}`, which would overflow", const 1_i32) -> [success: bb15, unwind: bb38]
  }
  preds [bb13]
  succs [bb15, bb38]

bb15
  0: _38 = Shl(move _39, const 1_i32)
    SourceInfo(src/pretty/mantissa.rs:16:18-16:32)
  1: StorageDead(_39)
    SourceInfo(src/pretty/mantissa.rs:16:31-16:32)
  2: FakeRead(ForLet(None), _38)
    SourceInfo(src/pretty/mantissa.rs:16:13-16:15)
  3: StorageLive(_44)
    SourceInfo(src/pretty/mantissa.rs:17:13-17:15)
  4: StorageLive(_45)
    SourceInfo(src/pretty/mantissa.rs:17:18-17:27)
  5: StorageLive(_46)
    SourceInfo(src/pretty/mantissa.rs:17:19-17:20)
  6: _46 = _23
    SourceInfo(src/pretty/mantissa.rs:17:19-17:20)
  7: _47 = Eq(const 100_u32, const 0_u32)
    SourceInfo(src/pretty/mantissa.rs:17:18-17:27)
  Terminator {
      source_info: SourceInfo(src/pretty/mantissa.rs:17:18-17:27)
      kind: assert(!move _47, "attempt to divide `{}` by zero", _46) -> [success: bb16, unwind: bb38]
  }
  preds [bb14]
  succs [bb16, bb38]

bb16
  0: _45 = Div(move _46, const 100_u32)
    SourceInfo(src/pretty/mantissa.rs:17:18-17:27)
  1: StorageDead(_46)
    SourceInfo(src/pretty/mantissa.rs:17:26-17:27)
  2: _48 = const 1_i32 as u32 (IntToInt)
    SourceInfo(src/pretty/mantissa.rs:17:18-17:32)
  3: _49 = Lt(move _48, const 32_u32)
    SourceInfo(src/pretty/mantissa.rs:17:18-17:32)
  Terminator {
      source_info: SourceInfo(src/pretty/mantissa.rs:17:18-17:32)
      kind: assert(move _49, "attempt to shift left by `{}`, which would overflow", const 1_i32) -> [success: bb17, unwind: bb38]
  }
  preds [bb15]
  succs [bb17, bb38]

bb17
  0: _44 = Shl(move _45, const 1_i32)
    SourceInfo(src/pretty/mantissa.rs:17:18-17:32)
  1: StorageDead(_45)
    SourceInfo(src/pretty/mantissa.rs:17:31-17:32)
  2: FakeRead(ForLet(None), _44)
    SourceInfo(src/pretty/mantissa.rs:17:13-17:15)
  3: StorageLive(_50)
    SourceInfo(src/pretty/mantissa.rs:18:9-22:10)
  4: StorageLive(_51)
    SourceInfo(src/pretty/mantissa.rs:19:13-19:53)
  5: StorageLive(_52)
    SourceInfo(src/pretty/mantissa.rs:19:13-19:33)
  6: StorageLive(_53)
    SourceInfo(src/pretty/mantissa.rs:19:13-19:24)
  7: StorageLive(_54)
    SourceInfo(src/pretty/mantissa.rs:19:13-19:24)
  8: StorageLive(_55)
    SourceInfo(src/pretty/mantissa.rs:19:13-19:24)
  9: _55 = const <static(DefId(0:100 ~ ryu[e2d4]::digit_table::DIGIT_TABLE))>
    SourceInfo(src/pretty/mantissa.rs:19:13-19:24)
  10: _54 = &(*_55)
    SourceInfo(src/pretty/mantissa.rs:19:13-19:24)
  11: _53 = move _54 as &[u8] (PointerCoercion(Unsize))
    SourceInfo(src/pretty/mantissa.rs:19:13-19:24)
  12: StorageDead(_54)
    SourceInfo(src/pretty/mantissa.rs:19:23-19:24)
  Terminator {
      source_info: SourceInfo(src/pretty/mantissa.rs:19:13-19:33)
      kind: _52 = core::slice::<impl [u8]>::as_ptr(move _53) -> [return: bb18, unwind: bb38]
  }
  preds [bb16]
  succs [bb18, bb38]

bb18
  0: StorageDead(_53)
    SourceInfo(src/pretty/mantissa.rs:19:32-19:33)
  1: StorageLive(_56)
    SourceInfo(src/pretty/mantissa.rs:19:41-19:52)
  2: StorageLive(_57)
    SourceInfo(src/pretty/mantissa.rs:19:41-19:43)
  3: _57 = _26
    SourceInfo(src/pretty/mantissa.rs:19:41-19:43)
  4: _56 = move _57 as isize (IntToInt)
    SourceInfo(src/pretty/mantissa.rs:19:41-19:52)
  5: StorageDead(_57)
    SourceInfo(src/pretty/mantissa.rs:19:51-19:52)
  Terminator {
      source_info: SourceInfo(src/pretty/mantissa.rs:19:13-19:53)
      kind: _51 = core::ptr::const_ptr::<impl *const u8>::offset(move _52, move _56) -> [return: bb19, unwind: bb38]
  }
  preds [bb17]
  succs [bb19, bb38]

bb19
  0: StorageDead(_56)
    SourceInfo(src/pretty/mantissa.rs:19:52-19:53)
  1: StorageDead(_52)
    SourceInfo(src/pretty/mantissa.rs:19:52-19:53)
  2: StorageLive(_58)
    SourceInfo(src/pretty/mantissa.rs:20:13-20:30)
  3: StorageLive(_59)
    SourceInfo(src/pretty/mantissa.rs:20:13-20:19)
  4: _59 = _2
    SourceInfo(src/pretty/mantissa.rs:20:13-20:19)
  Terminator {
      source_info: SourceInfo(src/pretty/mantissa.rs:20:13-20:30)
      kind: _58 = core::ptr::mut_ptr::<impl *mut u8>::offset(move _59, const -2_isize) -> [return: bb20, unwind: bb38]
  }
  preds [bb18]
  succs [bb20, bb38]

bb20
  0: StorageDead(_59)
    SourceInfo(src/pretty/mantissa.rs:20:29-20:30)
  Terminator {
      source_info: SourceInfo(src/pretty/mantissa.rs:18:9-22:10)
      kind: _50 = core::intrinsics::copy_nonoverlapping::<u8>(move _51, move _58, const 2_usize) -> [return: bb21, unwind: bb38]
  }
  preds [bb19]
  succs [bb21, bb38]

bb21
  0: StorageDead(_58)
    SourceInfo(src/pretty/mantissa.rs:22:9-22:10)
  1: StorageDead(_51)
    SourceInfo(src/pretty/mantissa.rs:22:9-22:10)
  2: StorageDead(_55)
    SourceInfo(src/pretty/mantissa.rs:22:10-22:11)
  3: StorageDead(_50)
    SourceInfo(src/pretty/mantissa.rs:22:10-22:11)
  4: StorageLive(_60)
    SourceInfo(src/pretty/mantissa.rs:23:9-27:10)
  5: StorageLive(_61)
    SourceInfo(src/pretty/mantissa.rs:24:13-24:53)
  6: StorageLive(_62)
    SourceInfo(src/pretty/mantissa.rs:24:13-24:33)
  7: StorageLive(_63)
    SourceInfo(src/pretty/mantissa.rs:24:13-24:24)
  8: StorageLive(_64)
    SourceInfo(src/pretty/mantissa.rs:24:13-24:24)
  9: StorageLive(_65)
    SourceInfo(src/pretty/mantissa.rs:24:13-24:24)
  10: _65 = const <static(DefId(0:100 ~ ryu[e2d4]::digit_table::DIGIT_TABLE))>
    SourceInfo(src/pretty/mantissa.rs:24:13-24:24)
  11: _64 = &(*_65)
    SourceInfo(src/pretty/mantissa.rs:24:13-24:24)
  12: _63 = move _64 as &[u8] (PointerCoercion(Unsize))
    SourceInfo(src/pretty/mantissa.rs:24:13-24:24)
  13: StorageDead(_64)
    SourceInfo(src/pretty/mantissa.rs:24:23-24:24)
  Terminator {
      source_info: SourceInfo(src/pretty/mantissa.rs:24:13-24:33)
      kind: _62 = core::slice::<impl [u8]>::as_ptr(move _63) -> [return: bb22, unwind: bb38]
  }
  preds [bb20]
  succs [bb22, bb38]

bb22
  0: StorageDead(_63)
    SourceInfo(src/pretty/mantissa.rs:24:32-24:33)
  1: StorageLive(_66)
    SourceInfo(src/pretty/mantissa.rs:24:41-24:52)
  2: StorageLive(_67)
    SourceInfo(src/pretty/mantissa.rs:24:41-24:43)
  3: _67 = _32
    SourceInfo(src/pretty/mantissa.rs:24:41-24:43)
  4: _66 = move _67 as isize (IntToInt)
    SourceInfo(src/pretty/mantissa.rs:24:41-24:52)
  5: StorageDead(_67)
    SourceInfo(src/pretty/mantissa.rs:24:51-24:52)
  Terminator {
      source_info: SourceInfo(src/pretty/mantissa.rs:24:13-24:53)
      kind: _61 = core::ptr::const_ptr::<impl *const u8>::offset(move _62, move _66) -> [return: bb23, unwind: bb38]
  }
  preds [bb21]
  succs [bb23, bb38]

bb23
  0: StorageDead(_66)
    SourceInfo(src/pretty/mantissa.rs:24:52-24:53)
  1: StorageDead(_62)
    SourceInfo(src/pretty/mantissa.rs:24:52-24:53)
  2: StorageLive(_68)
    SourceInfo(src/pretty/mantissa.rs:25:13-25:30)
  3: StorageLive(_69)
    SourceInfo(src/pretty/mantissa.rs:25:13-25:19)
  4: _69 = _2
    SourceInfo(src/pretty/mantissa.rs:25:13-25:19)
  Terminator {
      source_info: SourceInfo(src/pretty/mantissa.rs:25:13-25:30)
      kind: _68 = core::ptr::mut_ptr::<impl *mut u8>::offset(move _69, const -4_isize) -> [return: bb24, unwind: bb38]
  }
  preds [bb22]
  succs [bb24, bb38]

bb24
  0: StorageDead(_69)
    SourceInfo(src/pretty/mantissa.rs:25:29-25:30)
  Terminator {
      source_info: SourceInfo(src/pretty/mantissa.rs:23:9-27:10)
      kind: _60 = core::intrinsics::copy_nonoverlapping::<u8>(move _61, move _68, const 2_usize) -> [return: bb25, unwind: bb38]
  }
  preds [bb23]
  succs [bb25, bb38]

bb25
  0: StorageDead(_68)
    SourceInfo(src/pretty/mantissa.rs:27:9-27:10)
  1: StorageDead(_61)
    SourceInfo(src/pretty/mantissa.rs:27:9-27:10)
  2: StorageDead(_65)
    SourceInfo(src/pretty/mantissa.rs:27:10-27:11)
  3: StorageDead(_60)
    SourceInfo(src/pretty/mantissa.rs:27:10-27:11)
  4: StorageLive(_70)
    SourceInfo(src/pretty/mantissa.rs:28:9-32:10)
  5: StorageLive(_71)
    SourceInfo(src/pretty/mantissa.rs:29:13-29:53)
  6: StorageLive(_72)
    SourceInfo(src/pretty/mantissa.rs:29:13-29:33)
  7: StorageLive(_73)
    SourceInfo(src/pretty/mantissa.rs:29:13-29:24)
  8: StorageLive(_74)
    SourceInfo(src/pretty/mantissa.rs:29:13-29:24)
  9: StorageLive(_75)
    SourceInfo(src/pretty/mantissa.rs:29:13-29:24)
  10: _75 = const <static(DefId(0:100 ~ ryu[e2d4]::digit_table::DIGIT_TABLE))>
    SourceInfo(src/pretty/mantissa.rs:29:13-29:24)
  11: _74 = &(*_75)
    SourceInfo(src/pretty/mantissa.rs:29:13-29:24)
  12: _73 = move _74 as &[u8] (PointerCoercion(Unsize))
    SourceInfo(src/pretty/mantissa.rs:29:13-29:24)
  13: StorageDead(_74)
    SourceInfo(src/pretty/mantissa.rs:29:23-29:24)
  Terminator {
      source_info: SourceInfo(src/pretty/mantissa.rs:29:13-29:33)
      kind: _72 = core::slice::<impl [u8]>::as_ptr(move _73) -> [return: bb26, unwind: bb38]
  }
  preds [bb24]
  succs [bb26, bb38]

bb26
  0: StorageDead(_73)
    SourceInfo(src/pretty/mantissa.rs:29:32-29:33)
  1: StorageLive(_76)
    SourceInfo(src/pretty/mantissa.rs:29:41-29:52)
  2: StorageLive(_77)
    SourceInfo(src/pretty/mantissa.rs:29:41-29:43)
  3: _77 = _38
    SourceInfo(src/pretty/mantissa.rs:29:41-29:43)
  4: _76 = move _77 as isize (IntToInt)
    SourceInfo(src/pretty/mantissa.rs:29:41-29:52)
  5: StorageDead(_77)
    SourceInfo(src/pretty/mantissa.rs:29:51-29:52)
  Terminator {
      source_info: SourceInfo(src/pretty/mantissa.rs:29:13-29:53)
      kind: _71 = core::ptr::const_ptr::<impl *const u8>::offset(move _72, move _76) -> [return: bb27, unwind: bb38]
  }
  preds [bb25]
  succs [bb27, bb38]

bb27
  0: StorageDead(_76)
    SourceInfo(src/pretty/mantissa.rs:29:52-29:53)
  1: StorageDead(_72)
    SourceInfo(src/pretty/mantissa.rs:29:52-29:53)
  2: StorageLive(_78)
    SourceInfo(src/pretty/mantissa.rs:30:13-30:30)
  3: StorageLive(_79)
    SourceInfo(src/pretty/mantissa.rs:30:13-30:19)
  4: _79 = _2
    SourceInfo(src/pretty/mantissa.rs:30:13-30:19)
  Terminator {
      source_info: SourceInfo(src/pretty/mantissa.rs:30:13-30:30)
      kind: _78 = core::ptr::mut_ptr::<impl *mut u8>::offset(move _79, const -6_isize) -> [return: bb28, unwind: bb38]
  }
  preds [bb26]
  succs [bb28, bb38]

bb28
  0: StorageDead(_79)
    SourceInfo(src/pretty/mantissa.rs:30:29-30:30)
  Terminator {
      source_info: SourceInfo(src/pretty/mantissa.rs:28:9-32:10)
      kind: _70 = core::intrinsics::copy_nonoverlapping::<u8>(move _71, move _78, const 2_usize) -> [return: bb29, unwind: bb38]
  }
  preds [bb27]
  succs [bb29, bb38]

bb29
  0: StorageDead(_78)
    SourceInfo(src/pretty/mantissa.rs:32:9-32:10)
  1: StorageDead(_71)
    SourceInfo(src/pretty/mantissa.rs:32:9-32:10)
  2: StorageDead(_75)
    SourceInfo(src/pretty/mantissa.rs:32:10-32:11)
  3: StorageDead(_70)
    SourceInfo(src/pretty/mantissa.rs:32:10-32:11)
  4: StorageLive(_80)
    SourceInfo(src/pretty/mantissa.rs:33:9-37:10)
  5: StorageLive(_81)
    SourceInfo(src/pretty/mantissa.rs:34:13-34:53)
  6: StorageLive(_82)
    SourceInfo(src/pretty/mantissa.rs:34:13-34:33)
  7: StorageLive(_83)
    SourceInfo(src/pretty/mantissa.rs:34:13-34:24)
  8: StorageLive(_84)
    SourceInfo(src/pretty/mantissa.rs:34:13-34:24)
  9: StorageLive(_85)
    SourceInfo(src/pretty/mantissa.rs:34:13-34:24)
  10: _85 = const <static(DefId(0:100 ~ ryu[e2d4]::digit_table::DIGIT_TABLE))>
    SourceInfo(src/pretty/mantissa.rs:34:13-34:24)
  11: _84 = &(*_85)
    SourceInfo(src/pretty/mantissa.rs:34:13-34:24)
  12: _83 = move _84 as &[u8] (PointerCoercion(Unsize))
    SourceInfo(src/pretty/mantissa.rs:34:13-34:24)
  13: StorageDead(_84)
    SourceInfo(src/pretty/mantissa.rs:34:23-34:24)
  Terminator {
      source_info: SourceInfo(src/pretty/mantissa.rs:34:13-34:33)
      kind: _82 = core::slice::<impl [u8]>::as_ptr(move _83) -> [return: bb30, unwind: bb38]
  }
  preds [bb28]
  succs [bb30, bb38]

bb30
  0: StorageDead(_83)
    SourceInfo(src/pretty/mantissa.rs:34:32-34:33)
  1: StorageLive(_86)
    SourceInfo(src/pretty/mantissa.rs:34:41-34:52)
  2: StorageLive(_87)
    SourceInfo(src/pretty/mantissa.rs:34:41-34:43)
  3: _87 = _44
    SourceInfo(src/pretty/mantissa.rs:34:41-34:43)
  4: _86 = move _87 as isize (IntToInt)
    SourceInfo(src/pretty/mantissa.rs:34:41-34:52)
  5: StorageDead(_87)
    SourceInfo(src/pretty/mantissa.rs:34:51-34:52)
  Terminator {
      source_info: SourceInfo(src/pretty/mantissa.rs:34:13-34:53)
      kind: _81 = core::ptr::const_ptr::<impl *const u8>::offset(move _82, move _86) -> [return: bb31, unwind: bb38]
  }
  preds [bb29]
  succs [bb31, bb38]

bb31
  0: StorageDead(_86)
    SourceInfo(src/pretty/mantissa.rs:34:52-34:53)
  1: StorageDead(_82)
    SourceInfo(src/pretty/mantissa.rs:34:52-34:53)
  2: StorageLive(_88)
    SourceInfo(src/pretty/mantissa.rs:35:13-35:30)
  3: StorageLive(_89)
    SourceInfo(src/pretty/mantissa.rs:35:13-35:19)
  4: _89 = _2
    SourceInfo(src/pretty/mantissa.rs:35:13-35:19)
  Terminator {
      source_info: SourceInfo(src/pretty/mantissa.rs:35:13-35:30)
      kind: _88 = core::ptr::mut_ptr::<impl *mut u8>::offset(move _89, const -8_isize) -> [return: bb32, unwind: bb38]
  }
  preds [bb30]
  succs [bb32, bb38]

bb32
  0: StorageDead(_89)
    SourceInfo(src/pretty/mantissa.rs:35:29-35:30)
  Terminator {
      source_info: SourceInfo(src/pretty/mantissa.rs:33:9-37:10)
      kind: _80 = core::intrinsics::copy_nonoverlapping::<u8>(move _81, move _88, const 2_usize) -> [return: bb33, unwind: bb38]
  }
  preds [bb31]
  succs [bb33, bb38]

bb33
  0: StorageDead(_88)
    SourceInfo(src/pretty/mantissa.rs:37:9-37:10)
  1: StorageDead(_81)
    SourceInfo(src/pretty/mantissa.rs:37:9-37:10)
  2: StorageDead(_85)
    SourceInfo(src/pretty/mantissa.rs:37:10-37:11)
  3: StorageDead(_80)
    SourceInfo(src/pretty/mantissa.rs:37:10-37:11)
  4: StorageLive(_90)
    SourceInfo(src/pretty/mantissa.rs:38:18-38:35)
  5: StorageLive(_91)
    SourceInfo(src/pretty/mantissa.rs:38:18-38:24)
  6: _91 = _2
    SourceInfo(src/pretty/mantissa.rs:38:18-38:24)
  Terminator {
      source_info: SourceInfo(src/pretty/mantissa.rs:38:18-38:35)
      kind: _90 = core::ptr::mut_ptr::<impl *mut u8>::offset(move _91, const -8_isize) -> [return: bb34, unwind: bb38]
  }
  preds [bb32]
  succs [bb34, bb38]

bb34
  0: StorageDead(_91)
    SourceInfo(src/pretty/mantissa.rs:38:34-38:35)
  1: _2 = move _90
    SourceInfo(src/pretty/mantissa.rs:38:9-38:35)
  2: StorageDead(_90)
    SourceInfo(src/pretty/mantissa.rs:38:34-38:35)
  3: _3 = const ()
    SourceInfo(src/pretty/mantissa.rs:6:28-39:6)
  4: StorageDead(_44)
    SourceInfo(src/pretty/mantissa.rs:39:5-39:6)
  5: StorageDead(_38)
    SourceInfo(src/pretty/mantissa.rs:39:5-39:6)
  6: StorageDead(_32)
    SourceInfo(src/pretty/mantissa.rs:39:5-39:6)
  7: StorageDead(_26)
    SourceInfo(src/pretty/mantissa.rs:39:5-39:6)
  8: StorageDead(_23)
    SourceInfo(src/pretty/mantissa.rs:39:5-39:6)
  9: StorageDead(_19)
    SourceInfo(src/pretty/mantissa.rs:39:5-39:6)
  10: StorageDead(_9)
    SourceInfo(src/pretty/mantissa.rs:39:5-39:6)
  Terminator {
      source_info: SourceInfo(src/pretty/mantissa.rs:6:5-39:6)
      kind: goto -> bb36
  }
  preds [bb33]
  succs [bb36]

bb35
  0: StorageDead(_5)
    SourceInfo(src/pretty/mantissa.rs:6:26-6:27)
  1: _3 = const ()
    SourceInfo(src/pretty/mantissa.rs:39:6-39:6)
  Terminator {
      source_info: SourceInfo(src/pretty/mantissa.rs:6:5-39:6)
      kind: goto -> bb36
  }
  preds [bb1]
  succs [bb36]

bb36
  0: StorageDead(_4)
    SourceInfo(src/pretty/mantissa.rs:39:5-39:6)
  1: StorageDead(_3)
    SourceInfo(src/pretty/mantissa.rs:39:5-39:6)
  2: StorageLive(_92)
    SourceInfo(src/pretty/mantissa.rs:40:5-40:42)
  3: StorageLive(_93)
    SourceInfo(src/pretty/mantissa.rs:40:20-40:33)
  4: StorageLive(_94)
    SourceInfo(src/pretty/mantissa.rs:40:20-40:26)
  5: _94 = _1
    SourceInfo(src/pretty/mantissa.rs:40:20-40:26)
  6: _93 = move _94 as u32 (IntToInt)
    SourceInfo(src/pretty/mantissa.rs:40:20-40:33)
  7: StorageDead(_94)
    SourceInfo(src/pretty/mantissa.rs:40:32-40:33)
  8: StorageLive(_95)
    SourceInfo(src/pretty/mantissa.rs:40:35-40:41)
  9: _95 = _2
    SourceInfo(src/pretty/mantissa.rs:40:35-40:41)
  Terminator {
      source_info: SourceInfo(src/pretty/mantissa.rs:40:5-40:42)
      kind: _92 = pretty::mantissa::write_mantissa(move _93, move _95) -> [return: bb37, unwind: bb38]
  }
  preds [bb34, bb35]
  succs [bb37, bb38]

bb37
  0: StorageDead(_95)
    SourceInfo(src/pretty/mantissa.rs:40:41-40:42)
  1: StorageDead(_93)
    SourceInfo(src/pretty/mantissa.rs:40:41-40:42)
  2: StorageDead(_92)
    SourceInfo(src/pretty/mantissa.rs:40:42-40:43)
  3: _0 = const ()
    SourceInfo(src/pretty/mantissa.rs:5:73-41:2)
  Terminator {
      source_info: SourceInfo(src/pretty/mantissa.rs:41:2-41:2)
      kind: return
  }
  preds [bb36]
  succs []

bb38
  Terminator {
      source_info: SourceInfo(src/pretty/mantissa.rs:5:1-41:2)
      kind: resume
  }
  preds [bb0, bb2, bb3, bb4, bb5, bb6, bb7, bb8, bb9, bb10, bb11, bb12, bb13, bb14, bb15, bb16, bb17, bb18, bb19, bb20, bb21, bb22, bb23, bb24, bb25, bb26, bb27, bb28, bb29, bb30, bb31, bb32, bb33, bb36]
  succs []

