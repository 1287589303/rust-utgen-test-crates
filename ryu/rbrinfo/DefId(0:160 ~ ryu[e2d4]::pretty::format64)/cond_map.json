{
  "src/pretty/mod.rs:57:50:57:80": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(1u32 << DOUBLE_EXPONENT_BITS)",
          "lhs": "1u32",
          "rhs": "DOUBLE_EXPONENT_BITS",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/mod.rs:91:9:91:41": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "index as usize + length as usize",
          "lhs": "index as usize",
          "rhs": "length as usize",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/pretty/mod.rs:97:18:97:27": [
    {
      "For": {
        "iter_var": "i",
        "iter_range": "2..offset"
      }
    }
  ],
  "src/pretty/mod.rs:105:24:105:33": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "index + 1",
          "lhs": "index",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/mod.rs:113:9:115:16": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "index as usize\n            + length as usize\n            + 2",
          "lhs": "index as usize\n            + length as usize",
          "rhs": "2",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/mod.rs:57:9:57:85": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(bits >> DOUBLE_MANTISSA_BITS) as u32 & ((1u32 << DOUBLE_EXPONENT_BITS) - 1)",
          "lhs": "(bits >> DOUBLE_MANTISSA_BITS) as u32",
          "rhs": "((1u32 << DOUBLE_EXPONENT_BITS) - 1)",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/pretty/mod.rs:90:24:90:34": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "index + kk",
          "lhs": "index",
          "rhs": "kk",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/pretty/mod.rs:65:30:65:48": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "ieee_mantissa == 0",
          "lhs": "ieee_mantissa",
          "rhs": "0",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/mod.rs:54:17:54:72": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(bits >> (DOUBLE_MANTISSA_BITS + DOUBLE_EXPONENT_BITS))",
          "lhs": "bits",
          "rhs": "(DOUBLE_MANTISSA_BITS + DOUBLE_EXPONENT_BITS)",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/pretty/mod.rs:81:28:81:37": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "index + i",
          "lhs": "index",
          "rhs": "i",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/pretty/mod.rs:102:15:102:26": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "length == 1",
          "lhs": "length",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/mod.rs:84:24:84:34": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "index + kk",
          "lhs": "index",
          "rhs": "kk",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/pretty/mod.rs:86:25:86:33": [
    {
      "Bool": {
        "Binary": {
          "kind": "Le",
          "expr": "kk <= 16",
          "lhs": "kk",
          "rhs": "16",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/mod.rs:104:33:104:56": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "b'0' + v.mantissa as u8",
          "lhs": "b'0'",
          "rhs": "v.mantissa as u8",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/mod.rs:85:9:85:37": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "index as usize + kk as usize",
          "lhs": "index as usize",
          "rhs": "kk as usize",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/pretty/mod.rs:55:25:55:68": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "bits & ((1u64 << DOUBLE_MANTISSA_BITS) - 1)",
          "lhs": "bits",
          "rhs": "((1u64 << DOUBLE_MANTISSA_BITS) - 1)",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/pretty/mod.rs:77:18:77:26": [
    {
      "Bool": {
        "Binary": {
          "kind": "Le",
          "expr": "kk <= 16",
          "lhs": "kk",
          "rhs": "16",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/mod.rs:116:53:116:67": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "index + length",
          "lhs": "index",
          "rhs": "length",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/pretty/mod.rs:55:32:55:68": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "((1u64 << DOUBLE_MANTISSA_BITS) - 1)",
          "lhs": "(1u64 << DOUBLE_MANTISSA_BITS)",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/mod.rs:116:31:116:37": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "kk - 1",
          "lhs": "kk",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/mod.rs:98:28:98:37": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "index + i",
          "lhs": "index",
          "rhs": "i",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/pretty/mod.rs:54:16:54:82": [
    {
      "Bool": {
        "Binary": {
          "kind": "Ne",
          "expr": "((bits >> (DOUBLE_MANTISSA_BITS + DOUBLE_EXPONENT_BITS)) & 1) != 0",
          "lhs": "((bits >> (DOUBLE_MANTISSA_BITS + DOUBLE_EXPONENT_BITS)) & 1)",
          "rhs": "0",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/mod.rs:100:55:100:69": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "index + length",
          "lhs": "index",
          "rhs": "length",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/pretty/mod.rs:110:48:110:57": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "index + 1",
          "lhs": "index",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/mod.rs:79:55:79:69": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "index + length",
          "lhs": "index",
          "rhs": "length",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/pretty/mod.rs:83:24:83:34": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "index + kk",
          "lhs": "index",
          "rhs": "kk",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/pretty/mod.rs:57:49:57:85": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "((1u32 << DOUBLE_EXPONENT_BITS) - 1)",
          "lhs": "(1u32 << DOUBLE_EXPONENT_BITS)",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/mod.rs:96:22:96:28": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "2 - kk",
          "lhs": "2",
          "rhs": "kk",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/mod.rs:88:55:88:69": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "index + length",
          "lhs": "index",
          "rhs": "length",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/pretty/mod.rs:100:55:100:78": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "index + length + offset",
          "lhs": "index + length",
          "rhs": "offset",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/pretty/mod.rs:113:9:116:73": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "index as usize\n            + length as usize\n            + 2\n            + write_exponent3(kk - 1, result.offset(index + length + 2))",
          "lhs": "index as usize\n            + length as usize\n            + 2",
          "rhs": "write_exponent3(kk - 1, result.offset(index + length + 2))",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/pretty/mod.rs:67:16:67:33": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "sign as usize + 3",
          "lhs": "sign as usize",
          "rhs": "3",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/mod.rs:106:68:106:77": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "index + 2",
          "lhs": "index",
          "rhs": "2",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/mod.rs:77:8:77:14": [
    {
      "Bool": {
        "Binary": {
          "kind": "Le",
          "expr": "0 <= k",
          "lhs": "0",
          "rhs": "k",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/mod.rs:111:24:111:33": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "index + 1",
          "lhs": "index",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/mod.rs:112:24:112:38": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "index + length",
          "lhs": "index",
          "rhs": "length",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/pretty/mod.rs:75:19:75:28": [
    {
      "Bool": {
        "Binary": {
          "kind": "Ge",
          "expr": "k >= -324",
          "lhs": "k",
          "rhs": "-324",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/mod.rs:89:33:89:42": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "index + 1",
          "lhs": "index",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/mod.rs:92:26:92:33": [
    {
      "Bool": {
        "Binary": {
          "kind": "Le",
          "expr": "kk <= 0",
          "lhs": "kk",
          "rhs": "0",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/mod.rs:91:9:91:45": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "index as usize + length as usize + 1",
          "lhs": "index as usize + length as usize",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12:316:42": [
    {
      "Bool": {
        "Other": "$crate::cfg!(debug_assertions)"
      }
    }
  ],
  "src/pretty/mod.rs:55:33:55:63": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(1u64 << DOUBLE_MANTISSA_BITS)",
          "lhs": "1u64",
          "rhs": "DOUBLE_MANTISSA_BITS",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/mod.rs:84:24:84:38": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "index + kk + 1",
          "lhs": "index + kk",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/mod.rs:85:9:85:41": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "index as usize + kk as usize + 2",
          "lhs": "index as usize + kk as usize",
          "rhs": "2",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/mod.rs:80:18:80:28": [
    {
      "For": {
        "iter_var": "i",
        "iter_range": "length..kk"
      }
    }
  ],
  "src/pretty/mod.rs:116:53:116:71": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "index + length + 2",
          "lhs": "index + length",
          "rhs": "2",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/mod.rs:86:15:86:21": [
    {
      "Bool": {
        "Binary": {
          "kind": "Lt",
          "expr": "0 < kk",
          "lhs": "0",
          "rhs": "kk",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/mod.rs:60:8:60:12": [
    {
      "Bool": {
        "Other": "sign"
      }
    }
  ],
  "src/pretty/mod.rs:106:9:106:79": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "index as usize + 2 + write_exponent3(kk - 1, result.offset(index + 2))",
          "lhs": "index as usize + 2",
          "rhs": "write_exponent3(kk - 1, result.offset(index + 2))",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/pretty/mod.rs:92:15:92:22": [
    {
      "Bool": {
        "Binary": {
          "kind": "Lt",
          "expr": "-5 < kk",
          "lhs": "-5",
          "rhs": "kk",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/mod.rs:101:9:101:41": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "index as usize + length as usize",
          "lhs": "index as usize",
          "rhs": "length as usize",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/pretty/mod.rs:54:26:54:71": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(DOUBLE_MANTISSA_BITS + DOUBLE_EXPONENT_BITS)",
          "lhs": "DOUBLE_MANTISSA_BITS",
          "rhs": "DOUBLE_EXPONENT_BITS",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/pretty/mod.rs:109:55:109:69": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "index + length",
          "lhs": "index",
          "rhs": "length",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/pretty/mod.rs:106:46:106:52": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "kk - 1",
          "lhs": "kk",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/mod.rs:57:9:57:39": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(bits >> DOUBLE_MANTISSA_BITS)",
          "lhs": "bits",
          "rhs": "DOUBLE_MANTISSA_BITS",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/pretty/mod.rs:54:16:54:77": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "((bits >> (DOUBLE_MANTISSA_BITS + DOUBLE_EXPONENT_BITS)) & 1)",
          "lhs": "(bits >> (DOUBLE_MANTISSA_BITS + DOUBLE_EXPONENT_BITS))",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/mod.rs:88:55:88:73": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "index + length + 1",
          "lhs": "index + length",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/mod.rs:106:9:106:27": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "index as usize + 2",
          "lhs": "index as usize",
          "rhs": "2",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/mod.rs:101:9:101:59": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "index as usize + length as usize + offset as usize",
          "lhs": "index as usize + length as usize",
          "rhs": "offset as usize",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/pretty/mod.rs:109:55:109:73": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "index + length + 1",
          "lhs": "index + length",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/mod.rs:74:14:74:24": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "length + k",
          "lhs": "length",
          "rhs": "k",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/pretty/mod.rs:113:9:114:30": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "index as usize\n            + length as usize",
          "lhs": "index as usize",
          "rhs": "length as usize",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/pretty/mod.rs:65:8:65:26": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "ieee_exponent == 0",
          "lhs": "ieee_exponent",
          "rhs": "0",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/mod.rs:112:24:112:42": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "index + length + 1",
          "lhs": "index + length",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/pretty/mod.rs:95:24:95:33": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "index + 1",
          "lhs": "index",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ]
}