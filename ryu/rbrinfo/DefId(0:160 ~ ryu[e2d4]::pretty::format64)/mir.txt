bb0
  0: StorageLive(_3)
    SourceInfo(src/pretty/mod.rs:53:9-53:13)
  1: StorageLive(_4)
    SourceInfo(src/pretty/mod.rs:53:16-53:17)
  2: _4 = _1
    SourceInfo(src/pretty/mod.rs:53:16-53:17)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:53:16-53:27)
      kind: _3 = core::f64::<impl f64>::to_bits(move _4) -> [return: bb1, unwind: bb134]
  }
  preds []
  succs [bb1, bb134]

bb1
  0: StorageDead(_4)
    SourceInfo(src/pretty/mod.rs:53:26-53:27)
  1: FakeRead(ForLet(None), _3)
    SourceInfo(src/pretty/mod.rs:53:9-53:13)
  2: StorageLive(_5)
    SourceInfo(src/pretty/mod.rs:54:9-54:13)
  3: StorageLive(_6)
    SourceInfo(src/pretty/mod.rs:54:16-54:77)
  4: StorageLive(_7)
    SourceInfo(src/pretty/mod.rs:54:17-54:72)
  5: StorageLive(_8)
    SourceInfo(src/pretty/mod.rs:54:18-54:22)
  6: _8 = _3
    SourceInfo(src/pretty/mod.rs:54:18-54:22)
  7: StorageLive(_9)
    SourceInfo(src/pretty/mod.rs:54:26-54:71)
  8: _10 = AddWithOverflow(const d2s::DOUBLE_MANTISSA_BITS, const d2s::DOUBLE_EXPONENT_BITS)
    SourceInfo(src/pretty/mod.rs:54:26-54:71)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:54:26-54:71)
      kind: assert(!move (_10.1: bool), "attempt to compute `{} + {}`, which would overflow", const d2s::DOUBLE_MANTISSA_BITS, const d2s::DOUBLE_EXPONENT_BITS) -> [success: bb2, unwind: bb134]
  }
  preds [bb0]
  succs [bb2, bb134]

bb2
  0: _9 = move (_10.0: u32)
    SourceInfo(src/pretty/mod.rs:54:26-54:71)
  1: _11 = Lt(_9, const 64_u32)
    SourceInfo(src/pretty/mod.rs:54:17-54:72)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:54:17-54:72)
      kind: assert(move _11, "attempt to shift right by `{}`, which would overflow", _9) -> [success: bb3, unwind: bb134]
  }
  preds [bb1]
  succs [bb3, bb134]

bb3
  0: _7 = Shr(move _8, move _9)
    SourceInfo(src/pretty/mod.rs:54:17-54:72)
  1: StorageDead(_9)
    SourceInfo(src/pretty/mod.rs:54:71-54:72)
  2: StorageDead(_8)
    SourceInfo(src/pretty/mod.rs:54:71-54:72)
  3: _6 = BitAnd(move _7, const 1_u64)
    SourceInfo(src/pretty/mod.rs:54:16-54:77)
  4: StorageDead(_7)
    SourceInfo(src/pretty/mod.rs:54:76-54:77)
  5: _5 = Ne(move _6, const 0_u64)
    SourceInfo(src/pretty/mod.rs:54:16-54:82)
  6: StorageDead(_6)
    SourceInfo(src/pretty/mod.rs:54:81-54:82)
  7: FakeRead(ForLet(None), _5)
    SourceInfo(src/pretty/mod.rs:54:9-54:13)
  8: StorageLive(_12)
    SourceInfo(src/pretty/mod.rs:55:9-55:22)
  9: StorageLive(_13)
    SourceInfo(src/pretty/mod.rs:55:25-55:29)
  10: _13 = _3
    SourceInfo(src/pretty/mod.rs:55:25-55:29)
  11: StorageLive(_14)
    SourceInfo(src/pretty/mod.rs:55:32-55:68)
  12: StorageLive(_15)
    SourceInfo(src/pretty/mod.rs:55:33-55:63)
  13: _16 = Lt(const d2s::DOUBLE_MANTISSA_BITS, const 64_u32)
    SourceInfo(src/pretty/mod.rs:55:33-55:63)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:55:33-55:63)
      kind: assert(move _16, "attempt to shift left by `{}`, which would overflow", const d2s::DOUBLE_MANTISSA_BITS) -> [success: bb4, unwind: bb134]
  }
  preds [bb2]
  succs [bb4, bb134]

bb4
  0: _15 = Shl(const 1_u64, const d2s::DOUBLE_MANTISSA_BITS)
    SourceInfo(src/pretty/mod.rs:55:33-55:63)
  1: _17 = SubWithOverflow(_15, const 1_u64)
    SourceInfo(src/pretty/mod.rs:55:32-55:68)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:55:32-55:68)
      kind: assert(!move (_17.1: bool), "attempt to compute `{} - {}`, which would overflow", move _15, const 1_u64) -> [success: bb5, unwind: bb134]
  }
  preds [bb3]
  succs [bb5, bb134]

bb5
  0: _14 = move (_17.0: u64)
    SourceInfo(src/pretty/mod.rs:55:32-55:68)
  1: StorageDead(_15)
    SourceInfo(src/pretty/mod.rs:55:67-55:68)
  2: _12 = BitAnd(move _13, move _14)
    SourceInfo(src/pretty/mod.rs:55:25-55:68)
  3: StorageDead(_14)
    SourceInfo(src/pretty/mod.rs:55:67-55:68)
  4: StorageDead(_13)
    SourceInfo(src/pretty/mod.rs:55:67-55:68)
  5: FakeRead(ForLet(None), _12)
    SourceInfo(src/pretty/mod.rs:55:9-55:22)
  6: StorageLive(_18)
    SourceInfo(src/pretty/mod.rs:56:9-56:22)
  7: StorageLive(_19)
    SourceInfo(src/pretty/mod.rs:57:9-57:46)
  8: StorageLive(_20)
    SourceInfo(src/pretty/mod.rs:57:9-57:39)
  9: StorageLive(_21)
    SourceInfo(src/pretty/mod.rs:57:10-57:14)
  10: _21 = _3
    SourceInfo(src/pretty/mod.rs:57:10-57:14)
  11: _22 = Lt(const d2s::DOUBLE_MANTISSA_BITS, const 64_u32)
    SourceInfo(src/pretty/mod.rs:57:9-57:39)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:57:9-57:39)
      kind: assert(move _22, "attempt to shift right by `{}`, which would overflow", const d2s::DOUBLE_MANTISSA_BITS) -> [success: bb6, unwind: bb134]
  }
  preds [bb4]
  succs [bb6, bb134]

bb6
  0: _20 = Shr(move _21, const d2s::DOUBLE_MANTISSA_BITS)
    SourceInfo(src/pretty/mod.rs:57:9-57:39)
  1: StorageDead(_21)
    SourceInfo(src/pretty/mod.rs:57:38-57:39)
  2: _19 = move _20 as u32 (IntToInt)
    SourceInfo(src/pretty/mod.rs:57:9-57:46)
  3: StorageDead(_20)
    SourceInfo(src/pretty/mod.rs:57:45-57:46)
  4: StorageLive(_23)
    SourceInfo(src/pretty/mod.rs:57:49-57:85)
  5: StorageLive(_24)
    SourceInfo(src/pretty/mod.rs:57:50-57:80)
  6: _25 = Lt(const d2s::DOUBLE_EXPONENT_BITS, const 32_u32)
    SourceInfo(src/pretty/mod.rs:57:50-57:80)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:57:50-57:80)
      kind: assert(move _25, "attempt to shift left by `{}`, which would overflow", const d2s::DOUBLE_EXPONENT_BITS) -> [success: bb7, unwind: bb134]
  }
  preds [bb5]
  succs [bb7, bb134]

bb7
  0: _24 = Shl(const 1_u32, const d2s::DOUBLE_EXPONENT_BITS)
    SourceInfo(src/pretty/mod.rs:57:50-57:80)
  1: _26 = SubWithOverflow(_24, const 1_u32)
    SourceInfo(src/pretty/mod.rs:57:49-57:85)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:57:49-57:85)
      kind: assert(!move (_26.1: bool), "attempt to compute `{} - {}`, which would overflow", move _24, const 1_u32) -> [success: bb8, unwind: bb134]
  }
  preds [bb6]
  succs [bb8, bb134]

bb8
  0: _23 = move (_26.0: u32)
    SourceInfo(src/pretty/mod.rs:57:49-57:85)
  1: StorageDead(_24)
    SourceInfo(src/pretty/mod.rs:57:84-57:85)
  2: _18 = BitAnd(move _19, move _23)
    SourceInfo(src/pretty/mod.rs:57:9-57:85)
  3: StorageDead(_23)
    SourceInfo(src/pretty/mod.rs:57:84-57:85)
  4: StorageDead(_19)
    SourceInfo(src/pretty/mod.rs:57:84-57:85)
  5: FakeRead(ForLet(None), _18)
    SourceInfo(src/pretty/mod.rs:56:9-56:22)
  6: StorageLive(_27)
    SourceInfo(src/pretty/mod.rs:59:9-59:18)
  7: _27 = const 0_isize
    SourceInfo(src/pretty/mod.rs:59:21-59:27)
  8: FakeRead(ForLet(None), _27)
    SourceInfo(src/pretty/mod.rs:59:9-59:18)
  9: StorageLive(_28)
    SourceInfo(src/pretty/mod.rs:60:5-63:6)
  10: StorageLive(_29)
    SourceInfo(src/pretty/mod.rs:60:8-60:12)
  11: _29 = _5
    SourceInfo(src/pretty/mod.rs:60:8-60:12)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:60:8-60:12)
      kind: switchInt(move _29) -> [0: bb11, otherwise: bb9]
  }
  preds [bb7]
  succs [bb9, bb11]

bb9
  0: (*_2) = const 45_u8
    SourceInfo(src/pretty/mod.rs:61:9-61:23)
  1: _30 = AddWithOverflow(_27, const 1_isize)
    SourceInfo(src/pretty/mod.rs:62:9-62:19)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:62:9-62:19)
      kind: assert(!move (_30.1: bool), "attempt to compute `{} + {}`, which would overflow", _27, const 1_isize) -> [success: bb10, unwind: bb134]
  }
  preds [bb8]
  succs [bb10, bb134]

bb10
  0: _27 = move (_30.0: isize)
    SourceInfo(src/pretty/mod.rs:62:9-62:19)
  1: _28 = const ()
    SourceInfo(src/pretty/mod.rs:60:13-63:6)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:60:5-63:6)
      kind: goto -> bb12
  }
  preds [bb9]
  succs [bb12]

bb11
  0: _28 = const ()
    SourceInfo(src/pretty/mod.rs:63:6-63:6)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:60:5-63:6)
      kind: goto -> bb12
  }
  preds [bb8]
  succs [bb12]

bb12
  0: StorageDead(_29)
    SourceInfo(src/pretty/mod.rs:63:5-63:6)
  1: StorageDead(_28)
    SourceInfo(src/pretty/mod.rs:63:5-63:6)
  2: StorageLive(_31)
    SourceInfo(src/pretty/mod.rs:65:5-68:6)
  3: StorageLive(_32)
    SourceInfo(src/pretty/mod.rs:65:8-65:26)
  4: StorageLive(_33)
    SourceInfo(src/pretty/mod.rs:65:8-65:21)
  5: _33 = _18
    SourceInfo(src/pretty/mod.rs:65:8-65:21)
  6: _32 = Eq(move _33, const 0_u32)
    SourceInfo(src/pretty/mod.rs:65:8-65:26)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:65:8-65:26)
      kind: switchInt(move _32) -> [0: bb20, otherwise: bb13]
  }
  preds [bb10, bb11]
  succs [bb13, bb20]

bb13
  0: StorageDead(_33)
    SourceInfo(src/pretty/mod.rs:65:25-65:26)
  1: StorageLive(_34)
    SourceInfo(src/pretty/mod.rs:65:30-65:48)
  2: StorageLive(_35)
    SourceInfo(src/pretty/mod.rs:65:30-65:43)
  3: _35 = _12
    SourceInfo(src/pretty/mod.rs:65:30-65:43)
  4: _34 = Eq(move _35, const 0_u64)
    SourceInfo(src/pretty/mod.rs:65:30-65:48)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:65:30-65:48)
      kind: switchInt(move _34) -> [0: bb19, otherwise: bb14]
  }
  preds [bb12]
  succs [bb14, bb19]

bb14
  0: StorageDead(_35)
    SourceInfo(src/pretty/mod.rs:65:47-65:48)
  1: StorageLive(_37)
    SourceInfo(src/pretty/mod.rs:66:9-66:75)
  2: StorageLive(_38)
    SourceInfo(src/pretty/mod.rs:66:34-66:49)
  3: StorageLive(_39)
    SourceInfo(src/pretty/mod.rs:66:34-66:40)
  4: StorageLive(_40)
    SourceInfo(src/pretty/mod.rs:66:34-66:40)
  5: StorageLive(_41)
    SourceInfo(src/pretty/mod.rs:66:34-66:40)
  6: _41 = const b"0.0"
    SourceInfo(src/pretty/mod.rs:66:34-66:40)
  7: _40 = &(*_41)
    SourceInfo(src/pretty/mod.rs:66:34-66:40)
  8: _39 = move _40 as &[u8] (PointerCoercion(Unsize))
    SourceInfo(src/pretty/mod.rs:66:34-66:40)
  9: StorageDead(_40)
    SourceInfo(src/pretty/mod.rs:66:39-66:40)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:66:34-66:49)
      kind: _38 = core::slice::<impl [u8]>::as_ptr(move _39) -> [return: bb15, unwind: bb134]
  }
  preds [bb13]
  succs [bb15, bb134]

bb15
  0: StorageDead(_39)
    SourceInfo(src/pretty/mod.rs:66:48-66:49)
  1: StorageLive(_42)
    SourceInfo(src/pretty/mod.rs:66:51-66:71)
  2: StorageLive(_43)
    SourceInfo(src/pretty/mod.rs:66:51-66:57)
  3: _43 = _2
    SourceInfo(src/pretty/mod.rs:66:51-66:57)
  4: StorageLive(_44)
    SourceInfo(src/pretty/mod.rs:66:65-66:70)
  5: _44 = _27
    SourceInfo(src/pretty/mod.rs:66:65-66:70)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:66:51-66:71)
      kind: _42 = core::ptr::mut_ptr::<impl *mut u8>::offset(move _43, move _44) -> [return: bb16, unwind: bb134]
  }
  preds [bb14]
  succs [bb16, bb134]

bb16
  0: StorageDead(_44)
    SourceInfo(src/pretty/mod.rs:66:70-66:71)
  1: StorageDead(_43)
    SourceInfo(src/pretty/mod.rs:66:70-66:71)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:66:9-66:75)
      kind: _37 = core::intrinsics::copy_nonoverlapping::<u8>(move _38, move _42, const 3_usize) -> [return: bb17, unwind: bb134]
  }
  preds [bb15]
  succs [bb17, bb134]

bb17
  0: StorageDead(_42)
    SourceInfo(src/pretty/mod.rs:66:74-66:75)
  1: StorageDead(_38)
    SourceInfo(src/pretty/mod.rs:66:74-66:75)
  2: StorageDead(_41)
    SourceInfo(src/pretty/mod.rs:66:75-66:76)
  3: StorageDead(_37)
    SourceInfo(src/pretty/mod.rs:66:75-66:76)
  4: StorageLive(_45)
    SourceInfo(src/pretty/mod.rs:67:16-67:29)
  5: StorageLive(_46)
    SourceInfo(src/pretty/mod.rs:67:16-67:20)
  6: _46 = _5
    SourceInfo(src/pretty/mod.rs:67:16-67:20)
  7: _45 = move _46 as usize (IntToInt)
    SourceInfo(src/pretty/mod.rs:67:16-67:29)
  8: StorageDead(_46)
    SourceInfo(src/pretty/mod.rs:67:28-67:29)
  9: _47 = AddWithOverflow(_45, const 3_usize)
    SourceInfo(src/pretty/mod.rs:67:16-67:33)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:67:16-67:33)
      kind: assert(!move (_47.1: bool), "attempt to compute `{} + {}`, which would overflow", move _45, const 3_usize) -> [success: bb18, unwind: bb134]
  }
  preds [bb16]
  succs [bb18, bb134]

bb18
  0: _0 = move (_47.0: usize)
    SourceInfo(src/pretty/mod.rs:67:16-67:33)
  1: StorageDead(_45)
    SourceInfo(src/pretty/mod.rs:67:32-67:33)
  2: StorageDead(_34)
    SourceInfo(src/pretty/mod.rs:68:5-68:6)
  3: StorageDead(_32)
    SourceInfo(src/pretty/mod.rs:68:5-68:6)
  4: StorageDead(_31)
    SourceInfo(src/pretty/mod.rs:68:5-68:6)
  5: StorageDead(_27)
    SourceInfo(src/pretty/mod.rs:118:1-118:2)
  6: StorageDead(_18)
    SourceInfo(src/pretty/mod.rs:118:1-118:2)
  7: StorageDead(_12)
    SourceInfo(src/pretty/mod.rs:118:1-118:2)
  8: StorageDead(_5)
    SourceInfo(src/pretty/mod.rs:118:1-118:2)
  9: StorageDead(_3)
    SourceInfo(src/pretty/mod.rs:118:1-118:2)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:118:2-118:2)
      kind: goto -> bb133
  }
  preds [bb17]
  succs [bb133]

bb19
  0: StorageDead(_35)
    SourceInfo(src/pretty/mod.rs:65:47-65:48)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb21
  }
  preds [bb13]
  succs [bb21]

bb20
  0: StorageDead(_33)
    SourceInfo(src/pretty/mod.rs:65:25-65:26)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb21
  }
  preds [bb12]
  succs [bb21]

bb21
  0: _31 = const ()
    SourceInfo(src/pretty/mod.rs:68:6-68:6)
  1: StorageDead(_34)
    SourceInfo(src/pretty/mod.rs:68:5-68:6)
  2: StorageDead(_32)
    SourceInfo(src/pretty/mod.rs:68:5-68:6)
  3: StorageDead(_31)
    SourceInfo(src/pretty/mod.rs:68:5-68:6)
  4: StorageLive(_48)
    SourceInfo(src/pretty/mod.rs:70:9-70:10)
  5: StorageLive(_49)
    SourceInfo(src/pretty/mod.rs:70:17-70:30)
  6: _49 = _12
    SourceInfo(src/pretty/mod.rs:70:17-70:30)
  7: StorageLive(_50)
    SourceInfo(src/pretty/mod.rs:70:32-70:45)
  8: _50 = _18
    SourceInfo(src/pretty/mod.rs:70:32-70:45)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:70:13-70:46)
      kind: _48 = d2s::d2d(move _49, move _50) -> [return: bb22, unwind: bb134]
  }
  preds [bb19, bb20]
  succs [bb22, bb134]

bb22
  0: StorageDead(_50)
    SourceInfo(src/pretty/mod.rs:70:45-70:46)
  1: StorageDead(_49)
    SourceInfo(src/pretty/mod.rs:70:45-70:46)
  2: FakeRead(ForLet(None), _48)
    SourceInfo(src/pretty/mod.rs:70:9-70:10)
  3: StorageLive(_51)
    SourceInfo(src/pretty/mod.rs:72:9-72:15)
  4: StorageLive(_52)
    SourceInfo(src/pretty/mod.rs:72:18-72:51)
  5: StorageLive(_53)
    SourceInfo(src/pretty/mod.rs:72:40-72:50)
  6: _53 = (_48.0: u64)
    SourceInfo(src/pretty/mod.rs:72:40-72:50)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:72:18-72:51)
      kind: _52 = d2s::decimal_length17(move _53) -> [return: bb23, unwind: bb134]
  }
  preds [bb21]
  succs [bb23, bb134]

bb23
  0: StorageDead(_53)
    SourceInfo(src/pretty/mod.rs:72:50-72:51)
  1: _51 = move _52 as isize (IntToInt)
    SourceInfo(src/pretty/mod.rs:72:18-72:60)
  2: StorageDead(_52)
    SourceInfo(src/pretty/mod.rs:72:59-72:60)
  3: FakeRead(ForLet(None), _51)
    SourceInfo(src/pretty/mod.rs:72:9-72:15)
  4: StorageLive(_54)
    SourceInfo(src/pretty/mod.rs:73:9-73:10)
  5: StorageLive(_55)
    SourceInfo(src/pretty/mod.rs:73:13-73:23)
  6: _55 = (_48.1: i32)
    SourceInfo(src/pretty/mod.rs:73:13-73:23)
  7: _54 = move _55 as isize (IntToInt)
    SourceInfo(src/pretty/mod.rs:73:13-73:32)
  8: StorageDead(_55)
    SourceInfo(src/pretty/mod.rs:73:31-73:32)
  9: FakeRead(ForLet(None), _54)
    SourceInfo(src/pretty/mod.rs:73:9-73:10)
  10: StorageLive(_56)
    SourceInfo(src/pretty/mod.rs:74:9-74:11)
  11: StorageLive(_57)
    SourceInfo(src/pretty/mod.rs:74:14-74:20)
  12: _57 = _51
    SourceInfo(src/pretty/mod.rs:74:14-74:20)
  13: StorageLive(_58)
    SourceInfo(src/pretty/mod.rs:74:23-74:24)
  14: _58 = _54
    SourceInfo(src/pretty/mod.rs:74:23-74:24)
  15: _59 = AddWithOverflow(_57, _58)
    SourceInfo(src/pretty/mod.rs:74:14-74:24)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:74:14-74:24)
      kind: assert(!move (_59.1: bool), "attempt to compute `{} + {}`, which would overflow", move _57, move _58) -> [success: bb24, unwind: bb134]
  }
  preds [bb22]
  succs [bb24, bb134]

bb24
  0: _56 = move (_59.0: isize)
    SourceInfo(src/pretty/mod.rs:74:14-74:24)
  1: StorageDead(_58)
    SourceInfo(src/pretty/mod.rs:74:23-74:24)
  2: StorageDead(_57)
    SourceInfo(src/pretty/mod.rs:74:23-74:24)
  3: FakeRead(ForLet(None), _56)
    SourceInfo(src/pretty/mod.rs:74:9-74:11)
  4: StorageLive(_60)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
  5: StorageLive(_61)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
  6: _61 = const true
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
      kind: switchInt(move _61) -> [0: bb28, otherwise: bb25]
  }
  preds [bb23]
  succs [bb25, bb28]

bb25
  0: StorageLive(_62)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
  1: StorageLive(_63)
    SourceInfo(src/pretty/mod.rs:75:19-75:28)
  2: StorageLive(_64)
    SourceInfo(src/pretty/mod.rs:75:19-75:20)
  3: _64 = _54
    SourceInfo(src/pretty/mod.rs:75:19-75:20)
  4: _63 = Ge(move _64, const -324_isize)
    SourceInfo(src/pretty/mod.rs:75:19-75:28)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:75:19-75:28)
      kind: switchInt(move _63) -> [0: bb27, otherwise: bb26]
  }
  preds [bb24]
  succs [bb26, bb27]

bb26
  0: StorageDead(_64)
    SourceInfo(src/pretty/mod.rs:75:27-75:28)
  1: _62 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:38-317:38)
  2: StorageDead(_63)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:37-317:38)
  3: StorageDead(_62)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:37-317:38)
  4: _60 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:43-318:10)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
      kind: goto -> bb29
  }
  preds [bb25]
  succs [bb29]

bb27
  0: StorageDead(_64)
    SourceInfo(src/pretty/mod.rs:75:27-75:28)
  1: StorageLive(_65)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
      kind: _65 = core::panicking::panic(const "assertion failed: k >= -324") -> bb134
  }
  preds [bb25]
  succs [bb134]

bb28
  0: _60 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:10-318:10)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
      kind: goto -> bb29
  }
  preds [bb24]
  succs [bb29]

bb29
  0: StorageDead(_61)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:9-318:10)
  1: StorageDead(_60)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:9-318:10)
  2: StorageLive(_66)
    SourceInfo(src/pretty/mod.rs:77:8-77:14)
  3: StorageLive(_67)
    SourceInfo(src/pretty/mod.rs:77:13-77:14)
  4: _67 = _54
    SourceInfo(src/pretty/mod.rs:77:13-77:14)
  5: _66 = Le(const 0_isize, move _67)
    SourceInfo(src/pretty/mod.rs:77:8-77:14)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:77:8-77:14)
      kind: switchInt(move _66) -> [0: bb53, otherwise: bb30]
  }
  preds [bb26, bb28]
  succs [bb30, bb53]

bb30
  0: StorageDead(_67)
    SourceInfo(src/pretty/mod.rs:77:13-77:14)
  1: StorageLive(_68)
    SourceInfo(src/pretty/mod.rs:77:18-77:26)
  2: StorageLive(_69)
    SourceInfo(src/pretty/mod.rs:77:18-77:20)
  3: _69 = _56
    SourceInfo(src/pretty/mod.rs:77:18-77:20)
  4: _68 = Le(move _69, const 16_isize)
    SourceInfo(src/pretty/mod.rs:77:18-77:26)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:77:18-77:26)
      kind: switchInt(move _68) -> [0: bb52, otherwise: bb31]
  }
  preds [bb29]
  succs [bb31, bb52]

bb31
  0: StorageDead(_69)
    SourceInfo(src/pretty/mod.rs:77:25-77:26)
  1: StorageLive(_70)
    SourceInfo(src/pretty/mod.rs:79:9-79:71)
  2: StorageLive(_71)
    SourceInfo(src/pretty/mod.rs:79:29-79:39)
  3: _71 = (_48.0: u64)
    SourceInfo(src/pretty/mod.rs:79:29-79:39)
  4: StorageLive(_72)
    SourceInfo(src/pretty/mod.rs:79:41-79:70)
  5: StorageLive(_73)
    SourceInfo(src/pretty/mod.rs:79:41-79:47)
  6: _73 = _2
    SourceInfo(src/pretty/mod.rs:79:41-79:47)
  7: StorageLive(_74)
    SourceInfo(src/pretty/mod.rs:79:55-79:69)
  8: StorageLive(_75)
    SourceInfo(src/pretty/mod.rs:79:55-79:60)
  9: _75 = _27
    SourceInfo(src/pretty/mod.rs:79:55-79:60)
  10: StorageLive(_76)
    SourceInfo(src/pretty/mod.rs:79:63-79:69)
  11: _76 = _51
    SourceInfo(src/pretty/mod.rs:79:63-79:69)
  12: _77 = AddWithOverflow(_75, _76)
    SourceInfo(src/pretty/mod.rs:79:55-79:69)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:79:55-79:69)
      kind: assert(!move (_77.1: bool), "attempt to compute `{} + {}`, which would overflow", move _75, move _76) -> [success: bb32, unwind: bb134]
  }
  preds [bb30]
  succs [bb32, bb134]

bb32
  0: _74 = move (_77.0: isize)
    SourceInfo(src/pretty/mod.rs:79:55-79:69)
  1: StorageDead(_76)
    SourceInfo(src/pretty/mod.rs:79:68-79:69)
  2: StorageDead(_75)
    SourceInfo(src/pretty/mod.rs:79:68-79:69)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:79:41-79:70)
      kind: _72 = core::ptr::mut_ptr::<impl *mut u8>::offset(move _73, move _74) -> [return: bb33, unwind: bb134]
  }
  preds [bb31]
  succs [bb33, bb134]

bb33
  0: StorageDead(_74)
    SourceInfo(src/pretty/mod.rs:79:69-79:70)
  1: StorageDead(_73)
    SourceInfo(src/pretty/mod.rs:79:69-79:70)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:79:9-79:71)
      kind: _70 = pretty::mantissa::write_mantissa_long(move _71, move _72) -> [return: bb34, unwind: bb134]
  }
  preds [bb32]
  succs [bb34, bb134]

bb34
  0: StorageDead(_72)
    SourceInfo(src/pretty/mod.rs:79:70-79:71)
  1: StorageDead(_71)
    SourceInfo(src/pretty/mod.rs:79:70-79:71)
  2: StorageDead(_70)
    SourceInfo(src/pretty/mod.rs:79:71-79:72)
  3: StorageLive(_78)
    SourceInfo(src/pretty/mod.rs:80:9-82:10)
  4: StorageLive(_79)
    SourceInfo(src/pretty/mod.rs:80:18-80:28)
  5: StorageLive(_80)
    SourceInfo(src/pretty/mod.rs:80:18-80:28)
  6: StorageLive(_81)
    SourceInfo(src/pretty/mod.rs:80:18-80:24)
  7: _81 = _51
    SourceInfo(src/pretty/mod.rs:80:18-80:24)
  8: StorageLive(_82)
    SourceInfo(src/pretty/mod.rs:80:26-80:28)
  9: _82 = _56
    SourceInfo(src/pretty/mod.rs:80:26-80:28)
  10: _80 = core::ops::Range::<isize> { start: move _81, end: move _82 }
    SourceInfo(src/pretty/mod.rs:80:18-80:28)
  11: StorageDead(_82)
    SourceInfo(src/pretty/mod.rs:80:27-80:28)
  12: StorageDead(_81)
    SourceInfo(src/pretty/mod.rs:80:27-80:28)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:80:18-80:28)
      kind: _79 = <core::ops::Range<isize> as core::iter::IntoIterator>::into_iter(move _80) -> [return: bb35, unwind: bb134]
  }
  preds [bb33]
  succs [bb35, bb134]

bb35
  0: StorageDead(_80)
    SourceInfo(src/pretty/mod.rs:80:27-80:28)
  1: PlaceMention(_79)
    SourceInfo(src/pretty/mod.rs:80:18-80:28)
  2: StorageLive(_83)
    SourceInfo(src/pretty/mod.rs:80:18-80:28)
  3: _83 = move _79
    SourceInfo(src/pretty/mod.rs:80:18-80:28)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:80:9-82:10)
      kind: goto -> bb36
  }
  preds [bb34]
  succs [bb36]

bb36
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:80:9-82:10)
      kind: falseUnwind -> [real: bb37, unwind: bb134]
  }
  preds [bb35, bb44]
  succs [bb37, bb134]

bb37
  0: StorageLive(_85)
    SourceInfo(src/pretty/mod.rs:80:18-80:28)
  1: StorageLive(_86)
    SourceInfo(src/pretty/mod.rs:80:18-80:28)
  2: StorageLive(_87)
    SourceInfo(src/pretty/mod.rs:80:18-80:28)
  3: StorageLive(_88)
    SourceInfo(src/pretty/mod.rs:80:18-80:28)
  4: _88 = &mut _83
    SourceInfo(src/pretty/mod.rs:80:18-80:28)
  5: _87 = &mut (*_88)
    SourceInfo(src/pretty/mod.rs:80:18-80:28)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:80:18-80:28)
      kind: _86 = <core::ops::Range<isize> as core::iter::Iterator>::next(move _87) -> [return: bb38, unwind: bb134]
  }
  preds [bb36]
  succs [bb38, bb134]

bb38
  0: StorageDead(_87)
    SourceInfo(src/pretty/mod.rs:80:27-80:28)
  1: PlaceMention(_86)
    SourceInfo(src/pretty/mod.rs:80:18-80:28)
  2: _89 = discriminant(_86)
    SourceInfo(src/pretty/mod.rs:80:18-80:28)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:80:18-80:28)
      kind: switchInt(move _89) -> [0: bb40, 1: bb41, otherwise: bb39]
  }
  preds [bb37]
  succs [bb39, bb40, bb41]

bb39
  0: FakeRead(ForMatchedPlace(None), _86)
    SourceInfo(src/pretty/mod.rs:80:18-80:28)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:80:18-80:28)
      kind: unreachable
  }
  preds [bb38]
  succs []

bb40
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:80:9-82:10)
      kind: falseEdge -> [real: bb42, imaginary: bb41]
  }
  preds [bb38]
  succs [bb41, bb42]

bb41
  0: StorageLive(_91)
    SourceInfo(src/pretty/mod.rs:80:13-80:14)
  1: _91 = ((_86 as Some).0: isize)
    SourceInfo(src/pretty/mod.rs:80:13-80:14)
  2: StorageLive(_92)
    SourceInfo(src/pretty/mod.rs:81:14-81:38)
  3: StorageLive(_93)
    SourceInfo(src/pretty/mod.rs:81:14-81:20)
  4: _93 = _2
    SourceInfo(src/pretty/mod.rs:81:14-81:20)
  5: StorageLive(_94)
    SourceInfo(src/pretty/mod.rs:81:28-81:37)
  6: StorageLive(_95)
    SourceInfo(src/pretty/mod.rs:81:28-81:33)
  7: _95 = _27
    SourceInfo(src/pretty/mod.rs:81:28-81:33)
  8: StorageLive(_96)
    SourceInfo(src/pretty/mod.rs:81:36-81:37)
  9: _96 = _91
    SourceInfo(src/pretty/mod.rs:81:36-81:37)
  10: _97 = AddWithOverflow(_95, _96)
    SourceInfo(src/pretty/mod.rs:81:28-81:37)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:81:28-81:37)
      kind: assert(!move (_97.1: bool), "attempt to compute `{} + {}`, which would overflow", move _95, move _96) -> [success: bb43, unwind: bb134]
  }
  preds [bb38, bb40]
  succs [bb43, bb134]

bb42
  0: _78 = const ()
    SourceInfo(src/pretty/mod.rs:80:9-82:10)
  1: StorageDead(_88)
    SourceInfo(src/pretty/mod.rs:82:9-82:10)
  2: StorageDead(_86)
    SourceInfo(src/pretty/mod.rs:82:9-82:10)
  3: StorageDead(_85)
    SourceInfo(src/pretty/mod.rs:82:9-82:10)
  4: StorageDead(_83)
    SourceInfo(src/pretty/mod.rs:82:9-82:10)
  5: StorageDead(_79)
    SourceInfo(src/pretty/mod.rs:82:9-82:10)
  6: StorageDead(_78)
    SourceInfo(src/pretty/mod.rs:82:9-82:10)
  7: StorageLive(_98)
    SourceInfo(src/pretty/mod.rs:83:10-83:35)
  8: StorageLive(_99)
    SourceInfo(src/pretty/mod.rs:83:10-83:16)
  9: _99 = _2
    SourceInfo(src/pretty/mod.rs:83:10-83:16)
  10: StorageLive(_100)
    SourceInfo(src/pretty/mod.rs:83:24-83:34)
  11: StorageLive(_101)
    SourceInfo(src/pretty/mod.rs:83:24-83:29)
  12: _101 = _27
    SourceInfo(src/pretty/mod.rs:83:24-83:29)
  13: StorageLive(_102)
    SourceInfo(src/pretty/mod.rs:83:32-83:34)
  14: _102 = _56
    SourceInfo(src/pretty/mod.rs:83:32-83:34)
  15: _103 = AddWithOverflow(_101, _102)
    SourceInfo(src/pretty/mod.rs:83:24-83:34)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:83:24-83:34)
      kind: assert(!move (_103.1: bool), "attempt to compute `{} + {}`, which would overflow", move _101, move _102) -> [success: bb45, unwind: bb134]
  }
  preds [bb40]
  succs [bb45, bb134]

bb43
  0: _94 = move (_97.0: isize)
    SourceInfo(src/pretty/mod.rs:81:28-81:37)
  1: StorageDead(_96)
    SourceInfo(src/pretty/mod.rs:81:36-81:37)
  2: StorageDead(_95)
    SourceInfo(src/pretty/mod.rs:81:36-81:37)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:81:14-81:38)
      kind: _92 = core::ptr::mut_ptr::<impl *mut u8>::offset(move _93, move _94) -> [return: bb44, unwind: bb134]
  }
  preds [bb41]
  succs [bb44, bb134]

bb44
  0: StorageDead(_94)
    SourceInfo(src/pretty/mod.rs:81:37-81:38)
  1: StorageDead(_93)
    SourceInfo(src/pretty/mod.rs:81:37-81:38)
  2: (*_92) = const 48_u8
    SourceInfo(src/pretty/mod.rs:81:13-81:45)
  3: StorageDead(_92)
    SourceInfo(src/pretty/mod.rs:81:45-81:46)
  4: _85 = const ()
    SourceInfo(src/pretty/mod.rs:80:29-82:10)
  5: StorageDead(_91)
    SourceInfo(src/pretty/mod.rs:82:9-82:10)
  6: StorageDead(_88)
    SourceInfo(src/pretty/mod.rs:82:9-82:10)
  7: StorageDead(_86)
    SourceInfo(src/pretty/mod.rs:82:9-82:10)
  8: StorageDead(_85)
    SourceInfo(src/pretty/mod.rs:82:9-82:10)
  9: _84 = const ()
    SourceInfo(src/pretty/mod.rs:80:9-82:10)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:80:9-82:10)
      kind: goto -> bb36
  }
  preds [bb43]
  succs [bb36]

bb45
  0: _100 = move (_103.0: isize)
    SourceInfo(src/pretty/mod.rs:83:24-83:34)
  1: StorageDead(_102)
    SourceInfo(src/pretty/mod.rs:83:33-83:34)
  2: StorageDead(_101)
    SourceInfo(src/pretty/mod.rs:83:33-83:34)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:83:10-83:35)
      kind: _98 = core::ptr::mut_ptr::<impl *mut u8>::offset(move _99, move _100) -> [return: bb46, unwind: bb134]
  }
  preds [bb42]
  succs [bb46, bb134]

bb46
  0: StorageDead(_100)
    SourceInfo(src/pretty/mod.rs:83:34-83:35)
  1: StorageDead(_99)
    SourceInfo(src/pretty/mod.rs:83:34-83:35)
  2: (*_98) = const 46_u8
    SourceInfo(src/pretty/mod.rs:83:9-83:42)
  3: StorageDead(_98)
    SourceInfo(src/pretty/mod.rs:83:42-83:43)
  4: StorageLive(_104)
    SourceInfo(src/pretty/mod.rs:84:10-84:39)
  5: StorageLive(_105)
    SourceInfo(src/pretty/mod.rs:84:10-84:16)
  6: _105 = _2
    SourceInfo(src/pretty/mod.rs:84:10-84:16)
  7: StorageLive(_106)
    SourceInfo(src/pretty/mod.rs:84:24-84:38)
  8: StorageLive(_107)
    SourceInfo(src/pretty/mod.rs:84:24-84:34)
  9: StorageLive(_108)
    SourceInfo(src/pretty/mod.rs:84:24-84:29)
  10: _108 = _27
    SourceInfo(src/pretty/mod.rs:84:24-84:29)
  11: StorageLive(_109)
    SourceInfo(src/pretty/mod.rs:84:32-84:34)
  12: _109 = _56
    SourceInfo(src/pretty/mod.rs:84:32-84:34)
  13: _110 = AddWithOverflow(_108, _109)
    SourceInfo(src/pretty/mod.rs:84:24-84:34)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:84:24-84:34)
      kind: assert(!move (_110.1: bool), "attempt to compute `{} + {}`, which would overflow", move _108, move _109) -> [success: bb47, unwind: bb134]
  }
  preds [bb45]
  succs [bb47, bb134]

bb47
  0: _107 = move (_110.0: isize)
    SourceInfo(src/pretty/mod.rs:84:24-84:34)
  1: StorageDead(_109)
    SourceInfo(src/pretty/mod.rs:84:33-84:34)
  2: StorageDead(_108)
    SourceInfo(src/pretty/mod.rs:84:33-84:34)
  3: _111 = AddWithOverflow(_107, const 1_isize)
    SourceInfo(src/pretty/mod.rs:84:24-84:38)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:84:24-84:38)
      kind: assert(!move (_111.1: bool), "attempt to compute `{} + {}`, which would overflow", move _107, const 1_isize) -> [success: bb48, unwind: bb134]
  }
  preds [bb46]
  succs [bb48, bb134]

bb48
  0: _106 = move (_111.0: isize)
    SourceInfo(src/pretty/mod.rs:84:24-84:38)
  1: StorageDead(_107)
    SourceInfo(src/pretty/mod.rs:84:37-84:38)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:84:10-84:39)
      kind: _104 = core::ptr::mut_ptr::<impl *mut u8>::offset(move _105, move _106) -> [return: bb49, unwind: bb134]
  }
  preds [bb47]
  succs [bb49, bb134]

bb49
  0: StorageDead(_106)
    SourceInfo(src/pretty/mod.rs:84:38-84:39)
  1: StorageDead(_105)
    SourceInfo(src/pretty/mod.rs:84:38-84:39)
  2: (*_104) = const 48_u8
    SourceInfo(src/pretty/mod.rs:84:9-84:46)
  3: StorageDead(_104)
    SourceInfo(src/pretty/mod.rs:84:46-84:47)
  4: StorageLive(_112)
    SourceInfo(src/pretty/mod.rs:85:9-85:37)
  5: StorageLive(_113)
    SourceInfo(src/pretty/mod.rs:85:9-85:23)
  6: StorageLive(_114)
    SourceInfo(src/pretty/mod.rs:85:9-85:14)
  7: _114 = _27
    SourceInfo(src/pretty/mod.rs:85:9-85:14)
  8: _113 = move _114 as usize (IntToInt)
    SourceInfo(src/pretty/mod.rs:85:9-85:23)
  9: StorageDead(_114)
    SourceInfo(src/pretty/mod.rs:85:22-85:23)
  10: StorageLive(_115)
    SourceInfo(src/pretty/mod.rs:85:26-85:37)
  11: StorageLive(_116)
    SourceInfo(src/pretty/mod.rs:85:26-85:28)
  12: _116 = _56
    SourceInfo(src/pretty/mod.rs:85:26-85:28)
  13: _115 = move _116 as usize (IntToInt)
    SourceInfo(src/pretty/mod.rs:85:26-85:37)
  14: StorageDead(_116)
    SourceInfo(src/pretty/mod.rs:85:36-85:37)
  15: _117 = AddWithOverflow(_113, _115)
    SourceInfo(src/pretty/mod.rs:85:9-85:37)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:85:9-85:37)
      kind: assert(!move (_117.1: bool), "attempt to compute `{} + {}`, which would overflow", move _113, move _115) -> [success: bb50, unwind: bb134]
  }
  preds [bb48]
  succs [bb50, bb134]

bb50
  0: _112 = move (_117.0: usize)
    SourceInfo(src/pretty/mod.rs:85:9-85:37)
  1: StorageDead(_115)
    SourceInfo(src/pretty/mod.rs:85:36-85:37)
  2: StorageDead(_113)
    SourceInfo(src/pretty/mod.rs:85:36-85:37)
  3: _118 = AddWithOverflow(_112, const 2_usize)
    SourceInfo(src/pretty/mod.rs:85:9-85:41)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:85:9-85:41)
      kind: assert(!move (_118.1: bool), "attempt to compute `{} + {}`, which would overflow", move _112, const 2_usize) -> [success: bb51, unwind: bb134]
  }
  preds [bb49]
  succs [bb51, bb134]

bb51
  0: _0 = move (_118.0: usize)
    SourceInfo(src/pretty/mod.rs:85:9-85:41)
  1: StorageDead(_112)
    SourceInfo(src/pretty/mod.rs:85:40-85:41)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:77:5-117:6)
      kind: goto -> bb132
  }
  preds [bb50]
  succs [bb132]

bb52
  0: StorageDead(_69)
    SourceInfo(src/pretty/mod.rs:77:25-77:26)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb54
  }
  preds [bb30]
  succs [bb54]

bb53
  0: StorageDead(_67)
    SourceInfo(src/pretty/mod.rs:77:13-77:14)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb54
  }
  preds [bb29]
  succs [bb54]

bb54
  0: StorageLive(_119)
    SourceInfo(src/pretty/mod.rs:86:15-86:21)
  1: StorageLive(_120)
    SourceInfo(src/pretty/mod.rs:86:19-86:21)
  2: _120 = _56
    SourceInfo(src/pretty/mod.rs:86:19-86:21)
  3: _119 = Lt(const 0_isize, move _120)
    SourceInfo(src/pretty/mod.rs:86:15-86:21)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:86:15-86:21)
      kind: switchInt(move _119) -> [0: bb70, otherwise: bb55]
  }
  preds [bb52, bb53]
  succs [bb55, bb70]

bb55
  0: StorageDead(_120)
    SourceInfo(src/pretty/mod.rs:86:20-86:21)
  1: StorageLive(_121)
    SourceInfo(src/pretty/mod.rs:86:25-86:33)
  2: StorageLive(_122)
    SourceInfo(src/pretty/mod.rs:86:25-86:27)
  3: _122 = _56
    SourceInfo(src/pretty/mod.rs:86:25-86:27)
  4: _121 = Le(move _122, const 16_isize)
    SourceInfo(src/pretty/mod.rs:86:25-86:33)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:86:25-86:33)
      kind: switchInt(move _121) -> [0: bb69, otherwise: bb56]
  }
  preds [bb54]
  succs [bb56, bb69]

bb56
  0: StorageDead(_122)
    SourceInfo(src/pretty/mod.rs:86:32-86:33)
  1: StorageLive(_123)
    SourceInfo(src/pretty/mod.rs:88:9-88:75)
  2: StorageLive(_124)
    SourceInfo(src/pretty/mod.rs:88:29-88:39)
  3: _124 = (_48.0: u64)
    SourceInfo(src/pretty/mod.rs:88:29-88:39)
  4: StorageLive(_125)
    SourceInfo(src/pretty/mod.rs:88:41-88:74)
  5: StorageLive(_126)
    SourceInfo(src/pretty/mod.rs:88:41-88:47)
  6: _126 = _2
    SourceInfo(src/pretty/mod.rs:88:41-88:47)
  7: StorageLive(_127)
    SourceInfo(src/pretty/mod.rs:88:55-88:73)
  8: StorageLive(_128)
    SourceInfo(src/pretty/mod.rs:88:55-88:69)
  9: StorageLive(_129)
    SourceInfo(src/pretty/mod.rs:88:55-88:60)
  10: _129 = _27
    SourceInfo(src/pretty/mod.rs:88:55-88:60)
  11: StorageLive(_130)
    SourceInfo(src/pretty/mod.rs:88:63-88:69)
  12: _130 = _51
    SourceInfo(src/pretty/mod.rs:88:63-88:69)
  13: _131 = AddWithOverflow(_129, _130)
    SourceInfo(src/pretty/mod.rs:88:55-88:69)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:88:55-88:69)
      kind: assert(!move (_131.1: bool), "attempt to compute `{} + {}`, which would overflow", move _129, move _130) -> [success: bb57, unwind: bb134]
  }
  preds [bb55]
  succs [bb57, bb134]

bb57
  0: _128 = move (_131.0: isize)
    SourceInfo(src/pretty/mod.rs:88:55-88:69)
  1: StorageDead(_130)
    SourceInfo(src/pretty/mod.rs:88:68-88:69)
  2: StorageDead(_129)
    SourceInfo(src/pretty/mod.rs:88:68-88:69)
  3: _132 = AddWithOverflow(_128, const 1_isize)
    SourceInfo(src/pretty/mod.rs:88:55-88:73)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:88:55-88:73)
      kind: assert(!move (_132.1: bool), "attempt to compute `{} + {}`, which would overflow", move _128, const 1_isize) -> [success: bb58, unwind: bb134]
  }
  preds [bb56]
  succs [bb58, bb134]

bb58
  0: _127 = move (_132.0: isize)
    SourceInfo(src/pretty/mod.rs:88:55-88:73)
  1: StorageDead(_128)
    SourceInfo(src/pretty/mod.rs:88:72-88:73)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:88:41-88:74)
      kind: _125 = core::ptr::mut_ptr::<impl *mut u8>::offset(move _126, move _127) -> [return: bb59, unwind: bb134]
  }
  preds [bb57]
  succs [bb59, bb134]

bb59
  0: StorageDead(_127)
    SourceInfo(src/pretty/mod.rs:88:73-88:74)
  1: StorageDead(_126)
    SourceInfo(src/pretty/mod.rs:88:73-88:74)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:88:9-88:75)
      kind: _123 = pretty::mantissa::write_mantissa_long(move _124, move _125) -> [return: bb60, unwind: bb134]
  }
  preds [bb58]
  succs [bb60, bb134]

bb60
  0: StorageDead(_125)
    SourceInfo(src/pretty/mod.rs:88:74-88:75)
  1: StorageDead(_124)
    SourceInfo(src/pretty/mod.rs:88:74-88:75)
  2: StorageDead(_123)
    SourceInfo(src/pretty/mod.rs:88:75-88:76)
  3: StorageLive(_133)
    SourceInfo(src/pretty/mod.rs:89:9-89:79)
  4: StorageLive(_134)
    SourceInfo(src/pretty/mod.rs:89:19-89:43)
  5: StorageLive(_135)
    SourceInfo(src/pretty/mod.rs:89:19-89:43)
  6: StorageLive(_136)
    SourceInfo(src/pretty/mod.rs:89:19-89:25)
  7: _136 = _2
    SourceInfo(src/pretty/mod.rs:89:19-89:25)
  8: StorageLive(_137)
    SourceInfo(src/pretty/mod.rs:89:33-89:42)
  9: StorageLive(_138)
    SourceInfo(src/pretty/mod.rs:89:33-89:38)
  10: _138 = _27
    SourceInfo(src/pretty/mod.rs:89:33-89:38)
  11: _139 = AddWithOverflow(_138, const 1_isize)
    SourceInfo(src/pretty/mod.rs:89:33-89:42)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:89:33-89:42)
      kind: assert(!move (_139.1: bool), "attempt to compute `{} + {}`, which would overflow", move _138, const 1_isize) -> [success: bb61, unwind: bb134]
  }
  preds [bb59]
  succs [bb61, bb134]

bb61
  0: _137 = move (_139.0: isize)
    SourceInfo(src/pretty/mod.rs:89:33-89:42)
  1: StorageDead(_138)
    SourceInfo(src/pretty/mod.rs:89:41-89:42)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:89:19-89:43)
      kind: _135 = core::ptr::mut_ptr::<impl *mut u8>::offset(move _136, move _137) -> [return: bb62, unwind: bb134]
  }
  preds [bb60]
  succs [bb62, bb134]

bb62
  0: _134 = move _135 as *const u8 (PointerCoercion(MutToConstPointer))
    SourceInfo(src/pretty/mod.rs:89:19-89:43)
  1: StorageDead(_137)
    SourceInfo(src/pretty/mod.rs:89:42-89:43)
  2: StorageDead(_136)
    SourceInfo(src/pretty/mod.rs:89:42-89:43)
  3: StorageDead(_135)
    SourceInfo(src/pretty/mod.rs:89:42-89:43)
  4: StorageLive(_140)
    SourceInfo(src/pretty/mod.rs:89:45-89:65)
  5: StorageLive(_141)
    SourceInfo(src/pretty/mod.rs:89:45-89:51)
  6: _141 = _2
    SourceInfo(src/pretty/mod.rs:89:45-89:51)
  7: StorageLive(_142)
    SourceInfo(src/pretty/mod.rs:89:59-89:64)
  8: _142 = _27
    SourceInfo(src/pretty/mod.rs:89:59-89:64)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:89:45-89:65)
      kind: _140 = core::ptr::mut_ptr::<impl *mut u8>::offset(move _141, move _142) -> [return: bb63, unwind: bb134]
  }
  preds [bb61]
  succs [bb63, bb134]

bb63
  0: StorageDead(_142)
    SourceInfo(src/pretty/mod.rs:89:64-89:65)
  1: StorageDead(_141)
    SourceInfo(src/pretty/mod.rs:89:64-89:65)
  2: StorageLive(_143)
    SourceInfo(src/pretty/mod.rs:89:67-89:78)
  3: StorageLive(_144)
    SourceInfo(src/pretty/mod.rs:89:67-89:69)
  4: _144 = _56
    SourceInfo(src/pretty/mod.rs:89:67-89:69)
  5: _143 = move _144 as usize (IntToInt)
    SourceInfo(src/pretty/mod.rs:89:67-89:78)
  6: StorageDead(_144)
    SourceInfo(src/pretty/mod.rs:89:77-89:78)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:89:9-89:79)
      kind: _133 = core::intrinsics::copy::<u8>(move _134, move _140, move _143) -> [return: bb64, unwind: bb134]
  }
  preds [bb62]
  succs [bb64, bb134]

bb64
  0: StorageDead(_143)
    SourceInfo(src/pretty/mod.rs:89:78-89:79)
  1: StorageDead(_140)
    SourceInfo(src/pretty/mod.rs:89:78-89:79)
  2: StorageDead(_134)
    SourceInfo(src/pretty/mod.rs:89:78-89:79)
  3: StorageDead(_133)
    SourceInfo(src/pretty/mod.rs:89:79-89:80)
  4: StorageLive(_145)
    SourceInfo(src/pretty/mod.rs:90:10-90:35)
  5: StorageLive(_146)
    SourceInfo(src/pretty/mod.rs:90:10-90:16)
  6: _146 = _2
    SourceInfo(src/pretty/mod.rs:90:10-90:16)
  7: StorageLive(_147)
    SourceInfo(src/pretty/mod.rs:90:24-90:34)
  8: StorageLive(_148)
    SourceInfo(src/pretty/mod.rs:90:24-90:29)
  9: _148 = _27
    SourceInfo(src/pretty/mod.rs:90:24-90:29)
  10: StorageLive(_149)
    SourceInfo(src/pretty/mod.rs:90:32-90:34)
  11: _149 = _56
    SourceInfo(src/pretty/mod.rs:90:32-90:34)
  12: _150 = AddWithOverflow(_148, _149)
    SourceInfo(src/pretty/mod.rs:90:24-90:34)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:90:24-90:34)
      kind: assert(!move (_150.1: bool), "attempt to compute `{} + {}`, which would overflow", move _148, move _149) -> [success: bb65, unwind: bb134]
  }
  preds [bb63]
  succs [bb65, bb134]

bb65
  0: _147 = move (_150.0: isize)
    SourceInfo(src/pretty/mod.rs:90:24-90:34)
  1: StorageDead(_149)
    SourceInfo(src/pretty/mod.rs:90:33-90:34)
  2: StorageDead(_148)
    SourceInfo(src/pretty/mod.rs:90:33-90:34)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:90:10-90:35)
      kind: _145 = core::ptr::mut_ptr::<impl *mut u8>::offset(move _146, move _147) -> [return: bb66, unwind: bb134]
  }
  preds [bb64]
  succs [bb66, bb134]

bb66
  0: StorageDead(_147)
    SourceInfo(src/pretty/mod.rs:90:34-90:35)
  1: StorageDead(_146)
    SourceInfo(src/pretty/mod.rs:90:34-90:35)
  2: (*_145) = const 46_u8
    SourceInfo(src/pretty/mod.rs:90:9-90:42)
  3: StorageDead(_145)
    SourceInfo(src/pretty/mod.rs:90:42-90:43)
  4: StorageLive(_151)
    SourceInfo(src/pretty/mod.rs:91:9-91:41)
  5: StorageLive(_152)
    SourceInfo(src/pretty/mod.rs:91:9-91:23)
  6: StorageLive(_153)
    SourceInfo(src/pretty/mod.rs:91:9-91:14)
  7: _153 = _27
    SourceInfo(src/pretty/mod.rs:91:9-91:14)
  8: _152 = move _153 as usize (IntToInt)
    SourceInfo(src/pretty/mod.rs:91:9-91:23)
  9: StorageDead(_153)
    SourceInfo(src/pretty/mod.rs:91:22-91:23)
  10: StorageLive(_154)
    SourceInfo(src/pretty/mod.rs:91:26-91:41)
  11: StorageLive(_155)
    SourceInfo(src/pretty/mod.rs:91:26-91:32)
  12: _155 = _51
    SourceInfo(src/pretty/mod.rs:91:26-91:32)
  13: _154 = move _155 as usize (IntToInt)
    SourceInfo(src/pretty/mod.rs:91:26-91:41)
  14: StorageDead(_155)
    SourceInfo(src/pretty/mod.rs:91:40-91:41)
  15: _156 = AddWithOverflow(_152, _154)
    SourceInfo(src/pretty/mod.rs:91:9-91:41)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:91:9-91:41)
      kind: assert(!move (_156.1: bool), "attempt to compute `{} + {}`, which would overflow", move _152, move _154) -> [success: bb67, unwind: bb134]
  }
  preds [bb65]
  succs [bb67, bb134]

bb67
  0: _151 = move (_156.0: usize)
    SourceInfo(src/pretty/mod.rs:91:9-91:41)
  1: StorageDead(_154)
    SourceInfo(src/pretty/mod.rs:91:40-91:41)
  2: StorageDead(_152)
    SourceInfo(src/pretty/mod.rs:91:40-91:41)
  3: _157 = AddWithOverflow(_151, const 1_usize)
    SourceInfo(src/pretty/mod.rs:91:9-91:45)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:91:9-91:45)
      kind: assert(!move (_157.1: bool), "attempt to compute `{} + {}`, which would overflow", move _151, const 1_usize) -> [success: bb68, unwind: bb134]
  }
  preds [bb66]
  succs [bb68, bb134]

bb68
  0: _0 = move (_157.0: usize)
    SourceInfo(src/pretty/mod.rs:91:9-91:45)
  1: StorageDead(_151)
    SourceInfo(src/pretty/mod.rs:91:44-91:45)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:86:12-117:6)
      kind: goto -> bb131
  }
  preds [bb67]
  succs [bb131]

bb69
  0: StorageDead(_122)
    SourceInfo(src/pretty/mod.rs:86:32-86:33)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb71
  }
  preds [bb55]
  succs [bb71]

bb70
  0: StorageDead(_120)
    SourceInfo(src/pretty/mod.rs:86:20-86:21)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb71
  }
  preds [bb54]
  succs [bb71]

bb71
  0: StorageLive(_158)
    SourceInfo(src/pretty/mod.rs:92:15-92:22)
  1: StorageLive(_159)
    SourceInfo(src/pretty/mod.rs:92:20-92:22)
  2: _159 = _56
    SourceInfo(src/pretty/mod.rs:92:20-92:22)
  3: _158 = Lt(const -5_isize, move _159)
    SourceInfo(src/pretty/mod.rs:92:15-92:22)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:92:15-92:22)
      kind: switchInt(move _158) -> [0: bb95, otherwise: bb72]
  }
  preds [bb69, bb70]
  succs [bb72, bb95]

bb72
  0: StorageDead(_159)
    SourceInfo(src/pretty/mod.rs:92:21-92:22)
  1: StorageLive(_160)
    SourceInfo(src/pretty/mod.rs:92:26-92:33)
  2: StorageLive(_161)
    SourceInfo(src/pretty/mod.rs:92:26-92:28)
  3: _161 = _56
    SourceInfo(src/pretty/mod.rs:92:26-92:28)
  4: _160 = Le(move _161, const 0_isize)
    SourceInfo(src/pretty/mod.rs:92:26-92:33)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:92:26-92:33)
      kind: switchInt(move _160) -> [0: bb94, otherwise: bb73]
  }
  preds [bb71]
  succs [bb73, bb94]

bb73
  0: StorageDead(_161)
    SourceInfo(src/pretty/mod.rs:92:32-92:33)
  1: StorageLive(_162)
    SourceInfo(src/pretty/mod.rs:94:10-94:30)
  2: StorageLive(_163)
    SourceInfo(src/pretty/mod.rs:94:10-94:16)
  3: _163 = _2
    SourceInfo(src/pretty/mod.rs:94:10-94:16)
  4: StorageLive(_164)
    SourceInfo(src/pretty/mod.rs:94:24-94:29)
  5: _164 = _27
    SourceInfo(src/pretty/mod.rs:94:24-94:29)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:94:10-94:30)
      kind: _162 = core::ptr::mut_ptr::<impl *mut u8>::offset(move _163, move _164) -> [return: bb74, unwind: bb134]
  }
  preds [bb72]
  succs [bb74, bb134]

bb74
  0: StorageDead(_164)
    SourceInfo(src/pretty/mod.rs:94:29-94:30)
  1: StorageDead(_163)
    SourceInfo(src/pretty/mod.rs:94:29-94:30)
  2: (*_162) = const 48_u8
    SourceInfo(src/pretty/mod.rs:94:9-94:37)
  3: StorageDead(_162)
    SourceInfo(src/pretty/mod.rs:94:37-94:38)
  4: StorageLive(_165)
    SourceInfo(src/pretty/mod.rs:95:10-95:34)
  5: StorageLive(_166)
    SourceInfo(src/pretty/mod.rs:95:10-95:16)
  6: _166 = _2
    SourceInfo(src/pretty/mod.rs:95:10-95:16)
  7: StorageLive(_167)
    SourceInfo(src/pretty/mod.rs:95:24-95:33)
  8: StorageLive(_168)
    SourceInfo(src/pretty/mod.rs:95:24-95:29)
  9: _168 = _27
    SourceInfo(src/pretty/mod.rs:95:24-95:29)
  10: _169 = AddWithOverflow(_168, const 1_isize)
    SourceInfo(src/pretty/mod.rs:95:24-95:33)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:95:24-95:33)
      kind: assert(!move (_169.1: bool), "attempt to compute `{} + {}`, which would overflow", move _168, const 1_isize) -> [success: bb75, unwind: bb134]
  }
  preds [bb73]
  succs [bb75, bb134]

bb75
  0: _167 = move (_169.0: isize)
    SourceInfo(src/pretty/mod.rs:95:24-95:33)
  1: StorageDead(_168)
    SourceInfo(src/pretty/mod.rs:95:32-95:33)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:95:10-95:34)
      kind: _165 = core::ptr::mut_ptr::<impl *mut u8>::offset(move _166, move _167) -> [return: bb76, unwind: bb134]
  }
  preds [bb74]
  succs [bb76, bb134]

bb76
  0: StorageDead(_167)
    SourceInfo(src/pretty/mod.rs:95:33-95:34)
  1: StorageDead(_166)
    SourceInfo(src/pretty/mod.rs:95:33-95:34)
  2: (*_165) = const 46_u8
    SourceInfo(src/pretty/mod.rs:95:9-95:41)
  3: StorageDead(_165)
    SourceInfo(src/pretty/mod.rs:95:41-95:42)
  4: StorageLive(_170)
    SourceInfo(src/pretty/mod.rs:96:13-96:19)
  5: StorageLive(_171)
    SourceInfo(src/pretty/mod.rs:96:26-96:28)
  6: _171 = _56
    SourceInfo(src/pretty/mod.rs:96:26-96:28)
  7: _172 = SubWithOverflow(const 2_isize, _171)
    SourceInfo(src/pretty/mod.rs:96:22-96:28)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:96:22-96:28)
      kind: assert(!move (_172.1: bool), "attempt to compute `{} - {}`, which would overflow", const 2_isize, move _171) -> [success: bb77, unwind: bb134]
  }
  preds [bb75]
  succs [bb77, bb134]

bb77
  0: _170 = move (_172.0: isize)
    SourceInfo(src/pretty/mod.rs:96:22-96:28)
  1: StorageDead(_171)
    SourceInfo(src/pretty/mod.rs:96:27-96:28)
  2: FakeRead(ForLet(None), _170)
    SourceInfo(src/pretty/mod.rs:96:13-96:19)
  3: StorageLive(_173)
    SourceInfo(src/pretty/mod.rs:97:9-99:10)
  4: StorageLive(_174)
    SourceInfo(src/pretty/mod.rs:97:18-97:27)
  5: StorageLive(_175)
    SourceInfo(src/pretty/mod.rs:97:18-97:27)
  6: StorageLive(_176)
    SourceInfo(src/pretty/mod.rs:97:21-97:27)
  7: _176 = _170
    SourceInfo(src/pretty/mod.rs:97:21-97:27)
  8: _175 = core::ops::Range::<isize> { start: const 2_isize, end: move _176 }
    SourceInfo(src/pretty/mod.rs:97:18-97:27)
  9: StorageDead(_176)
    SourceInfo(src/pretty/mod.rs:97:26-97:27)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:97:18-97:27)
      kind: _174 = <core::ops::Range<isize> as core::iter::IntoIterator>::into_iter(move _175) -> [return: bb78, unwind: bb134]
  }
  preds [bb76]
  succs [bb78, bb134]

bb78
  0: StorageDead(_175)
    SourceInfo(src/pretty/mod.rs:97:26-97:27)
  1: PlaceMention(_174)
    SourceInfo(src/pretty/mod.rs:97:18-97:27)
  2: StorageLive(_177)
    SourceInfo(src/pretty/mod.rs:97:18-97:27)
  3: _177 = move _174
    SourceInfo(src/pretty/mod.rs:97:18-97:27)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:97:9-99:10)
      kind: goto -> bb79
  }
  preds [bb77]
  succs [bb79]

bb79
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:97:9-99:10)
      kind: falseUnwind -> [real: bb80, unwind: bb134]
  }
  preds [bb78, bb87]
  succs [bb80, bb134]

bb80
  0: StorageLive(_178)
    SourceInfo(src/pretty/mod.rs:97:18-97:27)
  1: StorageLive(_179)
    SourceInfo(src/pretty/mod.rs:97:18-97:27)
  2: StorageLive(_180)
    SourceInfo(src/pretty/mod.rs:97:18-97:27)
  3: StorageLive(_181)
    SourceInfo(src/pretty/mod.rs:97:18-97:27)
  4: _181 = &mut _177
    SourceInfo(src/pretty/mod.rs:97:18-97:27)
  5: _180 = &mut (*_181)
    SourceInfo(src/pretty/mod.rs:97:18-97:27)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:97:18-97:27)
      kind: _179 = <core::ops::Range<isize> as core::iter::Iterator>::next(move _180) -> [return: bb81, unwind: bb134]
  }
  preds [bb79]
  succs [bb81, bb134]

bb81
  0: StorageDead(_180)
    SourceInfo(src/pretty/mod.rs:97:26-97:27)
  1: PlaceMention(_179)
    SourceInfo(src/pretty/mod.rs:97:18-97:27)
  2: _182 = discriminant(_179)
    SourceInfo(src/pretty/mod.rs:97:18-97:27)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:97:18-97:27)
      kind: switchInt(move _182) -> [0: bb83, 1: bb84, otherwise: bb82]
  }
  preds [bb80]
  succs [bb82, bb83, bb84]

bb82
  0: FakeRead(ForMatchedPlace(None), _179)
    SourceInfo(src/pretty/mod.rs:97:18-97:27)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:97:18-97:27)
      kind: unreachable
  }
  preds [bb81]
  succs []

bb83
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:97:9-99:10)
      kind: falseEdge -> [real: bb85, imaginary: bb84]
  }
  preds [bb81]
  succs [bb84, bb85]

bb84
  0: StorageLive(_184)
    SourceInfo(src/pretty/mod.rs:97:13-97:14)
  1: _184 = ((_179 as Some).0: isize)
    SourceInfo(src/pretty/mod.rs:97:13-97:14)
  2: StorageLive(_185)
    SourceInfo(src/pretty/mod.rs:98:14-98:38)
  3: StorageLive(_186)
    SourceInfo(src/pretty/mod.rs:98:14-98:20)
  4: _186 = _2
    SourceInfo(src/pretty/mod.rs:98:14-98:20)
  5: StorageLive(_187)
    SourceInfo(src/pretty/mod.rs:98:28-98:37)
  6: StorageLive(_188)
    SourceInfo(src/pretty/mod.rs:98:28-98:33)
  7: _188 = _27
    SourceInfo(src/pretty/mod.rs:98:28-98:33)
  8: StorageLive(_189)
    SourceInfo(src/pretty/mod.rs:98:36-98:37)
  9: _189 = _184
    SourceInfo(src/pretty/mod.rs:98:36-98:37)
  10: _190 = AddWithOverflow(_188, _189)
    SourceInfo(src/pretty/mod.rs:98:28-98:37)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:98:28-98:37)
      kind: assert(!move (_190.1: bool), "attempt to compute `{} + {}`, which would overflow", move _188, move _189) -> [success: bb86, unwind: bb134]
  }
  preds [bb81, bb83]
  succs [bb86, bb134]

bb85
  0: _173 = const ()
    SourceInfo(src/pretty/mod.rs:97:9-99:10)
  1: StorageDead(_181)
    SourceInfo(src/pretty/mod.rs:99:9-99:10)
  2: StorageDead(_179)
    SourceInfo(src/pretty/mod.rs:99:9-99:10)
  3: StorageDead(_178)
    SourceInfo(src/pretty/mod.rs:99:9-99:10)
  4: StorageDead(_177)
    SourceInfo(src/pretty/mod.rs:99:9-99:10)
  5: StorageDead(_174)
    SourceInfo(src/pretty/mod.rs:99:9-99:10)
  6: StorageDead(_173)
    SourceInfo(src/pretty/mod.rs:99:9-99:10)
  7: StorageLive(_191)
    SourceInfo(src/pretty/mod.rs:100:9-100:80)
  8: StorageLive(_192)
    SourceInfo(src/pretty/mod.rs:100:29-100:39)
  9: _192 = (_48.0: u64)
    SourceInfo(src/pretty/mod.rs:100:29-100:39)
  10: StorageLive(_193)
    SourceInfo(src/pretty/mod.rs:100:41-100:79)
  11: StorageLive(_194)
    SourceInfo(src/pretty/mod.rs:100:41-100:47)
  12: _194 = _2
    SourceInfo(src/pretty/mod.rs:100:41-100:47)
  13: StorageLive(_195)
    SourceInfo(src/pretty/mod.rs:100:55-100:78)
  14: StorageLive(_196)
    SourceInfo(src/pretty/mod.rs:100:55-100:69)
  15: StorageLive(_197)
    SourceInfo(src/pretty/mod.rs:100:55-100:60)
  16: _197 = _27
    SourceInfo(src/pretty/mod.rs:100:55-100:60)
  17: StorageLive(_198)
    SourceInfo(src/pretty/mod.rs:100:63-100:69)
  18: _198 = _51
    SourceInfo(src/pretty/mod.rs:100:63-100:69)
  19: _199 = AddWithOverflow(_197, _198)
    SourceInfo(src/pretty/mod.rs:100:55-100:69)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:100:55-100:69)
      kind: assert(!move (_199.1: bool), "attempt to compute `{} + {}`, which would overflow", move _197, move _198) -> [success: bb88, unwind: bb134]
  }
  preds [bb83]
  succs [bb88, bb134]

bb86
  0: _187 = move (_190.0: isize)
    SourceInfo(src/pretty/mod.rs:98:28-98:37)
  1: StorageDead(_189)
    SourceInfo(src/pretty/mod.rs:98:36-98:37)
  2: StorageDead(_188)
    SourceInfo(src/pretty/mod.rs:98:36-98:37)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:98:14-98:38)
      kind: _185 = core::ptr::mut_ptr::<impl *mut u8>::offset(move _186, move _187) -> [return: bb87, unwind: bb134]
  }
  preds [bb84]
  succs [bb87, bb134]

bb87
  0: StorageDead(_187)
    SourceInfo(src/pretty/mod.rs:98:37-98:38)
  1: StorageDead(_186)
    SourceInfo(src/pretty/mod.rs:98:37-98:38)
  2: (*_185) = const 48_u8
    SourceInfo(src/pretty/mod.rs:98:13-98:45)
  3: StorageDead(_185)
    SourceInfo(src/pretty/mod.rs:98:45-98:46)
  4: _178 = const ()
    SourceInfo(src/pretty/mod.rs:97:28-99:10)
  5: StorageDead(_184)
    SourceInfo(src/pretty/mod.rs:99:9-99:10)
  6: StorageDead(_181)
    SourceInfo(src/pretty/mod.rs:99:9-99:10)
  7: StorageDead(_179)
    SourceInfo(src/pretty/mod.rs:99:9-99:10)
  8: StorageDead(_178)
    SourceInfo(src/pretty/mod.rs:99:9-99:10)
  9: _84 = const ()
    SourceInfo(src/pretty/mod.rs:97:9-99:10)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:97:9-99:10)
      kind: goto -> bb79
  }
  preds [bb86]
  succs [bb79]

bb88
  0: _196 = move (_199.0: isize)
    SourceInfo(src/pretty/mod.rs:100:55-100:69)
  1: StorageDead(_198)
    SourceInfo(src/pretty/mod.rs:100:68-100:69)
  2: StorageDead(_197)
    SourceInfo(src/pretty/mod.rs:100:68-100:69)
  3: StorageLive(_200)
    SourceInfo(src/pretty/mod.rs:100:72-100:78)
  4: _200 = _170
    SourceInfo(src/pretty/mod.rs:100:72-100:78)
  5: _201 = AddWithOverflow(_196, _200)
    SourceInfo(src/pretty/mod.rs:100:55-100:78)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:100:55-100:78)
      kind: assert(!move (_201.1: bool), "attempt to compute `{} + {}`, which would overflow", move _196, move _200) -> [success: bb89, unwind: bb134]
  }
  preds [bb85]
  succs [bb89, bb134]

bb89
  0: _195 = move (_201.0: isize)
    SourceInfo(src/pretty/mod.rs:100:55-100:78)
  1: StorageDead(_200)
    SourceInfo(src/pretty/mod.rs:100:77-100:78)
  2: StorageDead(_196)
    SourceInfo(src/pretty/mod.rs:100:77-100:78)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:100:41-100:79)
      kind: _193 = core::ptr::mut_ptr::<impl *mut u8>::offset(move _194, move _195) -> [return: bb90, unwind: bb134]
  }
  preds [bb88]
  succs [bb90, bb134]

bb90
  0: StorageDead(_195)
    SourceInfo(src/pretty/mod.rs:100:78-100:79)
  1: StorageDead(_194)
    SourceInfo(src/pretty/mod.rs:100:78-100:79)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:100:9-100:80)
      kind: _191 = pretty::mantissa::write_mantissa_long(move _192, move _193) -> [return: bb91, unwind: bb134]
  }
  preds [bb89]
  succs [bb91, bb134]

bb91
  0: StorageDead(_193)
    SourceInfo(src/pretty/mod.rs:100:79-100:80)
  1: StorageDead(_192)
    SourceInfo(src/pretty/mod.rs:100:79-100:80)
  2: StorageDead(_191)
    SourceInfo(src/pretty/mod.rs:100:80-100:81)
  3: StorageLive(_202)
    SourceInfo(src/pretty/mod.rs:101:9-101:41)
  4: StorageLive(_203)
    SourceInfo(src/pretty/mod.rs:101:9-101:23)
  5: StorageLive(_204)
    SourceInfo(src/pretty/mod.rs:101:9-101:14)
  6: _204 = _27
    SourceInfo(src/pretty/mod.rs:101:9-101:14)
  7: _203 = move _204 as usize (IntToInt)
    SourceInfo(src/pretty/mod.rs:101:9-101:23)
  8: StorageDead(_204)
    SourceInfo(src/pretty/mod.rs:101:22-101:23)
  9: StorageLive(_205)
    SourceInfo(src/pretty/mod.rs:101:26-101:41)
  10: StorageLive(_206)
    SourceInfo(src/pretty/mod.rs:101:26-101:32)
  11: _206 = _51
    SourceInfo(src/pretty/mod.rs:101:26-101:32)
  12: _205 = move _206 as usize (IntToInt)
    SourceInfo(src/pretty/mod.rs:101:26-101:41)
  13: StorageDead(_206)
    SourceInfo(src/pretty/mod.rs:101:40-101:41)
  14: _207 = AddWithOverflow(_203, _205)
    SourceInfo(src/pretty/mod.rs:101:9-101:41)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:101:9-101:41)
      kind: assert(!move (_207.1: bool), "attempt to compute `{} + {}`, which would overflow", move _203, move _205) -> [success: bb92, unwind: bb134]
  }
  preds [bb90]
  succs [bb92, bb134]

bb92
  0: _202 = move (_207.0: usize)
    SourceInfo(src/pretty/mod.rs:101:9-101:41)
  1: StorageDead(_205)
    SourceInfo(src/pretty/mod.rs:101:40-101:41)
  2: StorageDead(_203)
    SourceInfo(src/pretty/mod.rs:101:40-101:41)
  3: StorageLive(_208)
    SourceInfo(src/pretty/mod.rs:101:44-101:59)
  4: StorageLive(_209)
    SourceInfo(src/pretty/mod.rs:101:44-101:50)
  5: _209 = _170
    SourceInfo(src/pretty/mod.rs:101:44-101:50)
  6: _208 = move _209 as usize (IntToInt)
    SourceInfo(src/pretty/mod.rs:101:44-101:59)
  7: StorageDead(_209)
    SourceInfo(src/pretty/mod.rs:101:58-101:59)
  8: _210 = AddWithOverflow(_202, _208)
    SourceInfo(src/pretty/mod.rs:101:9-101:59)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:101:9-101:59)
      kind: assert(!move (_210.1: bool), "attempt to compute `{} + {}`, which would overflow", move _202, move _208) -> [success: bb93, unwind: bb134]
  }
  preds [bb91]
  succs [bb93, bb134]

bb93
  0: _0 = move (_210.0: usize)
    SourceInfo(src/pretty/mod.rs:101:9-101:59)
  1: StorageDead(_208)
    SourceInfo(src/pretty/mod.rs:101:58-101:59)
  2: StorageDead(_202)
    SourceInfo(src/pretty/mod.rs:101:58-101:59)
  3: StorageDead(_170)
    SourceInfo(src/pretty/mod.rs:102:5-102:6)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:92:12-117:6)
      kind: goto -> bb130
  }
  preds [bb92]
  succs [bb130]

bb94
  0: StorageDead(_161)
    SourceInfo(src/pretty/mod.rs:92:32-92:33)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb96
  }
  preds [bb72]
  succs [bb96]

bb95
  0: StorageDead(_159)
    SourceInfo(src/pretty/mod.rs:92:21-92:22)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb96
  }
  preds [bb71]
  succs [bb96]

bb96
  0: StorageLive(_211)
    SourceInfo(src/pretty/mod.rs:102:15-102:26)
  1: StorageLive(_212)
    SourceInfo(src/pretty/mod.rs:102:15-102:21)
  2: _212 = _51
    SourceInfo(src/pretty/mod.rs:102:15-102:21)
  3: _211 = Eq(move _212, const 1_isize)
    SourceInfo(src/pretty/mod.rs:102:15-102:26)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:102:15-102:26)
      kind: switchInt(move _211) -> [0: bb108, otherwise: bb97]
  }
  preds [bb94, bb95]
  succs [bb97, bb108]

bb97
  0: StorageDead(_212)
    SourceInfo(src/pretty/mod.rs:102:25-102:26)
  1: StorageLive(_213)
    SourceInfo(src/pretty/mod.rs:104:40-104:56)
  2: StorageLive(_214)
    SourceInfo(src/pretty/mod.rs:104:40-104:50)
  3: _214 = (_48.0: u64)
    SourceInfo(src/pretty/mod.rs:104:40-104:50)
  4: _213 = move _214 as u8 (IntToInt)
    SourceInfo(src/pretty/mod.rs:104:40-104:56)
  5: StorageDead(_214)
    SourceInfo(src/pretty/mod.rs:104:55-104:56)
  6: _215 = AddWithOverflow(const 48_u8, _213)
    SourceInfo(src/pretty/mod.rs:104:33-104:56)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:104:33-104:56)
      kind: assert(!move (_215.1: bool), "attempt to compute `{} + {}`, which would overflow", const 48_u8, move _213) -> [success: bb98, unwind: bb134]
  }
  preds [bb96]
  succs [bb98, bb134]

bb98
  0: StorageLive(_216)
    SourceInfo(src/pretty/mod.rs:104:10-104:30)
  1: StorageLive(_217)
    SourceInfo(src/pretty/mod.rs:104:10-104:16)
  2: _217 = _2
    SourceInfo(src/pretty/mod.rs:104:10-104:16)
  3: StorageLive(_218)
    SourceInfo(src/pretty/mod.rs:104:24-104:29)
  4: _218 = _27
    SourceInfo(src/pretty/mod.rs:104:24-104:29)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:104:10-104:30)
      kind: _216 = core::ptr::mut_ptr::<impl *mut u8>::offset(move _217, move _218) -> [return: bb99, unwind: bb134]
  }
  preds [bb97]
  succs [bb99, bb134]

bb99
  0: StorageDead(_218)
    SourceInfo(src/pretty/mod.rs:104:29-104:30)
  1: StorageDead(_217)
    SourceInfo(src/pretty/mod.rs:104:29-104:30)
  2: (*_216) = move (_215.0: u8)
    SourceInfo(src/pretty/mod.rs:104:9-104:56)
  3: StorageDead(_213)
    SourceInfo(src/pretty/mod.rs:104:55-104:56)
  4: StorageDead(_216)
    SourceInfo(src/pretty/mod.rs:104:56-104:57)
  5: StorageLive(_219)
    SourceInfo(src/pretty/mod.rs:105:10-105:34)
  6: StorageLive(_220)
    SourceInfo(src/pretty/mod.rs:105:10-105:16)
  7: _220 = _2
    SourceInfo(src/pretty/mod.rs:105:10-105:16)
  8: StorageLive(_221)
    SourceInfo(src/pretty/mod.rs:105:24-105:33)
  9: StorageLive(_222)
    SourceInfo(src/pretty/mod.rs:105:24-105:29)
  10: _222 = _27
    SourceInfo(src/pretty/mod.rs:105:24-105:29)
  11: _223 = AddWithOverflow(_222, const 1_isize)
    SourceInfo(src/pretty/mod.rs:105:24-105:33)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:105:24-105:33)
      kind: assert(!move (_223.1: bool), "attempt to compute `{} + {}`, which would overflow", move _222, const 1_isize) -> [success: bb100, unwind: bb134]
  }
  preds [bb98]
  succs [bb100, bb134]

bb100
  0: _221 = move (_223.0: isize)
    SourceInfo(src/pretty/mod.rs:105:24-105:33)
  1: StorageDead(_222)
    SourceInfo(src/pretty/mod.rs:105:32-105:33)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:105:10-105:34)
      kind: _219 = core::ptr::mut_ptr::<impl *mut u8>::offset(move _220, move _221) -> [return: bb101, unwind: bb134]
  }
  preds [bb99]
  succs [bb101, bb134]

bb101
  0: StorageDead(_221)
    SourceInfo(src/pretty/mod.rs:105:33-105:34)
  1: StorageDead(_220)
    SourceInfo(src/pretty/mod.rs:105:33-105:34)
  2: (*_219) = const 101_u8
    SourceInfo(src/pretty/mod.rs:105:9-105:41)
  3: StorageDead(_219)
    SourceInfo(src/pretty/mod.rs:105:41-105:42)
  4: StorageLive(_224)
    SourceInfo(src/pretty/mod.rs:106:9-106:27)
  5: StorageLive(_225)
    SourceInfo(src/pretty/mod.rs:106:9-106:23)
  6: StorageLive(_226)
    SourceInfo(src/pretty/mod.rs:106:9-106:14)
  7: _226 = _27
    SourceInfo(src/pretty/mod.rs:106:9-106:14)
  8: _225 = move _226 as usize (IntToInt)
    SourceInfo(src/pretty/mod.rs:106:9-106:23)
  9: StorageDead(_226)
    SourceInfo(src/pretty/mod.rs:106:22-106:23)
  10: _227 = AddWithOverflow(_225, const 2_usize)
    SourceInfo(src/pretty/mod.rs:106:9-106:27)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:106:9-106:27)
      kind: assert(!move (_227.1: bool), "attempt to compute `{} + {}`, which would overflow", move _225, const 2_usize) -> [success: bb102, unwind: bb134]
  }
  preds [bb100]
  succs [bb102, bb134]

bb102
  0: _224 = move (_227.0: usize)
    SourceInfo(src/pretty/mod.rs:106:9-106:27)
  1: StorageDead(_225)
    SourceInfo(src/pretty/mod.rs:106:26-106:27)
  2: StorageLive(_228)
    SourceInfo(src/pretty/mod.rs:106:30-106:79)
  3: StorageLive(_229)
    SourceInfo(src/pretty/mod.rs:106:46-106:52)
  4: StorageLive(_230)
    SourceInfo(src/pretty/mod.rs:106:46-106:48)
  5: _230 = _56
    SourceInfo(src/pretty/mod.rs:106:46-106:48)
  6: _231 = SubWithOverflow(_230, const 1_isize)
    SourceInfo(src/pretty/mod.rs:106:46-106:52)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:106:46-106:52)
      kind: assert(!move (_231.1: bool), "attempt to compute `{} - {}`, which would overflow", move _230, const 1_isize) -> [success: bb103, unwind: bb134]
  }
  preds [bb101]
  succs [bb103, bb134]

bb103
  0: _229 = move (_231.0: isize)
    SourceInfo(src/pretty/mod.rs:106:46-106:52)
  1: StorageDead(_230)
    SourceInfo(src/pretty/mod.rs:106:51-106:52)
  2: StorageLive(_232)
    SourceInfo(src/pretty/mod.rs:106:54-106:78)
  3: StorageLive(_233)
    SourceInfo(src/pretty/mod.rs:106:54-106:60)
  4: _233 = _2
    SourceInfo(src/pretty/mod.rs:106:54-106:60)
  5: StorageLive(_234)
    SourceInfo(src/pretty/mod.rs:106:68-106:77)
  6: StorageLive(_235)
    SourceInfo(src/pretty/mod.rs:106:68-106:73)
  7: _235 = _27
    SourceInfo(src/pretty/mod.rs:106:68-106:73)
  8: _236 = AddWithOverflow(_235, const 2_isize)
    SourceInfo(src/pretty/mod.rs:106:68-106:77)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:106:68-106:77)
      kind: assert(!move (_236.1: bool), "attempt to compute `{} + {}`, which would overflow", move _235, const 2_isize) -> [success: bb104, unwind: bb134]
  }
  preds [bb102]
  succs [bb104, bb134]

bb104
  0: _234 = move (_236.0: isize)
    SourceInfo(src/pretty/mod.rs:106:68-106:77)
  1: StorageDead(_235)
    SourceInfo(src/pretty/mod.rs:106:76-106:77)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:106:54-106:78)
      kind: _232 = core::ptr::mut_ptr::<impl *mut u8>::offset(move _233, move _234) -> [return: bb105, unwind: bb134]
  }
  preds [bb103]
  succs [bb105, bb134]

bb105
  0: StorageDead(_234)
    SourceInfo(src/pretty/mod.rs:106:77-106:78)
  1: StorageDead(_233)
    SourceInfo(src/pretty/mod.rs:106:77-106:78)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:106:30-106:79)
      kind: _228 = pretty::exponent::write_exponent3(move _229, move _232) -> [return: bb106, unwind: bb134]
  }
  preds [bb104]
  succs [bb106, bb134]

bb106
  0: StorageDead(_232)
    SourceInfo(src/pretty/mod.rs:106:78-106:79)
  1: StorageDead(_229)
    SourceInfo(src/pretty/mod.rs:106:78-106:79)
  2: _237 = AddWithOverflow(_224, _228)
    SourceInfo(src/pretty/mod.rs:106:9-106:79)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:106:9-106:79)
      kind: assert(!move (_237.1: bool), "attempt to compute `{} + {}`, which would overflow", move _224, move _228) -> [success: bb107, unwind: bb134]
  }
  preds [bb105]
  succs [bb107, bb134]

bb107
  0: _0 = move (_237.0: usize)
    SourceInfo(src/pretty/mod.rs:106:9-106:79)
  1: StorageDead(_228)
    SourceInfo(src/pretty/mod.rs:106:78-106:79)
  2: StorageDead(_224)
    SourceInfo(src/pretty/mod.rs:106:78-106:79)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:102:12-117:6)
      kind: goto -> bb129
  }
  preds [bb106]
  succs [bb129]

bb108
  0: StorageDead(_212)
    SourceInfo(src/pretty/mod.rs:102:25-102:26)
  1: StorageLive(_238)
    SourceInfo(src/pretty/mod.rs:109:9-109:75)
  2: StorageLive(_239)
    SourceInfo(src/pretty/mod.rs:109:29-109:39)
  3: _239 = (_48.0: u64)
    SourceInfo(src/pretty/mod.rs:109:29-109:39)
  4: StorageLive(_240)
    SourceInfo(src/pretty/mod.rs:109:41-109:74)
  5: StorageLive(_241)
    SourceInfo(src/pretty/mod.rs:109:41-109:47)
  6: _241 = _2
    SourceInfo(src/pretty/mod.rs:109:41-109:47)
  7: StorageLive(_242)
    SourceInfo(src/pretty/mod.rs:109:55-109:73)
  8: StorageLive(_243)
    SourceInfo(src/pretty/mod.rs:109:55-109:69)
  9: StorageLive(_244)
    SourceInfo(src/pretty/mod.rs:109:55-109:60)
  10: _244 = _27
    SourceInfo(src/pretty/mod.rs:109:55-109:60)
  11: StorageLive(_245)
    SourceInfo(src/pretty/mod.rs:109:63-109:69)
  12: _245 = _51
    SourceInfo(src/pretty/mod.rs:109:63-109:69)
  13: _246 = AddWithOverflow(_244, _245)
    SourceInfo(src/pretty/mod.rs:109:55-109:69)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:109:55-109:69)
      kind: assert(!move (_246.1: bool), "attempt to compute `{} + {}`, which would overflow", move _244, move _245) -> [success: bb109, unwind: bb134]
  }
  preds [bb96]
  succs [bb109, bb134]

bb109
  0: _243 = move (_246.0: isize)
    SourceInfo(src/pretty/mod.rs:109:55-109:69)
  1: StorageDead(_245)
    SourceInfo(src/pretty/mod.rs:109:68-109:69)
  2: StorageDead(_244)
    SourceInfo(src/pretty/mod.rs:109:68-109:69)
  3: _247 = AddWithOverflow(_243, const 1_isize)
    SourceInfo(src/pretty/mod.rs:109:55-109:73)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:109:55-109:73)
      kind: assert(!move (_247.1: bool), "attempt to compute `{} + {}`, which would overflow", move _243, const 1_isize) -> [success: bb110, unwind: bb134]
  }
  preds [bb108]
  succs [bb110, bb134]

bb110
  0: _242 = move (_247.0: isize)
    SourceInfo(src/pretty/mod.rs:109:55-109:73)
  1: StorageDead(_243)
    SourceInfo(src/pretty/mod.rs:109:72-109:73)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:109:41-109:74)
      kind: _240 = core::ptr::mut_ptr::<impl *mut u8>::offset(move _241, move _242) -> [return: bb111, unwind: bb134]
  }
  preds [bb109]
  succs [bb111, bb134]

bb111
  0: StorageDead(_242)
    SourceInfo(src/pretty/mod.rs:109:73-109:74)
  1: StorageDead(_241)
    SourceInfo(src/pretty/mod.rs:109:73-109:74)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:109:9-109:75)
      kind: _238 = pretty::mantissa::write_mantissa_long(move _239, move _240) -> [return: bb112, unwind: bb134]
  }
  preds [bb110]
  succs [bb112, bb134]

bb112
  0: StorageDead(_240)
    SourceInfo(src/pretty/mod.rs:109:74-109:75)
  1: StorageDead(_239)
    SourceInfo(src/pretty/mod.rs:109:74-109:75)
  2: StorageDead(_238)
    SourceInfo(src/pretty/mod.rs:109:75-109:76)
  3: StorageLive(_248)
    SourceInfo(src/pretty/mod.rs:110:33-110:58)
  4: StorageLive(_249)
    SourceInfo(src/pretty/mod.rs:110:34-110:58)
  5: StorageLive(_250)
    SourceInfo(src/pretty/mod.rs:110:34-110:40)
  6: _250 = _2
    SourceInfo(src/pretty/mod.rs:110:34-110:40)
  7: StorageLive(_251)
    SourceInfo(src/pretty/mod.rs:110:48-110:57)
  8: StorageLive(_252)
    SourceInfo(src/pretty/mod.rs:110:48-110:53)
  9: _252 = _27
    SourceInfo(src/pretty/mod.rs:110:48-110:53)
  10: _253 = AddWithOverflow(_252, const 1_isize)
    SourceInfo(src/pretty/mod.rs:110:48-110:57)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:110:48-110:57)
      kind: assert(!move (_253.1: bool), "attempt to compute `{} + {}`, which would overflow", move _252, const 1_isize) -> [success: bb113, unwind: bb134]
  }
  preds [bb111]
  succs [bb113, bb134]

bb113
  0: _251 = move (_253.0: isize)
    SourceInfo(src/pretty/mod.rs:110:48-110:57)
  1: StorageDead(_252)
    SourceInfo(src/pretty/mod.rs:110:56-110:57)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:110:34-110:58)
      kind: _249 = core::ptr::mut_ptr::<impl *mut u8>::offset(move _250, move _251) -> [return: bb114, unwind: bb134]
  }
  preds [bb112]
  succs [bb114, bb134]

bb114
  0: StorageDead(_251)
    SourceInfo(src/pretty/mod.rs:110:57-110:58)
  1: StorageDead(_250)
    SourceInfo(src/pretty/mod.rs:110:57-110:58)
  2: _248 = (*_249)
    SourceInfo(src/pretty/mod.rs:110:33-110:58)
  3: StorageLive(_254)
    SourceInfo(src/pretty/mod.rs:110:10-110:30)
  4: StorageLive(_255)
    SourceInfo(src/pretty/mod.rs:110:10-110:16)
  5: _255 = _2
    SourceInfo(src/pretty/mod.rs:110:10-110:16)
  6: StorageLive(_256)
    SourceInfo(src/pretty/mod.rs:110:24-110:29)
  7: _256 = _27
    SourceInfo(src/pretty/mod.rs:110:24-110:29)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:110:10-110:30)
      kind: _254 = core::ptr::mut_ptr::<impl *mut u8>::offset(move _255, move _256) -> [return: bb115, unwind: bb134]
  }
  preds [bb113]
  succs [bb115, bb134]

bb115
  0: StorageDead(_256)
    SourceInfo(src/pretty/mod.rs:110:29-110:30)
  1: StorageDead(_255)
    SourceInfo(src/pretty/mod.rs:110:29-110:30)
  2: (*_254) = move _248
    SourceInfo(src/pretty/mod.rs:110:9-110:58)
  3: StorageDead(_248)
    SourceInfo(src/pretty/mod.rs:110:57-110:58)
  4: StorageDead(_254)
    SourceInfo(src/pretty/mod.rs:110:58-110:59)
  5: StorageDead(_249)
    SourceInfo(src/pretty/mod.rs:110:58-110:59)
  6: StorageLive(_257)
    SourceInfo(src/pretty/mod.rs:111:10-111:34)
  7: StorageLive(_258)
    SourceInfo(src/pretty/mod.rs:111:10-111:16)
  8: _258 = _2
    SourceInfo(src/pretty/mod.rs:111:10-111:16)
  9: StorageLive(_259)
    SourceInfo(src/pretty/mod.rs:111:24-111:33)
  10: StorageLive(_260)
    SourceInfo(src/pretty/mod.rs:111:24-111:29)
  11: _260 = _27
    SourceInfo(src/pretty/mod.rs:111:24-111:29)
  12: _261 = AddWithOverflow(_260, const 1_isize)
    SourceInfo(src/pretty/mod.rs:111:24-111:33)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:111:24-111:33)
      kind: assert(!move (_261.1: bool), "attempt to compute `{} + {}`, which would overflow", move _260, const 1_isize) -> [success: bb116, unwind: bb134]
  }
  preds [bb114]
  succs [bb116, bb134]

bb116
  0: _259 = move (_261.0: isize)
    SourceInfo(src/pretty/mod.rs:111:24-111:33)
  1: StorageDead(_260)
    SourceInfo(src/pretty/mod.rs:111:32-111:33)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:111:10-111:34)
      kind: _257 = core::ptr::mut_ptr::<impl *mut u8>::offset(move _258, move _259) -> [return: bb117, unwind: bb134]
  }
  preds [bb115]
  succs [bb117, bb134]

bb117
  0: StorageDead(_259)
    SourceInfo(src/pretty/mod.rs:111:33-111:34)
  1: StorageDead(_258)
    SourceInfo(src/pretty/mod.rs:111:33-111:34)
  2: (*_257) = const 46_u8
    SourceInfo(src/pretty/mod.rs:111:9-111:41)
  3: StorageDead(_257)
    SourceInfo(src/pretty/mod.rs:111:41-111:42)
  4: StorageLive(_262)
    SourceInfo(src/pretty/mod.rs:112:10-112:43)
  5: StorageLive(_263)
    SourceInfo(src/pretty/mod.rs:112:10-112:16)
  6: _263 = _2
    SourceInfo(src/pretty/mod.rs:112:10-112:16)
  7: StorageLive(_264)
    SourceInfo(src/pretty/mod.rs:112:24-112:42)
  8: StorageLive(_265)
    SourceInfo(src/pretty/mod.rs:112:24-112:38)
  9: StorageLive(_266)
    SourceInfo(src/pretty/mod.rs:112:24-112:29)
  10: _266 = _27
    SourceInfo(src/pretty/mod.rs:112:24-112:29)
  11: StorageLive(_267)
    SourceInfo(src/pretty/mod.rs:112:32-112:38)
  12: _267 = _51
    SourceInfo(src/pretty/mod.rs:112:32-112:38)
  13: _268 = AddWithOverflow(_266, _267)
    SourceInfo(src/pretty/mod.rs:112:24-112:38)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:112:24-112:38)
      kind: assert(!move (_268.1: bool), "attempt to compute `{} + {}`, which would overflow", move _266, move _267) -> [success: bb118, unwind: bb134]
  }
  preds [bb116]
  succs [bb118, bb134]

bb118
  0: _265 = move (_268.0: isize)
    SourceInfo(src/pretty/mod.rs:112:24-112:38)
  1: StorageDead(_267)
    SourceInfo(src/pretty/mod.rs:112:37-112:38)
  2: StorageDead(_266)
    SourceInfo(src/pretty/mod.rs:112:37-112:38)
  3: _269 = AddWithOverflow(_265, const 1_isize)
    SourceInfo(src/pretty/mod.rs:112:24-112:42)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:112:24-112:42)
      kind: assert(!move (_269.1: bool), "attempt to compute `{} + {}`, which would overflow", move _265, const 1_isize) -> [success: bb119, unwind: bb134]
  }
  preds [bb117]
  succs [bb119, bb134]

bb119
  0: _264 = move (_269.0: isize)
    SourceInfo(src/pretty/mod.rs:112:24-112:42)
  1: StorageDead(_265)
    SourceInfo(src/pretty/mod.rs:112:41-112:42)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:112:10-112:43)
      kind: _262 = core::ptr::mut_ptr::<impl *mut u8>::offset(move _263, move _264) -> [return: bb120, unwind: bb134]
  }
  preds [bb118]
  succs [bb120, bb134]

bb120
  0: StorageDead(_264)
    SourceInfo(src/pretty/mod.rs:112:42-112:43)
  1: StorageDead(_263)
    SourceInfo(src/pretty/mod.rs:112:42-112:43)
  2: (*_262) = const 101_u8
    SourceInfo(src/pretty/mod.rs:112:9-112:50)
  3: StorageDead(_262)
    SourceInfo(src/pretty/mod.rs:112:50-112:51)
  4: StorageLive(_270)
    SourceInfo(src/pretty/mod.rs:113:9-115:16)
  5: StorageLive(_271)
    SourceInfo(src/pretty/mod.rs:113:9-114:30)
  6: StorageLive(_272)
    SourceInfo(src/pretty/mod.rs:113:9-113:23)
  7: StorageLive(_273)
    SourceInfo(src/pretty/mod.rs:113:9-113:14)
  8: _273 = _27
    SourceInfo(src/pretty/mod.rs:113:9-113:14)
  9: _272 = move _273 as usize (IntToInt)
    SourceInfo(src/pretty/mod.rs:113:9-113:23)
  10: StorageDead(_273)
    SourceInfo(src/pretty/mod.rs:113:22-113:23)
  11: StorageLive(_274)
    SourceInfo(src/pretty/mod.rs:114:15-114:30)
  12: StorageLive(_275)
    SourceInfo(src/pretty/mod.rs:114:15-114:21)
  13: _275 = _51
    SourceInfo(src/pretty/mod.rs:114:15-114:21)
  14: _274 = move _275 as usize (IntToInt)
    SourceInfo(src/pretty/mod.rs:114:15-114:30)
  15: StorageDead(_275)
    SourceInfo(src/pretty/mod.rs:114:29-114:30)
  16: _276 = AddWithOverflow(_272, _274)
    SourceInfo(src/pretty/mod.rs:113:9-114:30)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:113:9-114:30)
      kind: assert(!move (_276.1: bool), "attempt to compute `{} + {}`, which would overflow", move _272, move _274) -> [success: bb121, unwind: bb134]
  }
  preds [bb119]
  succs [bb121, bb134]

bb121
  0: _271 = move (_276.0: usize)
    SourceInfo(src/pretty/mod.rs:113:9-114:30)
  1: StorageDead(_274)
    SourceInfo(src/pretty/mod.rs:114:29-114:30)
  2: StorageDead(_272)
    SourceInfo(src/pretty/mod.rs:114:29-114:30)
  3: _277 = AddWithOverflow(_271, const 2_usize)
    SourceInfo(src/pretty/mod.rs:113:9-115:16)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:113:9-115:16)
      kind: assert(!move (_277.1: bool), "attempt to compute `{} + {}`, which would overflow", move _271, const 2_usize) -> [success: bb122, unwind: bb134]
  }
  preds [bb120]
  succs [bb122, bb134]

bb122
  0: _270 = move (_277.0: usize)
    SourceInfo(src/pretty/mod.rs:113:9-115:16)
  1: StorageDead(_271)
    SourceInfo(src/pretty/mod.rs:115:15-115:16)
  2: StorageLive(_278)
    SourceInfo(src/pretty/mod.rs:116:15-116:73)
  3: StorageLive(_279)
    SourceInfo(src/pretty/mod.rs:116:31-116:37)
  4: StorageLive(_280)
    SourceInfo(src/pretty/mod.rs:116:31-116:33)
  5: _280 = _56
    SourceInfo(src/pretty/mod.rs:116:31-116:33)
  6: _281 = SubWithOverflow(_280, const 1_isize)
    SourceInfo(src/pretty/mod.rs:116:31-116:37)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:116:31-116:37)
      kind: assert(!move (_281.1: bool), "attempt to compute `{} - {}`, which would overflow", move _280, const 1_isize) -> [success: bb123, unwind: bb134]
  }
  preds [bb121]
  succs [bb123, bb134]

bb123
  0: _279 = move (_281.0: isize)
    SourceInfo(src/pretty/mod.rs:116:31-116:37)
  1: StorageDead(_280)
    SourceInfo(src/pretty/mod.rs:116:36-116:37)
  2: StorageLive(_282)
    SourceInfo(src/pretty/mod.rs:116:39-116:72)
  3: StorageLive(_283)
    SourceInfo(src/pretty/mod.rs:116:39-116:45)
  4: _283 = _2
    SourceInfo(src/pretty/mod.rs:116:39-116:45)
  5: StorageLive(_284)
    SourceInfo(src/pretty/mod.rs:116:53-116:71)
  6: StorageLive(_285)
    SourceInfo(src/pretty/mod.rs:116:53-116:67)
  7: StorageLive(_286)
    SourceInfo(src/pretty/mod.rs:116:53-116:58)
  8: _286 = _27
    SourceInfo(src/pretty/mod.rs:116:53-116:58)
  9: StorageLive(_287)
    SourceInfo(src/pretty/mod.rs:116:61-116:67)
  10: _287 = _51
    SourceInfo(src/pretty/mod.rs:116:61-116:67)
  11: _288 = AddWithOverflow(_286, _287)
    SourceInfo(src/pretty/mod.rs:116:53-116:67)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:116:53-116:67)
      kind: assert(!move (_288.1: bool), "attempt to compute `{} + {}`, which would overflow", move _286, move _287) -> [success: bb124, unwind: bb134]
  }
  preds [bb122]
  succs [bb124, bb134]

bb124
  0: _285 = move (_288.0: isize)
    SourceInfo(src/pretty/mod.rs:116:53-116:67)
  1: StorageDead(_287)
    SourceInfo(src/pretty/mod.rs:116:66-116:67)
  2: StorageDead(_286)
    SourceInfo(src/pretty/mod.rs:116:66-116:67)
  3: _289 = AddWithOverflow(_285, const 2_isize)
    SourceInfo(src/pretty/mod.rs:116:53-116:71)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:116:53-116:71)
      kind: assert(!move (_289.1: bool), "attempt to compute `{} + {}`, which would overflow", move _285, const 2_isize) -> [success: bb125, unwind: bb134]
  }
  preds [bb123]
  succs [bb125, bb134]

bb125
  0: _284 = move (_289.0: isize)
    SourceInfo(src/pretty/mod.rs:116:53-116:71)
  1: StorageDead(_285)
    SourceInfo(src/pretty/mod.rs:116:70-116:71)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:116:39-116:72)
      kind: _282 = core::ptr::mut_ptr::<impl *mut u8>::offset(move _283, move _284) -> [return: bb126, unwind: bb134]
  }
  preds [bb124]
  succs [bb126, bb134]

bb126
  0: StorageDead(_284)
    SourceInfo(src/pretty/mod.rs:116:71-116:72)
  1: StorageDead(_283)
    SourceInfo(src/pretty/mod.rs:116:71-116:72)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:116:15-116:73)
      kind: _278 = pretty::exponent::write_exponent3(move _279, move _282) -> [return: bb127, unwind: bb134]
  }
  preds [bb125]
  succs [bb127, bb134]

bb127
  0: StorageDead(_282)
    SourceInfo(src/pretty/mod.rs:116:72-116:73)
  1: StorageDead(_279)
    SourceInfo(src/pretty/mod.rs:116:72-116:73)
  2: _290 = AddWithOverflow(_270, _278)
    SourceInfo(src/pretty/mod.rs:113:9-116:73)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:113:9-116:73)
      kind: assert(!move (_290.1: bool), "attempt to compute `{} + {}`, which would overflow", move _270, move _278) -> [success: bb128, unwind: bb134]
  }
  preds [bb126]
  succs [bb128, bb134]

bb128
  0: _0 = move (_290.0: usize)
    SourceInfo(src/pretty/mod.rs:113:9-116:73)
  1: StorageDead(_278)
    SourceInfo(src/pretty/mod.rs:116:72-116:73)
  2: StorageDead(_270)
    SourceInfo(src/pretty/mod.rs:116:72-116:73)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:102:12-117:6)
      kind: goto -> bb129
  }
  preds [bb127]
  succs [bb129]

bb129
  0: StorageDead(_211)
    SourceInfo(src/pretty/mod.rs:117:5-117:6)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:92:12-117:6)
      kind: goto -> bb130
  }
  preds [bb107, bb128]
  succs [bb130]

bb130
  0: StorageDead(_160)
    SourceInfo(src/pretty/mod.rs:117:5-117:6)
  1: StorageDead(_158)
    SourceInfo(src/pretty/mod.rs:117:5-117:6)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:86:12-117:6)
      kind: goto -> bb131
  }
  preds [bb93, bb129]
  succs [bb131]

bb131
  0: StorageDead(_121)
    SourceInfo(src/pretty/mod.rs:117:5-117:6)
  1: StorageDead(_119)
    SourceInfo(src/pretty/mod.rs:117:5-117:6)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:77:5-117:6)
      kind: goto -> bb132
  }
  preds [bb68, bb130]
  succs [bb132]

bb132
  0: StorageDead(_68)
    SourceInfo(src/pretty/mod.rs:117:5-117:6)
  1: StorageDead(_66)
    SourceInfo(src/pretty/mod.rs:117:5-117:6)
  2: StorageDead(_56)
    SourceInfo(src/pretty/mod.rs:118:1-118:2)
  3: StorageDead(_54)
    SourceInfo(src/pretty/mod.rs:118:1-118:2)
  4: StorageDead(_51)
    SourceInfo(src/pretty/mod.rs:118:1-118:2)
  5: StorageDead(_48)
    SourceInfo(src/pretty/mod.rs:118:1-118:2)
  6: StorageDead(_27)
    SourceInfo(src/pretty/mod.rs:118:1-118:2)
  7: StorageDead(_18)
    SourceInfo(src/pretty/mod.rs:118:1-118:2)
  8: StorageDead(_12)
    SourceInfo(src/pretty/mod.rs:118:1-118:2)
  9: StorageDead(_5)
    SourceInfo(src/pretty/mod.rs:118:1-118:2)
  10: StorageDead(_3)
    SourceInfo(src/pretty/mod.rs:118:1-118:2)
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:118:2-118:2)
      kind: goto -> bb133
  }
  preds [bb51, bb131]
  succs [bb133]

bb133
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:118:2-118:2)
      kind: return
  }
  preds [bb18, bb132]
  succs []

bb134
  Terminator {
      source_info: SourceInfo(src/pretty/mod.rs:52:1-118:2)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3, bb4, bb5, bb6, bb7, bb9, bb14, bb15, bb16, bb17, bb21, bb22, bb23, bb27, bb31, bb32, bb33, bb34, bb36, bb37, bb41, bb42, bb43, bb45, bb46, bb47, bb48, bb49, bb50, bb56, bb57, bb58, bb59, bb60, bb61, bb62, bb63, bb64, bb65, bb66, bb67, bb73, bb74, bb75, bb76, bb77, bb79, bb80, bb84, bb85, bb86, bb88, bb89, bb90, bb91, bb92, bb97, bb98, bb99, bb100, bb101, bb102, bb103, bb104, bb105, bb106, bb108, bb109, bb110, bb111, bb112, bb113, bb114, bb115, bb116, bb117, bb118, bb119, bb120, bb121, bb122, bb123, bb124, bb125, bb126, bb127]
  succs []

