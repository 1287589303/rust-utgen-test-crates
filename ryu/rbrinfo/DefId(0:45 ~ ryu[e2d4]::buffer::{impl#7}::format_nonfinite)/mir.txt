bb0
  0: StorageLive(_2)
    SourceInfo(src/buffer/mod.rs:157:13-157:17)
  1: StorageLive(_3)
    SourceInfo(src/buffer/mod.rs:157:20-157:24)
  2: _3 = _1
    SourceInfo(src/buffer/mod.rs:157:20-157:24)
  Terminator {
      source_info: SourceInfo(src/buffer/mod.rs:157:20-157:34)
      kind: _2 = core::f64::<impl f64>::to_bits(move _3) -> [return: bb1, unwind: bb8]
  }
  preds []
  succs [bb1, bb8]

bb1
  0: StorageDead(_3)
    SourceInfo(src/buffer/mod.rs:157:33-157:34)
  1: FakeRead(ForLet(None), _2)
    SourceInfo(src/buffer/mod.rs:157:13-157:17)
  2: StorageLive(_4)
    SourceInfo(src/buffer/mod.rs:158:12-158:37)
  3: StorageLive(_5)
    SourceInfo(src/buffer/mod.rs:158:12-158:32)
  4: StorageLive(_6)
    SourceInfo(src/buffer/mod.rs:158:12-158:16)
  5: _6 = _2
    SourceInfo(src/buffer/mod.rs:158:12-158:16)
  6: _5 = BitAnd(move _6, const <f64 as buffer::Sealed>::format_nonfinite::MANTISSA_MASK)
    SourceInfo(src/buffer/mod.rs:158:12-158:32)
  7: StorageDead(_6)
    SourceInfo(src/buffer/mod.rs:158:31-158:32)
  8: _4 = Ne(move _5, const 0_u64)
    SourceInfo(src/buffer/mod.rs:158:12-158:37)
  Terminator {
      source_info: SourceInfo(src/buffer/mod.rs:158:12-158:37)
      kind: switchInt(move _4) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_5)
    SourceInfo(src/buffer/mod.rs:158:36-158:37)
  1: _0 = const buffer::NAN
    SourceInfo(src/buffer/mod.rs:159:13-159:16)
  Terminator {
      source_info: SourceInfo(src/buffer/mod.rs:158:9-164:10)
      kind: goto -> bb7
  }
  preds [bb1]
  succs [bb7]

bb3
  0: StorageDead(_5)
    SourceInfo(src/buffer/mod.rs:158:36-158:37)
  1: StorageLive(_7)
    SourceInfo(src/buffer/mod.rs:160:19-160:40)
  2: StorageLive(_8)
    SourceInfo(src/buffer/mod.rs:160:19-160:35)
  3: StorageLive(_9)
    SourceInfo(src/buffer/mod.rs:160:19-160:23)
  4: _9 = _2
    SourceInfo(src/buffer/mod.rs:160:19-160:23)
  5: _8 = BitAnd(move _9, const <f64 as buffer::Sealed>::format_nonfinite::SIGN_MASK)
    SourceInfo(src/buffer/mod.rs:160:19-160:35)
  6: StorageDead(_9)
    SourceInfo(src/buffer/mod.rs:160:34-160:35)
  7: _7 = Ne(move _8, const 0_u64)
    SourceInfo(src/buffer/mod.rs:160:19-160:40)
  Terminator {
      source_info: SourceInfo(src/buffer/mod.rs:160:19-160:40)
      kind: switchInt(move _7) -> [0: bb5, otherwise: bb4]
  }
  preds [bb1]
  succs [bb4, bb5]

bb4
  0: StorageDead(_8)
    SourceInfo(src/buffer/mod.rs:160:39-160:40)
  1: _0 = const buffer::NEG_INFINITY
    SourceInfo(src/buffer/mod.rs:161:13-161:25)
  Terminator {
      source_info: SourceInfo(src/buffer/mod.rs:160:16-164:10)
      kind: goto -> bb6
  }
  preds [bb3]
  succs [bb6]

bb5
  0: StorageDead(_8)
    SourceInfo(src/buffer/mod.rs:160:39-160:40)
  1: _0 = const buffer::INFINITY
    SourceInfo(src/buffer/mod.rs:163:13-163:21)
  Terminator {
      source_info: SourceInfo(src/buffer/mod.rs:160:16-164:10)
      kind: goto -> bb6
  }
  preds [bb3]
  succs [bb6]

bb6
  0: StorageDead(_7)
    SourceInfo(src/buffer/mod.rs:164:9-164:10)
  Terminator {
      source_info: SourceInfo(src/buffer/mod.rs:158:9-164:10)
      kind: goto -> bb7
  }
  preds [bb4, bb5]
  succs [bb7]

bb7
  0: StorageDead(_4)
    SourceInfo(src/buffer/mod.rs:164:9-164:10)
  1: StorageDead(_2)
    SourceInfo(src/buffer/mod.rs:165:5-165:6)
  Terminator {
      source_info: SourceInfo(src/buffer/mod.rs:165:6-165:6)
      kind: return
  }
  preds [bb2, bb6]
  succs []

bb8
  Terminator {
      source_info: SourceInfo(src/buffer/mod.rs:154:5-165:6)
      kind: resume
  }
  preds [bb0]
  succs []

