bb0
  0: StorageLive(_2)
    SourceInfo(src/d2s_intrinsics.rs:35:5-35:6)
  1: _2 = _1
    SourceInfo(src/d2s_intrinsics.rs:35:5-35:6)
  2: _3 = Eq(const 100_u64, const 0_u64)
    SourceInfo(src/d2s_intrinsics.rs:35:5-35:12)
  Terminator {
      source_info: SourceInfo(src/d2s_intrinsics.rs:35:5-35:12)
      kind: assert(!move _3, "attempt to divide `{}` by zero", _2) -> [success: bb1, unwind: bb2]
  }
  preds []
  succs [bb1, bb2]

bb1
  0: _0 = Div(move _2, const 100_u64)
    SourceInfo(src/d2s_intrinsics.rs:35:5-35:12)
  1: StorageDead(_2)
    SourceInfo(src/d2s_intrinsics.rs:35:11-35:12)
  Terminator {
      source_info: SourceInfo(src/d2s_intrinsics.rs:36:2-36:2)
      kind: return
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(src/d2s_intrinsics.rs:34:1-36:2)
      kind: resume
  }
  preds [bb0]
  succs []

