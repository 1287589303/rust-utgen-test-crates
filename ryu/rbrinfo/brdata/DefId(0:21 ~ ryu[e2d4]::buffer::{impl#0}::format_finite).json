{
  "name": "ryu::buffer::{impl#0}::format_finite",
  "mod_info": {
    "name": "buffer",
    "loc": "src/lib.rs:106:1:106:12"
  },
  "visible": true,
  "loc": "src/buffer/mod.rs:72:5:79:6",
  "doc": "/// Print a floating point number into this buffer and return a reference to\n/// its string representation within the buffer.\n///\n/// # Special cases\n///\n/// This function **does not** check for NaN or infinity. If the input\n/// number is not a finite float, the printed representation will be some\n/// correctly formatted but unspecified numerical value.\n///\n/// Please check [`is_finite`] yourself before calling this function, or\n/// check [`is_nan`] and [`is_infinite`] and handle those cases yourself.\n///\n/// [`is_finite`]: f64::is_finite\n/// [`is_nan`]: f64::is_nan\n/// [`is_infinite`]: f64::is_infinite\n",
  "code": [
    "pub fn format_finite<F: Float>(&mut self, f: F) -> &str {",
    "    unsafe {",
    "        let n = f.write_to_ryu_buffer(self.bytes.as_mut_ptr() as *mut u8);",
    "        debug_assert!(n <= self.bytes.len());",
    "        let slice = slice::from_raw_parts(self.bytes.as_ptr() as *const u8, n);",
    "        str::from_utf8_unchecked(slice)",
    "    }",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "n <= self.bytes.len()",
          "norm": null,
          "value": "true",
          "line": 75,
          "bound": "n == self.bytes.len()"
        }
      ],
      "ret": "str::from_utf8_unchecked(slice)",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        8,
        9,
        10,
        11
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "n <= self.bytes.len()",
          "norm": null,
          "value": "false",
          "line": 75,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        6,
        12
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}