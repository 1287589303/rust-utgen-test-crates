{
  "name": "ryu::f2s_intrinsics::mul_pow5_inv_div_pow2",
  "mod_info": {
    "name": "f2s_intrinsics",
    "loc": "src/lib.rs:116:1:116:20"
  },
  "visible": true,
  "loc": "src/f2s_intrinsics.rs:75:1:98:2",
  "doc": "",
  "code": [
    "pub fn mul_pow5_inv_div_pow2(m: u32, q: u32, j: i32) -> u32 {",
    "    #[cfg(feature = \"small\")]",
    "    {",
    "        // The inverse multipliers are defined as [2^x / 5^y] + 1; the upper 64",
    "        // bits from the double lookup table are the correct bits for [2^x /",
    "        // 5^y], so we have to add 1 here. Note that we rely on the fact that",
    "        // the added 1 that's already stored in the table never overflows into",
    "        // the upper 64 bits.",
    "        let pow5 = unsafe { d2s::compute_inv_pow5(q) };",
    "        mul_shift_32(m, pow5.1 + 1, j)",
    "    }",
    "",
    "    #[cfg(not(feature = \"small\"))]",
    "    {",
    "        debug_assert!(q < d2s::DOUBLE_POW5_INV_SPLIT.len() as u32);",
    "        unsafe {",
    "            mul_shift_32(",
    "                m,",
    "                d2s::DOUBLE_POW5_INV_SPLIT.get_unchecked(q as usize).1 + 1,",
    "                j,",
    "            )",
    "        }",
    "    }",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "q < d2s::DOUBLE_POW5_INV_SPLIT.len() as u32",
          "norm": "d2s::DOUBLE_POW5_INV_SPLIT.len() as u32 > q",
          "value": "true",
          "line": 89,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        8,
        9
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "q < d2s::DOUBLE_POW5_INV_SPLIT.len() as u32",
          "norm": "d2s::DOUBLE_POW5_INV_SPLIT.len() as u32 > q",
          "value": "false",
          "line": 89,
          "bound": "q == d2s::DOUBLE_POW5_INV_SPLIT.len() as u32"
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        10
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}