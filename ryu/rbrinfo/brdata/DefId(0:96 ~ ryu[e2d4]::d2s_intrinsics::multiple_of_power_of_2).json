{
  "name": "ryu::d2s_intrinsics::multiple_of_power_of_2",
  "mod_info": {
    "name": "d2s_intrinsics",
    "loc": "src/lib.rs:111:1:111:20"
  },
  "visible": true,
  "loc": "src/d2s_intrinsics.rs:63:1:68:2",
  "doc": "",
  "code": [
    "pub fn multiple_of_power_of_2(value: u64, p: u32) -> bool {",
    "    debug_assert!(value != 0);",
    "    debug_assert!(p < 64);",
    "    // __builtin_ctzll doesn't appear to be faster here.",
    "    (value & ((1u64 << p) - 1)) == 0",
    "}"
  ],
  "size": {
    "chain": 3,
    "contra": 0,
    "min_set": 3
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "value != 0",
          "norm": "0 != value",
          "value": "true",
          "line": 64,
          "bound": null
        },
        {
          "cond": "p < 64",
          "norm": "64 > p",
          "value": "true",
          "line": 65,
          "bound": null
        }
      ],
      "ret": "(value & ((1u64 << p) - 1)) == 0",
      "path": [
        0,
        1,
        2,
        5,
        6,
        7,
        10,
        11,
        12
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "value != 0",
          "norm": "0 != value",
          "value": "true",
          "line": 64,
          "bound": null
        },
        {
          "cond": "p < 64",
          "norm": "64 > p",
          "value": "false",
          "line": 65,
          "bound": "p == 64"
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        6,
        8,
        13
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "value != 0",
          "norm": "0 != value",
          "value": "false",
          "line": 64,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        13
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}