{
  "name": "ryu::f2s_intrinsics::mul_shift_32",
  "mod_info": {
    "name": "f2s_intrinsics",
    "loc": "src/lib.rs:116:1:116:20"
  },
  "visible": false,
  "loc": "src/f2s_intrinsics.rs:58:1:72:2",
  "doc": "",
  "code": [
    "fn mul_shift_32(m: u32, factor: u64, shift: i32) -> u32 {",
    "    debug_assert!(shift > 32);",
    "",
    "    // The casts here help MSVC to avoid calls to the __allmul library",
    "    // function.",
    "    let factor_lo = factor as u32;",
    "    let factor_hi = (factor >> 32) as u32;",
    "    let bits0 = m as u64 * factor_lo as u64;",
    "    let bits1 = m as u64 * factor_hi as u64;",
    "",
    "    let sum = (bits0 >> 32) + bits1;",
    "    let shifted_sum = sum >> (shift - 32);",
    "    debug_assert!(shifted_sum <= u32::max_value() as u64);",
    "    shifted_sum as u32",
    "}"
  ],
  "size": {
    "chain": 3,
    "contra": 0,
    "min_set": 3
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "shift > 32",
          "norm": "32 < shift",
          "value": "true",
          "line": 59,
          "bound": null
        },
        {
          "cond": "shifted_sum <= u32::max_value() as u64",
          "norm": null,
          "value": "true",
          "line": 70,
          "bound": "shifted_sum == u32::max_value() as u64"
        }
      ],
      "ret": "shifted_sum as u32",
      "path": [
        0,
        1,
        2,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        18
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "shift > 32",
          "norm": "32 < shift",
          "value": "true",
          "line": 59,
          "bound": null
        },
        {
          "cond": "shifted_sum <= u32::max_value() as u64",
          "norm": null,
          "value": "false",
          "line": 70,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        16,
        19
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "shift > 32",
          "norm": "32 < shift",
          "value": "false",
          "line": 59,
          "bound": "shift == 32"
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        19
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}