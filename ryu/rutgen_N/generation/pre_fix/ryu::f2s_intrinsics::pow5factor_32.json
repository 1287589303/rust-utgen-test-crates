{
  "name": "ryu::f2s_intrinsics::pow5factor_32",
  "mod_info": {
    "name": "f2s_intrinsics",
    "loc": "src/lib.rs:116:1:116:20"
  },
  "visible": false,
  "loc": "src/f2s_intrinsics.rs:27:1:40:2",
  "fn_tests": [
    {
      "chain_id": 0,
      "prompt_conds": [],
      "input_infer": "",
      "answers": [
        {
          "uses": [],
          "has_test_mod": false,
          "common": [],
          "chain_tests": [
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    assert_eq!(pow5factor_32(25), 2); // 25 = 5^2",
                "    assert_eq!(pow5factor_32(125), 3); // 125 = 5^3",
                "    assert_eq!(pow5factor_32(0), 0); // Edge case (though not specified to test zero)",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [
                "#[should_panic]"
              ],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    pow5factor_32(0); // This should panic due to debug assert",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    assert_eq!(pow5factor_32(1), 0);",
                "    assert_eq!(pow5factor_32(3), 0);",
                "    assert_eq!(pow5factor_32(9), 0);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    assert_eq!(pow5factor_32(5), 1); // 5 = 5^1",
                "    assert_eq!(pow5factor_32(10), 1); // 10 = 5^1 * 2",
                "    assert_eq!(pow5factor_32(50), 2); // 50 = 5^2 * 2",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            }
          ]
        }
      ]
    }
  ]
}