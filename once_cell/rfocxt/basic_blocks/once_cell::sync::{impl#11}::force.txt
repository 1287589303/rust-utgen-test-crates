[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            StorageLive(_3),
            _3 = &((*_1).0: sync::OnceCell<T>),
            StorageLive(_4),
            StorageLive(_5),
            _5 = &(*_1),
            _4 = {closure@src/lib.rs:1309:35: 1309:37} { this: move _5 },
            StorageDead(_5),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:1309:13: 1312:15 (#0),
                    scope: scope[0],
                },
                kind: _2 = sync::OnceCell::<T>::get_or_init::<{closure@src/lib.rs:1309:35: 1309:37}>(move _3, move _4) -> [return: bb1, unwind: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _0 = &(*_2),
            StorageDead(_4),
            StorageDead(_3),
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:1313:10: 1313:10 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:1308:9: 1313:10 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} T/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:1308:44: 1308:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/lib.rs:1308:28: 1308:39 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/lib.rs:1308:22: 1308:26 (#0),
                            ),
                        ),
                        pat_span: src/lib.rs:1308:22: 1308:26 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} sync::Lazy<T/#0, F/#1>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:1308:22: 1308:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/lib.rs:1309:13: 1312:15 (#0),
                },
            ),
        ),
        ty: &'{erased} T/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:1309:13: 1312:15 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/lib.rs:1309:13: 1312:15 (#0),
                },
            ),
        ),
        ty: &'{erased} sync::OnceCell<T/#0>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:1309:13: 1309:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/lib.rs:1309:13: 1312:15 (#0),
                },
            ),
        ),
        ty: Closure(
            DefId(0:242 ~ once_cell[72b9]::sync::{impl#11}::force::{closure#0}),
            [
                T/#0,
                F/#1,
                i32,
                Binder { value: extern "RustCall" fn(()) -> T/#0, bound_vars: [] },
                (&'{erased} sync::Lazy<T/#0, F/#1>,),
            ],
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:1309:35: 1312:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/lib.rs:1309:13: 1312:15 (#0),
                },
            ),
        ),
        ty: &'{erased} sync::Lazy<T/#0, F/#1>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:1309:35: 1312:14 (#0),
            scope: scope[0],
        },
    },
]