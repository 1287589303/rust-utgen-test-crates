[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            StorageLive(_3),
            StorageLive(_4),
            _4 = &((*_1).0: std::sync::atomic::AtomicPtr<imp::Waiter>),
            _3 = &(*_4),
            StorageLive(_5),
            _5 = std::option::Option::<&mut dyn std::ops::FnMut() -> bool>::None,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/imp_std.rs:89:9: 89:46 (#0),
                    scope: scope[0],
                },
                kind: _2 = imp::initialize_or_wait(move _3, move _5) -> [return: bb1, unwind: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
            StorageDead(_3),
            StorageDead(_4),
            StorageDead(_2),
            _0 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/imp_std.rs:90:6: 90:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/imp_std.rs:88:5: 90:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/imp_std.rs:88:30: 88:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} imp::OnceCell<T/#0>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/imp_std.rs:88:24: 88:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/imp_std.rs:89:9: 89:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} std::sync::atomic::AtomicPtr<imp::Waiter>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/imp_std.rs:89:28: 89:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} std::sync::atomic::AtomicPtr<imp::Waiter>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/imp_std.rs:89:28: 89:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::option::Option<&'{erased} mut dyn [Binder { value: Trait(std::ops::FnMut<()>), bound_vars: [] }, Binder { value: Projection(Output = bool), bound_vars: [] }] + '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/imp_std.rs:89:41: 89:45 (#0),
            scope: scope[0],
        },
    },
]