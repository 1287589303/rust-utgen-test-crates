[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            StorageLive(_3),
            _3 = &((*_1).0: race::OnceNonZeroUsize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/race.rs:155:9: 155:25 (#0),
                    scope: scope[0],
                },
                kind: _2 = race::OnceNonZeroUsize::get(move _3) -> [return: bb1, unwind: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/race.rs:155:9: 155:51 (#0),
                    scope: scope[0],
                },
                kind: _0 = std::option::Option::<std::num::NonZero<usize>>::map::<bool, fn(std::num::NonZero<usize>) -> bool {race::OnceBool::from_usize}>(move _2, race::OnceBool::from_usize) -> [return: bb2, unwind: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/race.rs:156:6: 156:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/race.rs:154:5: 156:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::option::Option<bool>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/race.rs:154:26: 154:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} race::OnceBool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/race.rs:154:16: 154:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/race.rs:155:9: 155:51 (#0),
                },
            ),
        ),
        ty: std::option::Option<std::num::NonZero<usize>>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/race.rs:155:9: 155:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/race.rs:155:9: 155:51 (#0),
                },
            ),
        ),
        ty: &'{erased} race::OnceNonZeroUsize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/race.rs:155:9: 155:19 (#0),
            scope: scope[0],
        },
    },
]