[
    BasicBlockData {
        statements: [
            StorageLive(_1),
            StorageLive(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/race.rs:357:45: 357:60 (#0),
                    scope: scope[0],
                },
                kind: _2 = std::ptr::null_mut::<T>() -> [return: bb1, unwind: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/race.rs:357:30: 357:61 (#0),
                    scope: scope[0],
                },
                kind: _1 = std::sync::atomic::AtomicPtr::<T>::new(move _2) -> [return: bb2, unwind: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_2),
            StorageLive(_3),
            _3 = std::marker::PhantomData::<std::option::Option<std::boxed::Box<T>>>,
            _0 = race::once_box::OnceBox::<T> { inner: move _1, ghost: move _3 },
            StorageDead(_3),
            StorageDead(_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/race.rs:358:10: 358:10 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/race.rs:356:9: 358:10 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: race::once_box::OnceBox<T/#0>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/race.rs:356:31: 356:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: std::sync::atomic::AtomicPtr<T/#0>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/race.rs:357:30: 357:61 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/race.rs:357:13: 357:83 (#0),
                },
            ),
        ),
        ty: *mut T/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/race.rs:357:45: 357:60 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: std::marker::PhantomData<std::option::Option<std::boxed::Box<T/#0, std::alloc::Global>>>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/race.rs:357:70: 357:81 (#0),
            scope: scope[0],
        },
    },
]