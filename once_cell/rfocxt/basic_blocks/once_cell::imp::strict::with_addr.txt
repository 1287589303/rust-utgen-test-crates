[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            StorageLive(_4),
            StorageLive(_5),
            _5 = _1,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/imp_std.rs:269:25: 269:40 (#0),
                    scope: scope[0],
                },
                kind: _4 = imp::strict::addr::<T>(move _5) -> [return: bb1, unwind: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
            _3 = move _4 as isize (IntToInt),
            StorageDead(_4),
            FakeRead(ForLet(None), _3),
            StorageLive(_6),
            StorageLive(_7),
            _7 = _2,
            _6 = move _7 as isize (IntToInt),
            StorageDead(_7),
            FakeRead(ForLet(None), _6),
            StorageLive(_8),
            StorageLive(_9),
            _9 = _6,
            StorageLive(_10),
            _10 = _3,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/imp_std.rs:271:22: 271:55 (#0),
                    scope: scope[2],
                },
                kind: _8 = core::num::<impl isize>::wrapping_sub(move _9, move _10) -> [return: bb2, unwind: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_10),
            StorageDead(_9),
            FakeRead(ForLet(None), _8),
            StorageLive(_11),
            StorageLive(_12),
            StorageLive(_13),
            _13 = _1,
            _12 = move _13 as *mut u8 (PtrToPtr),
            StorageDead(_13),
            StorageLive(_14),
            _14 = _8,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/imp_std.rs:276:9: 276:49 (#0),
                    scope: scope[3],
                },
                kind: _11 = std::ptr::mut_ptr::<impl *mut u8>::wrapping_offset(move _12, move _14) -> [return: bb3, unwind: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_14),
            StorageDead(_12),
            _0 = move _11 as *mut T (PtrToPtr),
            StorageDead(_11),
            StorageDead(_8),
            StorageDead(_6),
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/imp_std.rs:277:6: 277:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/imp_std.rs:260:5: 277:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *mut T/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/imp_std.rs:260:61: 260:67 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/imp_std.rs:260:37: 260:43 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/imp_std.rs:260:32: 260:35 (#0),
                            ),
                        ),
                        pat_span: src/imp_std.rs:260:32: 260:35 (#0),
                    },
                ),
            ),
        ),
        ty: *mut T/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/imp_std.rs:260:32: 260:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/imp_std.rs:260:51: 260:56 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/imp_std.rs:260:45: 260:49 (#0),
                            ),
                        ),
                        pat_span: src/imp_std.rs:260:45: 260:49 (#0),
                    },
                ),
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/imp_std.rs:260:45: 260:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/imp_std.rs:269:25: 269:49 (#0),
                            ),
                        ),
                        pat_span: src/imp_std.rs:269:13: 269:22 (#0),
                    },
                ),
            ),
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/imp_std.rs:269:13: 269:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/imp_std.rs:269:25: 269:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *mut T/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/imp_std.rs:269:36: 269:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/imp_std.rs:270:25: 270:38 (#0),
                            ),
                        ),
                        pat_span: src/imp_std.rs:270:13: 270:22 (#0),
                    },
                ),
            ),
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/imp_std.rs:270:13: 270:22 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/imp_std.rs:270:25: 270:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/imp_std.rs:271:22: 271:55 (#0),
                            ),
                        ),
                        pat_span: src/imp_std.rs:271:13: 271:19 (#0),
                    },
                ),
            ),
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/imp_std.rs:271:13: 271:19 (#0),
            scope: scope[2],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/imp_std.rs:271:22: 271:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/imp_std.rs:271:45: 271:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/imp_std.rs:276:9: 276:59 (#0),
                },
            ),
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/imp_std.rs:276:9: 276:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/imp_std.rs:276:9: 276:59 (#0),
                },
            ),
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/imp_std.rs:276:9: 276:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/imp_std.rs:276:9: 276:59 (#0),
                },
            ),
        ),
        ty: *mut T/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/imp_std.rs:276:10: 276:13 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/imp_std.rs:276:9: 276:59 (#0),
                },
            ),
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/imp_std.rs:276:42: 276:48 (#0),
            scope: scope[0],
        },
    },
]