[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            StorageLive(_3),
            StorageLive(_4),
            _4 = move _1,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/race.rs:362:45: 362:65 (#0),
                    scope: scope[0],
                },
                kind: _3 = std::boxed::Box::<T>::into_raw(move _4) -> [return: bb1, unwind: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/race.rs:362:30: 362:66 (#0),
                    scope: scope[0],
                },
                kind: _2 = std::sync::atomic::AtomicPtr::<T>::new(move _3) -> [return: bb2, unwind: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
            StorageLive(_5),
            _5 = std::marker::PhantomData::<std::option::Option<std::boxed::Box<T>>>,
            _0 = race::once_box::OnceBox::<T> { inner: move _2, ghost: move _5 },
            StorageDead(_5),
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/race.rs:363:9: 363:10 (#0),
                    scope: scope[0],
                },
                kind: drop(_1) -> [return: bb3, unwind: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/race.rs:363:10: 363:10 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/race.rs:362:64: 362:65 (#0),
                    scope: scope[0],
                },
                kind: drop(_4) -> [return: bb5, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/race.rs:363:9: 363:10 (#0),
                    scope: scope[0],
                },
                kind: drop(_1) -> [return: bb6, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/race.rs:361:9: 363:10 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: race::once_box::OnceBox<T/#0>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/race.rs:361:45: 361:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/race.rs:361:34: 361:40 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/race.rs:361:27: 361:32 (#0),
                            ),
                        ),
                        pat_span: src/race.rs:361:27: 361:32 (#0),
                    },
                ),
            ),
        ),
        ty: std::boxed::Box<T/#0, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/race.rs:361:27: 361:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: std::sync::atomic::AtomicPtr<T/#0>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/race.rs:362:30: 362:66 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/race.rs:362:13: 362:88 (#0),
                },
            ),
        ),
        ty: *mut T/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/race.rs:362:45: 362:65 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/race.rs:362:13: 362:88 (#0),
                },
            ),
        ),
        ty: std::boxed::Box<T/#0, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/race.rs:362:59: 362:64 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: std::marker::PhantomData<std::option::Option<std::boxed::Box<T/#0, std::alloc::Global>>>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/race.rs:362:75: 362:86 (#0),
            scope: scope[0],
        },
    },
]