[
    BasicBlockData {
        statements: [
            StorageLive(_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/race.rs:43:35: 43:54 (#0),
                    scope: scope[0],
                },
                kind: _1 = std::sync::atomic::AtomicUsize::new(const 0_usize) -> [return: bb1, unwind: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _0 = race::OnceNonZeroUsize { inner: move _1 },
            StorageDead(_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/race.rs:44:6: 44:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/race.rs:42:5: 44:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: race::OnceNonZeroUsize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/race.rs:42:27: 42:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: std::sync::atomic::AtomicUsize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/race.rs:43:35: 43:54 (#0),
            scope: scope[0],
        },
    },
]