[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            StorageLive(_4),
            _4 = &((*_1).0: race::OnceNonZeroUsize),
            StorageLive(_5),
            _5 = {closure@src/race.rs:177:53: 177:55} { f: move _2 },
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/race.rs:177:30: 177:80 (#0),
                    scope: scope[0],
                },
                kind: _3 = race::OnceNonZeroUsize::get_or_init::<{closure@src/race.rs:177:53: 177:55}>(move _4, move _5) -> [return: bb1, unwind: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
            StorageDead(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/race.rs:177:9: 177:81 (#0),
                    scope: scope[0],
                },
                kind: _0 = race::OnceBool::from_usize(move _3) -> [return: bb2, unwind: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/race.rs:178:5: 178:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb3, unwind: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/race.rs:178:6: 178:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/race.rs:177:79: 177:80 (#0),
                    scope: scope[0],
                },
                kind: drop(_5) -> [return: bb5, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/race.rs:178:5: 178:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb6, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/race.rs:173:5: 178:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/race.rs:173:43: 173:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} race::OnceBool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/race.rs:173:27: 173:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/race.rs:173:37: 173:38 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/race.rs:173:34: 173:35 (#0),
                            ),
                        ),
                        pat_span: src/race.rs:173:34: 173:35 (#0),
                    },
                ),
            ),
        ),
        ty: F/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/race.rs:173:34: 173:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/race.rs:177:9: 177:81 (#0),
                },
            ),
        ),
        ty: std::num::NonZero<usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/race.rs:177:30: 177:80 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/race.rs:177:9: 177:81 (#0),
                },
            ),
        ),
        ty: &'{erased} race::OnceNonZeroUsize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/race.rs:177:30: 177:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/race.rs:177:9: 177:81 (#0),
                },
            ),
        ),
        ty: Closure(
            DefId(0:290 ~ once_cell[72b9]::race::{impl#1}::get_or_init::{closure#0}),
            [
                F/#0,
                i32,
                Binder { value: extern "RustCall" fn(()) -> std::num::NonZero<usize>, bound_vars: [] },
                (F/#0,),
            ],
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: src/race.rs:177:53: 177:79 (#0),
            scope: scope[0],
        },
    },
]