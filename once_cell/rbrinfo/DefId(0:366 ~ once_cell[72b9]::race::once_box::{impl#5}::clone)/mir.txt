bb0
  0: StorageLive(_2)
    SourceInfo(src/race.rs:445:19-445:29)
  1: StorageLive(_3)
    SourceInfo(src/race.rs:445:19-445:23)
  2: _3 = &(*_1)
    SourceInfo(src/race.rs:445:19-445:23)
  Terminator {
      source_info: SourceInfo(src/race.rs:445:19-445:29)
      kind: _2 = race::once_box::OnceBox::<T>::get(move _3) -> [return: bb1, unwind: bb12]
  }
  preds []
  succs [bb1, bb12]

bb1
  0: StorageDead(_3)
    SourceInfo(src/race.rs:445:28-445:29)
  1: PlaceMention(_2)
    SourceInfo(src/race.rs:445:19-445:29)
  2: _4 = discriminant(_2)
    SourceInfo(src/race.rs:445:19-445:29)
  Terminator {
      source_info: SourceInfo(src/race.rs:445:13-445:29)
      kind: switchInt(move _4) -> [0: bb4, 1: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3, bb4]

bb2
  0: FakeRead(ForMatchedPlace(None), _2)
    SourceInfo(src/race.rs:445:19-445:29)
  Terminator {
      source_info: SourceInfo(src/race.rs:445:19-445:29)
      kind: unreachable
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(src/race.rs:446:17-446:28)
      kind: falseEdge -> [real: bb5, imaginary: bb4]
  }
  preds [bb1]
  succs [bb4, bb5]

bb4
  Terminator {
      source_info: SourceInfo(src/race.rs:447:25-447:39)
      kind: _0 = race::once_box::OnceBox::<T>::new() -> [return: bb9, unwind: bb12]
  }
  preds [bb1, bb3]
  succs [bb9, bb12]

bb5
  0: StorageLive(_5)
    SourceInfo(src/race.rs:446:22-446:27)
  1: _5 = ((_2 as Some).0: &T)
    SourceInfo(src/race.rs:446:22-446:27)
  2: StorageLive(_6)
    SourceInfo(src/race.rs:446:52-446:75)
  3: StorageLive(_7)
    SourceInfo(src/race.rs:446:61-446:74)
  4: StorageLive(_8)
    SourceInfo(src/race.rs:446:61-446:66)
  5: _8 = &(*_5)
    SourceInfo(src/race.rs:446:61-446:66)
  Terminator {
      source_info: SourceInfo(src/race.rs:446:61-446:74)
      kind: _7 = <T as std::clone::Clone>::clone(move _8) -> [return: bb6, unwind: bb12]
  }
  preds [bb3]
  succs [bb6, bb12]

bb6
  0: StorageDead(_8)
    SourceInfo(src/race.rs:446:73-446:74)
  Terminator {
      source_info: SourceInfo(src/race.rs:446:52-446:75)
      kind: _6 = std::boxed::Box::<T>::new(move _7) -> [return: bb7, unwind: bb11]
  }
  preds [bb5]
  succs [bb7, bb11]

bb7
  0: StorageDead(_7)
    SourceInfo(src/race.rs:446:74-446:75)
  Terminator {
      source_info: SourceInfo(src/race.rs:446:32-446:76)
      kind: _0 = race::once_box::OnceBox::<T>::with_value(move _6) -> [return: bb8, unwind: bb10]
  }
  preds [bb6]
  succs [bb8, bb10]

bb8
  0: StorageDead(_6)
    SourceInfo(src/race.rs:446:75-446:76)
  1: StorageDead(_5)
    SourceInfo(src/race.rs:446:75-446:76)
  Terminator {
      source_info: SourceInfo(src/race.rs:446:75-446:76)
      kind: goto -> bb9
  }
  preds [bb7]
  succs [bb9]

bb9
  0: StorageDead(_2)
    SourceInfo(src/race.rs:449:9-449:10)
  Terminator {
      source_info: SourceInfo(src/race.rs:449:10-449:10)
      kind: return
  }
  preds [bb4, bb8]
  succs []

bb10
  Terminator {
      source_info: SourceInfo(src/race.rs:446:75-446:76)
      kind: drop(_6) -> [return: bb12, unwind terminate(cleanup)]
  }
  preds [bb7]
  succs [bb12]

bb11
  Terminator {
      source_info: SourceInfo(src/race.rs:446:74-446:75)
      kind: drop(_7) -> [return: bb12, unwind terminate(cleanup)]
  }
  preds [bb6]
  succs [bb12]

bb12
  Terminator {
      source_info: SourceInfo(src/race.rs:444:9-449:10)
      kind: resume
  }
  preds [bb0, bb4, bb5, bb10, bb11]
  succs []

