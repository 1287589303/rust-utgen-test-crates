{
  "name": "once_cell::race::{impl#5}::set",
  "mod_info": {
    "name": "race",
    "loc": "src/lib.rs:1412:1:1412:14"
  },
  "visible": true,
  "loc": "src/race.rs:242:5:250:6",
  "doc": "/// Sets the contents of this cell to `value`.\n///\n/// Returns `Ok(())` if the cell was empty and `Err(value)` if it was\n/// full.\n",
  "code": [
    "pub fn set(&self, value: &'a T) -> Result<(), ()> {",
    "    let ptr = value as *const T as *mut T;",
    "    let exchange =",
    "        self.inner.compare_exchange(ptr::null_mut(), ptr, Ordering::AcqRel, Ordering::Acquire);",
    "    match exchange {",
    "        Ok(_) => Ok(()),",
    "        Err(_) => Err(()),",
    "    }",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "exchange matches Err(_)",
          "norm": null,
          "value": "true",
          "line": 246,
          "bound": null
        }
      ],
      "ret": "Err(())",
      "path": [
        0,
        1,
        2,
        5,
        7
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "exchange matches Ok(_)",
          "norm": null,
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "exchange matches Ok(_)",
          "norm": null,
          "value": "true",
          "line": 246,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        2,
        4,
        6,
        7
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}