{
  "name": "once_cell::sync::{impl#6}::get",
  "mod_info": {
    "name": "sync",
    "loc": "src/lib.rs:863:1:1409:2"
  },
  "visible": true,
  "loc": "src/lib.rs:963:9:970:10",
  "doc": "/// Gets the reference to the underlying value.\n///\n/// Returns `None` if the cell is empty, or being initialized. This\n/// method never blocks.\n",
  "code": [
    "pub fn get(&self) -> Option<&T> {",
    "    if self.0.is_initialized() {",
    "        // Safe b/c value is initialized.",
    "        Some(unsafe { self.get_unchecked() })",
    "    } else {",
    "        None",
    "    }",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.0.is_initialized()",
          "norm": null,
          "value": "true",
          "line": 964,
          "bound": null
        }
      ],
      "ret": "Some(unsafe { self.get_unchecked() })",
      "path": [
        0,
        1,
        2,
        3,
        5
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.0.is_initialized()",
          "norm": null,
          "value": "false",
          "line": 964,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        4,
        5
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}