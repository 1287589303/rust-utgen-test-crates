{
  "name": "once_cell::imp::strict::addr",
  "mod_info": {
    "name": "imp::strict",
    "loc": "src/imp_std.rs:245:1:287:2"
  },
  "visible": true,
  "loc": "src/imp_std.rs:248:5:256:6",
  "doc": "",
  "code": [
    "pub(crate) fn addr<T>(ptr: *mut T) -> usize",
    "where",
    "    T: Sized,",
    "{",
    "    // FIXME(strict_provenance_magic): I am magic and should be a compiler intrinsic.",
    "    // SAFETY: Pointer-to-integer transmutes are valid (if you are okay with losing the",
    "    // provenance).",
    "    unsafe { core::mem::transmute(ptr) }",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}