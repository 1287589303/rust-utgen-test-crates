{
  "name": "once_cell::imp::{impl#4}::get_mut",
  "mod_info": {
    "name": "imp",
    "loc": "src/lib.rs:380:1:380:9"
  },
  "visible": true,
  "loc": "src/imp_std.rs:107:5:110:6",
  "doc": "/// Gets the mutable reference to the underlying value.\n/// Returns `None` if the cell is empty.\n",
  "code": [
    "pub(crate) fn get_mut(&mut self) -> Option<&mut T> {",
    "    // Safe b/c we have a unique access.",
    "    unsafe { &mut *self.value.get() }.as_mut()",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}