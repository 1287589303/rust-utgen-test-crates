{
  "name": "once_cell::race::{impl#0}::init",
  "mod_info": {
    "name": "race",
    "loc": "src/lib.rs:1412:1:1412:14"
  },
  "visible": false,
  "loc": "src/race.rs:129:5:136:6",
  "doc": "",
  "code": [
    "fn init<E>(&self, f: impl FnOnce() -> Result<NonZeroUsize, E>) -> Result<NonZeroUsize, E> {",
    "    let mut val = f()?.get();",
    "    let exchange = self.inner.compare_exchange(0, val, Ordering::AcqRel, Ordering::Acquire);",
    "    if let Err(old) = exchange {",
    "        val = old;",
    "    }",
    "    Ok(unsafe { NonZeroUsize::new_unchecked(val) })",
    "}"
  ],
  "size": {
    "chain": 3,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "f()?",
          "norm": null,
          "value": "Err/None",
          "line": 130,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        16,
        17,
        18
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "f()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 130,
          "bound": null
        },
        {
          "cond": "let Err(old) = exchange",
          "norm": null,
          "value": "true",
          "line": 132,
          "bound": null
        }
      ],
      "ret": "Ok(unsafe { NonZeroUsize::new_unchecked(val) })",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        13,
        14,
        15,
        18
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "f()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 130,
          "bound": null
        },
        {
          "cond": "let Err(old) = exchange",
          "norm": null,
          "value": "true",
          "line": 132,
          "bound": null
        }
      ],
      "ret": "Ok(unsafe { NonZeroUsize::new_unchecked(val) })",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        11,
        12,
        14,
        15,
        18
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}