bb0
  0: StorageLive(_2)
    SourceInfo(src/race.rs:49:13-49:16)
  1: StorageLive(_3)
    SourceInfo(src/race.rs:49:19-49:29)
  2: _3 = &((*_1).0: std::sync::atomic::AtomicUsize)
    SourceInfo(src/race.rs:49:19-49:29)
  3: StorageLive(_4)
    SourceInfo(src/race.rs:49:35-49:52)
  4: _4 = std::sync::atomic::Ordering::Acquire
    SourceInfo(src/race.rs:49:35-49:52)
  Terminator {
      source_info: SourceInfo(src/race.rs:49:19-49:53)
      kind: _2 = std::sync::atomic::AtomicUsize::load(move _3, move _4) -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: StorageDead(_4)
    SourceInfo(src/race.rs:49:52-49:53)
  1: StorageDead(_3)
    SourceInfo(src/race.rs:49:52-49:53)
  2: FakeRead(ForLet(None), _2)
    SourceInfo(src/race.rs:49:13-49:16)
  3: StorageLive(_5)
    SourceInfo(src/race.rs:50:27-50:30)
  4: _5 = _2
    SourceInfo(src/race.rs:50:27-50:30)
  Terminator {
      source_info: SourceInfo(src/race.rs:50:9-50:31)
      kind: _0 = std::num::NonZero::<usize>::new(move _5) -> [return: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_5)
    SourceInfo(src/race.rs:50:30-50:31)
  1: StorageDead(_2)
    SourceInfo(src/race.rs:51:5-51:6)
  Terminator {
      source_info: SourceInfo(src/race.rs:51:6-51:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(src/race.rs:48:5-51:6)
      kind: resume
  }
  preds [bb0, bb1]
  succs []

