Body {
    params: [
        Param {
            hir_id: HirId(DefId(0:241 ~ once_cell[72b9]::sync::{impl#11}::force).1),
            pat: Pat {
                hir_id: HirId(DefId(0:241 ~ once_cell[72b9]::sync::{impl#11}::force).2),
                kind: Binding(
                    BindingMode(
                        No,
                        Not,
                    ),
                    HirId(DefId(0:241 ~ once_cell[72b9]::sync::{impl#11}::force).2),
                    this#0,
                    None,
                ),
                span: src/lib.rs:1308:22: 1308:26 (#0),
                default_binding_modes: true,
            },
            ty_span: src/lib.rs:1308:28: 1308:39 (#0),
            span: src/lib.rs:1308:22: 1308:39 (#0),
        },
    ],
    value: Expr {
        hir_id: HirId(DefId(0:241 ~ once_cell[72b9]::sync::{impl#11}::force).42),
        kind: Block(
            Block {
                stmts: [],
                expr: Some(
                    Expr {
                        hir_id: HirId(DefId(0:241 ~ once_cell[72b9]::sync::{impl#11}::force).3),
                        kind: MethodCall(
                            PathSegment {
                                ident: get_or_init#0,
                                hir_id: HirId(DefId(0:241 ~ once_cell[72b9]::sync::{impl#11}::force).4),
                                res: Err,
                                args: None,
                                infer_args: true,
                            },
                            Expr {
                                hir_id: HirId(DefId(0:241 ~ once_cell[72b9]::sync::{impl#11}::force).5),
                                kind: Field(
                                    Expr {
                                        hir_id: HirId(DefId(0:241 ~ once_cell[72b9]::sync::{impl#11}::force).6),
                                        kind: Path(
                                            Resolved(
                                                None,
                                                Path {
                                                    span: src/lib.rs:1309:13: 1309:17 (#0),
                                                    res: Local(
                                                        HirId(DefId(0:241 ~ once_cell[72b9]::sync::{impl#11}::force).2),
                                                    ),
                                                    segments: [
                                                        PathSegment {
                                                            ident: this#0,
                                                            hir_id: HirId(DefId(0:241 ~ once_cell[72b9]::sync::{impl#11}::force).7),
                                                            res: Local(
                                                                HirId(DefId(0:241 ~ once_cell[72b9]::sync::{impl#11}::force).2),
                                                            ),
                                                            args: None,
                                                            infer_args: true,
                                                        },
                                                    ],
                                                },
                                            ),
                                        ),
                                        span: src/lib.rs:1309:13: 1309:17 (#0),
                                    },
                                    cell#0,
                                ),
                                span: src/lib.rs:1309:13: 1309:22 (#0),
                            },
                            [
                                Expr {
                                    hir_id: HirId(DefId(0:241 ~ once_cell[72b9]::sync::{impl#11}::force).8),
                                    kind: Closure(
                                        Closure {
                                            def_id: DefId(0:242 ~ once_cell[72b9]::sync::{impl#11}::force::{closure#0}),
                                            binder: Default,
                                            constness: NotConst,
                                            capture_clause: Ref,
                                            bound_generic_params: [],
                                            fn_decl: FnDecl {
                                                inputs: [],
                                                output: DefaultReturn(
                                                    src/lib.rs:1309:37: 1309:37 (#0),
                                                ),
                                                c_variadic: false,
                                                implicit_self: None,
                                                lifetime_elision_allowed: false,
                                            },
                                            body: BodyId {
                                                hir_id: HirId(DefId(0:241 ~ once_cell[72b9]::sync::{impl#11}::force).9),
                                            },
                                            fn_decl_span: src/lib.rs:1309:35: 1309:37 (#0),
                                            fn_arg_span: Some(
                                                src/lib.rs:1309:35: 1309:37 (#0),
                                            ),
                                            kind: Closure,
                                        },
                                    ),
                                    span: src/lib.rs:1309:35: 1312:14 (#0),
                                },
                            ],
                            src/lib.rs:1309:23: 1312:15 (#0),
                        ),
                        span: src/lib.rs:1309:13: 1312:15 (#0),
                    },
                ),
                hir_id: HirId(DefId(0:241 ~ once_cell[72b9]::sync::{impl#11}::force).41),
                rules: DefaultBlock,
                span: src/lib.rs:1308:47: 1313:10 (#0),
                targeted_by_break: false,
            },
            None,
        ),
        span: src/lib.rs:1308:47: 1313:10 (#0),
    },
}