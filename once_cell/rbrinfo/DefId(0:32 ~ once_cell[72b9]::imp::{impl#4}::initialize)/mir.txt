bb0
  0: StorageLive(_3)
    SourceInfo(src/imp_std.rs:65:13-65:18)
  1: StorageLive(_4)
    SourceInfo(src/imp_std.rs:65:26-65:27)
  2: _4 = move _2
    SourceInfo(src/imp_std.rs:65:26-65:27)
  3: _3 = std::option::Option::<F>::Some(move _4)
    SourceInfo(src/imp_std.rs:65:21-65:28)
  Terminator {
      source_info: SourceInfo(src/imp_std.rs:65:27-65:28)
      kind: drop(_4) -> [return: bb1, unwind: bb9]
  }
  preds []
  succs [bb1, bb9]

bb1
  0: StorageDead(_4)
    SourceInfo(src/imp_std.rs:65:27-65:28)
  1: FakeRead(ForLet(None), _3)
    SourceInfo(src/imp_std.rs:65:13-65:18)
  2: StorageLive(_5)
    SourceInfo(src/imp_std.rs:66:13-66:20)
  3: StorageLive(_6)
    SourceInfo(src/imp_std.rs:66:41-66:43)
  4: _6 = ()
    SourceInfo(src/imp_std.rs:66:41-66:43)
  5: _5 = std::result::Result::<(), E>::Ok(move _6)
    SourceInfo(src/imp_std.rs:66:38-66:44)
  6: StorageDead(_6)
    SourceInfo(src/imp_std.rs:66:43-66:44)
  7: FakeRead(ForLet(None), _5)
    SourceInfo(src/imp_std.rs:66:13-66:20)
  8: AscribeUserType(_5, o, UserTypeProjection { base: UserType(1), projs: [] })
    SourceInfo(src/imp_std.rs:66:22-66:35)
  9: StorageLive(_7)
    SourceInfo(src/imp_std.rs:67:13-67:17)
  10: StorageLive(_8)
    SourceInfo(src/imp_std.rs:67:36-67:46)
  11: _8 = &((*_1).1: std::cell::UnsafeCell<std::option::Option<T>>)
    SourceInfo(src/imp_std.rs:67:36-67:46)
  Terminator {
      source_info: SourceInfo(src/imp_std.rs:67:36-67:52)
      kind: _7 = std::cell::UnsafeCell::<std::option::Option<T>>::get(move _8) -> [return: bb2, unwind: bb7]
  }
  preds [bb0]
  succs [bb2, bb7]

bb2
  0: StorageDead(_8)
    SourceInfo(src/imp_std.rs:67:51-67:52)
  1: FakeRead(ForLet(None), _7)
    SourceInfo(src/imp_std.rs:67:13-67:17)
  2: AscribeUserType(_7, o, UserTypeProjection { base: UserType(3), projs: [] })
    SourceInfo(src/imp_std.rs:67:19-67:33)
  3: StorageLive(_9)
    SourceInfo(src/imp_std.rs:68:9-83:10)
  4: StorageLive(_10)
    SourceInfo(src/imp_std.rs:69:13-69:24)
  5: StorageLive(_11)
    SourceInfo(src/imp_std.rs:69:13-69:24)
  6: _11 = &((*_1).0: std::sync::atomic::AtomicPtr<imp::Waiter>)
    SourceInfo(src/imp_std.rs:69:13-69:24)
  7: _10 = &(*_11)
    SourceInfo(src/imp_std.rs:69:13-69:24)
  8: StorageLive(_12)
    SourceInfo(src/imp_std.rs:70:13-82:15)
  9: StorageLive(_13)
    SourceInfo(src/imp_std.rs:70:18-82:14)
  10: StorageLive(_14)
    SourceInfo(src/imp_std.rs:70:18-82:14)
  11: StorageLive(_15)
    SourceInfo(src/imp_std.rs:70:18-82:14)
  12: StorageLive(_16)
    SourceInfo(src/imp_std.rs:70:23-82:14)
  13: StorageLive(_17)
    SourceInfo(src/imp_std.rs:70:23-82:14)
  14: _17 = &mut _3
    SourceInfo(src/imp_std.rs:70:23-82:14)
  15: StorageLive(_18)
    SourceInfo(src/imp_std.rs:70:23-82:14)
  16: _18 = &_7
    SourceInfo(src/imp_std.rs:70:23-82:14)
  17: StorageLive(_19)
    SourceInfo(src/imp_std.rs:70:23-82:14)
  18: _19 = &mut _5
    SourceInfo(src/imp_std.rs:70:23-82:14)
  19: _16 = {closure@src/imp_std.rs:70:23: 70:25} { f: move _17, slot: move _18, res: move _19 }
    SourceInfo(src/imp_std.rs:70:23-82:14)
  20: StorageDead(_19)
    SourceInfo(src/imp_std.rs:70:24-70:25)
  21: StorageDead(_18)
    SourceInfo(src/imp_std.rs:70:24-70:25)
  22: StorageDead(_17)
    SourceInfo(src/imp_std.rs:70:24-70:25)
  23: _15 = &mut _16
    SourceInfo(src/imp_std.rs:70:18-82:14)
  24: _14 = &mut (*_15)
    SourceInfo(src/imp_std.rs:70:18-82:14)
  25: _13 = move _14 as &mut dyn std::ops::FnMut() -> bool (PointerCoercion(Unsize))
    SourceInfo(src/imp_std.rs:70:18-82:14)
  26: StorageDead(_14)
    SourceInfo(src/imp_std.rs:82:13-82:14)
  27: _12 = std::option::Option::<&mut dyn std::ops::FnMut() -> bool>::Some(move _13)
    SourceInfo(src/imp_std.rs:70:13-82:15)
  28: StorageDead(_13)
    SourceInfo(src/imp_std.rs:82:14-82:15)
  Terminator {
      source_info: SourceInfo(src/imp_std.rs:68:9-83:10)
      kind: _9 = imp::initialize_or_wait(move _10, move _12) -> [return: bb3, unwind: bb7]
  }
  preds [bb1]
  succs [bb3, bb7]

bb3
  0: StorageDead(_12)
    SourceInfo(src/imp_std.rs:83:9-83:10)
  1: StorageDead(_10)
    SourceInfo(src/imp_std.rs:83:9-83:10)
  2: StorageDead(_16)
    SourceInfo(src/imp_std.rs:83:10-83:11)
  3: StorageDead(_15)
    SourceInfo(src/imp_std.rs:83:10-83:11)
  4: StorageDead(_11)
    SourceInfo(src/imp_std.rs:83:10-83:11)
  5: StorageDead(_9)
    SourceInfo(src/imp_std.rs:83:10-83:11)
  6: _0 = move _5
    SourceInfo(src/imp_std.rs:84:9-84:12)
  7: StorageDead(_7)
    SourceInfo(src/imp_std.rs:85:5-85:6)
  Terminator {
      source_info: SourceInfo(src/imp_std.rs:85:5-85:6)
      kind: drop(_5) -> [return: bb4, unwind: bb8]
  }
  preds [bb2]
  succs [bb4, bb8]

bb4
  0: StorageDead(_5)
    SourceInfo(src/imp_std.rs:85:5-85:6)
  Terminator {
      source_info: SourceInfo(src/imp_std.rs:85:5-85:6)
      kind: drop(_3) -> [return: bb5, unwind: bb9]
  }
  preds [bb3]
  succs [bb5, bb9]

bb5
  0: StorageDead(_3)
    SourceInfo(src/imp_std.rs:85:5-85:6)
  Terminator {
      source_info: SourceInfo(src/imp_std.rs:85:5-85:6)
      kind: drop(_2) -> [return: bb6, unwind: bb10]
  }
  preds [bb4]
  succs [bb6, bb10]

bb6
  Terminator {
      source_info: SourceInfo(src/imp_std.rs:85:6-85:6)
      kind: return
  }
  preds [bb5]
  succs []

bb7
  Terminator {
      source_info: SourceInfo(src/imp_std.rs:85:5-85:6)
      kind: drop(_5) -> [return: bb8, unwind terminate(cleanup)]
  }
  preds [bb1, bb2]
  succs [bb8]

bb8
  Terminator {
      source_info: SourceInfo(src/imp_std.rs:85:5-85:6)
      kind: drop(_3) -> [return: bb9, unwind terminate(cleanup)]
  }
  preds [bb3, bb7]
  succs [bb9]

bb9
  Terminator {
      source_info: SourceInfo(src/imp_std.rs:85:5-85:6)
      kind: drop(_2) -> [return: bb10, unwind terminate(cleanup)]
  }
  preds [bb0, bb4, bb8]
  succs [bb10]

bb10
  Terminator {
      source_info: SourceInfo(src/imp_std.rs:61:5-85:6)
      kind: resume
  }
  preds [bb5, bb9]
  succs []

