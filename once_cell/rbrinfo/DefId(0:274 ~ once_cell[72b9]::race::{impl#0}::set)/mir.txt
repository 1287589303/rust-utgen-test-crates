bb0
  0: StorageLive(_3)
    SourceInfo(src/race.rs:84:13-84:21)
  1: StorageLive(_4)
    SourceInfo(src/race.rs:85:13-85:23)
  2: _4 = &((*_1).0: std::sync::atomic::AtomicUsize)
    SourceInfo(src/race.rs:85:13-85:23)
  3: StorageLive(_5)
    SourceInfo(src/race.rs:85:44-85:55)
  4: StorageLive(_6)
    SourceInfo(src/race.rs:85:44-85:49)
  5: _6 = _2
    SourceInfo(src/race.rs:85:44-85:49)
  Terminator {
      source_info: SourceInfo(src/race.rs:85:44-85:55)
      kind: _5 = std::num::NonZero::<usize>::get(move _6) -> [return: bb1, unwind: bb8]
  }
  preds []
  succs [bb1, bb8]

bb1
  0: StorageDead(_6)
    SourceInfo(src/race.rs:85:54-85:55)
  1: StorageLive(_7)
    SourceInfo(src/race.rs:85:57-85:73)
  2: _7 = std::sync::atomic::Ordering::AcqRel
    SourceInfo(src/race.rs:85:57-85:73)
  3: StorageLive(_8)
    SourceInfo(src/race.rs:85:75-85:92)
  4: _8 = std::sync::atomic::Ordering::Acquire
    SourceInfo(src/race.rs:85:75-85:92)
  Terminator {
      source_info: SourceInfo(src/race.rs:85:13-85:93)
      kind: _3 = std::sync::atomic::AtomicUsize::compare_exchange(move _4, const 0_usize, move _5, move _7, move _8) -> [return: bb2, unwind: bb8]
  }
  preds [bb0]
  succs [bb2, bb8]

bb2
  0: StorageDead(_8)
    SourceInfo(src/race.rs:85:92-85:93)
  1: StorageDead(_7)
    SourceInfo(src/race.rs:85:92-85:93)
  2: StorageDead(_5)
    SourceInfo(src/race.rs:85:92-85:93)
  3: StorageDead(_4)
    SourceInfo(src/race.rs:85:92-85:93)
  4: FakeRead(ForLet(None), _3)
    SourceInfo(src/race.rs:84:13-84:21)
  5: PlaceMention(_3)
    SourceInfo(src/race.rs:86:15-86:23)
  6: _9 = discriminant(_3)
    SourceInfo(src/race.rs:86:15-86:23)
  Terminator {
      source_info: SourceInfo(src/race.rs:86:9-86:23)
      kind: switchInt(move _9) -> [0: bb4, 1: bb5, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4, bb5]

bb3
  0: FakeRead(ForMatchedPlace(None), _3)
    SourceInfo(src/race.rs:86:15-86:23)
  Terminator {
      source_info: SourceInfo(src/race.rs:86:15-86:23)
      kind: unreachable
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(src/race.rs:87:13-87:18)
      kind: falseEdge -> [real: bb6, imaginary: bb5]
  }
  preds [bb2]
  succs [bb5, bb6]

bb5
  0: StorageLive(_11)
    SourceInfo(src/race.rs:88:27-88:29)
  1: _11 = ()
    SourceInfo(src/race.rs:88:27-88:29)
  2: _0 = std::result::Result::<(), ()>::Err(move _11)
    SourceInfo(src/race.rs:88:23-88:30)
  3: StorageDead(_11)
    SourceInfo(src/race.rs:88:29-88:30)
  Terminator {
      source_info: SourceInfo(src/race.rs:88:29-88:30)
      kind: goto -> bb7
  }
  preds [bb2, bb4]
  succs [bb7]

bb6
  0: StorageLive(_10)
    SourceInfo(src/race.rs:87:25-87:27)
  1: _10 = ()
    SourceInfo(src/race.rs:87:25-87:27)
  2: _0 = std::result::Result::<(), ()>::Ok(move _10)
    SourceInfo(src/race.rs:87:22-87:28)
  3: StorageDead(_10)
    SourceInfo(src/race.rs:87:27-87:28)
  Terminator {
      source_info: SourceInfo(src/race.rs:87:27-87:28)
      kind: goto -> bb7
  }
  preds [bb4]
  succs [bb7]

bb7
  0: StorageDead(_3)
    SourceInfo(src/race.rs:90:5-90:6)
  Terminator {
      source_info: SourceInfo(src/race.rs:90:6-90:6)
      kind: return
  }
  preds [bb5, bb6]
  succs []

bb8
  Terminator {
      source_info: SourceInfo(src/race.rs:83:5-90:6)
      kind: resume
  }
  preds [bb0, bb1]
  succs []

