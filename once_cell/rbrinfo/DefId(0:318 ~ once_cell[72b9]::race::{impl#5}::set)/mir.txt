bb0
  0: StorageLive(_3)
    SourceInfo(src/race.rs:243:13-243:16)
  1: StorageLive(_4)
    SourceInfo(src/race.rs:243:19-243:36)
  2: _4 = &raw const (*_2)
    SourceInfo(src/race.rs:243:19-243:24)
  3: _3 = move _4 as *mut T (PtrToPtr)
    SourceInfo(src/race.rs:243:19-243:46)
  4: StorageDead(_4)
    SourceInfo(src/race.rs:243:45-243:46)
  5: FakeRead(ForLet(None), _3)
    SourceInfo(src/race.rs:243:13-243:16)
  6: StorageLive(_5)
    SourceInfo(src/race.rs:244:13-244:21)
  7: StorageLive(_6)
    SourceInfo(src/race.rs:245:13-245:23)
  8: _6 = &((*_1).0: std::sync::atomic::AtomicPtr<T>)
    SourceInfo(src/race.rs:245:13-245:23)
  9: StorageLive(_7)
    SourceInfo(src/race.rs:245:41-245:56)
  Terminator {
      source_info: SourceInfo(src/race.rs:245:41-245:56)
      kind: _7 = std::ptr::null_mut::<T>() -> [return: bb1, unwind: bb8]
  }
  preds []
  succs [bb1, bb8]

bb1
  0: StorageLive(_8)
    SourceInfo(src/race.rs:245:58-245:61)
  1: _8 = _3
    SourceInfo(src/race.rs:245:58-245:61)
  2: StorageLive(_9)
    SourceInfo(src/race.rs:245:63-245:79)
  3: _9 = std::sync::atomic::Ordering::AcqRel
    SourceInfo(src/race.rs:245:63-245:79)
  4: StorageLive(_10)
    SourceInfo(src/race.rs:245:81-245:98)
  5: _10 = std::sync::atomic::Ordering::Acquire
    SourceInfo(src/race.rs:245:81-245:98)
  Terminator {
      source_info: SourceInfo(src/race.rs:245:13-245:99)
      kind: _5 = std::sync::atomic::AtomicPtr::<T>::compare_exchange(move _6, move _7, move _8, move _9, move _10) -> [return: bb2, unwind: bb8]
  }
  preds [bb0]
  succs [bb2, bb8]

bb2
  0: StorageDead(_10)
    SourceInfo(src/race.rs:245:98-245:99)
  1: StorageDead(_9)
    SourceInfo(src/race.rs:245:98-245:99)
  2: StorageDead(_8)
    SourceInfo(src/race.rs:245:98-245:99)
  3: StorageDead(_7)
    SourceInfo(src/race.rs:245:98-245:99)
  4: StorageDead(_6)
    SourceInfo(src/race.rs:245:98-245:99)
  5: FakeRead(ForLet(None), _5)
    SourceInfo(src/race.rs:244:13-244:21)
  6: PlaceMention(_5)
    SourceInfo(src/race.rs:246:15-246:23)
  7: _11 = discriminant(_5)
    SourceInfo(src/race.rs:246:15-246:23)
  Terminator {
      source_info: SourceInfo(src/race.rs:246:9-246:23)
      kind: switchInt(move _11) -> [0: bb4, 1: bb5, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4, bb5]

bb3
  0: FakeRead(ForMatchedPlace(None), _5)
    SourceInfo(src/race.rs:246:15-246:23)
  Terminator {
      source_info: SourceInfo(src/race.rs:246:15-246:23)
      kind: unreachable
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(src/race.rs:247:13-247:18)
      kind: falseEdge -> [real: bb6, imaginary: bb5]
  }
  preds [bb2]
  succs [bb5, bb6]

bb5
  0: StorageLive(_13)
    SourceInfo(src/race.rs:248:27-248:29)
  1: _13 = ()
    SourceInfo(src/race.rs:248:27-248:29)
  2: _0 = std::result::Result::<(), ()>::Err(move _13)
    SourceInfo(src/race.rs:248:23-248:30)
  3: StorageDead(_13)
    SourceInfo(src/race.rs:248:29-248:30)
  Terminator {
      source_info: SourceInfo(src/race.rs:248:29-248:30)
      kind: goto -> bb7
  }
  preds [bb2, bb4]
  succs [bb7]

bb6
  0: StorageLive(_12)
    SourceInfo(src/race.rs:247:25-247:27)
  1: _12 = ()
    SourceInfo(src/race.rs:247:25-247:27)
  2: _0 = std::result::Result::<(), ()>::Ok(move _12)
    SourceInfo(src/race.rs:247:22-247:28)
  3: StorageDead(_12)
    SourceInfo(src/race.rs:247:27-247:28)
  Terminator {
      source_info: SourceInfo(src/race.rs:247:27-247:28)
      kind: goto -> bb7
  }
  preds [bb4]
  succs [bb7]

bb7
  0: StorageDead(_5)
    SourceInfo(src/race.rs:250:5-250:6)
  1: StorageDead(_3)
    SourceInfo(src/race.rs:250:5-250:6)
  Terminator {
      source_info: SourceInfo(src/race.rs:250:6-250:6)
      kind: return
  }
  preds [bb5, bb6]
  succs []

bb8
  Terminator {
      source_info: SourceInfo(src/race.rs:242:5-250:6)
      kind: resume
  }
  preds [bb0, bb1]
  succs []

