bb0
  0: StorageLive(_3)
    SourceInfo(src/race.rs:130:13-130:20)
  1: StorageLive(_4)
    SourceInfo(src/race.rs:130:23-130:27)
  2: StorageLive(_5)
    SourceInfo(src/race.rs:130:23-130:27)
  3: StorageLive(_6)
    SourceInfo(src/race.rs:130:23-130:26)
  4: StorageLive(_7)
    SourceInfo(src/race.rs:130:23-130:24)
  5: _7 = move _2
    SourceInfo(src/race.rs:130:23-130:24)
  6: StorageLive(_8)
    SourceInfo(src/race.rs:130:23-130:26)
  7: _8 = ()
    SourceInfo(src/race.rs:130:23-130:26)
  Terminator {
      source_info: SourceInfo(src/race.rs:130:23-130:26)
      kind: _6 = <impl FnOnce() -> Result<NonZeroUsize, E> as std::ops::FnOnce<()>>::call_once(move _7, move _8) -> [return: bb1, unwind: bb23]
  }
  preds []
  succs [bb1, bb23]

bb1
  0: StorageDead(_8)
    SourceInfo(src/race.rs:130:25-130:26)
  1: StorageDead(_7)
    SourceInfo(src/race.rs:130:25-130:26)
  Terminator {
      source_info: SourceInfo(src/race.rs:130:23-130:27)
      kind: _5 = <std::result::Result<std::num::NonZero<usize>, E> as std::ops::Try>::branch(move _6) -> [return: bb2, unwind: bb22]
  }
  preds [bb0]
  succs [bb2, bb22]

bb2
  0: StorageDead(_6)
    SourceInfo(src/race.rs:130:26-130:27)
  1: PlaceMention(_5)
    SourceInfo(src/race.rs:130:23-130:27)
  2: _9 = discriminant(_5)
    SourceInfo(src/race.rs:130:23-130:27)
  Terminator {
      source_info: SourceInfo(src/race.rs:130:23-130:27)
      kind: switchInt(move _9) -> [0: bb5, 1: bb4, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4, bb5]

bb3
  0: FakeRead(ForMatchedPlace(None), _5)
    SourceInfo(src/race.rs:130:23-130:27)
  Terminator {
      source_info: SourceInfo(src/race.rs:130:23-130:27)
      kind: unreachable
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(src/race.rs:130:26-130:27)
      kind: falseEdge -> [real: bb6, imaginary: bb5]
  }
  preds [bb2]
  succs [bb5, bb6]

bb5
  0: StorageLive(_13)
    SourceInfo(src/race.rs:130:23-130:27)
  1: _13 = ((_5 as Continue).0: std::num::NonZero<usize>)
    SourceInfo(src/race.rs:130:23-130:27)
  2: _4 = _13
    SourceInfo(src/race.rs:130:23-130:27)
  3: StorageDead(_13)
    SourceInfo(src/race.rs:130:26-130:27)
  Terminator {
      source_info: SourceInfo(src/race.rs:130:23-130:33)
      kind: _3 = std::num::NonZero::<usize>::get(move _4) -> [return: bb8, unwind: bb21]
  }
  preds [bb2, bb4]
  succs [bb8, bb21]

bb6
  0: StorageLive(_10)
    SourceInfo(src/race.rs:130:26-130:27)
  1: _10 = move ((_5 as Break).0: std::result::Result<std::convert::Infallible, E>)
    SourceInfo(src/race.rs:130:26-130:27)
  2: StorageLive(_12)
    SourceInfo(src/race.rs:130:26-130:27)
  3: _12 = move _10
    SourceInfo(src/race.rs:130:26-130:27)
  Terminator {
      source_info: SourceInfo(src/race.rs:130:23-130:27)
      kind: _0 = <std::result::Result<std::num::NonZero<usize>, E> as std::ops::FromResidual<std::result::Result<std::convert::Infallible, E>>>::from_residual(move _12) -> [return: bb7, unwind: bb19]
  }
  preds [bb4]
  succs [bb7, bb19]

bb7
  0: StorageDead(_12)
    SourceInfo(src/race.rs:130:26-130:27)
  Terminator {
      source_info: SourceInfo(src/race.rs:130:26-130:27)
      kind: drop(_10) -> [return: bb16, unwind: bb21]
  }
  preds [bb6]
  succs [bb16, bb21]

bb8
  0: StorageDead(_4)
    SourceInfo(src/race.rs:130:32-130:33)
  1: FakeRead(ForLet(None), _3)
    SourceInfo(src/race.rs:130:13-130:20)
  Terminator {
      source_info: SourceInfo(src/race.rs:130:33-130:34)
      kind: drop(_5) -> [return: bb9, unwind: bb24]
  }
  preds [bb5]
  succs [bb9, bb24]

bb9
  0: StorageDead(_5)
    SourceInfo(src/race.rs:130:33-130:34)
  1: StorageLive(_14)
    SourceInfo(src/race.rs:131:13-131:21)
  2: StorageLive(_15)
    SourceInfo(src/race.rs:131:24-131:34)
  3: _15 = &((*_1).0: std::sync::atomic::AtomicUsize)
    SourceInfo(src/race.rs:131:24-131:34)
  4: StorageLive(_16)
    SourceInfo(src/race.rs:131:55-131:58)
  5: _16 = _3
    SourceInfo(src/race.rs:131:55-131:58)
  6: StorageLive(_17)
    SourceInfo(src/race.rs:131:60-131:76)
  7: _17 = std::sync::atomic::Ordering::AcqRel
    SourceInfo(src/race.rs:131:60-131:76)
  8: StorageLive(_18)
    SourceInfo(src/race.rs:131:78-131:95)
  9: _18 = std::sync::atomic::Ordering::Acquire
    SourceInfo(src/race.rs:131:78-131:95)
  Terminator {
      source_info: SourceInfo(src/race.rs:131:24-131:96)
      kind: _14 = std::sync::atomic::AtomicUsize::compare_exchange(move _15, const 0_usize, move _16, move _17, move _18) -> [return: bb10, unwind: bb24]
  }
  preds [bb8]
  succs [bb10, bb24]

bb10
  0: StorageDead(_18)
    SourceInfo(src/race.rs:131:95-131:96)
  1: StorageDead(_17)
    SourceInfo(src/race.rs:131:95-131:96)
  2: StorageDead(_16)
    SourceInfo(src/race.rs:131:95-131:96)
  3: StorageDead(_15)
    SourceInfo(src/race.rs:131:95-131:96)
  4: FakeRead(ForLet(None), _14)
    SourceInfo(src/race.rs:131:13-131:21)
  5: StorageLive(_19)
    SourceInfo(src/race.rs:132:9-134:10)
  6: PlaceMention(_14)
    SourceInfo(src/race.rs:132:27-132:35)
  7: _20 = discriminant(_14)
    SourceInfo(src/race.rs:132:27-132:35)
  Terminator {
      source_info: SourceInfo(src/race.rs:132:16-132:24)
      kind: switchInt(move _20) -> [1: bb11, otherwise: bb13]
  }
  preds [bb9]
  succs [bb11, bb13]

bb11
  Terminator {
      source_info: SourceInfo(src/race.rs:132:16-132:24)
      kind: falseEdge -> [real: bb12, imaginary: bb13]
  }
  preds [bb10]
  succs [bb12, bb13]

bb12
  0: StorageLive(_21)
    SourceInfo(src/race.rs:132:20-132:23)
  1: _21 = ((_14 as Err).0: usize)
    SourceInfo(src/race.rs:132:20-132:23)
  2: StorageLive(_22)
    SourceInfo(src/race.rs:133:19-133:22)
  3: _22 = _21
    SourceInfo(src/race.rs:133:19-133:22)
  4: _3 = move _22
    SourceInfo(src/race.rs:133:13-133:22)
  5: StorageDead(_22)
    SourceInfo(src/race.rs:133:21-133:22)
  6: _19 = const ()
    SourceInfo(src/race.rs:132:36-134:10)
  7: StorageDead(_21)
    SourceInfo(src/race.rs:134:9-134:10)
  Terminator {
      source_info: SourceInfo(src/race.rs:132:9-134:10)
      kind: goto -> bb14
  }
  preds [bb11]
  succs [bb14]

bb13
  0: _19 = const ()
    SourceInfo(src/race.rs:134:10-134:10)
  Terminator {
      source_info: SourceInfo(src/race.rs:132:9-134:10)
      kind: goto -> bb14
  }
  preds [bb10, bb11]
  succs [bb14]

bb14
  0: StorageDead(_19)
    SourceInfo(src/race.rs:134:9-134:10)
  1: StorageLive(_23)
    SourceInfo(src/race.rs:135:12-135:55)
  2: StorageLive(_24)
    SourceInfo(src/race.rs:135:49-135:52)
  3: _24 = _3
    SourceInfo(src/race.rs:135:49-135:52)
  Terminator {
      source_info: SourceInfo(src/race.rs:135:21-135:53)
      kind: _23 = std::num::NonZero::<usize>::new_unchecked(move _24) -> [return: bb15, unwind: bb24]
  }
  preds [bb12, bb13]
  succs [bb15, bb24]

bb15
  0: StorageDead(_24)
    SourceInfo(src/race.rs:135:52-135:53)
  1: _0 = std::result::Result::<std::num::NonZero<usize>, E>::Ok(move _23)
    SourceInfo(src/race.rs:135:9-135:56)
  2: StorageDead(_23)
    SourceInfo(src/race.rs:135:55-135:56)
  3: StorageDead(_14)
    SourceInfo(src/race.rs:136:5-136:6)
  4: StorageDead(_3)
    SourceInfo(src/race.rs:136:5-136:6)
  Terminator {
      source_info: SourceInfo(src/race.rs:136:5-136:6)
      kind: drop(_2) -> [return: bb18, unwind: bb25]
  }
  preds [bb14]
  succs [bb18, bb25]

bb16
  0: StorageDead(_10)
    SourceInfo(src/race.rs:130:26-130:27)
  1: StorageDead(_4)
    SourceInfo(src/race.rs:130:32-130:33)
  Terminator {
      source_info: SourceInfo(src/race.rs:130:33-130:34)
      kind: drop(_5) -> [return: bb17, unwind: bb24]
  }
  preds [bb7]
  succs [bb17, bb24]

bb17
  0: StorageDead(_5)
    SourceInfo(src/race.rs:130:33-130:34)
  1: StorageDead(_3)
    SourceInfo(src/race.rs:136:5-136:6)
  Terminator {
      source_info: SourceInfo(src/race.rs:136:5-136:6)
      kind: drop(_2) -> [return: bb18, unwind: bb25]
  }
  preds [bb16]
  succs [bb18, bb25]

bb18
  Terminator {
      source_info: SourceInfo(src/race.rs:136:6-136:6)
      kind: return
  }
  preds [bb15, bb17]
  succs []

bb19
  Terminator {
      source_info: SourceInfo(src/race.rs:130:26-130:27)
      kind: drop(_12) -> [return: bb20, unwind terminate(cleanup)]
  }
  preds [bb6]
  succs [bb20]

bb20
  Terminator {
      source_info: SourceInfo(src/race.rs:130:26-130:27)
      kind: drop(_10) -> [return: bb21, unwind terminate(cleanup)]
  }
  preds [bb19]
  succs [bb21]

bb21
  Terminator {
      source_info: SourceInfo(src/race.rs:130:33-130:34)
      kind: drop(_5) -> [return: bb24, unwind terminate(cleanup)]
  }
  preds [bb5, bb7, bb20]
  succs [bb24]

bb22
  Terminator {
      source_info: SourceInfo(src/race.rs:130:26-130:27)
      kind: drop(_6) -> [return: bb24, unwind terminate(cleanup)]
  }
  preds [bb1]
  succs [bb24]

bb23
  Terminator {
      source_info: SourceInfo(src/race.rs:130:25-130:26)
      kind: drop(_7) -> [return: bb24, unwind terminate(cleanup)]
  }
  preds [bb0]
  succs [bb24]

bb24
  Terminator {
      source_info: SourceInfo(src/race.rs:136:5-136:6)
      kind: drop(_2) -> [return: bb25, unwind terminate(cleanup)]
  }
  preds [bb8, bb9, bb14, bb16, bb21, bb22, bb23]
  succs [bb25]

bb25
  Terminator {
      source_info: SourceInfo(src/race.rs:129:5-136:6)
      kind: resume
  }
  preds [bb15, bb17, bb24]
  succs []

