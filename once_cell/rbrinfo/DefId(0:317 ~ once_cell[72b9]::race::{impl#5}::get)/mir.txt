bb0
  0: StorageLive(_2)
    SourceInfo(src/race.rs:234:13-234:16)
  1: StorageLive(_3)
    SourceInfo(src/race.rs:234:19-234:29)
  2: _3 = &((*_1).0: std::sync::atomic::AtomicPtr<T>)
    SourceInfo(src/race.rs:234:19-234:29)
  3: StorageLive(_4)
    SourceInfo(src/race.rs:234:35-234:52)
  4: _4 = std::sync::atomic::Ordering::Acquire
    SourceInfo(src/race.rs:234:35-234:52)
  Terminator {
      source_info: SourceInfo(src/race.rs:234:19-234:53)
      kind: _2 = std::sync::atomic::AtomicPtr::<T>::load(move _3, move _4) -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: StorageDead(_4)
    SourceInfo(src/race.rs:234:52-234:53)
  1: StorageDead(_3)
    SourceInfo(src/race.rs:234:52-234:53)
  2: FakeRead(ForLet(None), _2)
    SourceInfo(src/race.rs:234:13-234:16)
  3: StorageLive(_5)
    SourceInfo(src/race.rs:235:18-235:21)
  4: _5 = _2
    SourceInfo(src/race.rs:235:18-235:21)
  Terminator {
      source_info: SourceInfo(src/race.rs:235:18-235:30)
      kind: _0 = std::ptr::mut_ptr::<impl *mut T>::as_ref::<'_>(move _5) -> [return: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_5)
    SourceInfo(src/race.rs:235:29-235:30)
  1: StorageDead(_2)
    SourceInfo(src/race.rs:236:5-236:6)
  Terminator {
      source_info: SourceInfo(src/race.rs:236:6-236:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(src/race.rs:233:5-236:6)
      kind: resume
  }
  preds [bb0, bb1]
  succs []

