[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let instance = OnceNonZeroUsize::new();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(instance.inner.load(Ordering::SeqCst), 0);"
        ],
        "code": [
          "{",
          "    let instance = OnceNonZeroUsize::new();",
          "    assert_eq!(instance.inner.load(Ordering::SeqCst), 0);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let instance: OnceNonZeroUsize = Default::default();",
          "}"
        ],
        "oracle": [
          "    let expected: OnceNonZeroUsize = OnceNonZeroUsize { inner: AtomicUsize::new(0) };",
          "    assert_eq!(instance.inner.load(Ordering::SeqCst), expected.inner.load(Ordering::SeqCst));",
          "    assert!(instance.get().is_none());"
        ],
        "code": [
          "{",
          "    let instance: OnceNonZeroUsize = Default::default();",
          "    let expected: OnceNonZeroUsize = OnceNonZeroUsize { inner: AtomicUsize::new(0) };",
          "    assert_eq!(instance.inner.load(Ordering::SeqCst), expected.inner.load(Ordering::SeqCst));",
          "    assert!(instance.get().is_none());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]