[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let once_box: OnceBox<i32> = OnceBox::default();",
          "    let inner_pointer = once_box.inner.load(Ordering::SeqCst);",
          "    assert_eq!(inner_pointer, ptr::null_mut());",
          "}"
        ],
        "oracle": [
          "    assert_eq!(OnceBox::<i32>::default().inner.load(Ordering::SeqCst), ptr::null_mut());"
        ],
        "code": [
          "{",
          "    let once_box: OnceBox<i32> = OnceBox::default();",
          "    let inner_pointer = once_box.inner.load(Ordering::SeqCst);",
          "    assert_eq!(inner_pointer, ptr::null_mut());",
          "    assert_eq!(OnceBox::<i32>::default().inner.load(Ordering::SeqCst), ptr::null_mut());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let once_box: OnceBox<String> = OnceBox::default();",
          "    let inner_pointer = once_box.inner.load(Ordering::SeqCst);",
          "    assert_eq!(inner_pointer, ptr::null_mut());",
          "}"
        ],
        "oracle": [
          "    let once_box: OnceBox<String> = OnceBox::default();",
          "    let inner_pointer = once_box.inner.load(Ordering::SeqCst);",
          "    assert_eq!(inner_pointer, ptr::null_mut());"
        ],
        "code": [
          "{",
          "    let once_box: OnceBox<String> = OnceBox::default();",
          "    let inner_pointer = once_box.inner.load(Ordering::SeqCst);",
          "    assert_eq!(inner_pointer, ptr::null_mut());",
          "    let once_box: OnceBox<String> = OnceBox::default();",
          "    let inner_pointer = once_box.inner.load(Ordering::SeqCst);",
          "    assert_eq!(inner_pointer, ptr::null_mut());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let once_box: OnceBox<f64> = OnceBox::default();",
          "    let inner_pointer = once_box.inner.load(Ordering::SeqCst);",
          "    assert_eq!(inner_pointer, ptr::null_mut());",
          "}"
        ],
        "oracle": [
          "    let once_box: OnceBox<i32> = OnceBox::default();",
          "    let inner_pointer = once_box.inner.load(Ordering::SeqCst);",
          "    assert_eq!(inner_pointer, ptr::null_mut());",
          "    let once_box: OnceBox<String> = OnceBox::default();",
          "    let inner_pointer = once_box.inner.load(Ordering::SeqCst);",
          "    assert_eq!(inner_pointer, ptr::null_mut());"
        ],
        "code": [
          "{",
          "    let once_box: OnceBox<f64> = OnceBox::default();",
          "    let inner_pointer = once_box.inner.load(Ordering::SeqCst);",
          "    assert_eq!(inner_pointer, ptr::null_mut());",
          "    let once_box: OnceBox<i32> = OnceBox::default();",
          "    let inner_pointer = once_box.inner.load(Ordering::SeqCst);",
          "    assert_eq!(inner_pointer, ptr::null_mut());",
          "    let once_box: OnceBox<String> = OnceBox::default();",
          "    let inner_pointer = once_box.inner.load(Ordering::SeqCst);",
          "    assert_eq!(inner_pointer, ptr::null_mut());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]