[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let once_box: OnceBox<i32> = OnceBox::new();",
          "    let cloned_once_box = once_box.clone();",
          "    let retrieved_value = cloned_once_box.get();",
          "}"
        ],
        "oracle": [
          "    assert!(once_box.get().is_none());",
          "    assert_eq!(cloned_once_box.get(), None);",
          "    assert_eq!(retrieved_value, None);",
          "    assert_ne!(cloned_once_box.inner.load(Ordering::Acquire), once_box.inner.load(Ordering::Acquire));"
        ],
        "code": [
          "{",
          "    let once_box: OnceBox<i32> = OnceBox::new();",
          "    let cloned_once_box = once_box.clone();",
          "    let retrieved_value = cloned_once_box.get();",
          "    assert!(once_box.get().is_none());",
          "    assert_eq!(cloned_once_box.get(), None);",
          "    assert_eq!(retrieved_value, None);",
          "    assert_ne!(cloned_once_box.inner.load(Ordering::Acquire), once_box.inner.load(Ordering::Acquire));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let once_box: OnceBox<String> = OnceBox::new();",
          "    let cloned_once_box = once_box.clone();",
          "    let retrieved_value = cloned_once_box.get();",
          "}"
        ],
        "oracle": [
          "    assert!(once_box.get().is_none());",
          "    assert_eq!(cloned_once_box.get(), None);"
        ],
        "code": [
          "{",
          "    let once_box: OnceBox<String> = OnceBox::new();",
          "    let cloned_once_box = once_box.clone();",
          "    let retrieved_value = cloned_once_box.get();",
          "    assert!(once_box.get().is_none());",
          "    assert_eq!(cloned_once_box.get(), None);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]