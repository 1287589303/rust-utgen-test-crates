[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let instance: OnceRef<u32> = OnceRef::default();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(instance.inner.load(Ordering::SeqCst), ptr::null_mut());",
          "    assert!(instance.ghost as *const _ != ptr::null());",
          "    assert!(std::mem::size_of::<OnceRef<u32>>() > 0);"
        ],
        "code": [
          "{",
          "    let instance: OnceRef<u32> = OnceRef::default();",
          "    assert_eq!(instance.inner.load(Ordering::SeqCst), ptr::null_mut());",
          "    assert!(instance.ghost as *const _ != ptr::null());",
          "    assert!(std::mem::size_of::<OnceRef<u32>>() > 0);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let instance: OnceRef<i32> = OnceRef::new();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(instance.inner.load(Ordering::SeqCst), ptr::null_mut());",
          "    assert!(instance.ghost.is_null());",
          "    assert!(instance.get().is_none());",
          "    assert_eq!(OnceRef::<i32>::default(), instance);",
          "    assert!(instance.set(&10).is_err());",
          "    assert!(instance.get_or_init(|| &10).eq(&10));",
          "    assert!(instance.get_or_try_init(|| Ok(&10)).is_ok());"
        ],
        "code": [
          "{",
          "    let instance: OnceRef<i32> = OnceRef::new();",
          "    assert_eq!(instance.inner.load(Ordering::SeqCst), ptr::null_mut());",
          "    assert!(instance.ghost.is_null());",
          "    assert!(instance.get().is_none());",
          "    assert_eq!(OnceRef::<i32>::default(), instance);",
          "    assert!(instance.set(&10).is_err());",
          "    assert!(instance.get_or_init(|| &10).eq(&10));",
          "    assert!(instance.get_or_try_init(|| Ok(&10)).is_ok());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]