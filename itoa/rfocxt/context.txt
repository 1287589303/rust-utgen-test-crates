CrateContext {
    crate_name: "itoa",
    crate_path: "/home/abezbm/rust-utgen-test-crates/itoa",
    entry_file_paths: [
        "/home/abezbm/rust-utgen-test-crates/itoa/src/lib.rs",
    ],
    main_mod_contexts: [
        RefCell {
            value: ModContext {
             mod_info: Mod(
                ModModInfo {
                    mod_name: "itoa",
                    mod_tree: MyPath {
                        name: "itoa",
                        next: None,
                    },
                    file_path: "/home/abezbm/rust-utgen-test-crates/itoa/src/lib.rs",
                    parent_directory_path: "/home/abezbm/rust-utgen-test-crates/itoa/src",
                    mod_file_directory_path: None,
                    visibility: PubT,
                },
            ),
             syntax_context: SyntaxContext {
                consts: [
                    ConstItem {
                        item: Some(
                            ItemConst {
                                attrs: [],
                                vis: Visibility::Inherited,
                                const_token: Const,
                                ident: Ident {
                                    sym: DEC_DIGITS_LUT,
                                    span: bytes(3868..3882),
                                },
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                colon_token: Colon,
                                ty: Type::Array {
                                    bracket_token: Bracket,
                                    elem: Type::Path {
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: u8,
                                                        span: bytes(3885..3887),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                    semi_token: Semi,
                                    len: Expr::Lit {
                                        attrs: [],
                                        lit: Lit::Int {
                                            token: 200,
                                        },
                                    },
                                },
                                eq_token: Eq,
                                expr: Expr::Unary {
                                    attrs: [],
                                    op: UnOp::Deref(
                                        Star,
                                    ),
                                    expr: Expr::Lit {
                                        attrs: [],
                                        lit: Lit::ByteStr {
                                            token: b"\
                                                  0001020304050607080910111213141516171819\
                                                  2021222324252627282930313233343536373839\
                                                  4041424344454647484950515253545556575859\
                                                  6061626364656667686970717273747576777879\
                                                  8081828384858687888990919293949596979899",
                                        },
                                    },
                                },
                                semi_token: Semi,
                            },
                        ),
                        visibility: Pri,
                    },
                ],
                trait_aliases: [],
                uses: [
                    UseItem {
                        item: Some(
                            ItemUse {
                                attrs: [],
                                vis: Visibility::Inherited,
                                use_token: Use,
                                leading_colon: None,
                                tree: UseTree::Path(
                                    UsePath {
                                        ident: Ident {
                                            sym: core,
                                            span: bytes(1630..1634),
                                        },
                                        colon2_token: PathSep,
                                        tree: UseTree::Name(
                                            UseName {
                                                ident: Ident {
                                                    sym: hint,
                                                    span: bytes(1636..1640),
                                                },
                                            },
                                        ),
                                    },
                                ),
                                semi_token: Semi,
                            },
                        ),
                        visibility: Pri,
                    },
                    UseItem {
                        item: Some(
                            ItemUse {
                                attrs: [],
                                vis: Visibility::Inherited,
                                use_token: Use,
                                leading_colon: None,
                                tree: UseTree::Path(
                                    UsePath {
                                        ident: Ident {
                                            sym: core,
                                            span: bytes(1646..1650),
                                        },
                                        colon2_token: PathSep,
                                        tree: UseTree::Path(
                                            UsePath {
                                                ident: Ident {
                                                    sym: mem,
                                                    span: bytes(1652..1655),
                                                },
                                                colon2_token: PathSep,
                                                tree: UseTree::Name(
                                                    UseName {
                                                        ident: Ident {
                                                            sym: MaybeUninit,
                                                            span: bytes(1657..1668),
                                                        },
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                                semi_token: Semi,
                            },
                        ),
                        visibility: Pri,
                    },
                    UseItem {
                        item: Some(
                            ItemUse {
                                attrs: [],
                                vis: Visibility::Inherited,
                                use_token: Use,
                                leading_colon: None,
                                tree: UseTree::Path(
                                    UsePath {
                                        ident: Ident {
                                            sym: core,
                                            span: bytes(1674..1678),
                                        },
                                        colon2_token: PathSep,
                                        tree: UseTree::Group(
                                            UseGroup {
                                                brace_token: Brace,
                                                items: [
                                                    UseTree::Name(
                                                        UseName {
                                                            ident: Ident {
                                                                sym: ptr,
                                                                span: bytes(1681..1684),
                                                            },
                                                        },
                                                    ),
                                                    Comma,
                                                    UseTree::Name(
                                                        UseName {
                                                            ident: Ident {
                                                                sym: slice,
                                                                span: bytes(1686..1691),
                                                            },
                                                        },
                                                    ),
                                                    Comma,
                                                    UseTree::Name(
                                                        UseName {
                                                            ident: Ident {
                                                                sym: str,
                                                                span: bytes(1693..1696),
                                                            },
                                                        },
                                                    ),
                                                ],
                                            },
                                        ),
                                    },
                                ),
                                semi_token: Semi,
                            },
                        ),
                        visibility: Pri,
                    },
                    UseItem {
                        item: Some(
                            ItemUse {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::List {
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: cfg,
                                                            span: bytes(1701..1704),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                            delimiter: MacroDelimiter::Paren(
                                                Paren,
                                            ),
                                            tokens: TokenStream [
                                                Ident {
                                                    sym: feature,
                                                    span: bytes(1705..1712),
                                                },
                                                Punct {
                                                    char: '=',
                                                    spacing: Alone,
                                                    span: bytes(1713..1714),
                                                },
                                                Literal {
                                                    lit: "no-panic",
                                                    span: bytes(1715..1725),
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                use_token: Use,
                                leading_colon: None,
                                tree: UseTree::Path(
                                    UsePath {
                                        ident: Ident {
                                            sym: no_panic,
                                            span: bytes(1732..1740),
                                        },
                                        colon2_token: PathSep,
                                        tree: UseTree::Name(
                                            UseName {
                                                ident: Ident {
                                                    sym: no_panic,
                                                    span: bytes(1742..1750),
                                                },
                                            },
                                        ),
                                    },
                                ),
                                semi_token: Semi,
                            },
                        ),
                        visibility: Pri,
                    },
                ],
                mods: [
                    ModItem {
                        mod_name: "udiv128",
                        file_name: None,
                        item: Some(
                            ItemMod {
                                attrs: [],
                                vis: Visibility::Inherited,
                                unsafety: None,
                                mod_token: Mod,
                                ident: Ident {
                                    sym: udiv128,
                                    span: bytes(1616..1623),
                                },
                                content: None,
                                semi: Some(
                                    Semi,
                                ),
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                    },
                    ModItem {
                        mod_name: "private",
                        file_name: None,
                        item: Some(
                            ItemMod {
                                attrs: [],
                                vis: Visibility::Inherited,
                                unsafety: None,
                                mod_token: Mod,
                                ident: Ident {
                                    sym: private,
                                    span: bytes(3686..3693),
                                },
                                content: Some(
                                    (
                                        Brace,
                                        [],
                                    ),
                                ),
                                semi: None,
                            },
                        ),
                        inside_items: [
                            Item::Trait {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::List {
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: doc,
                                                            span: bytes(3702..3705),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                            delimiter: MacroDelimiter::Paren(
                                                Paren,
                                            ),
                                            tokens: TokenStream [
                                                Ident {
                                                    sym: hidden,
                                                    span: bytes(3706..3712),
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                unsafety: None,
                                auto_token: None,
                                restriction: None,
                                trait_token: Trait,
                                ident: Ident {
                                    sym: Sealed,
                                    span: bytes(3729..3735),
                                },
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                colon_token: Some(
                                    Colon,
                                ),
                                supertraits: [
                                    TypeParamBound::Trait(
                                        TraitBound {
                                            paren_token: None,
                                            modifier: TraitBoundModifier::None,
                                            lifetimes: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Copy,
                                                            span: bytes(3737..3741),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                ],
                                brace_token: Brace,
                                items: [
                                    TraitItem::Type {
                                        attrs: [
                                            Attribute {
                                                pound_token: Pound,
                                                style: AttrStyle::Outer,
                                                bracket_token: Bracket,
                                                meta: Meta::List {
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: doc,
                                                                    span: bytes(3754..3757),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                    delimiter: MacroDelimiter::Paren(
                                                        Paren,
                                                    ),
                                                    tokens: TokenStream [
                                                        Ident {
                                                            sym: hidden,
                                                            span: bytes(3758..3764),
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                        type_token: Type,
                                        ident: Ident {
                                            sym: Buffer,
                                            span: bytes(3780..3786),
                                        },
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        colon_token: Some(
                                            Colon,
                                        ),
                                        bounds: [
                                            TypeParamBound::Lifetime {
                                                apostrophe: bytes(3788..3789),
                                                ident: Ident {
                                                    sym: static,
                                                    span: bytes(3789..3795),
                                                },
                                            },
                                        ],
                                        default: None,
                                        semi_token: Semi,
                                    },
                                    TraitItem::Fn {
                                        attrs: [],
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: write,
                                                span: bytes(3808..3813),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Receiver(
                                                    Receiver {
                                                        attrs: [],
                                                        reference: None,
                                                        mutability: None,
                                                        self_token: SelfValue,
                                                        colon_token: None,
                                                        ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Self,
                                                                            span: bytes(3814..3818),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                ),
                                                Comma,
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: buf,
                                                                span: bytes(3820..3823),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Self,
                                                                                span: bytes(3830..3834),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                        PathSep,
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Buffer,
                                                                                span: bytes(3836..3842),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: None,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: str,
                                                                        span: bytes(3848..3851),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            ),
                                        },
                                        default: None,
                                        semi_token: Some(
                                            Semi,
                                        ),
                                    },
                                ],
                            },
                        ],
                        visibility: Pri,
                    },
                ],
                statics: [],
                types: [],
                structs: [
                    StructItem {
                        struct_name: Name {
                            name: "Buffer",
                            complete_name: "itoa::Buffer",
                            import_name: MyPath {
                                name: "itoa",
                                next: Some(
                                    MyPath {
                                        name: "Buffer",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        item: Some(
                            ItemStruct {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                struct_token: Struct,
                                ident: Ident {
                                    sym: Buffer,
                                    span: bytes(2005..2011),
                                },
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                fields: Fields::Named {
                                    brace_token: Brace,
                                    named: [
                                        Field {
                                            attrs: [],
                                            vis: Visibility::Inherited,
                                            mutability: FieldMutability::None,
                                            ident: Some(
                                                Ident {
                                                    sym: bytes,
                                                    span: bytes(2018..2023),
                                                },
                                            ),
                                            colon_token: Some(
                                                Colon,
                                            ),
                                            ty: Type::Array {
                                                bracket_token: Bracket,
                                                elem: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: MaybeUninit,
                                                                    span: bytes(2026..2037),
                                                                },
                                                                arguments: PathArguments::AngleBracketed {
                                                                    colon2_token: None,
                                                                    lt_token: Lt,
                                                                    args: [
                                                                        GenericArgument::Type(
                                                                            Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: u8,
                                                                                                span: bytes(2038..2040),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                    gt_token: Gt,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                                semi_token: Semi,
                                                len: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: i128,
                                                                    span: bytes(2043..2047),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: MAX_STR_LEN,
                                                                    span: bytes(2049..2060),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        },
                                        Comma,
                                    ],
                                },
                                semi_token: None,
                            },
                        ),
                        visibility: PubT,
                        relative_types: [
                            "MAX_STR_LEN",
                            "MaybeUninit",
                            "i128",
                            "u8",
                        ],
                    },
                ],
                enums: [],
                unions: [],
                impls: [
                    ImplItem {
                        impl_num: 0,
                        struct_name: Name {
                            name: "Buffer",
                            complete_name: "itoa::Buffer",
                            import_name: MyPath {
                                name: "itoa",
                                next: Some(
                                    MyPath {
                                        name: "Buffer",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        trait_name: Some(
                            Name {
                                name: "",
                                complete_name: "",
                                import_name: MyPath {
                                    name: "",
                                    next: None,
                                },
                            },
                        ),
                        item: Some(
                            ItemImpl {
                                attrs: [],
                                defaultness: None,
                                unsafety: None,
                                impl_token: Impl,
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                trait_: Some(
                                    (
                                        None,
                                        Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: Default,
                                                        span: bytes(2071..2078),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                        For,
                                    ),
                                ),
                                self_ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: Buffer,
                                                    span: bytes(2083..2089),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                                brace_token: Brace,
                                items: [],
                            },
                        ),
                        types: [],
                        consts: [],
                        functions: [
                            ImplFnItem {
                                fn_name: Name {
                                    name: "default",
                                    complete_name: "<itoa::Buffer as >::default",
                                    import_name: MyPath {
                                        name: "<itoa",
                                        next: Some(
                                            MyPath {
                                                name: "Buffer as >",
                                                next: Some(
                                                    MyPath {
                                                        name: "default",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "{impl#0}::default",
                                item: Some(
                                    ImplItemFn {
                                        attrs: [
                                            Attribute {
                                                pound_token: Pound,
                                                style: AttrStyle::Outer,
                                                bracket_token: Bracket,
                                                meta: Meta::Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: inline,
                                                                span: bytes(2098..2104),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                        vis: Visibility::Inherited,
                                        defaultness: None,
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: default,
                                                span: bytes(2113..2120),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Buffer,
                                                                    span: bytes(2126..2132),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::Call {
                                                        attrs: [],
                                                        func: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Buffer,
                                                                            span: bytes(2143..2149),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: new,
                                                                            span: bytes(2151..2154),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        paren_token: Paren,
                                                        args: [],
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: Pri,
                                is_constructor: false,
                            },
                        ],
                        relative_types: [],
                    },
                    ImplItem {
                        impl_num: 1,
                        struct_name: Name {
                            name: "Buffer",
                            complete_name: "itoa::Buffer",
                            import_name: MyPath {
                                name: "itoa",
                                next: Some(
                                    MyPath {
                                        name: "Buffer",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        trait_name: Some(
                            Name {
                                name: "",
                                complete_name: "",
                                import_name: MyPath {
                                    name: "",
                                    next: None,
                                },
                            },
                        ),
                        item: Some(
                            ItemImpl {
                                attrs: [],
                                defaultness: None,
                                unsafety: None,
                                impl_token: Impl,
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                trait_: Some(
                                    (
                                        None,
                                        Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: Copy,
                                                        span: bytes(2171..2175),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                        For,
                                    ),
                                ),
                                self_ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: Buffer,
                                                    span: bytes(2180..2186),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                                brace_token: Brace,
                                items: [],
                            },
                        ),
                        types: [],
                        consts: [],
                        functions: [],
                        relative_types: [],
                    },
                    ImplItem {
                        impl_num: 2,
                        struct_name: Name {
                            name: "Buffer",
                            complete_name: "itoa::Buffer",
                            import_name: MyPath {
                                name: "itoa",
                                next: Some(
                                    MyPath {
                                        name: "Buffer",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        trait_name: Some(
                            Name {
                                name: "",
                                complete_name: "",
                                import_name: MyPath {
                                    name: "",
                                    next: None,
                                },
                            },
                        ),
                        item: Some(
                            ItemImpl {
                                attrs: [],
                                defaultness: None,
                                unsafety: None,
                                impl_token: Impl,
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                trait_: Some(
                                    (
                                        None,
                                        Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: Clone,
                                                        span: bytes(2196..2201),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                        For,
                                    ),
                                ),
                                self_ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: Buffer,
                                                    span: bytes(2206..2212),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                                brace_token: Brace,
                                items: [],
                            },
                        ),
                        types: [],
                        consts: [],
                        functions: [
                            ImplFnItem {
                                fn_name: Name {
                                    name: "clone",
                                    complete_name: "<itoa::Buffer as >::clone",
                                    import_name: MyPath {
                                        name: "<itoa",
                                        next: Some(
                                            MyPath {
                                                name: "Buffer as >",
                                                next: Some(
                                                    MyPath {
                                                        name: "clone",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "{impl#2}::clone",
                                item: Some(
                                    ImplItemFn {
                                        attrs: [
                                            Attribute {
                                                pound_token: Pound,
                                                style: AttrStyle::Outer,
                                                bracket_token: Bracket,
                                                meta: Meta::Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: inline,
                                                                span: bytes(2221..2227),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            Attribute {
                                                pound_token: Pound,
                                                style: AttrStyle::Outer,
                                                bracket_token: Bracket,
                                                meta: Meta::List {
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: allow,
                                                                    span: bytes(2235..2240),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                    delimiter: MacroDelimiter::Paren(
                                                        Paren,
                                                    ),
                                                    tokens: TokenStream [
                                                        Ident {
                                                            sym: clippy,
                                                            span: bytes(2241..2247),
                                                        },
                                                        Punct {
                                                            char: ':',
                                                            spacing: Joint,
                                                            span: bytes(2247..2248),
                                                        },
                                                        Punct {
                                                            char: ':',
                                                            spacing: Alone,
                                                            span: bytes(2248..2249),
                                                        },
                                                        Ident {
                                                            sym: non_canonical_clone_impl,
                                                            span: bytes(2249..2273),
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                        vis: Visibility::Inherited,
                                        defaultness: None,
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: clone,
                                                span: bytes(2355..2360),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Receiver(
                                                    Receiver {
                                                        attrs: [],
                                                        reference: Some(
                                                            (
                                                                And,
                                                                None,
                                                            ),
                                                        ),
                                                        mutability: None,
                                                        self_token: SelfValue,
                                                        colon_token: None,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: None,
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Self,
                                                                                span: bytes(2362..2366),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Self,
                                                                    span: bytes(2371..2375),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::Call {
                                                        attrs: [],
                                                        func: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Buffer,
                                                                            span: bytes(2386..2392),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: new,
                                                                            span: bytes(2394..2397),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        paren_token: Paren,
                                                        args: [],
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: Pri,
                                is_constructor: true,
                            },
                        ],
                        relative_types: [],
                    },
                    ImplItem {
                        impl_num: 3,
                        struct_name: Name {
                            name: "Buffer",
                            complete_name: "itoa::Buffer",
                            import_name: MyPath {
                                name: "itoa",
                                next: Some(
                                    MyPath {
                                        name: "Buffer",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        trait_name: None,
                        item: Some(
                            ItemImpl {
                                attrs: [],
                                defaultness: None,
                                unsafety: None,
                                impl_token: Impl,
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                trait_: None,
                                self_ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: Buffer,
                                                    span: bytes(2414..2420),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                                brace_token: Brace,
                                items: [],
                            },
                        ),
                        types: [],
                        consts: [],
                        functions: [
                            ImplFnItem {
                                fn_name: Name {
                                    name: "new",
                                    complete_name: "itoa::Buffer::new",
                                    import_name: MyPath {
                                        name: "itoa",
                                        next: Some(
                                            MyPath {
                                                name: "Buffer",
                                                next: Some(
                                                    MyPath {
                                                        name: "new",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "{impl#3}::new",
                                item: Some(
                                    ImplItemFn {
                                        attrs: [
                                            Attribute {
                                                pound_token: Pound,
                                                style: AttrStyle::Outer,
                                                bracket_token: Bracket,
                                                meta: Meta::Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: inline,
                                                                span: bytes(2534..2540),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            Attribute {
                                                pound_token: Pound,
                                                style: AttrStyle::Outer,
                                                bracket_token: Bracket,
                                                meta: Meta::List {
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: cfg_attr,
                                                                    span: bytes(2548..2556),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                    delimiter: MacroDelimiter::Paren(
                                                        Paren,
                                                    ),
                                                    tokens: TokenStream [
                                                        Ident {
                                                            sym: feature,
                                                            span: bytes(2557..2564),
                                                        },
                                                        Punct {
                                                            char: '=',
                                                            spacing: Alone,
                                                            span: bytes(2565..2566),
                                                        },
                                                        Literal {
                                                            lit: "no-panic",
                                                            span: bytes(2567..2577),
                                                        },
                                                        Punct {
                                                            char: ',',
                                                            spacing: Alone,
                                                            span: bytes(2577..2578),
                                                        },
                                                        Ident {
                                                            sym: no_panic,
                                                            span: bytes(2579..2587),
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                        vis: Visibility::Public(
                                            Pub,
                                        ),
                                        defaultness: None,
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: new,
                                                span: bytes(2601..2604),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Buffer,
                                                                    span: bytes(2610..2616),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: bytes,
                                                            span: bytes(2631..2636),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::Repeat {
                                                                attrs: [],
                                                                bracket_token: Bracket,
                                                                expr: Expr::Call {
                                                                    attrs: [],
                                                                    func: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: MaybeUninit,
                                                                                        span: bytes(2640..2651),
                                                                                    },
                                                                                    arguments: PathArguments::AngleBracketed {
                                                                                        colon2_token: Some(
                                                                                            PathSep,
                                                                                        ),
                                                                                        lt_token: Lt,
                                                                                        args: [
                                                                                            GenericArgument::Type(
                                                                                                Type::Path {
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: u8,
                                                                                                                    span: bytes(2654..2656),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                            ),
                                                                                        ],
                                                                                        gt_token: Gt,
                                                                                    },
                                                                                },
                                                                                PathSep,
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: uninit,
                                                                                        span: bytes(2659..2665),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    paren_token: Paren,
                                                                    args: [],
                                                                },
                                                                semi_token: Semi,
                                                                len: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: i128,
                                                                                    span: bytes(2669..2673),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: MAX_STR_LEN,
                                                                                    span: bytes(2675..2686),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Expr(
                                                    Expr::Struct {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Buffer,
                                                                        span: bytes(2697..2703),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                        brace_token: Brace,
                                                        fields: [
                                                            FieldValue {
                                                                attrs: [],
                                                                member: Member::Named(
                                                                    Ident {
                                                                        sym: bytes,
                                                                        span: bytes(2706..2711),
                                                                    },
                                                                ),
                                                                colon_token: None,
                                                                expr: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: bytes,
                                                                                    span: bytes(2706..2711),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        ],
                                                        dot2_token: None,
                                                        rest: None,
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: PubT,
                                is_constructor: false,
                            },
                            ImplFnItem {
                                fn_name: Name {
                                    name: "format",
                                    complete_name: "itoa::Buffer::format",
                                    import_name: MyPath {
                                        name: "itoa",
                                        next: Some(
                                            MyPath {
                                                name: "Buffer",
                                                next: Some(
                                                    MyPath {
                                                        name: "format",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "{impl#3}::format",
                                item: Some(
                                    ImplItemFn {
                                        attrs: [
                                            Attribute {
                                                pound_token: Pound,
                                                style: AttrStyle::Outer,
                                                bracket_token: Bracket,
                                                meta: Meta::List {
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: cfg_attr,
                                                                    span: bytes(2848..2856),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                    delimiter: MacroDelimiter::Paren(
                                                        Paren,
                                                    ),
                                                    tokens: TokenStream [
                                                        Ident {
                                                            sym: feature,
                                                            span: bytes(2857..2864),
                                                        },
                                                        Punct {
                                                            char: '=',
                                                            spacing: Alone,
                                                            span: bytes(2865..2866),
                                                        },
                                                        Literal {
                                                            lit: "no-panic",
                                                            span: bytes(2867..2877),
                                                        },
                                                        Punct {
                                                            char: ',',
                                                            spacing: Alone,
                                                            span: bytes(2877..2878),
                                                        },
                                                        Ident {
                                                            sym: no_panic,
                                                            span: bytes(2879..2887),
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                        vis: Visibility::Public(
                                            Pub,
                                        ),
                                        defaultness: None,
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: format,
                                                span: bytes(2901..2907),
                                            },
                                            generics: Generics {
                                                lt_token: Some(
                                                    Lt,
                                                ),
                                                params: [
                                                    GenericParam::Type(
                                                        TypeParam {
                                                            attrs: [],
                                                            ident: Ident {
                                                                sym: I,
                                                                span: bytes(2908..2909),
                                                            },
                                                            colon_token: Some(
                                                                Colon,
                                                            ),
                                                            bounds: [
                                                                TypeParamBound::Trait(
                                                                    TraitBound {
                                                                        paren_token: None,
                                                                        modifier: TraitBoundModifier::None,
                                                                        lifetimes: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Integer,
                                                                                        span: bytes(2911..2918),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            eq_token: None,
                                                            default: None,
                                                        },
                                                    ),
                                                ],
                                                gt_token: Some(
                                                    Gt,
                                                ),
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Receiver(
                                                    Receiver {
                                                        attrs: [],
                                                        reference: Some(
                                                            (
                                                                And,
                                                                None,
                                                            ),
                                                        ),
                                                        mutability: Some(
                                                            Mut,
                                                        ),
                                                        self_token: SelfValue,
                                                        colon_token: None,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Self,
                                                                                span: bytes(2925..2929),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                                Comma,
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: i,
                                                                span: bytes(2931..2932),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: I,
                                                                            span: bytes(2934..2935),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: None,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: str,
                                                                        span: bytes(2941..2944),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            ),
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: string,
                                                            span: bytes(2959..2965),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: i,
                                                                                    span: bytes(2968..2969),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: write,
                                                                    span: bytes(2970..2975),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Unsafe {
                                                                        attrs: [],
                                                                        unsafe_token: Unsafe,
                                                                        block: Block {
                                                                            brace_token: Brace,
                                                                            stmts: [
                                                                                Stmt::Expr(
                                                                                    Expr::Reference {
                                                                                        attrs: [],
                                                                                        and_token: And,
                                                                                        mutability: Some(
                                                                                            Mut,
                                                                                        ),
                                                                                        expr: Expr::Unary {
                                                                                            attrs: [],
                                                                                            op: UnOp::Deref(
                                                                                                Star,
                                                                                            ),
                                                                                            expr: Expr::Paren {
                                                                                                attrs: [],
                                                                                                paren_token: Paren,
                                                                                                expr: Expr::Cast {
                                                                                                    attrs: [],
                                                                                                    expr: Expr::Cast {
                                                                                                        attrs: [],
                                                                                                        expr: Expr::Reference {
                                                                                                            attrs: [],
                                                                                                            and_token: And,
                                                                                                            mutability: Some(
                                                                                                                Mut,
                                                                                                            ),
                                                                                                            expr: Expr::Field {
                                                                                                                attrs: [],
                                                                                                                base: Expr::Path {
                                                                                                                    attrs: [],
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: self,
                                                                                                                                    span: bytes(3009..3013),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                                dot_token: Dot,
                                                                                                                member: Member::Named(
                                                                                                                    Ident {
                                                                                                                        sym: bytes,
                                                                                                                        span: bytes(3014..3019),
                                                                                                                    },
                                                                                                                ),
                                                                                                            },
                                                                                                        },
                                                                                                        as_token: As,
                                                                                                        ty: Type::Ptr {
                                                                                                            star_token: Star,
                                                                                                            const_token: None,
                                                                                                            mutability: Some(
                                                                                                                Mut,
                                                                                                            ),
                                                                                                            elem: Type::Array {
                                                                                                                bracket_token: Bracket,
                                                                                                                elem: Type::Path {
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: MaybeUninit,
                                                                                                                                    span: bytes(3029..3040),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::AngleBracketed {
                                                                                                                                    colon2_token: None,
                                                                                                                                    lt_token: Lt,
                                                                                                                                    args: [
                                                                                                                                        GenericArgument::Type(
                                                                                                                                            Type::Path {
                                                                                                                                                qself: None,
                                                                                                                                                path: Path {
                                                                                                                                                    leading_colon: None,
                                                                                                                                                    segments: [
                                                                                                                                                        PathSegment {
                                                                                                                                                            ident: Ident {
                                                                                                                                                                sym: u8,
                                                                                                                                                                span: bytes(3041..3043),
                                                                                                                                                            },
                                                                                                                                                            arguments: PathArguments::None,
                                                                                                                                                        },
                                                                                                                                                    ],
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                        ),
                                                                                                                                    ],
                                                                                                                                    gt_token: Gt,
                                                                                                                                },
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                                semi_token: Semi,
                                                                                                                len: Expr::Path {
                                                                                                                    attrs: [],
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: i128,
                                                                                                                                    span: bytes(3046..3050),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                            PathSep,
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: MAX_STR_LEN,
                                                                                                                                    span: bytes(3052..3063),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                            },
                                                                                                        },
                                                                                                    },
                                                                                                    as_token: As,
                                                                                                    ty: Type::Ptr {
                                                                                                        star_token: Star,
                                                                                                        const_token: None,
                                                                                                        mutability: Some(
                                                                                                            Mut,
                                                                                                        ),
                                                                                                        elem: Type::Path {
                                                                                                            qself: Some(
                                                                                                                QSelf {
                                                                                                                    lt_token: Lt,
                                                                                                                    ty: Type::Path {
                                                                                                                        qself: None,
                                                                                                                        path: Path {
                                                                                                                            leading_colon: None,
                                                                                                                            segments: [
                                                                                                                                PathSegment {
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: I,
                                                                                                                                        span: bytes(3090..3091),
                                                                                                                                    },
                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                },
                                                                                                                            ],
                                                                                                                        },
                                                                                                                    },
                                                                                                                    position: 2,
                                                                                                                    as_token: Some(
                                                                                                                        As,
                                                                                                                    ),
                                                                                                                    gt_token: Gt,
                                                                                                                },
                                                                                                            ),
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: private,
                                                                                                                            span: bytes(3095..3102),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                    PathSep,
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: Sealed,
                                                                                                                            span: bytes(3104..3110),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                    PathSep,
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: Buffer,
                                                                                                                            span: bytes(3113..3119),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                    None,
                                                                                ),
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Expr(
                                                    Expr::If {
                                                        attrs: [],
                                                        if_token: If,
                                                        cond: Expr::Binary {
                                                            attrs: [],
                                                            left: Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: string,
                                                                                    span: bytes(3144..3150),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: len,
                                                                    span: bytes(3151..3154),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [],
                                                            },
                                                            op: BinOp::Gt(
                                                                Gt,
                                                            ),
                                                            right: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: I,
                                                                                span: bytes(3159..3160),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                        PathSep,
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: MAX_STR_LEN,
                                                                                span: bytes(3162..3173),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                        then_branch: Block {
                                                            brace_token: Brace,
                                                            stmts: [
                                                                Stmt::Expr(
                                                                    Expr::Unsafe {
                                                                        attrs: [],
                                                                        unsafe_token: Unsafe,
                                                                        block: Block {
                                                                            brace_token: Brace,
                                                                            stmts: [
                                                                                Stmt::Expr(
                                                                                    Expr::Call {
                                                                                        attrs: [],
                                                                                        func: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: hint,
                                                                                                            span: bytes(3197..3201),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                    PathSep,
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: unreachable_unchecked,
                                                                                                            span: bytes(3203..3224),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        paren_token: Paren,
                                                                                        args: [],
                                                                                    },
                                                                                    None,
                                                                                ),
                                                                            ],
                                                                        },
                                                                    },
                                                                    Some(
                                                                        Semi,
                                                                    ),
                                                                ),
                                                            ],
                                                        },
                                                        else_branch: None,
                                                    },
                                                    None,
                                                ),
                                                Stmt::Expr(
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: string,
                                                                        span: bytes(3248..3254),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: PubT,
                                is_constructor: false,
                            },
                        ],
                        relative_types: [],
                    },
                ],
                functions: [],
                traits: [
                    TraitItem {
                        trait_name: Name {
                            name: "Integer",
                            complete_name: "itoa::Integer",
                            import_name: MyPath {
                                name: "itoa",
                                next: Some(
                                    MyPath {
                                        name: "Integer",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        item: Some(
                            ItemTrait {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                unsafety: None,
                                auto_token: None,
                                restriction: None,
                                trait_token: Trait,
                                ident: Ident {
                                    sym: Integer,
                                    span: bytes(3425..3432),
                                },
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                colon_token: Some(
                                    Colon,
                                ),
                                supertraits: [
                                    TypeParamBound::Trait(
                                        TraitBound {
                                            paren_token: None,
                                            modifier: TraitBoundModifier::None,
                                            lifetimes: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: private,
                                                            span: bytes(3434..3441),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                    PathSep,
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Sealed,
                                                            span: bytes(3443..3449),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                ],
                                brace_token: Brace,
                                items: [],
                            },
                        ),
                        types: [],
                        consts: [
                            TraitConstItem {
                                item: Some(
                                    TraitItemConst {
                                        attrs: [],
                                        const_token: Const,
                                        ident: Ident {
                                            sym: MAX_STR_LEN,
                                            span: bytes(3591..3602),
                                        },
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: usize,
                                                            span: bytes(3604..3609),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        default: None,
                                        semi_token: Semi,
                                    },
                                ),
                            },
                        ],
                        functions: [],
                        visibility: PubT,
                        relative_types: [
                            "Sealed",
                            "private",
                            "usize",
                        ],
                    },
                ],
                use_trees: [
                    UseTree {
                        use_name: "hint",
                        alias_name: None,
                        use_tree: MyPath {
                            name: "core",
                            next: Some(
                                MyPath {
                                    name: "hint",
                                    next: None,
                                },
                            ),
                        },
                        visibility: Pri,
                    },
                    UseTree {
                        use_name: "MaybeUninit",
                        alias_name: None,
                        use_tree: MyPath {
                            name: "core",
                            next: Some(
                                MyPath {
                                    name: "mem",
                                    next: Some(
                                        MyPath {
                                            name: "MaybeUninit",
                                            next: None,
                                        },
                                    ),
                                },
                            ),
                        },
                        visibility: Pri,
                    },
                    UseTree {
                        use_name: "ptr",
                        alias_name: None,
                        use_tree: MyPath {
                            name: "core",
                            next: Some(
                                MyPath {
                                    name: "ptr",
                                    next: None,
                                },
                            ),
                        },
                        visibility: Pri,
                    },
                    UseTree {
                        use_name: "slice",
                        alias_name: None,
                        use_tree: MyPath {
                            name: "core",
                            next: Some(
                                MyPath {
                                    name: "slice",
                                    next: None,
                                },
                            ),
                        },
                        visibility: Pri,
                    },
                    UseTree {
                        use_name: "str",
                        alias_name: None,
                        use_tree: MyPath {
                            name: "core",
                            next: Some(
                                MyPath {
                                    name: "str",
                                    next: None,
                                },
                            ),
                        },
                        visibility: Pri,
                    },
                    UseTree {
                        use_name: "no_panic",
                        alias_name: None,
                        use_tree: MyPath {
                            name: "no_panic",
                            next: Some(
                                MyPath {
                                    name: "no_panic",
                                    next: None,
                                },
                            ),
                        },
                        visibility: Pri,
                    },
                ],
            },
             sub_mods: [
                RefCell {
                    value: ModContext {
                     mod_info: Mod(
                        ModModInfo {
                            mod_name: "private",
                            mod_tree: MyPath {
                                name: "itoa",
                                next: Some(
                                    MyPath {
                                        name: "private",
                                        next: None,
                                    },
                                ),
                            },
                            file_path: "",
                            parent_directory_path: "",
                            mod_file_directory_path: None,
                            visibility: PubS,
                        },
                    ),
                     syntax_context: SyntaxContext {
                        consts: [],
                        trait_aliases: [],
                        uses: [],
                        mods: [],
                        statics: [],
                        types: [],
                        structs: [],
                        enums: [],
                        unions: [],
                        impls: [],
                        functions: [],
                        traits: [
                            TraitItem {
                                trait_name: Name {
                                    name: "Sealed",
                                    complete_name: "itoa::private::Sealed",
                                    import_name: MyPath {
                                        name: "itoa",
                                        next: Some(
                                            MyPath {
                                                name: "private",
                                                next: Some(
                                                    MyPath {
                                                        name: "Sealed",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                item: Some(
                                    ItemTrait {
                                        attrs: [],
                                        vis: Visibility::Public(
                                            Pub,
                                        ),
                                        unsafety: None,
                                        auto_token: None,
                                        restriction: None,
                                        trait_token: Trait,
                                        ident: Ident {
                                            sym: Sealed,
                                            span: bytes(3729..3735),
                                        },
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        colon_token: Some(
                                            Colon,
                                        ),
                                        supertraits: [
                                            TypeParamBound::Trait(
                                                TraitBound {
                                                    paren_token: None,
                                                    modifier: TraitBoundModifier::None,
                                                    lifetimes: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Copy,
                                                                    span: bytes(3737..3741),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        ],
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [
                                    TraitTypeItem {
                                        item: Some(
                                            TraitItemType {
                                                attrs: [],
                                                type_token: Type,
                                                ident: Ident {
                                                    sym: Buffer,
                                                    span: bytes(3780..3786),
                                                },
                                                generics: Generics {
                                                    lt_token: None,
                                                    params: [],
                                                    gt_token: None,
                                                    where_clause: None,
                                                },
                                                colon_token: Some(
                                                    Colon,
                                                ),
                                                bounds: [
                                                    TypeParamBound::Lifetime {
                                                        apostrophe: bytes(3788..3789),
                                                        ident: Ident {
                                                            sym: static,
                                                            span: bytes(3789..3795),
                                                        },
                                                    },
                                                ],
                                                default: None,
                                                semi_token: Semi,
                                            },
                                        ),
                                    },
                                ],
                                consts: [],
                                functions: [
                                    TraitFnItem {
                                        fn_name: Name {
                                            name: "write",
                                            complete_name: "<  as itoa::private::Sealed>::write",
                                            import_name: MyPath {
                                                name: "<  as itoa",
                                                next: Some(
                                                    MyPath {
                                                        name: "private",
                                                        next: Some(
                                                            MyPath {
                                                                name: "Sealed>",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "write",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "Sealed::write",
                                        item: Some(
                                            TraitItemFn {
                                                attrs: [],
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: write,
                                                        span: bytes(3808..3813),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: None,
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Self,
                                                                                    span: bytes(3814..3818),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: buf,
                                                                        span: bytes(3820..3823),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(3830..3834),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                                PathSep,
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Buffer,
                                                                                        span: bytes(3836..3842),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: None,
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: str,
                                                                                span: bytes(3848..3851),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    ),
                                                },
                                                default: None,
                                                semi_token: Some(
                                                    Semi,
                                                ),
                                            },
                                        ),
                                        inside_items: [],
                                        is_constructor: false,
                                    },
                                ],
                                visibility: PubT,
                                relative_types: [
                                    "Copy",
                                ],
                            },
                        ],
                        use_trees: [],
                    },
                     sub_mods: []
                     }
                    ,
                },
                RefCell {
                    value: ModContext {
                     mod_info: Mod(
                        ModModInfo {
                            mod_name: "udiv128",
                            mod_tree: MyPath {
                                name: "itoa",
                                next: Some(
                                    MyPath {
                                        name: "udiv128",
                                        next: None,
                                    },
                                ),
                            },
                            file_path: "/home/abezbm/rust-utgen-test-crates/itoa/src/udiv128.rs",
                            parent_directory_path: "/home/abezbm/rust-utgen-test-crates/itoa/src",
                            mod_file_directory_path: None,
                            visibility: PubS,
                        },
                    ),
                     syntax_context: SyntaxContext {
                        consts: [],
                        trait_aliases: [],
                        uses: [
                            UseItem {
                                item: Some(
                                    ItemUse {
                                        attrs: [
                                            Attribute {
                                                pound_token: Pound,
                                                style: AttrStyle::Outer,
                                                bracket_token: Bracket,
                                                meta: Meta::List {
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: cfg,
                                                                    span: bytes(11495..11498),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                    delimiter: MacroDelimiter::Paren(
                                                        Paren,
                                                    ),
                                                    tokens: TokenStream [
                                                        Ident {
                                                            sym: feature,
                                                            span: bytes(11499..11506),
                                                        },
                                                        Punct {
                                                            char: '=',
                                                            spacing: Alone,
                                                            span: bytes(11507..11508),
                                                        },
                                                        Literal {
                                                            lit: "no-panic",
                                                            span: bytes(11509..11519),
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                        vis: Visibility::Inherited,
                                        use_token: Use,
                                        leading_colon: None,
                                        tree: UseTree::Path(
                                            UsePath {
                                                ident: Ident {
                                                    sym: no_panic,
                                                    span: bytes(11526..11534),
                                                },
                                                colon2_token: PathSep,
                                                tree: UseTree::Name(
                                                    UseName {
                                                        ident: Ident {
                                                            sym: no_panic,
                                                            span: bytes(11536..11544),
                                                        },
                                                    },
                                                ),
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                ),
                                visibility: Pri,
                            },
                        ],
                        mods: [],
                        statics: [],
                        types: [],
                        structs: [],
                        enums: [],
                        unions: [],
                        impls: [],
                        functions: [
                            FnItem {
                                fn_name: Name {
                                    name: "u128_mulhi",
                                    complete_name: "itoa::udiv128::u128_mulhi",
                                    import_name: MyPath {
                                        name: "itoa",
                                        next: Some(
                                            MyPath {
                                                name: "udiv128",
                                                next: Some(
                                                    MyPath {
                                                        name: "u128_mulhi",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "u128_mulhi",
                                item: Some(
                                    ItemFn {
                                        attrs: [
                                            Attribute {
                                                pound_token: Pound,
                                                style: AttrStyle::Outer,
                                                bracket_token: Bracket,
                                                meta: Meta::Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: inline,
                                                                span: bytes(11625..11631),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            Attribute {
                                                pound_token: Pound,
                                                style: AttrStyle::Outer,
                                                bracket_token: Bracket,
                                                meta: Meta::List {
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: cfg_attr,
                                                                    span: bytes(11635..11643),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                    delimiter: MacroDelimiter::Paren(
                                                        Paren,
                                                    ),
                                                    tokens: TokenStream [
                                                        Ident {
                                                            sym: feature,
                                                            span: bytes(11644..11651),
                                                        },
                                                        Punct {
                                                            char: '=',
                                                            spacing: Alone,
                                                            span: bytes(11652..11653),
                                                        },
                                                        Literal {
                                                            lit: "no-panic",
                                                            span: bytes(11654..11664),
                                                        },
                                                        Punct {
                                                            char: ',',
                                                            spacing: Alone,
                                                            span: bytes(11664..11665),
                                                        },
                                                        Ident {
                                                            sym: no_panic,
                                                            span: bytes(11666..11674),
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                        vis: Visibility::Inherited,
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: u128_mulhi,
                                                span: bytes(11680..11690),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: x,
                                                                span: bytes(11691..11692),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: u128,
                                                                            span: bytes(11694..11698),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                ),
                                                Comma,
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: y,
                                                                span: bytes(11700..11701),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: u128,
                                                                            span: bytes(11703..11707),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u128,
                                                                    span: bytes(11712..11716),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: x_lo,
                                                            span: bytes(11727..11731),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::Cast {
                                                                attrs: [],
                                                                expr: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: x,
                                                                                    span: bytes(11734..11735),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                as_token: As,
                                                                ty: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: u64,
                                                                                    span: bytes(11739..11742),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: x_hi,
                                                            span: bytes(11752..11756),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::Cast {
                                                                attrs: [],
                                                                expr: Expr::Paren {
                                                                    attrs: [],
                                                                    paren_token: Paren,
                                                                    expr: Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: x,
                                                                                            span: bytes(11760..11761),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        op: BinOp::Shr(
                                                                            Shr,
                                                                        ),
                                                                        right: Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Int {
                                                                                token: 64,
                                                                            },
                                                                        },
                                                                    },
                                                                },
                                                                as_token: As,
                                                                ty: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: u64,
                                                                                    span: bytes(11772..11775),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: y_lo,
                                                            span: bytes(11785..11789),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::Cast {
                                                                attrs: [],
                                                                expr: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: y,
                                                                                    span: bytes(11792..11793),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                as_token: As,
                                                                ty: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: u64,
                                                                                    span: bytes(11797..11800),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: y_hi,
                                                            span: bytes(11810..11814),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::Cast {
                                                                attrs: [],
                                                                expr: Expr::Paren {
                                                                    attrs: [],
                                                                    paren_token: Paren,
                                                                    expr: Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: y,
                                                                                            span: bytes(11818..11819),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        op: BinOp::Shr(
                                                                            Shr,
                                                                        ),
                                                                        right: Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Int {
                                                                                token: 64,
                                                                            },
                                                                        },
                                                                    },
                                                                },
                                                                as_token: As,
                                                                ty: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: u64,
                                                                                    span: bytes(11830..11833),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: carry,
                                                            span: bytes(11882..11887),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Paren {
                                                                    attrs: [],
                                                                    paren_token: Paren,
                                                                    expr: Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Cast {
                                                                            attrs: [],
                                                                            expr: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: x_lo,
                                                                                                span: bytes(11891..11895),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            as_token: As,
                                                                            ty: Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: u128,
                                                                                                span: bytes(11899..11903),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        },
                                                                        op: BinOp::Mul(
                                                                            Star,
                                                                        ),
                                                                        right: Expr::Cast {
                                                                            attrs: [],
                                                                            expr: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: y_lo,
                                                                                                span: bytes(11906..11910),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            as_token: As,
                                                                            ty: Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: u128,
                                                                                                span: bytes(11914..11918),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        },
                                                                    },
                                                                },
                                                                op: BinOp::Shr(
                                                                    Shr,
                                                                ),
                                                                right: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 64,
                                                                    },
                                                                },
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: m,
                                                            span: bytes(11935..11936),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Binary {
                                                                    attrs: [],
                                                                    left: Expr::Cast {
                                                                        attrs: [],
                                                                        expr: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: x_lo,
                                                                                            span: bytes(11939..11943),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        as_token: As,
                                                                        ty: Type::Path {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: u128,
                                                                                            span: bytes(11947..11951),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                    op: BinOp::Mul(
                                                                        Star,
                                                                    ),
                                                                    right: Expr::Cast {
                                                                        attrs: [],
                                                                        expr: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: y_hi,
                                                                                            span: bytes(11954..11958),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        as_token: As,
                                                                        ty: Type::Path {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: u128,
                                                                                            span: bytes(11962..11966),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                },
                                                                op: BinOp::Add(
                                                                    Plus,
                                                                ),
                                                                right: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: carry,
                                                                                    span: bytes(11969..11974),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: high1,
                                                            span: bytes(11984..11989),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: m,
                                                                                    span: bytes(11992..11993),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                op: BinOp::Shr(
                                                                    Shr,
                                                                ),
                                                                right: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 64,
                                                                    },
                                                                },
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: m_lo,
                                                            span: bytes(12010..12014),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::Cast {
                                                                attrs: [],
                                                                expr: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: m,
                                                                                    span: bytes(12017..12018),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                as_token: As,
                                                                ty: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: u64,
                                                                                    span: bytes(12022..12025),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: high2,
                                                            span: bytes(12035..12040),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Paren {
                                                                    attrs: [],
                                                                    paren_token: Paren,
                                                                    expr: Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Binary {
                                                                            attrs: [],
                                                                            left: Expr::Cast {
                                                                                attrs: [],
                                                                                expr: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: x_hi,
                                                                                                    span: bytes(12044..12048),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                as_token: As,
                                                                                ty: Type::Path {
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: u128,
                                                                                                    span: bytes(12052..12056),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            },
                                                                            op: BinOp::Mul(
                                                                                Star,
                                                                            ),
                                                                            right: Expr::Cast {
                                                                                attrs: [],
                                                                                expr: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: y_lo,
                                                                                                    span: bytes(12059..12063),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                as_token: As,
                                                                                ty: Type::Path {
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: u128,
                                                                                                    span: bytes(12067..12071),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            },
                                                                        },
                                                                        op: BinOp::Add(
                                                                            Plus,
                                                                        ),
                                                                        right: Expr::Cast {
                                                                            attrs: [],
                                                                            expr: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: m_lo,
                                                                                                span: bytes(12074..12078),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            as_token: As,
                                                                            ty: Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: u128,
                                                                                                span: bytes(12082..12086),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        },
                                                                    },
                                                                },
                                                                op: BinOp::Shr(
                                                                    Shr,
                                                                ),
                                                                right: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 64,
                                                                    },
                                                                },
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Expr(
                                                    Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Binary {
                                                            attrs: [],
                                                            left: Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Cast {
                                                                    attrs: [],
                                                                    expr: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: x_hi,
                                                                                        span: bytes(12100..12104),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    as_token: As,
                                                                    ty: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: u128,
                                                                                        span: bytes(12108..12112),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                                op: BinOp::Mul(
                                                                    Star,
                                                                ),
                                                                right: Expr::Cast {
                                                                    attrs: [],
                                                                    expr: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: y_hi,
                                                                                        span: bytes(12115..12119),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    as_token: As,
                                                                    ty: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: u128,
                                                                                        span: bytes(12123..12127),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                            op: BinOp::Add(
                                                                Plus,
                                                            ),
                                                            right: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: high1,
                                                                                span: bytes(12130..12135),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                        op: BinOp::Add(
                                                            Plus,
                                                        ),
                                                        right: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: high2,
                                                                            span: bytes(12138..12143),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: Pri,
                            },
                            FnItem {
                                fn_name: Name {
                                    name: "udivmod_1e19",
                                    complete_name: "itoa::udiv128::udivmod_1e19",
                                    import_name: MyPath {
                                        name: "itoa",
                                        next: Some(
                                            MyPath {
                                                name: "udiv128",
                                                next: Some(
                                                    MyPath {
                                                        name: "udivmod_1e19",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "udivmod_1e19",
                                item: Some(
                                    ItemFn {
                                        attrs: [
                                            Attribute {
                                                pound_token: Pound,
                                                style: AttrStyle::Outer,
                                                bracket_token: Bracket,
                                                meta: Meta::Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: inline,
                                                                span: bytes(12489..12495),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            Attribute {
                                                pound_token: Pound,
                                                style: AttrStyle::Outer,
                                                bracket_token: Bracket,
                                                meta: Meta::List {
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: cfg_attr,
                                                                    span: bytes(12499..12507),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                    delimiter: MacroDelimiter::Paren(
                                                        Paren,
                                                    ),
                                                    tokens: TokenStream [
                                                        Ident {
                                                            sym: feature,
                                                            span: bytes(12508..12515),
                                                        },
                                                        Punct {
                                                            char: '=',
                                                            spacing: Alone,
                                                            span: bytes(12516..12517),
                                                        },
                                                        Literal {
                                                            lit: "no-panic",
                                                            span: bytes(12518..12528),
                                                        },
                                                        Punct {
                                                            char: ',',
                                                            spacing: Alone,
                                                            span: bytes(12528..12529),
                                                        },
                                                        Ident {
                                                            sym: no_panic,
                                                            span: bytes(12530..12538),
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                        vis: Visibility::Public(
                                            Pub,
                                        ),
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: udivmod_1e19,
                                                span: bytes(12548..12560),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: n,
                                                                span: bytes(12561..12562),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: u128,
                                                                            span: bytes(12564..12568),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Tuple {
                                                    paren_token: Paren,
                                                    elems: [
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: u128,
                                                                            span: bytes(12574..12578),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        Comma,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: u64,
                                                                            span: bytes(12580..12583),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ],
                                                },
                                            ),
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: d,
                                                            span: bytes(12595..12596),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::Lit {
                                                                attrs: [],
                                                                lit: Lit::Int {
                                                                    token: 10_000_000_000_000_000_000_u64,
                                                                },
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: quot,
                                                            span: bytes(12649..12653),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::If {
                                                                attrs: [],
                                                                if_token: If,
                                                                cond: Expr::Binary {
                                                                    attrs: [],
                                                                    left: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: n,
                                                                                        span: bytes(12659..12660),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    op: BinOp::Lt(
                                                                        Lt,
                                                                    ),
                                                                    right: Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Int {
                                                                                token: 1,
                                                                            },
                                                                        },
                                                                        op: BinOp::Shl(
                                                                            Shl,
                                                                        ),
                                                                        right: Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Int {
                                                                                token: 83,
                                                                            },
                                                                        },
                                                                    },
                                                                },
                                                                then_branch: Block {
                                                                    brace_token: Brace,
                                                                    stmts: [
                                                                        Stmt::Expr(
                                                                            Expr::Cast {
                                                                                attrs: [],
                                                                                expr: Expr::Paren {
                                                                                    attrs: [],
                                                                                    paren_token: Paren,
                                                                                    expr: Expr::Binary {
                                                                                        attrs: [],
                                                                                        left: Expr::Cast {
                                                                                            attrs: [],
                                                                                            expr: Expr::Paren {
                                                                                                attrs: [],
                                                                                                paren_token: Paren,
                                                                                                expr: Expr::Binary {
                                                                                                    attrs: [],
                                                                                                    left: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: n,
                                                                                                                        span: bytes(12683..12684),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    op: BinOp::Shr(
                                                                                                        Shr,
                                                                                                    ),
                                                                                                    right: Expr::Lit {
                                                                                                        attrs: [],
                                                                                                        lit: Lit::Int {
                                                                                                            token: 19,
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                            as_token: As,
                                                                                            ty: Type::Path {
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: u64,
                                                                                                                span: bytes(12695..12698),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                        op: BinOp::Div(
                                                                                            Slash,
                                                                                        ),
                                                                                        right: Expr::Paren {
                                                                                            attrs: [],
                                                                                            paren_token: Paren,
                                                                                            expr: Expr::Binary {
                                                                                                attrs: [],
                                                                                                left: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: d,
                                                                                                                    span: bytes(12702..12703),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                op: BinOp::Shr(
                                                                                                    Shr,
                                                                                                ),
                                                                                                right: Expr::Lit {
                                                                                                    attrs: [],
                                                                                                    lit: Lit::Int {
                                                                                                        token: 19,
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                },
                                                                                as_token: As,
                                                                                ty: Type::Path {
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: u128,
                                                                                                    span: bytes(12715..12719),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            },
                                                                            None,
                                                                        ),
                                                                    ],
                                                                },
                                                                else_branch: Some(
                                                                    (
                                                                        Else,
                                                                        Expr::Block {
                                                                            attrs: [],
                                                                            label: None,
                                                                            block: Block {
                                                                                brace_token: Brace,
                                                                                stmts: [
                                                                                    Stmt::Expr(
                                                                                        Expr::Binary {
                                                                                            attrs: [],
                                                                                            left: Expr::Call {
                                                                                                attrs: [],
                                                                                                func: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: u128_mulhi,
                                                                                                                    span: bytes(12741..12751),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                paren_token: Paren,
                                                                                                args: [
                                                                                                    Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: n,
                                                                                                                        span: bytes(12752..12753),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    Comma,
                                                                                                    Expr::Lit {
                                                                                                        attrs: [],
                                                                                                        lit: Lit::Int {
                                                                                                            token: 156927543384667019095894735580191660403,
                                                                                                        },
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                            op: BinOp::Shr(
                                                                                                Shr,
                                                                                            ),
                                                                                            right: Expr::Lit {
                                                                                                attrs: [],
                                                                                                lit: Lit::Int {
                                                                                                    token: 62,
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                        None,
                                                                                    ),
                                                                                ],
                                                                            },
                                                                        },
                                                                    ),
                                                                ),
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: rem,
                                                            span: bytes(12818..12821),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::Cast {
                                                                attrs: [],
                                                                expr: Expr::Paren {
                                                                    attrs: [],
                                                                    paren_token: Paren,
                                                                    expr: Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: n,
                                                                                            span: bytes(12825..12826),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        op: BinOp::Sub(
                                                                            Minus,
                                                                        ),
                                                                        right: Expr::Binary {
                                                                            attrs: [],
                                                                            left: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: quot,
                                                                                                span: bytes(12829..12833),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            op: BinOp::Mul(
                                                                                Star,
                                                                            ),
                                                                            right: Expr::Cast {
                                                                                attrs: [],
                                                                                expr: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: d,
                                                                                                    span: bytes(12836..12837),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                as_token: As,
                                                                                ty: Type::Path {
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: u128,
                                                                                                    span: bytes(12841..12845),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            },
                                                                        },
                                                                    },
                                                                },
                                                                as_token: As,
                                                                ty: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: u64,
                                                                                    span: bytes(12850..12853),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Macro {
                                                    attrs: [],
                                                    mac: Macro {
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: debug_assert_eq,
                                                                        span: bytes(12859..12874),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                        bang_token: Not,
                                                        delimiter: MacroDelimiter::Paren(
                                                            Paren,
                                                        ),
                                                        tokens: TokenStream [
                                                            Ident {
                                                                sym: quot,
                                                                span: bytes(12876..12880),
                                                            },
                                                            Punct {
                                                                char: ',',
                                                                spacing: Alone,
                                                                span: bytes(12880..12881),
                                                            },
                                                            Ident {
                                                                sym: n,
                                                                span: bytes(12882..12883),
                                                            },
                                                            Punct {
                                                                char: '/',
                                                                spacing: Alone,
                                                                span: bytes(12884..12885),
                                                            },
                                                            Ident {
                                                                sym: d,
                                                                span: bytes(12886..12887),
                                                            },
                                                            Ident {
                                                                sym: as,
                                                                span: bytes(12888..12890),
                                                            },
                                                            Ident {
                                                                sym: u128,
                                                                span: bytes(12891..12895),
                                                            },
                                                        ],
                                                    },
                                                    semi_token: Some(
                                                        Semi,
                                                    ),
                                                },
                                                Stmt::Macro {
                                                    attrs: [],
                                                    mac: Macro {
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: debug_assert_eq,
                                                                        span: bytes(12902..12917),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                        bang_token: Not,
                                                        delimiter: MacroDelimiter::Paren(
                                                            Paren,
                                                        ),
                                                        tokens: TokenStream [
                                                            Ident {
                                                                sym: rem,
                                                                span: bytes(12919..12922),
                                                            },
                                                            Ident {
                                                                sym: as,
                                                                span: bytes(12923..12925),
                                                            },
                                                            Ident {
                                                                sym: u128,
                                                                span: bytes(12926..12930),
                                                            },
                                                            Punct {
                                                                char: ',',
                                                                spacing: Alone,
                                                                span: bytes(12930..12931),
                                                            },
                                                            Ident {
                                                                sym: n,
                                                                span: bytes(12932..12933),
                                                            },
                                                            Punct {
                                                                char: '%',
                                                                spacing: Alone,
                                                                span: bytes(12934..12935),
                                                            },
                                                            Ident {
                                                                sym: d,
                                                                span: bytes(12936..12937),
                                                            },
                                                            Ident {
                                                                sym: as,
                                                                span: bytes(12938..12940),
                                                            },
                                                            Ident {
                                                                sym: u128,
                                                                span: bytes(12941..12945),
                                                            },
                                                        ],
                                                    },
                                                    semi_token: Some(
                                                        Semi,
                                                    ),
                                                },
                                                Stmt::Expr(
                                                    Expr::Tuple {
                                                        attrs: [],
                                                        paren_token: Paren,
                                                        elems: [
                                                            Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: quot,
                                                                                span: bytes(12954..12958),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            Comma,
                                                            Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: rem,
                                                                                span: bytes(12960..12963),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: PubT,
                            },
                        ],
                        traits: [],
                        use_trees: [
                            UseTree {
                                use_name: "no_panic",
                                alias_name: None,
                                use_tree: MyPath {
                                    name: "no_panic",
                                    next: Some(
                                        MyPath {
                                            name: "no_panic",
                                            next: None,
                                        },
                                    ),
                                },
                                visibility: Pri,
                            },
                        ],
                    },
                     sub_mods: []
                     }
                    ,
                },
            ]
             }
            ,
        },
    ],
}