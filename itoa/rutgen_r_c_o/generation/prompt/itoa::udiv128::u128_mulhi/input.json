{
  "system_pt": "As a software testing expert, infer the test input conditions or ranges based on the provided information. Follow these guidelines:\n1. Provide test input conditions or ranges in one line in plain text only, without additional explanations or Markdown formatting\n2. Analyze the function under test, context, preconditions, and expected return values or types to determine appropriate test input conditions or ranges\n3. The inferred test input conditions or ranges should comprehensively satisfy all provided preconditions simultaneously.\n4. Ensure the test input conditions or ranges cover boundary cases and edge scenarios\n",
  "static_pt": "The context for the focal function is as follows:\n// src/udiv128.rs\n// crate name is itoa\n#[cfg(feature = \"no-panic\")]\nuse no_panic::no_panic;\n#[inline]\n#[cfg_attr(feature = \"no-panic\", no_panic)]\nfn u128_mulhi(x: u128, y: u128) -> u128 {\n    let x_lo = x as u64;\n    let x_hi = (x >> 64) as u64;\n    let y_lo = y as u64;\n    let y_hi = (y >> 64) as u64;\n    let carry = (x_lo as u128 * y_lo as u128) >> 64;\n    let m = x_lo as u128 * y_hi as u128 + carry;\n    let high1 = m >> 64;\n    let m_lo = m as u64;\n    let high2 = (x_hi as u128 * y_lo as u128 + m_lo as u128) >> 64;\n    x_hi as u128 * y_hi as u128 + high1 + high2\n}\n\nThe function to be tested is presented with each line formatted as 'line number + code':\n/// Multiply unsigned 128 bit integers, return upper 128 bits of the result\n 7 fn u128_mulhi(x: u128, y: u128) -> u128 {\n 8     let x_lo = x as u64;\n 9     let x_hi = (x >> 64) as u64;\n10     let y_lo = y as u64;\n11     let y_hi = (y >> 64) as u64;\n12 \n13     // handle possibility of overflow\n14     let carry = (x_lo as u128 * y_lo as u128) >> 64;\n15     let m = x_lo as u128 * y_hi as u128 + carry;\n16     let high1 = m >> 64;\n17 \n18     let m_lo = m as u64;\n19     let high2 = (x_hi as u128 * y_lo as u128 + m_lo as u128) >> 64;\n20 \n21     x_hi as u128 * y_hi as u128 + high1 + high2\n22 }\n\nWhen inferring test input conditions or ranges, consider the following preconditions and expected return values or types:\n"
}