{
  "system_pt": "As a software testing expert, please generate accurate test oracles code based on the provided information. Follow these guidelines:\n1. Generate executable test oracle codes in plain text format, one per line. Do not output complete test functions, avoid additional explanations, and do not use Markdown.\n2. Combine the given function under test, context, relevant documentation, preconditions, expected return values or types, test input conditions or ranges, and existing test function prefixes to infer and generate corresponding test oracles code.\n3. Only generate necessary test oracles to ensure comprehensive validation.\n",
  "static_pt": "The context for the focal function is as follows:\n// src/udiv128.rs\n// crate name is itoa\n#[cfg(feature = \"no-panic\")]\nuse no_panic::no_panic;\n#[inline]\n#[cfg_attr(feature = \"no-panic\", no_panic)]\nfn u128_mulhi(x: u128, y: u128) -> u128 {\n    let x_lo = x as u64;\n    let x_hi = (x >> 64) as u64;\n    let y_lo = y as u64;\n    let y_hi = (y >> 64) as u64;\n    let carry = (x_lo as u128 * y_lo as u128) >> 64;\n    let m = x_lo as u128 * y_hi as u128 + carry;\n    let high1 = m >> 64;\n    let m_lo = m as u64;\n    let high2 = (x_hi as u128 * y_lo as u128 + m_lo as u128) >> 64;\n    x_hi as u128 * y_hi as u128 + high1 + high2\n}\n\nThe function to be tested is presented with each line formatted as 'line number + code':\n/// Multiply unsigned 128 bit integers, return upper 128 bits of the result\n 7 fn u128_mulhi(x: u128, y: u128) -> u128 {\n 8     let x_lo = x as u64;\n 9     let x_hi = (x >> 64) as u64;\n10     let y_lo = y as u64;\n11     let y_hi = (y >> 64) as u64;\n12 \n13     // handle possibility of overflow\n14     let carry = (x_lo as u128 * y_lo as u128) >> 64;\n15     let m = x_lo as u128 * y_hi as u128 + carry;\n16     let high1 = m >> 64;\n17 \n18     let m_lo = m as u64;\n19     let high2 = (x_hi as u128 * y_lo as u128 + m_lo as u128) >> 64;\n20 \n21     x_hi as u128 * y_hi as u128 + high1 + high2\n22 }\n\nThe path conditions that the generated test functions should satisfy are as follows:\n"
}