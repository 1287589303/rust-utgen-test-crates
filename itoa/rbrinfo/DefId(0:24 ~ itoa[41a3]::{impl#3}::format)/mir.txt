bb0
  0: StorageLive(_3)
    SourceInfo(src/lib.rs:98:13-98:19)
  1: StorageLive(_4)
    SourceInfo(src/lib.rs:98:22-98:23)
  2: _4 = _2
    SourceInfo(src/lib.rs:98:22-98:23)
  3: StorageLive(_5)
    SourceInfo(src/lib.rs:99:13-100:56)
  4: StorageLive(_6)
    SourceInfo(src/lib.rs:99:13-100:56)
  5: StorageLive(_7)
    SourceInfo(src/lib.rs:99:13-100:56)
  6: StorageLive(_8)
    SourceInfo(src/lib.rs:99:19-100:56)
  7: StorageLive(_9)
    SourceInfo(src/lib.rs:99:20-99:80)
  8: StorageLive(_10)
    SourceInfo(src/lib.rs:99:20-99:80)
  9: StorageLive(_11)
    SourceInfo(src/lib.rs:99:20-99:35)
  10: _11 = &mut ((*_1).0: [core::mem::MaybeUninit<u8>; 40])
    SourceInfo(src/lib.rs:99:20-99:35)
  11: _10 = &raw mut (*_11)
    SourceInfo(src/lib.rs:99:20-99:35)
  12: AscribeUserType(_10, o, UserTypeProjection { base: UserType(0), projs: [] })
    SourceInfo(src/lib.rs:99:20-99:80)
  13: _9 = _10
    SourceInfo(src/lib.rs:99:20-99:80)
  14: _8 = move _9 as *mut <I as private::Sealed>::Buffer (PtrToPtr)
    SourceInfo(src/lib.rs:99:19-100:56)
  15: AscribeUserType(_8, o, UserTypeProjection { base: UserType(1), projs: [] })
    SourceInfo(src/lib.rs:99:19-100:56)
  16: StorageDead(_9)
    SourceInfo(src/lib.rs:100:55-100:56)
  17: _7 = &mut (*_8)
    SourceInfo(src/lib.rs:99:13-100:56)
  18: _6 = &mut (*_7)
    SourceInfo(src/lib.rs:99:13-100:56)
  19: _5 = &mut (*_6)
    SourceInfo(src/lib.rs:99:13-100:56)
  Terminator {
      source_info: SourceInfo(src/lib.rs:98:22-101:11)
      kind: _3 = <I as private::Sealed>::write(move _4, move _5) -> [return: bb1, unwind: bb5]
  }
  preds []
  succs [bb1, bb5]

bb1
  0: StorageDead(_5)
    SourceInfo(src/lib.rs:101:10-101:11)
  1: StorageDead(_4)
    SourceInfo(src/lib.rs:101:10-101:11)
  2: FakeRead(ForLet(None), _3)
    SourceInfo(src/lib.rs:98:13-98:19)
  3: StorageDead(_11)
    SourceInfo(src/lib.rs:101:11-101:12)
  4: StorageDead(_10)
    SourceInfo(src/lib.rs:101:11-101:12)
  5: StorageDead(_8)
    SourceInfo(src/lib.rs:101:11-101:12)
  6: StorageDead(_7)
    SourceInfo(src/lib.rs:101:11-101:12)
  7: StorageDead(_6)
    SourceInfo(src/lib.rs:101:11-101:12)
  8: StorageLive(_12)
    SourceInfo(src/lib.rs:102:9-104:10)
  9: StorageLive(_13)
    SourceInfo(src/lib.rs:102:12-102:41)
  10: StorageLive(_14)
    SourceInfo(src/lib.rs:102:12-102:24)
  11: StorageLive(_15)
    SourceInfo(src/lib.rs:102:12-102:18)
  12: _15 = &(*_3)
    SourceInfo(src/lib.rs:102:12-102:18)
  Terminator {
      source_info: SourceInfo(src/lib.rs:102:12-102:24)
      kind: _14 = core::str::<impl str>::len(move _15) -> [return: bb2, unwind: bb5]
  }
  preds [bb0]
  succs [bb2, bb5]

bb2
  0: StorageDead(_15)
    SourceInfo(src/lib.rs:102:23-102:24)
  1: _13 = Gt(move _14, const <I as Integer>::MAX_STR_LEN)
    SourceInfo(src/lib.rs:102:12-102:41)
  Terminator {
      source_info: SourceInfo(src/lib.rs:102:12-102:41)
      kind: switchInt(move _13) -> [0: bb4, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4]

bb3
  0: StorageDead(_14)
    SourceInfo(src/lib.rs:102:40-102:41)
  1: StorageLive(_17)
    SourceInfo(src/lib.rs:103:13-103:53)
  2: StorageLive(_18)
    SourceInfo(src/lib.rs:103:22-103:51)
  Terminator {
      source_info: SourceInfo(src/lib.rs:103:22-103:51)
      kind: _18 = core::hint::unreachable_unchecked() -> bb5
  }
  preds [bb2]
  succs [bb5]

bb4
  0: StorageDead(_14)
    SourceInfo(src/lib.rs:102:40-102:41)
  1: _12 = const ()
    SourceInfo(src/lib.rs:104:10-104:10)
  2: StorageDead(_13)
    SourceInfo(src/lib.rs:104:9-104:10)
  3: StorageDead(_12)
    SourceInfo(src/lib.rs:104:9-104:10)
  4: _0 = &(*_3)
    SourceInfo(src/lib.rs:105:9-105:15)
  5: StorageDead(_3)
    SourceInfo(src/lib.rs:106:5-106:6)
  Terminator {
      source_info: SourceInfo(src/lib.rs:106:6-106:6)
      kind: return
  }
  preds [bb2]
  succs []

bb5
  Terminator {
      source_info: SourceInfo(src/lib.rs:97:5-106:6)
      kind: resume
  }
  preds [bb0, bb1, bb3]
  succs []

