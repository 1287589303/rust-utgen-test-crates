{
  "name": "itoa::udiv128::u128_mulhi",
  "mod_info": {
    "name": "udiv128",
    "loc": "src/lib.rs:45:1:45:13"
  },
  "visible": false,
  "loc": "src/udiv128.rs:7:1:22:2",
  "doc": "/// Multiply unsigned 128 bit integers, return upper 128 bits of the result\n",
  "code": [
    "fn u128_mulhi(x: u128, y: u128) -> u128 {",
    "    let x_lo = x as u64;",
    "    let x_hi = (x >> 64) as u64;",
    "    let y_lo = y as u64;",
    "    let y_hi = (y >> 64) as u64;",
    "",
    "    // handle possibility of overflow",
    "    let carry = (x_lo as u128 * y_lo as u128) >> 64;",
    "    let m = x_lo as u128 * y_hi as u128 + carry;",
    "    let high1 = m >> 64;",
    "",
    "    let m_lo = m as u64;",
    "    let high2 = (x_hi as u128 * y_lo as u128 + m_lo as u128) >> 64;",
    "",
    "    x_hi as u128 * y_hi as u128 + high1 + high2",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "x_hi as u128 * y_hi as u128 + high1 + high2",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}