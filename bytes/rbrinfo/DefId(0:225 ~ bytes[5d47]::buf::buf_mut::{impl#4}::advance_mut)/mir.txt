bb0
  0: StorageLive(_3)
    SourceInfo(src/buf/buf_mut.rs:1608:13-1608:16)
  1: StorageLive(_4)
    SourceInfo(src/buf/buf_mut.rs:1608:19-1608:23)
  2: _4 = &(*_1)
    SourceInfo(src/buf/buf_mut.rs:1608:19-1608:23)
  Terminator {
      source_info: SourceInfo(src/buf/buf_mut.rs:1608:19-1608:29)
      kind: _3 = alloc::vec::Vec::<u8>::len(move _4) -> [return: bb1, unwind: bb8]
  }
  preds []
  succs [bb1, bb8]

bb1
  0: StorageDead(_4)
    SourceInfo(src/buf/buf_mut.rs:1608:28-1608:29)
  1: FakeRead(ForLet(None), _3)
    SourceInfo(src/buf/buf_mut.rs:1608:13-1608:16)
  2: StorageLive(_5)
    SourceInfo(src/buf/buf_mut.rs:1609:13-1609:22)
  3: StorageLive(_6)
    SourceInfo(src/buf/buf_mut.rs:1609:25-1609:40)
  4: StorageLive(_7)
    SourceInfo(src/buf/buf_mut.rs:1609:25-1609:29)
  5: _7 = &(*_1)
    SourceInfo(src/buf/buf_mut.rs:1609:25-1609:29)
  Terminator {
      source_info: SourceInfo(src/buf/buf_mut.rs:1609:25-1609:40)
      kind: _6 = alloc::vec::Vec::<u8>::capacity(move _7) -> [return: bb2, unwind: bb8]
  }
  preds [bb0]
  succs [bb2, bb8]

bb2
  0: StorageDead(_7)
    SourceInfo(src/buf/buf_mut.rs:1609:39-1609:40)
  1: StorageLive(_8)
    SourceInfo(src/buf/buf_mut.rs:1609:43-1609:46)
  2: _8 = _3
    SourceInfo(src/buf/buf_mut.rs:1609:43-1609:46)
  3: _9 = SubWithOverflow(_6, _8)
    SourceInfo(src/buf/buf_mut.rs:1609:25-1609:46)
  Terminator {
      source_info: SourceInfo(src/buf/buf_mut.rs:1609:25-1609:46)
      kind: assert(!move (_9.1: bool), "attempt to compute `{} - {}`, which would overflow", move _6, move _8) -> [success: bb3, unwind: bb8]
  }
  preds [bb1]
  succs [bb3, bb8]

bb3
  0: _5 = move (_9.0: usize)
    SourceInfo(src/buf/buf_mut.rs:1609:25-1609:46)
  1: StorageDead(_8)
    SourceInfo(src/buf/buf_mut.rs:1609:45-1609:46)
  2: StorageDead(_6)
    SourceInfo(src/buf/buf_mut.rs:1609:45-1609:46)
  3: FakeRead(ForLet(None), _5)
    SourceInfo(src/buf/buf_mut.rs:1609:13-1609:22)
  4: StorageLive(_10)
    SourceInfo(src/buf/buf_mut.rs:1611:9-1616:10)
  5: StorageLive(_11)
    SourceInfo(src/buf/buf_mut.rs:1611:12-1611:27)
  6: StorageLive(_12)
    SourceInfo(src/buf/buf_mut.rs:1611:12-1611:21)
  7: _12 = _5
    SourceInfo(src/buf/buf_mut.rs:1611:12-1611:21)
  8: StorageLive(_13)
    SourceInfo(src/buf/buf_mut.rs:1611:24-1611:27)
  9: _13 = _2
    SourceInfo(src/buf/buf_mut.rs:1611:24-1611:27)
  10: _11 = Lt(move _12, move _13)
    SourceInfo(src/buf/buf_mut.rs:1611:12-1611:27)
  Terminator {
      source_info: SourceInfo(src/buf/buf_mut.rs:1611:12-1611:27)
      kind: switchInt(move _11) -> [0: bb5, otherwise: bb4]
  }
  preds [bb2]
  succs [bb4, bb5]

bb4
  0: StorageDead(_13)
    SourceInfo(src/buf/buf_mut.rs:1611:26-1611:27)
  1: StorageDead(_12)
    SourceInfo(src/buf/buf_mut.rs:1611:26-1611:27)
  2: StorageLive(_15)
    SourceInfo(src/buf/buf_mut.rs:1612:13-1615:15)
  3: StorageLive(_16)
    SourceInfo(src/buf/buf_mut.rs:1612:27-1615:14)
  4: StorageLive(_17)
    SourceInfo(src/buf/buf_mut.rs:1612:27-1615:14)
  5: StorageLive(_18)
    SourceInfo(src/buf/buf_mut.rs:1612:28-1615:14)
  6: StorageLive(_19)
    SourceInfo(src/buf/buf_mut.rs:1613:28-1613:31)
  7: _19 = _2
    SourceInfo(src/buf/buf_mut.rs:1613:28-1613:31)
  8: StorageLive(_20)
    SourceInfo(src/buf/buf_mut.rs:1614:28-1614:37)
  9: _20 = _5
    SourceInfo(src/buf/buf_mut.rs:1614:28-1614:37)
  10: _18 = TryGetError { requested: move _19, available: move _20 }
    SourceInfo(src/buf/buf_mut.rs:1612:28-1615:14)
  11: StorageDead(_20)
    SourceInfo(src/buf/buf_mut.rs:1615:13-1615:14)
  12: StorageDead(_19)
    SourceInfo(src/buf/buf_mut.rs:1615:13-1615:14)
  13: _17 = &_18
    SourceInfo(src/buf/buf_mut.rs:1612:27-1615:14)
  14: _16 = &(*_17)
    SourceInfo(src/buf/buf_mut.rs:1612:27-1615:14)
  Terminator {
      source_info: SourceInfo(src/buf/buf_mut.rs:1612:13-1615:15)
      kind: _15 = panic_advance(move _16) -> bb8
  }
  preds [bb3]
  succs [bb8]

bb5
  0: StorageDead(_13)
    SourceInfo(src/buf/buf_mut.rs:1611:26-1611:27)
  1: StorageDead(_12)
    SourceInfo(src/buf/buf_mut.rs:1611:26-1611:27)
  2: _10 = const ()
    SourceInfo(src/buf/buf_mut.rs:1616:10-1616:10)
  3: StorageDead(_11)
    SourceInfo(src/buf/buf_mut.rs:1616:9-1616:10)
  4: StorageDead(_10)
    SourceInfo(src/buf/buf_mut.rs:1616:9-1616:10)
  5: StorageLive(_21)
    SourceInfo(src/buf/buf_mut.rs:1619:9-1619:32)
  6: StorageLive(_22)
    SourceInfo(src/buf/buf_mut.rs:1619:9-1619:13)
  7: _22 = &mut (*_1)
    SourceInfo(src/buf/buf_mut.rs:1619:9-1619:13)
  8: StorageLive(_23)
    SourceInfo(src/buf/buf_mut.rs:1619:22-1619:31)
  9: StorageLive(_24)
    SourceInfo(src/buf/buf_mut.rs:1619:22-1619:25)
  10: _24 = _3
    SourceInfo(src/buf/buf_mut.rs:1619:22-1619:25)
  11: StorageLive(_25)
    SourceInfo(src/buf/buf_mut.rs:1619:28-1619:31)
  12: _25 = _2
    SourceInfo(src/buf/buf_mut.rs:1619:28-1619:31)
  13: _26 = AddWithOverflow(_24, _25)
    SourceInfo(src/buf/buf_mut.rs:1619:22-1619:31)
  Terminator {
      source_info: SourceInfo(src/buf/buf_mut.rs:1619:22-1619:31)
      kind: assert(!move (_26.1: bool), "attempt to compute `{} + {}`, which would overflow", move _24, move _25) -> [success: bb6, unwind: bb8]
  }
  preds [bb3]
  succs [bb6, bb8]

bb6
  0: _23 = move (_26.0: usize)
    SourceInfo(src/buf/buf_mut.rs:1619:22-1619:31)
  1: StorageDead(_25)
    SourceInfo(src/buf/buf_mut.rs:1619:30-1619:31)
  2: StorageDead(_24)
    SourceInfo(src/buf/buf_mut.rs:1619:30-1619:31)
  Terminator {
      source_info: SourceInfo(src/buf/buf_mut.rs:1619:9-1619:32)
      kind: _21 = alloc::vec::Vec::<u8>::set_len(move _22, move _23) -> [return: bb7, unwind: bb8]
  }
  preds [bb5]
  succs [bb7, bb8]

bb7
  0: StorageDead(_23)
    SourceInfo(src/buf/buf_mut.rs:1619:31-1619:32)
  1: StorageDead(_22)
    SourceInfo(src/buf/buf_mut.rs:1619:31-1619:32)
  2: StorageDead(_21)
    SourceInfo(src/buf/buf_mut.rs:1619:32-1619:33)
  3: _0 = const ()
    SourceInfo(src/buf/buf_mut.rs:1607:50-1620:6)
  4: StorageDead(_5)
    SourceInfo(src/buf/buf_mut.rs:1620:5-1620:6)
  5: StorageDead(_3)
    SourceInfo(src/buf/buf_mut.rs:1620:5-1620:6)
  Terminator {
      source_info: SourceInfo(src/buf/buf_mut.rs:1620:6-1620:6)
      kind: return
  }
  preds [bb6]
  succs []

bb8
  Terminator {
      source_info: SourceInfo(src/buf/buf_mut.rs:1607:5-1620:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb4, bb5, bb6]
  succs []

