bb0
  0: StorageLive(_6)
    SourceInfo(src/bytes.rs:1511:9-1511:15)
  1: StorageLive(_7)
    SourceInfo(src/bytes.rs:1511:27-1518:6)
  2: StorageLive(_8)
    SourceInfo(src/bytes.rs:1512:9-1512:12)
  3: _8 = _3
    SourceInfo(src/bytes.rs:1512:9-1512:12)
  4: StorageLive(_9)
    SourceInfo(src/bytes.rs:1513:14-1513:44)
  5: StorageLive(_10)
    SourceInfo(src/bytes.rs:1513:14-1513:38)
  6: StorageLive(_11)
    SourceInfo(src/bytes.rs:1513:26-1513:32)
  7: _11 = _4
    SourceInfo(src/bytes.rs:1513:26-1513:32)
  8: StorageLive(_12)
    SourceInfo(src/bytes.rs:1513:34-1513:37)
  9: StorageLive(_13)
    SourceInfo(src/bytes.rs:1513:34-1513:37)
  10: _13 = _3
    SourceInfo(src/bytes.rs:1513:34-1513:37)
  11: _12 = move _13 as *const u8 (PointerCoercion(MutToConstPointer))
    SourceInfo(src/bytes.rs:1513:34-1513:37)
  12: StorageDead(_13)
    SourceInfo(src/bytes.rs:1513:36-1513:37)
  Terminator {
      source_info: SourceInfo(src/bytes.rs:1513:14-1513:38)
      kind: _10 = offset_from(move _11, move _12) -> [return: bb1, unwind: bb33]
  }
  preds []
  succs [bb1, bb33]

bb1
  0: StorageDead(_12)
    SourceInfo(src/bytes.rs:1513:37-1513:38)
  1: StorageDead(_11)
    SourceInfo(src/bytes.rs:1513:37-1513:38)
  2: StorageLive(_14)
    SourceInfo(src/bytes.rs:1513:41-1513:44)
  3: _14 = _5
    SourceInfo(src/bytes.rs:1513:41-1513:44)
  4: _15 = AddWithOverflow(_10, _14)
    SourceInfo(src/bytes.rs:1513:14-1513:44)
  Terminator {
      source_info: SourceInfo(src/bytes.rs:1513:14-1513:44)
      kind: assert(!move (_15.1: bool), "attempt to compute `{} + {}`, which would overflow", move _10, move _14) -> [success: bb2, unwind: bb33]
  }
  preds [bb0]
  succs [bb2, bb33]

bb2
  0: _9 = move (_15.0: usize)
    SourceInfo(src/bytes.rs:1513:14-1513:44)
  1: StorageDead(_14)
    SourceInfo(src/bytes.rs:1513:43-1513:44)
  2: StorageDead(_10)
    SourceInfo(src/bytes.rs:1513:43-1513:44)
  3: StorageLive(_16)
    SourceInfo(src/bytes.rs:1517:18-1517:37)
  Terminator {
      source_info: SourceInfo(src/bytes.rs:1517:18-1517:37)
      kind: _16 = core::sync::atomic::AtomicUsize::new(const 2_usize) -> [return: bb3, unwind: bb33]
  }
  preds [bb1]
  succs [bb3, bb33]

bb3
  0: _7 = bytes::Shared { buf: move _8, cap: move _9, ref_cnt: move _16 }
    SourceInfo(src/bytes.rs:1511:27-1518:6)
  1: StorageDead(_16)
    SourceInfo(src/bytes.rs:1518:5-1518:6)
  2: StorageDead(_9)
    SourceInfo(src/bytes.rs:1518:5-1518:6)
  3: StorageDead(_8)
    SourceInfo(src/bytes.rs:1518:5-1518:6)
  Terminator {
      source_info: SourceInfo(src/bytes.rs:1511:18-1518:7)
      kind: _6 = alloc::boxed::Box::<bytes::Shared>::new(move _7) -> [return: bb4, unwind: bb32]
  }
  preds [bb2]
  succs [bb4, bb32]

bb4
  0: StorageDead(_7)
    SourceInfo(src/bytes.rs:1518:6-1518:7)
  1: FakeRead(ForLet(None), _6)
    SourceInfo(src/bytes.rs:1511:9-1511:15)
  2: StorageLive(_17)
    SourceInfo(src/bytes.rs:1520:9-1520:15)
  3: StorageLive(_18)
    SourceInfo(src/bytes.rs:1520:32-1520:38)
  4: _18 = move _6
    SourceInfo(src/bytes.rs:1520:32-1520:38)
  Terminator {
      source_info: SourceInfo(src/bytes.rs:1520:18-1520:39)
      kind: _17 = alloc::boxed::Box::<bytes::Shared>::into_raw(move _18) -> [return: bb5, unwind: bb30]
  }
  preds [bb3]
  succs [bb5, bb30]

bb5
  0: StorageDead(_18)
    SourceInfo(src/bytes.rs:1520:38-1520:39)
  1: FakeRead(ForLet(None), _17)
    SourceInfo(src/bytes.rs:1520:9-1520:15)
  2: StorageLive(_19)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
  3: StorageLive(_20)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
  4: _20 = const true
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
      kind: switchInt(move _20) -> [0: bb9, otherwise: bb6]
  }
  preds [bb4]
  succs [bb6, bb9]

bb6
  0: StorageLive(_21)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
  1: StorageLive(_22)
    SourceInfo(src/bytes.rs:1525:9-1525:43)
  2: StorageLive(_23)
    SourceInfo(src/bytes.rs:1525:14-1525:43)
  3: StorageLive(_24)
    SourceInfo(src/bytes.rs:1525:15-1525:30)
  4: StorageLive(_25)
    SourceInfo(src/bytes.rs:1525:15-1525:21)
  5: _25 = _17
    SourceInfo(src/bytes.rs:1525:15-1525:21)
  6: _24 = move _25 as usize (PointerExposeProvenance)
    SourceInfo(src/bytes.rs:1525:15-1525:30)
  7: StorageDead(_25)
    SourceInfo(src/bytes.rs:1525:29-1525:30)
  8: _23 = BitAnd(move _24, const bytes::KIND_MASK)
    SourceInfo(src/bytes.rs:1525:14-1525:43)
  9: StorageDead(_24)
    SourceInfo(src/bytes.rs:1525:42-1525:43)
  10: _22 = Eq(const 0_usize, move _23)
    SourceInfo(src/bytes.rs:1525:9-1525:43)
  Terminator {
      source_info: SourceInfo(src/bytes.rs:1525:9-1525:43)
      kind: switchInt(move _22) -> [0: bb8, otherwise: bb7]
  }
  preds [bb5]
  succs [bb7, bb8]

bb7
  0: StorageDead(_23)
    SourceInfo(src/bytes.rs:1525:42-1525:43)
  1: _21 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:38-317:38)
  2: StorageDead(_22)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:37-317:38)
  3: StorageDead(_21)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:37-317:38)
  4: _19 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:43-318:10)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
      kind: goto -> bb10
  }
  preds [bb6]
  succs [bb10]

bb8
  0: StorageDead(_23)
    SourceInfo(src/bytes.rs:1525:42-1525:43)
  1: StorageLive(_26)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:30:9-30:39)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:30:9-30:39)
      kind: _26 = core::panicking::panic(const "internal: Box<Shared> should have an aligned pointer") -> bb31
  }
  preds [bb6]
  succs [bb31]

bb9
  0: _19 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:10-318:10)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
      kind: goto -> bb10
  }
  preds [bb5]
  succs [bb10]

bb10
  0: StorageDead(_20)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:9-318:10)
  1: StorageDead(_19)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:9-318:10)
  2: StorageLive(_27)
    SourceInfo(src/bytes.rs:1538:11-1538:92)
  3: StorageLive(_28)
    SourceInfo(src/bytes.rs:1538:11-1538:15)
  4: _28 = &(*_1)
    SourceInfo(src/bytes.rs:1538:11-1538:15)
  5: StorageLive(_29)
    SourceInfo(src/bytes.rs:1538:33-1538:41)
  6: StorageLive(_30)
    SourceInfo(src/bytes.rs:1538:33-1538:41)
  7: StorageLive(_31)
    SourceInfo(src/bytes.rs:1538:33-1538:36)
  8: _31 = _2
    SourceInfo(src/bytes.rs:1538:33-1538:36)
  9: _30 = move _31 as *mut () (PtrToPtr)
    SourceInfo(src/bytes.rs:1538:33-1538:41)
  10: AscribeUserType(_30, o, UserTypeProjection { base: UserType(2), projs: [] })
    SourceInfo(src/bytes.rs:1538:33-1538:41)
  11: _29 = _30
    SourceInfo(src/bytes.rs:1538:33-1538:41)
  12: StorageDead(_31)
    SourceInfo(src/bytes.rs:1538:40-1538:41)
  13: StorageLive(_32)
    SourceInfo(src/bytes.rs:1538:43-1538:54)
  14: StorageLive(_33)
    SourceInfo(src/bytes.rs:1538:43-1538:54)
  15: StorageLive(_34)
    SourceInfo(src/bytes.rs:1538:43-1538:49)
  16: _34 = _17
    SourceInfo(src/bytes.rs:1538:43-1538:49)
  17: _33 = move _34 as *mut () (PtrToPtr)
    SourceInfo(src/bytes.rs:1538:43-1538:54)
  18: AscribeUserType(_33, o, UserTypeProjection { base: UserType(3), projs: [] })
    SourceInfo(src/bytes.rs:1538:43-1538:54)
  19: _32 = _33
    SourceInfo(src/bytes.rs:1538:43-1538:54)
  20: StorageDead(_34)
    SourceInfo(src/bytes.rs:1538:53-1538:54)
  21: StorageLive(_35)
    SourceInfo(src/bytes.rs:1538:56-1538:72)
  22: _35 = core::sync::atomic::Ordering::AcqRel
    SourceInfo(src/bytes.rs:1538:56-1538:72)
  23: StorageLive(_36)
    SourceInfo(src/bytes.rs:1538:74-1538:91)
  24: _36 = core::sync::atomic::Ordering::Acquire
    SourceInfo(src/bytes.rs:1538:74-1538:91)
  Terminator {
      source_info: SourceInfo(src/bytes.rs:1538:11-1538:92)
      kind: _27 = core::sync::atomic::AtomicPtr::<()>::compare_exchange(move _28, move _29, move _32, move _35, move _36) -> [return: bb11, unwind: bb31]
  }
  preds [bb7, bb9]
  succs [bb11, bb31]

bb11
  0: StorageDead(_36)
    SourceInfo(src/bytes.rs:1538:91-1538:92)
  1: StorageDead(_35)
    SourceInfo(src/bytes.rs:1538:91-1538:92)
  2: StorageDead(_32)
    SourceInfo(src/bytes.rs:1538:91-1538:92)
  3: StorageDead(_29)
    SourceInfo(src/bytes.rs:1538:91-1538:92)
  4: StorageDead(_28)
    SourceInfo(src/bytes.rs:1538:91-1538:92)
  5: PlaceMention(_27)
    SourceInfo(src/bytes.rs:1538:11-1538:92)
  6: _37 = discriminant(_27)
    SourceInfo(src/bytes.rs:1538:11-1538:92)
  Terminator {
      source_info: SourceInfo(src/bytes.rs:1538:5-1538:92)
      kind: switchInt(move _37) -> [0: bb13, 1: bb14, otherwise: bb12]
  }
  preds [bb10]
  succs [bb12, bb13, bb14]

bb12
  0: FakeRead(ForMatchedPlace(None), _27)
    SourceInfo(src/bytes.rs:1538:11-1538:92)
  Terminator {
      source_info: SourceInfo(src/bytes.rs:1538:11-1538:92)
      kind: unreachable
  }
  preds [bb11]
  succs []

bb13
  Terminator {
      source_info: SourceInfo(src/bytes.rs:1539:9-1539:19)
      kind: falseEdge -> [real: bb15, imaginary: bb14]
  }
  preds [bb11]
  succs [bb14, bb15]

bb14
  0: StorageLive(_57)
    SourceInfo(src/bytes.rs:1550:13-1550:19)
  1: _57 = ((_27 as Err).0: *mut ())
    SourceInfo(src/bytes.rs:1550:13-1550:19)
  2: StorageLive(_58)
    SourceInfo(src/bytes.rs:1554:17-1554:23)
  3: StorageLive(_59)
    SourceInfo(src/bytes.rs:1554:40-1554:46)
  4: _59 = _17
    SourceInfo(src/bytes.rs:1554:40-1554:46)
  Terminator {
      source_info: SourceInfo(src/bytes.rs:1554:26-1554:47)
      kind: _58 = alloc::boxed::Box::<bytes::Shared>::from_raw(move _59) -> [return: bb22, unwind: bb31]
  }
  preds [bb11, bb13]
  succs [bb22, bb31]

bb15
  0: StorageLive(_38)
    SourceInfo(src/bytes.rs:1539:12-1539:18)
  1: _38 = ((_27 as Ok).0: *mut ())
    SourceInfo(src/bytes.rs:1539:12-1539:18)
  2: StorageLive(_39)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
  3: StorageLive(_40)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
  4: _40 = const true
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
      kind: switchInt(move _40) -> [0: bb19, otherwise: bb16]
  }
  preds [bb13]
  succs [bb16, bb19]

bb16
  0: StorageLive(_41)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
  1: StorageLive(_42)
    SourceInfo(src/bytes.rs:1540:27-1540:58)
  2: StorageLive(_43)
    SourceInfo(src/bytes.rs:1540:27-1540:42)
  3: StorageLive(_44)
    SourceInfo(src/bytes.rs:1540:27-1540:33)
  4: _44 = _38
    SourceInfo(src/bytes.rs:1540:27-1540:33)
  5: _43 = move _44 as usize (PointerExposeProvenance)
    SourceInfo(src/bytes.rs:1540:27-1540:42)
  6: StorageDead(_44)
    SourceInfo(src/bytes.rs:1540:41-1540:42)
  7: StorageLive(_45)
    SourceInfo(src/bytes.rs:1540:46-1540:58)
  8: StorageLive(_46)
    SourceInfo(src/bytes.rs:1540:46-1540:49)
  9: _46 = _2
    SourceInfo(src/bytes.rs:1540:46-1540:49)
  10: _45 = move _46 as usize (PointerExposeProvenance)
    SourceInfo(src/bytes.rs:1540:46-1540:58)
  11: StorageDead(_46)
    SourceInfo(src/bytes.rs:1540:57-1540:58)
  12: _42 = Eq(move _43, move _45)
    SourceInfo(src/bytes.rs:1540:27-1540:58)
  Terminator {
      source_info: SourceInfo(src/bytes.rs:1540:27-1540:58)
      kind: switchInt(move _42) -> [0: bb18, otherwise: bb17]
  }
  preds [bb15]
  succs [bb17, bb18]

bb17
  0: StorageDead(_45)
    SourceInfo(src/bytes.rs:1540:57-1540:58)
  1: StorageDead(_43)
    SourceInfo(src/bytes.rs:1540:57-1540:58)
  2: _41 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:38-317:38)
  3: StorageDead(_42)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:37-317:38)
  4: StorageDead(_41)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:37-317:38)
  5: _39 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:43-318:10)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
      kind: goto -> bb20
  }
  preds [bb16]
  succs [bb20]

bb18
  0: StorageDead(_45)
    SourceInfo(src/bytes.rs:1540:57-1540:58)
  1: StorageDead(_43)
    SourceInfo(src/bytes.rs:1540:57-1540:58)
  2: StorageLive(_47)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
      kind: _47 = core::panicking::panic(const "assertion failed: actual as usize == ptr as usize") -> bb31
  }
  preds [bb16]
  succs [bb31]

bb19
  0: _39 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:10-318:10)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
      kind: goto -> bb20
  }
  preds [bb15]
  succs [bb20]

bb20
  0: StorageDead(_40)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:9-318:10)
  1: StorageDead(_39)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:9-318:10)
  2: StorageLive(_48)
    SourceInfo(src/bytes.rs:1544:22-1544:28)
  3: _48 = _4
    SourceInfo(src/bytes.rs:1544:22-1544:28)
  4: StorageLive(_49)
    SourceInfo(src/bytes.rs:1545:17-1545:20)
  5: _49 = _5
    SourceInfo(src/bytes.rs:1545:17-1545:20)
  6: StorageLive(_50)
    SourceInfo(src/bytes.rs:1546:23-1546:50)
  7: StorageLive(_51)
    SourceInfo(src/bytes.rs:1546:38-1546:49)
  8: StorageLive(_52)
    SourceInfo(src/bytes.rs:1546:38-1546:49)
  9: StorageLive(_53)
    SourceInfo(src/bytes.rs:1546:38-1546:44)
  10: _53 = _17
    SourceInfo(src/bytes.rs:1546:38-1546:44)
  11: _52 = move _53 as *mut () (PtrToPtr)
    SourceInfo(src/bytes.rs:1546:38-1546:49)
  12: AscribeUserType(_52, o, UserTypeProjection { base: UserType(5), projs: [] })
    SourceInfo(src/bytes.rs:1546:38-1546:49)
  13: _51 = _52
    SourceInfo(src/bytes.rs:1546:38-1546:49)
  14: StorageDead(_53)
    SourceInfo(src/bytes.rs:1546:48-1546:49)
  Terminator {
      source_info: SourceInfo(src/bytes.rs:1546:23-1546:50)
      kind: _50 = core::sync::atomic::AtomicPtr::<()>::new(move _51) -> [return: bb21, unwind: bb31]
  }
  preds [bb17, bb19]
  succs [bb21, bb31]

bb21
  0: StorageDead(_51)
    SourceInfo(src/bytes.rs:1546:49-1546:50)
  1: StorageLive(_54)
    SourceInfo(src/bytes.rs:1547:25-1547:39)
  2: StorageLive(_55)
    SourceInfo(src/bytes.rs:1547:25-1547:39)
  3: StorageLive(_56)
    SourceInfo(src/bytes.rs:1547:26-1547:39)
  4: _56 = const {alloc312: &bytes::Vtable}
    SourceInfo(src/bytes.rs:1547:26-1547:39)
  5: _55 = &(*_56)
    SourceInfo(src/bytes.rs:1547:25-1547:39)
  6: _54 = &(*_55)
    SourceInfo(src/bytes.rs:1547:25-1547:39)
  7: _0 = bytes::Bytes { ptr: move _48, len: move _49, data: move _50, vtable: move _54 }
    SourceInfo(src/bytes.rs:1543:13-1548:14)
  8: StorageDead(_54)
    SourceInfo(src/bytes.rs:1548:13-1548:14)
  9: StorageDead(_50)
    SourceInfo(src/bytes.rs:1548:13-1548:14)
  10: StorageDead(_49)
    SourceInfo(src/bytes.rs:1548:13-1548:14)
  11: StorageDead(_48)
    SourceInfo(src/bytes.rs:1548:13-1548:14)
  12: StorageDead(_56)
    SourceInfo(src/bytes.rs:1549:9-1549:10)
  13: StorageDead(_55)
    SourceInfo(src/bytes.rs:1549:9-1549:10)
  14: StorageDead(_52)
    SourceInfo(src/bytes.rs:1549:9-1549:10)
  15: StorageDead(_38)
    SourceInfo(src/bytes.rs:1549:9-1549:10)
  Terminator {
      source_info: SourceInfo(src/bytes.rs:1549:9-1549:10)
      kind: goto -> bb26
  }
  preds [bb20]
  succs [bb26]

bb22
  0: StorageDead(_59)
    SourceInfo(src/bytes.rs:1554:46-1554:47)
  1: FakeRead(ForLet(None), _58)
    SourceInfo(src/bytes.rs:1554:17-1554:23)
  2: StorageLive(_60)
    SourceInfo(src/bytes.rs:1555:13-1555:33)
  3: StorageLive(_61)
    SourceInfo(src/bytes.rs:1555:25-1555:32)
  4: _61 = move (*_58)
    SourceInfo(src/bytes.rs:1555:25-1555:32)
  Terminator {
      source_info: SourceInfo(src/bytes.rs:1555:13-1555:33)
      kind: _60 = core::mem::forget::<bytes::Shared>(move _61) -> [return: bb23, unwind: bb28]
  }
  preds [bb14]
  succs [bb23, bb28]

bb23
  0: StorageDead(_61)
    SourceInfo(src/bytes.rs:1555:32-1555:33)
  1: StorageDead(_60)
    SourceInfo(src/bytes.rs:1555:33-1555:34)
  2: StorageLive(_62)
    SourceInfo(src/bytes.rs:1559:31-1559:42)
  3: StorageLive(_63)
    SourceInfo(src/bytes.rs:1559:31-1559:42)
  4: StorageLive(_64)
    SourceInfo(src/bytes.rs:1559:31-1559:37)
  5: _64 = _57
    SourceInfo(src/bytes.rs:1559:31-1559:37)
  6: _63 = move _64 as *mut bytes::Shared (PtrToPtr)
    SourceInfo(src/bytes.rs:1559:31-1559:42)
  7: AscribeUserType(_63, o, UserTypeProjection { base: UserType(7), projs: [] })
    SourceInfo(src/bytes.rs:1559:31-1559:42)
  8: _62 = _63
    SourceInfo(src/bytes.rs:1559:31-1559:42)
  9: StorageDead(_64)
    SourceInfo(src/bytes.rs:1559:41-1559:42)
  10: StorageLive(_65)
    SourceInfo(src/bytes.rs:1559:44-1559:50)
  11: _65 = _4
    SourceInfo(src/bytes.rs:1559:44-1559:50)
  12: StorageLive(_66)
    SourceInfo(src/bytes.rs:1559:52-1559:55)
  13: _66 = _5
    SourceInfo(src/bytes.rs:1559:52-1559:55)
  Terminator {
      source_info: SourceInfo(src/bytes.rs:1559:13-1559:56)
      kind: _0 = bytes::shallow_clone_arc(move _62, move _65, move _66) -> [return: bb24, unwind: bb29]
  }
  preds [bb22]
  succs [bb24, bb29]

bb24
  0: StorageDead(_66)
    SourceInfo(src/bytes.rs:1559:55-1559:56)
  1: StorageDead(_65)
    SourceInfo(src/bytes.rs:1559:55-1559:56)
  2: StorageDead(_62)
    SourceInfo(src/bytes.rs:1559:55-1559:56)
  Terminator {
      source_info: SourceInfo(src/bytes.rs:1560:9-1560:10)
      kind: drop(_58) -> [return: bb25, unwind: bb31]
  }
  preds [bb23]
  succs [bb25, bb31]

bb25
  0: StorageDead(_58)
    SourceInfo(src/bytes.rs:1560:9-1560:10)
  1: StorageDead(_63)
    SourceInfo(src/bytes.rs:1560:9-1560:10)
  2: StorageDead(_57)
    SourceInfo(src/bytes.rs:1560:9-1560:10)
  Terminator {
      source_info: SourceInfo(src/bytes.rs:1560:9-1560:10)
      kind: goto -> bb26
  }
  preds [bb24]
  succs [bb26]

bb26
  0: StorageDead(_17)
    SourceInfo(src/bytes.rs:1562:1-1562:2)
  Terminator {
      source_info: SourceInfo(src/bytes.rs:1562:1-1562:2)
      kind: drop(_6) -> [return: bb27, unwind: bb33]
  }
  preds [bb21, bb25]
  succs [bb27, bb33]

bb27
  0: StorageDead(_6)
    SourceInfo(src/bytes.rs:1562:1-1562:2)
  1: StorageDead(_33)
    SourceInfo(src/bytes.rs:1562:1-1562:2)
  2: StorageDead(_30)
    SourceInfo(src/bytes.rs:1562:1-1562:2)
  3: StorageDead(_27)
    SourceInfo(src/bytes.rs:1562:1-1562:2)
  Terminator {
      source_info: SourceInfo(src/bytes.rs:1562:2-1562:2)
      kind: return
  }
  preds [bb26]
  succs []

bb28
  Terminator {
      source_info: SourceInfo(src/bytes.rs:1555:32-1555:33)
      kind: drop(_61) -> [return: bb29, unwind terminate(cleanup)]
  }
  preds [bb22]
  succs [bb29]

bb29
  Terminator {
      source_info: SourceInfo(src/bytes.rs:1560:9-1560:10)
      kind: drop(_58) -> [return: bb31, unwind terminate(cleanup)]
  }
  preds [bb23, bb28]
  succs [bb31]

bb30
  Terminator {
      source_info: SourceInfo(src/bytes.rs:1520:38-1520:39)
      kind: drop(_18) -> [return: bb31, unwind terminate(cleanup)]
  }
  preds [bb4]
  succs [bb31]

bb31
  Terminator {
      source_info: SourceInfo(src/bytes.rs:1562:1-1562:2)
      kind: drop(_6) -> [return: bb33, unwind terminate(cleanup)]
  }
  preds [bb8, bb10, bb14, bb18, bb20, bb24, bb29, bb30]
  succs [bb33]

bb32
  Terminator {
      source_info: SourceInfo(src/bytes.rs:1518:6-1518:7)
      kind: drop(_7) -> [return: bb33, unwind terminate(cleanup)]
  }
  preds [bb3]
  succs [bb33]

bb33
  Terminator {
      source_info: SourceInfo(src/bytes.rs:1493:1-1562:2)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb26, bb31, bb32]
  succs []

