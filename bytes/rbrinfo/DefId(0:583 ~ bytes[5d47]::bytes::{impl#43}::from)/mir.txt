bb0
  0: StorageLive(_2)
    SourceInfo(src/bytes.rs:1004:9-1006:10)
  1: StorageLive(_3)
    SourceInfo(src/bytes.rs:1004:12-1004:28)
  2: StorageLive(_4)
    SourceInfo(src/bytes.rs:1004:12-1004:17)
  3: _4 = &(*_1)
    SourceInfo(src/bytes.rs:1004:12-1004:17)
  Terminator {
      source_info: SourceInfo(src/bytes.rs:1004:12-1004:28)
      kind: _3 = core::slice::<impl [u8]>::is_empty(move _4) -> [return: bb1, unwind: bb17]
  }
  preds []
  succs [bb1, bb17]

bb1
  Terminator {
      source_info: SourceInfo(src/bytes.rs:1004:12-1004:28)
      kind: switchInt(move _3) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_4)
    SourceInfo(src/bytes.rs:1004:27-1004:28)
  Terminator {
      source_info: SourceInfo(src/bytes.rs:1005:20-1005:32)
      kind: _0 = bytes::Bytes::new() -> [return: bb14, unwind: bb17]
  }
  preds [bb1]
  succs [bb14, bb17]

bb3
  0: StorageDead(_4)
    SourceInfo(src/bytes.rs:1004:27-1004:28)
  1: _2 = const ()
    SourceInfo(src/bytes.rs:1006:10-1006:10)
  2: StorageDead(_3)
    SourceInfo(src/bytes.rs:1006:9-1006:10)
  3: StorageDead(_2)
    SourceInfo(src/bytes.rs:1006:9-1006:10)
  4: StorageLive(_6)
    SourceInfo(src/bytes.rs:1008:13-1008:16)
  5: StorageLive(_7)
    SourceInfo(src/bytes.rs:1008:19-1008:24)
  6: _7 = &(*_1)
    SourceInfo(src/bytes.rs:1008:19-1008:24)
  Terminator {
      source_info: SourceInfo(src/bytes.rs:1008:19-1008:30)
      kind: _6 = core::slice::<impl [u8]>::len(move _7) -> [return: bb4, unwind: bb17]
  }
  preds [bb1]
  succs [bb4, bb17]

bb4
  0: StorageDead(_7)
    SourceInfo(src/bytes.rs:1008:29-1008:30)
  1: FakeRead(ForLet(None), _6)
    SourceInfo(src/bytes.rs:1008:13-1008:16)
  2: StorageLive(_8)
    SourceInfo(src/bytes.rs:1009:13-1009:16)
  3: StorageLive(_9)
    SourceInfo(src/bytes.rs:1009:19-1009:39)
  4: StorageLive(_10)
    SourceInfo(src/bytes.rs:1009:33-1009:38)
  5: _10 = move _1
    SourceInfo(src/bytes.rs:1009:33-1009:38)
  Terminator {
      source_info: SourceInfo(src/bytes.rs:1009:19-1009:39)
      kind: _9 = alloc::boxed::Box::<[u8]>::into_raw(move _10) -> [return: bb5, unwind: bb16]
  }
  preds [bb3]
  succs [bb5, bb16]

bb5
  0: StorageDead(_10)
    SourceInfo(src/bytes.rs:1009:38-1009:39)
  1: _8 = move _9 as *mut u8 (PtrToPtr)
    SourceInfo(src/bytes.rs:1009:19-1009:50)
  2: StorageDead(_9)
    SourceInfo(src/bytes.rs:1009:49-1009:50)
  3: FakeRead(ForLet(None), _8)
    SourceInfo(src/bytes.rs:1009:13-1009:16)
  4: StorageLive(_11)
    SourceInfo(src/bytes.rs:1011:12-1011:35)
  5: StorageLive(_12)
    SourceInfo(src/bytes.rs:1011:12-1011:30)
  6: StorageLive(_13)
    SourceInfo(src/bytes.rs:1011:12-1011:24)
  7: StorageLive(_14)
    SourceInfo(src/bytes.rs:1011:12-1011:15)
  8: _14 = _8
    SourceInfo(src/bytes.rs:1011:12-1011:15)
  9: _13 = move _14 as usize (PointerExposeProvenance)
    SourceInfo(src/bytes.rs:1011:12-1011:24)
  10: StorageDead(_14)
    SourceInfo(src/bytes.rs:1011:23-1011:24)
  11: _12 = BitAnd(move _13, const 1_usize)
    SourceInfo(src/bytes.rs:1011:12-1011:30)
  12: StorageDead(_13)
    SourceInfo(src/bytes.rs:1011:29-1011:30)
  13: _11 = Eq(move _12, const 0_usize)
    SourceInfo(src/bytes.rs:1011:12-1011:35)
  Terminator {
      source_info: SourceInfo(src/bytes.rs:1011:12-1011:35)
      kind: switchInt(move _11) -> [0: bb10, otherwise: bb6]
  }
  preds [bb4]
  succs [bb6, bb10]

bb6
  0: StorageDead(_12)
    SourceInfo(src/bytes.rs:1011:34-1011:35)
  1: StorageLive(_15)
    SourceInfo(src/bytes.rs:1012:17-1012:21)
  2: StorageLive(_16)
    SourceInfo(src/bytes.rs:1012:32-1012:35)
  3: _16 = _8
    SourceInfo(src/bytes.rs:1012:32-1012:35)
  4: StorageLive(_17)
    SourceInfo(src/bytes.rs:1012:37-1012:59)
  5: _17 = {closure@src/bytes.rs:1012:37: 1012:43}
    SourceInfo(src/bytes.rs:1012:37-1012:59)
  Terminator {
      source_info: SourceInfo(src/bytes.rs:1012:24-1012:60)
      kind: _15 = bytes::ptr_map::<{closure@src/bytes.rs:1012:37: 1012:43}>(move _16, move _17) -> [return: bb7, unwind: bb17]
  }
  preds [bb5]
  succs [bb7, bb17]

bb7
  0: StorageDead(_17)
    SourceInfo(src/bytes.rs:1012:59-1012:60)
  1: StorageDead(_16)
    SourceInfo(src/bytes.rs:1012:59-1012:60)
  2: FakeRead(ForLet(None), _15)
    SourceInfo(src/bytes.rs:1012:17-1012:21)
  3: StorageLive(_18)
    SourceInfo(src/bytes.rs:1014:17-1014:20)
  4: StorageLive(_19)
    SourceInfo(src/bytes.rs:1014:17-1014:20)
  5: _19 = _8
    SourceInfo(src/bytes.rs:1014:17-1014:20)
  6: _18 = move _19 as *const u8 (PointerCoercion(MutToConstPointer))
    SourceInfo(src/bytes.rs:1014:17-1014:20)
  7: StorageDead(_19)
    SourceInfo(src/bytes.rs:1014:19-1014:20)
  8: StorageLive(_20)
    SourceInfo(src/bytes.rs:1015:17-1015:20)
  9: _20 = _6
    SourceInfo(src/bytes.rs:1015:17-1015:20)
  10: StorageLive(_21)
    SourceInfo(src/bytes.rs:1016:23-1016:50)
  11: StorageLive(_22)
    SourceInfo(src/bytes.rs:1016:38-1016:49)
  12: StorageLive(_23)
    SourceInfo(src/bytes.rs:1016:38-1016:42)
  13: _23 = _15
    SourceInfo(src/bytes.rs:1016:38-1016:42)
  Terminator {
      source_info: SourceInfo(src/bytes.rs:1016:38-1016:49)
      kind: _22 = core::ptr::mut_ptr::<impl *mut u8>::cast::<()>(move _23) -> [return: bb8, unwind: bb17]
  }
  preds [bb6]
  succs [bb8, bb17]

bb8
  0: StorageDead(_23)
    SourceInfo(src/bytes.rs:1016:48-1016:49)
  Terminator {
      source_info: SourceInfo(src/bytes.rs:1016:23-1016:50)
      kind: _21 = core::sync::atomic::AtomicPtr::<()>::new(move _22) -> [return: bb9, unwind: bb17]
  }
  preds [bb7]
  succs [bb9, bb17]

bb9
  0: StorageDead(_22)
    SourceInfo(src/bytes.rs:1016:49-1016:50)
  1: StorageLive(_24)
    SourceInfo(src/bytes.rs:1017:25-1017:48)
  2: StorageLive(_25)
    SourceInfo(src/bytes.rs:1017:25-1017:48)
  3: StorageLive(_26)
    SourceInfo(src/bytes.rs:1017:26-1017:48)
  4: _26 = const {alloc310: &bytes::Vtable}
    SourceInfo(src/bytes.rs:1017:26-1017:48)
  5: _25 = &(*_26)
    SourceInfo(src/bytes.rs:1017:25-1017:48)
  6: _24 = &(*_25)
    SourceInfo(src/bytes.rs:1017:25-1017:48)
  7: _0 = bytes::Bytes { ptr: move _18, len: move _20, data: move _21, vtable: move _24 }
    SourceInfo(src/bytes.rs:1013:13-1018:14)
  8: StorageDead(_24)
    SourceInfo(src/bytes.rs:1018:13-1018:14)
  9: StorageDead(_21)
    SourceInfo(src/bytes.rs:1018:13-1018:14)
  10: StorageDead(_20)
    SourceInfo(src/bytes.rs:1018:13-1018:14)
  11: StorageDead(_18)
    SourceInfo(src/bytes.rs:1018:13-1018:14)
  12: StorageDead(_15)
    SourceInfo(src/bytes.rs:1019:9-1019:10)
  13: StorageDead(_26)
    SourceInfo(src/bytes.rs:1019:9-1019:10)
  14: StorageDead(_25)
    SourceInfo(src/bytes.rs:1019:9-1019:10)
  Terminator {
      source_info: SourceInfo(src/bytes.rs:1011:9-1026:10)
      kind: goto -> bb13
  }
  preds [bb8]
  succs [bb13]

bb10
  0: StorageDead(_12)
    SourceInfo(src/bytes.rs:1011:34-1011:35)
  1: StorageLive(_27)
    SourceInfo(src/bytes.rs:1021:17-1021:20)
  2: StorageLive(_28)
    SourceInfo(src/bytes.rs:1021:17-1021:20)
  3: _28 = _8
    SourceInfo(src/bytes.rs:1021:17-1021:20)
  4: _27 = move _28 as *const u8 (PointerCoercion(MutToConstPointer))
    SourceInfo(src/bytes.rs:1021:17-1021:20)
  5: StorageDead(_28)
    SourceInfo(src/bytes.rs:1021:19-1021:20)
  6: StorageLive(_29)
    SourceInfo(src/bytes.rs:1022:17-1022:20)
  7: _29 = _6
    SourceInfo(src/bytes.rs:1022:17-1022:20)
  8: StorageLive(_30)
    SourceInfo(src/bytes.rs:1023:23-1023:49)
  9: StorageLive(_31)
    SourceInfo(src/bytes.rs:1023:38-1023:48)
  10: StorageLive(_32)
    SourceInfo(src/bytes.rs:1023:38-1023:41)
  11: _32 = _8
    SourceInfo(src/bytes.rs:1023:38-1023:41)
  Terminator {
      source_info: SourceInfo(src/bytes.rs:1023:38-1023:48)
      kind: _31 = core::ptr::mut_ptr::<impl *mut u8>::cast::<()>(move _32) -> [return: bb11, unwind: bb17]
  }
  preds [bb5]
  succs [bb11, bb17]

bb11
  0: StorageDead(_32)
    SourceInfo(src/bytes.rs:1023:47-1023:48)
  Terminator {
      source_info: SourceInfo(src/bytes.rs:1023:23-1023:49)
      kind: _30 = core::sync::atomic::AtomicPtr::<()>::new(move _31) -> [return: bb12, unwind: bb17]
  }
  preds [bb10]
  succs [bb12, bb17]

bb12
  0: StorageDead(_31)
    SourceInfo(src/bytes.rs:1023:48-1023:49)
  1: StorageLive(_33)
    SourceInfo(src/bytes.rs:1024:25-1024:47)
  2: StorageLive(_34)
    SourceInfo(src/bytes.rs:1024:25-1024:47)
  3: StorageLive(_35)
    SourceInfo(src/bytes.rs:1024:26-1024:47)
  4: _35 = const {alloc311: &bytes::Vtable}
    SourceInfo(src/bytes.rs:1024:26-1024:47)
  5: _34 = &(*_35)
    SourceInfo(src/bytes.rs:1024:25-1024:47)
  6: _33 = &(*_34)
    SourceInfo(src/bytes.rs:1024:25-1024:47)
  7: _0 = bytes::Bytes { ptr: move _27, len: move _29, data: move _30, vtable: move _33 }
    SourceInfo(src/bytes.rs:1020:13-1025:14)
  8: StorageDead(_33)
    SourceInfo(src/bytes.rs:1025:13-1025:14)
  9: StorageDead(_30)
    SourceInfo(src/bytes.rs:1025:13-1025:14)
  10: StorageDead(_29)
    SourceInfo(src/bytes.rs:1025:13-1025:14)
  11: StorageDead(_27)
    SourceInfo(src/bytes.rs:1025:13-1025:14)
  12: StorageDead(_35)
    SourceInfo(src/bytes.rs:1026:9-1026:10)
  13: StorageDead(_34)
    SourceInfo(src/bytes.rs:1026:9-1026:10)
  Terminator {
      source_info: SourceInfo(src/bytes.rs:1011:9-1026:10)
      kind: goto -> bb13
  }
  preds [bb11]
  succs [bb13]

bb13
  0: StorageDead(_11)
    SourceInfo(src/bytes.rs:1026:9-1026:10)
  1: StorageDead(_8)
    SourceInfo(src/bytes.rs:1027:5-1027:6)
  2: StorageDead(_6)
    SourceInfo(src/bytes.rs:1027:5-1027:6)
  Terminator {
      source_info: SourceInfo(src/bytes.rs:1027:5-1027:6)
      kind: drop(_1) -> [return: bb15, unwind: bb18]
  }
  preds [bb9, bb12]
  succs [bb15, bb18]

bb14
  0: StorageDead(_3)
    SourceInfo(src/bytes.rs:1006:9-1006:10)
  1: StorageDead(_2)
    SourceInfo(src/bytes.rs:1006:9-1006:10)
  Terminator {
      source_info: SourceInfo(src/bytes.rs:1027:5-1027:6)
      kind: drop(_1) -> [return: bb15, unwind: bb18]
  }
  preds [bb2]
  succs [bb15, bb18]

bb15
  Terminator {
      source_info: SourceInfo(src/bytes.rs:1027:6-1027:6)
      kind: return
  }
  preds [bb13, bb14]
  succs []

bb16
  Terminator {
      source_info: SourceInfo(src/bytes.rs:1009:38-1009:39)
      kind: drop(_10) -> [return: bb17, unwind terminate(cleanup)]
  }
  preds [bb4]
  succs [bb17]

bb17
  Terminator {
      source_info: SourceInfo(src/bytes.rs:1027:5-1027:6)
      kind: drop(_1) -> [return: bb18, unwind terminate(cleanup)]
  }
  preds [bb0, bb2, bb3, bb6, bb7, bb8, bb10, bb11, bb16]
  succs [bb18]

bb18
  Terminator {
      source_info: SourceInfo(src/bytes.rs:1000:5-1027:6)
      kind: resume
  }
  preds [bb13, bb14, bb17]
  succs []

