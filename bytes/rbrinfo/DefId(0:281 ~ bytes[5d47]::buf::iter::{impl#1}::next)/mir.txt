bb0
  0: StorageLive(_2)
    SourceInfo(src/buf/iter.rs:111:9-113:10)
  1: StorageLive(_3)
    SourceInfo(src/buf/iter.rs:111:13-111:39)
  2: StorageLive(_4)
    SourceInfo(src/buf/iter.rs:111:13-111:23)
  3: _4 = &((*_1).0: T)
    SourceInfo(src/buf/iter.rs:111:13-111:23)
  Terminator {
      source_info: SourceInfo(src/buf/iter.rs:111:13-111:39)
      kind: _3 = <T as buf::buf_impl::Buf>::has_remaining(move _4) -> [return: bb1, unwind: bb8]
  }
  preds []
  succs [bb1, bb8]

bb1
  Terminator {
      source_info: SourceInfo(src/buf/iter.rs:111:13-111:39)
      kind: switchInt(move _3) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_4)
    SourceInfo(src/buf/iter.rs:111:38-111:39)
  1: _2 = const ()
    SourceInfo(src/buf/iter.rs:113:10-113:10)
  2: StorageDead(_3)
    SourceInfo(src/buf/iter.rs:113:9-113:10)
  3: StorageDead(_2)
    SourceInfo(src/buf/iter.rs:113:9-113:10)
  4: StorageLive(_6)
    SourceInfo(src/buf/iter.rs:115:13-115:14)
  5: StorageLive(_7)
    SourceInfo(src/buf/iter.rs:115:17-115:35)
  6: StorageLive(_8)
    SourceInfo(src/buf/iter.rs:115:17-115:27)
  7: _8 = &((*_1).0: T)
    SourceInfo(src/buf/iter.rs:115:17-115:27)
  Terminator {
      source_info: SourceInfo(src/buf/iter.rs:115:17-115:35)
      kind: _7 = <T as buf::buf_impl::Buf>::chunk(move _8) -> [return: bb4, unwind: bb8]
  }
  preds [bb1]
  succs [bb4, bb8]

bb3
  0: StorageDead(_4)
    SourceInfo(src/buf/iter.rs:111:38-111:39)
  1: _0 = core::option::Option::<u8>::None
    SourceInfo(src/buf/iter.rs:112:20-112:24)
  2: StorageDead(_3)
    SourceInfo(src/buf/iter.rs:113:9-113:10)
  3: StorageDead(_2)
    SourceInfo(src/buf/iter.rs:113:9-113:10)
  Terminator {
      source_info: SourceInfo(src/buf/iter.rs:119:6-119:6)
      kind: goto -> bb7
  }
  preds [bb1]
  succs [bb7]

bb4
  0: StorageDead(_8)
    SourceInfo(src/buf/iter.rs:115:34-115:35)
  1: StorageLive(_9)
    SourceInfo(src/buf/iter.rs:115:36-115:37)
  2: _9 = const 0_usize
    SourceInfo(src/buf/iter.rs:115:36-115:37)
  3: _10 = Len((*_7))
    SourceInfo(src/buf/iter.rs:115:17-115:38)
  4: _11 = Lt(_9, _10)
    SourceInfo(src/buf/iter.rs:115:17-115:38)
  Terminator {
      source_info: SourceInfo(src/buf/iter.rs:115:17-115:38)
      kind: assert(move _11, "index out of bounds: the length is {} but the index is {}", move _10, _9) -> [success: bb5, unwind: bb8]
  }
  preds [bb2]
  succs [bb5, bb8]

bb5
  0: _6 = (*_7)[_9]
    SourceInfo(src/buf/iter.rs:115:17-115:38)
  1: FakeRead(ForLet(None), _6)
    SourceInfo(src/buf/iter.rs:115:13-115:14)
  2: StorageDead(_9)
    SourceInfo(src/buf/iter.rs:115:38-115:39)
  3: StorageDead(_7)
    SourceInfo(src/buf/iter.rs:115:38-115:39)
  4: StorageLive(_12)
    SourceInfo(src/buf/iter.rs:116:9-116:30)
  5: StorageLive(_13)
    SourceInfo(src/buf/iter.rs:116:9-116:19)
  6: _13 = &mut ((*_1).0: T)
    SourceInfo(src/buf/iter.rs:116:9-116:19)
  Terminator {
      source_info: SourceInfo(src/buf/iter.rs:116:9-116:30)
      kind: _12 = <T as buf::buf_impl::Buf>::advance(move _13, const 1_usize) -> [return: bb6, unwind: bb8]
  }
  preds [bb4]
  succs [bb6, bb8]

bb6
  0: StorageDead(_13)
    SourceInfo(src/buf/iter.rs:116:29-116:30)
  1: StorageDead(_12)
    SourceInfo(src/buf/iter.rs:116:30-116:31)
  2: StorageLive(_14)
    SourceInfo(src/buf/iter.rs:118:14-118:15)
  3: _14 = _6
    SourceInfo(src/buf/iter.rs:118:14-118:15)
  4: _0 = core::option::Option::<u8>::Some(move _14)
    SourceInfo(src/buf/iter.rs:118:9-118:16)
  5: StorageDead(_14)
    SourceInfo(src/buf/iter.rs:118:15-118:16)
  6: StorageDead(_6)
    SourceInfo(src/buf/iter.rs:119:5-119:6)
  Terminator {
      source_info: SourceInfo(src/buf/iter.rs:119:6-119:6)
      kind: goto -> bb7
  }
  preds [bb5]
  succs [bb7]

bb7
  Terminator {
      source_info: SourceInfo(src/buf/iter.rs:119:6-119:6)
      kind: return
  }
  preds [bb3, bb6]
  succs []

bb8
  Terminator {
      source_info: SourceInfo(src/buf/iter.rs:110:5-119:6)
      kind: resume
  }
  preds [bb0, bb2, bb4, bb5]
  succs []

