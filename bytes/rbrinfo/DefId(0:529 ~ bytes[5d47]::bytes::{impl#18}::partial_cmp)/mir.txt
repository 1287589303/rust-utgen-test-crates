bb0
  0: StorageLive(_3)
    SourceInfo(src/bytes.rs:813:9-813:24)
  1: StorageLive(_4)
    SourceInfo(src/bytes.rs:813:9-813:24)
  2: StorageLive(_5)
    SourceInfo(src/bytes.rs:813:9-813:13)
  3: _5 = &(*_1)
    SourceInfo(src/bytes.rs:813:9-813:13)
  Terminator {
      source_info: SourceInfo(src/bytes.rs:813:9-813:24)
      kind: _4 = bytes::Bytes::as_slice(move _5) -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: _3 = &(*_4)
    SourceInfo(src/bytes.rs:813:9-813:24)
  1: StorageDead(_5)
    SourceInfo(src/bytes.rs:813:23-813:24)
  2: StorageLive(_6)
    SourceInfo(src/bytes.rs:813:37-813:42)
  3: _6 = &(*_2)
    SourceInfo(src/bytes.rs:813:37-813:42)
  Terminator {
      source_info: SourceInfo(src/bytes.rs:813:9-813:43)
      kind: _0 = <[u8] as core::cmp::PartialOrd>::partial_cmp(move _3, move _6) -> [return: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_6)
    SourceInfo(src/bytes.rs:813:42-813:43)
  1: StorageDead(_3)
    SourceInfo(src/bytes.rs:813:42-813:43)
  2: StorageDead(_4)
    SourceInfo(src/bytes.rs:814:5-814:6)
  Terminator {
      source_info: SourceInfo(src/bytes.rs:814:6-814:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(src/bytes.rs:812:5-814:6)
      kind: resume
  }
  preds [bb0, bb1]
  succs []

