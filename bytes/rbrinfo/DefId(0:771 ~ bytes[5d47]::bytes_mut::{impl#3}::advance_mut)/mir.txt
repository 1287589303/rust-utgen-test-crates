bb0
  0: StorageLive(_3)
    SourceInfo(src/bytes_mut.rs:1179:13-1179:22)
  1: StorageLive(_4)
    SourceInfo(src/bytes_mut.rs:1179:25-1179:33)
  2: _4 = ((*_1).2: usize)
    SourceInfo(src/bytes_mut.rs:1179:25-1179:33)
  3: StorageLive(_5)
    SourceInfo(src/bytes_mut.rs:1179:36-1179:46)
  4: StorageLive(_6)
    SourceInfo(src/bytes_mut.rs:1179:36-1179:40)
  5: _6 = &(*_1)
    SourceInfo(src/bytes_mut.rs:1179:36-1179:40)
  Terminator {
      source_info: SourceInfo(src/bytes_mut.rs:1179:36-1179:46)
      kind: _5 = bytes_mut::BytesMut::len(move _6) -> [return: bb1, unwind: bb7]
  }
  preds []
  succs [bb1, bb7]

bb1
  0: StorageDead(_6)
    SourceInfo(src/bytes_mut.rs:1179:45-1179:46)
  1: _7 = SubWithOverflow(_4, _5)
    SourceInfo(src/bytes_mut.rs:1179:25-1179:46)
  Terminator {
      source_info: SourceInfo(src/bytes_mut.rs:1179:25-1179:46)
      kind: assert(!move (_7.1: bool), "attempt to compute `{} - {}`, which would overflow", move _4, move _5) -> [success: bb2, unwind: bb7]
  }
  preds [bb0]
  succs [bb2, bb7]

bb2
  0: _3 = move (_7.0: usize)
    SourceInfo(src/bytes_mut.rs:1179:25-1179:46)
  1: StorageDead(_5)
    SourceInfo(src/bytes_mut.rs:1179:45-1179:46)
  2: StorageDead(_4)
    SourceInfo(src/bytes_mut.rs:1179:45-1179:46)
  3: FakeRead(ForLet(None), _3)
    SourceInfo(src/bytes_mut.rs:1179:13-1179:22)
  4: StorageLive(_8)
    SourceInfo(src/bytes_mut.rs:1180:9-1185:10)
  5: StorageLive(_9)
    SourceInfo(src/bytes_mut.rs:1180:12-1180:27)
  6: StorageLive(_10)
    SourceInfo(src/bytes_mut.rs:1180:12-1180:15)
  7: _10 = _2
    SourceInfo(src/bytes_mut.rs:1180:12-1180:15)
  8: StorageLive(_11)
    SourceInfo(src/bytes_mut.rs:1180:18-1180:27)
  9: _11 = _3
    SourceInfo(src/bytes_mut.rs:1180:18-1180:27)
  10: _9 = Gt(move _10, move _11)
    SourceInfo(src/bytes_mut.rs:1180:12-1180:27)
  Terminator {
      source_info: SourceInfo(src/bytes_mut.rs:1180:12-1180:27)
      kind: switchInt(move _9) -> [0: bb4, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4]

bb3
  0: StorageDead(_11)
    SourceInfo(src/bytes_mut.rs:1180:26-1180:27)
  1: StorageDead(_10)
    SourceInfo(src/bytes_mut.rs:1180:26-1180:27)
  2: StorageLive(_13)
    SourceInfo(src/bytes_mut.rs:1181:13-1184:15)
  3: StorageLive(_14)
    SourceInfo(src/bytes_mut.rs:1181:34-1184:14)
  4: StorageLive(_15)
    SourceInfo(src/bytes_mut.rs:1181:34-1184:14)
  5: StorageLive(_16)
    SourceInfo(src/bytes_mut.rs:1181:35-1184:14)
  6: StorageLive(_17)
    SourceInfo(src/bytes_mut.rs:1182:28-1182:31)
  7: _17 = _2
    SourceInfo(src/bytes_mut.rs:1182:28-1182:31)
  8: StorageLive(_18)
    SourceInfo(src/bytes_mut.rs:1183:28-1183:37)
  9: _18 = _3
    SourceInfo(src/bytes_mut.rs:1183:28-1183:37)
  10: _16 = TryGetError { requested: move _17, available: move _18 }
    SourceInfo(src/bytes_mut.rs:1181:35-1184:14)
  11: StorageDead(_18)
    SourceInfo(src/bytes_mut.rs:1184:13-1184:14)
  12: StorageDead(_17)
    SourceInfo(src/bytes_mut.rs:1184:13-1184:14)
  13: _15 = &_16
    SourceInfo(src/bytes_mut.rs:1181:34-1184:14)
  14: _14 = &(*_15)
    SourceInfo(src/bytes_mut.rs:1181:34-1184:14)
  Terminator {
      source_info: SourceInfo(src/bytes_mut.rs:1181:13-1184:15)
      kind: _13 = panic_advance(move _14) -> bb7
  }
  preds [bb2]
  succs [bb7]

bb4
  0: StorageDead(_11)
    SourceInfo(src/bytes_mut.rs:1180:26-1180:27)
  1: StorageDead(_10)
    SourceInfo(src/bytes_mut.rs:1180:26-1180:27)
  2: _8 = const ()
    SourceInfo(src/bytes_mut.rs:1185:10-1185:10)
  3: StorageDead(_9)
    SourceInfo(src/bytes_mut.rs:1185:9-1185:10)
  4: StorageDead(_8)
    SourceInfo(src/bytes_mut.rs:1185:9-1185:10)
  5: StorageLive(_19)
    SourceInfo(src/bytes_mut.rs:1187:20-1187:30)
  6: StorageLive(_20)
    SourceInfo(src/bytes_mut.rs:1187:20-1187:24)
  7: _20 = &(*_1)
    SourceInfo(src/bytes_mut.rs:1187:20-1187:24)
  Terminator {
      source_info: SourceInfo(src/bytes_mut.rs:1187:20-1187:30)
      kind: _19 = bytes_mut::BytesMut::len(move _20) -> [return: bb5, unwind: bb7]
  }
  preds [bb2]
  succs [bb5, bb7]

bb5
  0: StorageDead(_20)
    SourceInfo(src/bytes_mut.rs:1187:29-1187:30)
  1: StorageLive(_21)
    SourceInfo(src/bytes_mut.rs:1187:33-1187:36)
  2: _21 = _2
    SourceInfo(src/bytes_mut.rs:1187:33-1187:36)
  3: _22 = AddWithOverflow(_19, _21)
    SourceInfo(src/bytes_mut.rs:1187:20-1187:36)
  Terminator {
      source_info: SourceInfo(src/bytes_mut.rs:1187:20-1187:36)
      kind: assert(!move (_22.1: bool), "attempt to compute `{} + {}`, which would overflow", move _19, move _21) -> [success: bb6, unwind: bb7]
  }
  preds [bb4]
  succs [bb6, bb7]

bb6
  0: ((*_1).1: usize) = move (_22.0: usize)
    SourceInfo(src/bytes_mut.rs:1187:9-1187:36)
  1: StorageDead(_21)
    SourceInfo(src/bytes_mut.rs:1187:35-1187:36)
  2: StorageDead(_19)
    SourceInfo(src/bytes_mut.rs:1187:35-1187:36)
  3: _0 = const ()
    SourceInfo(src/bytes_mut.rs:1178:50-1188:6)
  4: StorageDead(_3)
    SourceInfo(src/bytes_mut.rs:1188:5-1188:6)
  Terminator {
      source_info: SourceInfo(src/bytes_mut.rs:1188:6-1188:6)
      kind: return
  }
  preds [bb5]
  succs []

bb7
  Terminator {
      source_info: SourceInfo(src/bytes_mut.rs:1178:5-1188:6)
      kind: resume
  }
  preds [bb0, bb1, bb3, bb4, bb5]
  succs []

