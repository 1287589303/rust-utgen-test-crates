bb0
  0: StorageLive(_4)
    SourceInfo(src/bytes.rs:1129:9-1129:14)
  1: StorageLive(_5)
    SourceInfo(src/bytes.rs:1129:17-1129:21)
  2: _5 = &(*_1)
    SourceInfo(src/bytes.rs:1129:17-1129:21)
  3: StorageLive(_6)
    SourceInfo(src/bytes.rs:1129:27-1129:44)
  4: _6 = core::sync::atomic::Ordering::Relaxed
    SourceInfo(src/bytes.rs:1129:27-1129:44)
  Terminator {
      source_info: SourceInfo(src/bytes.rs:1129:17-1129:45)
      kind: _4 = core::sync::atomic::AtomicPtr::<()>::load(move _5, move _6) -> [return: bb1, unwind: bb8]
  }
  preds []
  succs [bb1, bb8]

bb1
  0: StorageDead(_6)
    SourceInfo(src/bytes.rs:1129:44-1129:45)
  1: StorageDead(_5)
    SourceInfo(src/bytes.rs:1129:44-1129:45)
  2: FakeRead(ForLet(None), _4)
    SourceInfo(src/bytes.rs:1129:9-1129:14)
  3: StorageLive(_7)
    SourceInfo(src/bytes.rs:1130:9-1130:16)
  4: StorageLive(_8)
    SourceInfo(src/bytes.rs:1130:22-1130:51)
  5: StorageLive(_9)
    SourceInfo(src/bytes.rs:1130:22-1130:27)
  6: _9 = _4
    SourceInfo(src/bytes.rs:1130:22-1130:27)
  Terminator {
      source_info: SourceInfo(src/bytes.rs:1130:22-1130:51)
      kind: _8 = core::ptr::mut_ptr::<impl *mut ()>::cast::<bytes::OwnedLifetime>(move _9) -> [return: bb2, unwind: bb8]
  }
  preds [bb0]
  succs [bb2, bb8]

bb2
  0: StorageDead(_9)
    SourceInfo(src/bytes.rs:1130:50-1130:51)
  1: _7 = &((*_8).0: core::sync::atomic::AtomicUsize)
    SourceInfo(src/bytes.rs:1130:19-1130:60)
  2: FakeRead(ForLet(None), _7)
    SourceInfo(src/bytes.rs:1130:9-1130:16)
  3: StorageLive(_10)
    SourceInfo(src/bytes.rs:1131:9-1131:16)
  4: StorageLive(_11)
    SourceInfo(src/bytes.rs:1131:19-1131:26)
  5: _11 = &(*_7)
    SourceInfo(src/bytes.rs:1131:19-1131:26)
  6: StorageLive(_12)
    SourceInfo(src/bytes.rs:1131:40-1131:57)
  7: _12 = core::sync::atomic::Ordering::Relaxed
    SourceInfo(src/bytes.rs:1131:40-1131:57)
  Terminator {
      source_info: SourceInfo(src/bytes.rs:1131:19-1131:58)
      kind: _10 = core::sync::atomic::AtomicUsize::fetch_add(move _11, const 1_usize, move _12) -> [return: bb3, unwind: bb8]
  }
  preds [bb1]
  succs [bb3, bb8]

bb3
  0: StorageDead(_12)
    SourceInfo(src/bytes.rs:1131:57-1131:58)
  1: StorageDead(_11)
    SourceInfo(src/bytes.rs:1131:57-1131:58)
  2: FakeRead(ForLet(None), _10)
    SourceInfo(src/bytes.rs:1131:9-1131:16)
  3: StorageLive(_13)
    SourceInfo(src/bytes.rs:1132:5-1134:6)
  4: StorageLive(_14)
    SourceInfo(src/bytes.rs:1132:8-1132:33)
  5: StorageLive(_15)
    SourceInfo(src/bytes.rs:1132:8-1132:15)
  6: _15 = _10
    SourceInfo(src/bytes.rs:1132:8-1132:15)
  7: StorageLive(_16)
    SourceInfo(src/bytes.rs:1132:18-1132:33)
  8: _17 = const 1_i32 as u32 (IntToInt)
    SourceInfo(src/bytes.rs:1132:18-1132:33)
  9: _18 = Lt(move _17, const 64_u32)
    SourceInfo(src/bytes.rs:1132:18-1132:33)
  Terminator {
      source_info: SourceInfo(src/bytes.rs:1132:18-1132:33)
      kind: assert(move _18, "attempt to shift right by `{}`, which would overflow", const 1_i32) -> [success: bb4, unwind: bb8]
  }
  preds [bb2]
  succs [bb4, bb8]

bb4
  0: _16 = Shr(const core::usize::MAX, const 1_i32)
    SourceInfo(src/bytes.rs:1132:18-1132:33)
  1: _14 = Gt(move _15, move _16)
    SourceInfo(src/bytes.rs:1132:8-1132:33)
  Terminator {
      source_info: SourceInfo(src/bytes.rs:1132:8-1132:33)
      kind: switchInt(move _14) -> [0: bb6, otherwise: bb5]
  }
  preds [bb3]
  succs [bb5, bb6]

bb5
  0: StorageDead(_16)
    SourceInfo(src/bytes.rs:1132:32-1132:33)
  1: StorageDead(_15)
    SourceInfo(src/bytes.rs:1132:32-1132:33)
  2: StorageLive(_19)
    SourceInfo(src/bytes.rs:1133:9-1133:23)
  Terminator {
      source_info: SourceInfo(src/bytes.rs:1133:9-1133:23)
      kind: _19 = abort() -> bb8
  }
  preds [bb4]
  succs [bb8]

bb6
  0: StorageDead(_16)
    SourceInfo(src/bytes.rs:1132:32-1132:33)
  1: StorageDead(_15)
    SourceInfo(src/bytes.rs:1132:32-1132:33)
  2: _13 = const ()
    SourceInfo(src/bytes.rs:1134:6-1134:6)
  3: StorageDead(_14)
    SourceInfo(src/bytes.rs:1134:5-1134:6)
  4: StorageDead(_13)
    SourceInfo(src/bytes.rs:1134:5-1134:6)
  5: StorageLive(_20)
    SourceInfo(src/bytes.rs:1137:9-1137:12)
  6: _20 = _2
    SourceInfo(src/bytes.rs:1137:9-1137:12)
  7: StorageLive(_21)
    SourceInfo(src/bytes.rs:1138:9-1138:12)
  8: _21 = _3
    SourceInfo(src/bytes.rs:1138:9-1138:12)
  9: StorageLive(_22)
    SourceInfo(src/bytes.rs:1139:15-1139:41)
  10: StorageLive(_23)
    SourceInfo(src/bytes.rs:1139:30-1139:40)
  11: StorageLive(_24)
    SourceInfo(src/bytes.rs:1139:30-1139:40)
  12: StorageLive(_25)
    SourceInfo(src/bytes.rs:1139:30-1139:35)
  13: _25 = _4
    SourceInfo(src/bytes.rs:1139:30-1139:35)
  14: _24 = move _25 as *mut () (PtrToPtr)
    SourceInfo(src/bytes.rs:1139:30-1139:40)
  15: AscribeUserType(_24, o, UserTypeProjection { base: UserType(2), projs: [] })
    SourceInfo(src/bytes.rs:1139:30-1139:40)
  16: _23 = _24
    SourceInfo(src/bytes.rs:1139:30-1139:40)
  17: StorageDead(_25)
    SourceInfo(src/bytes.rs:1139:39-1139:40)
  Terminator {
      source_info: SourceInfo(src/bytes.rs:1139:15-1139:41)
      kind: _22 = core::sync::atomic::AtomicPtr::<()>::new(move _23) -> [return: bb7, unwind: bb8]
  }
  preds [bb4]
  succs [bb7, bb8]

bb7
  0: StorageDead(_23)
    SourceInfo(src/bytes.rs:1139:40-1139:41)
  1: StorageLive(_26)
    SourceInfo(src/bytes.rs:1140:17-1140:30)
  2: StorageLive(_27)
    SourceInfo(src/bytes.rs:1140:17-1140:30)
  3: StorageLive(_28)
    SourceInfo(src/bytes.rs:1140:18-1140:30)
  4: _28 = const {alloc309: &bytes::Vtable}
    SourceInfo(src/bytes.rs:1140:18-1140:30)
  5: _27 = &(*_28)
    SourceInfo(src/bytes.rs:1140:17-1140:30)
  6: _26 = &(*_27)
    SourceInfo(src/bytes.rs:1140:17-1140:30)
  7: _0 = bytes::Bytes { ptr: move _20, len: move _21, data: move _22, vtable: move _26 }
    SourceInfo(src/bytes.rs:1136:5-1141:6)
  8: StorageDead(_26)
    SourceInfo(src/bytes.rs:1141:5-1141:6)
  9: StorageDead(_22)
    SourceInfo(src/bytes.rs:1141:5-1141:6)
  10: StorageDead(_21)
    SourceInfo(src/bytes.rs:1141:5-1141:6)
  11: StorageDead(_20)
    SourceInfo(src/bytes.rs:1141:5-1141:6)
  12: StorageDead(_10)
    SourceInfo(src/bytes.rs:1142:1-1142:2)
  13: StorageDead(_8)
    SourceInfo(src/bytes.rs:1142:1-1142:2)
  14: StorageDead(_7)
    SourceInfo(src/bytes.rs:1142:1-1142:2)
  15: StorageDead(_4)
    SourceInfo(src/bytes.rs:1142:1-1142:2)
  16: StorageDead(_28)
    SourceInfo(src/bytes.rs:1142:1-1142:2)
  17: StorageDead(_27)
    SourceInfo(src/bytes.rs:1142:1-1142:2)
  18: StorageDead(_24)
    SourceInfo(src/bytes.rs:1142:1-1142:2)
  Terminator {
      source_info: SourceInfo(src/bytes.rs:1142:2-1142:2)
      kind: return
  }
  preds [bb6]
  succs []

bb8
  Terminator {
      source_info: SourceInfo(src/bytes.rs:1128:1-1142:2)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3, bb5, bb6]
  succs []

