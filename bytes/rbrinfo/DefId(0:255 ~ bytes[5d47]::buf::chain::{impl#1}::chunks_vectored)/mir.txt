bb0
  0: StorageLive(_3)
    SourceInfo(src/buf/chain.rs:167:13-167:18)
  1: StorageLive(_4)
    SourceInfo(src/buf/chain.rs:167:21-167:27)
  2: _4 = &((*_1).0: T)
    SourceInfo(src/buf/chain.rs:167:21-167:27)
  3: StorageLive(_5)
    SourceInfo(src/buf/chain.rs:167:44-167:47)
  4: _5 = &mut (*_2)
    SourceInfo(src/buf/chain.rs:167:44-167:47)
  Terminator {
      source_info: SourceInfo(src/buf/chain.rs:167:21-167:48)
      kind: _3 = <T as buf::buf_impl::Buf>::chunks_vectored(move _4, move _5) -> [return: bb1, unwind: bb5]
  }
  preds []
  succs [bb1, bb5]

bb1
  0: StorageDead(_5)
    SourceInfo(src/buf/chain.rs:167:47-167:48)
  1: StorageDead(_4)
    SourceInfo(src/buf/chain.rs:167:47-167:48)
  2: FakeRead(ForLet(None), _3)
    SourceInfo(src/buf/chain.rs:167:13-167:18)
  3: StorageLive(_6)
    SourceInfo(src/buf/chain.rs:168:14-168:51)
  4: StorageLive(_7)
    SourceInfo(src/buf/chain.rs:168:14-168:20)
  5: _7 = &((*_1).1: U)
    SourceInfo(src/buf/chain.rs:168:14-168:20)
  6: StorageLive(_8)
    SourceInfo(src/buf/chain.rs:168:37-168:50)
  7: StorageLive(_9)
    SourceInfo(src/buf/chain.rs:168:37-168:50)
  8: StorageLive(_10)
    SourceInfo(src/buf/chain.rs:168:45-168:50)
  9: StorageLive(_11)
    SourceInfo(src/buf/chain.rs:168:42-168:45)
  10: _11 = &mut (*_2)
    SourceInfo(src/buf/chain.rs:168:42-168:45)
  11: StorageLive(_12)
    SourceInfo(src/buf/chain.rs:168:46-168:49)
  12: StorageLive(_13)
    SourceInfo(src/buf/chain.rs:168:46-168:47)
  13: _13 = _3
    SourceInfo(src/buf/chain.rs:168:46-168:47)
  14: _12 = core::ops::RangeFrom::<usize> { start: move _13 }
    SourceInfo(src/buf/chain.rs:168:46-168:49)
  15: StorageDead(_13)
    SourceInfo(src/buf/chain.rs:168:48-168:49)
  Terminator {
      source_info: SourceInfo(src/buf/chain.rs:168:45-168:50)
      kind: _10 = <[std::io::IoSlice<'_>] as core::ops::IndexMut<core::ops::RangeFrom<usize>>>::index_mut(move _11, move _12) -> [return: bb2, unwind: bb5]
  }
  preds [bb0]
  succs [bb2, bb5]

bb2
  0: StorageDead(_12)
    SourceInfo(src/buf/chain.rs:168:49-168:50)
  1: StorageDead(_11)
    SourceInfo(src/buf/chain.rs:168:49-168:50)
  2: _9 = &mut (*_10)
    SourceInfo(src/buf/chain.rs:168:37-168:50)
  3: _8 = &mut (*_9)
    SourceInfo(src/buf/chain.rs:168:37-168:50)
  Terminator {
      source_info: SourceInfo(src/buf/chain.rs:168:14-168:51)
      kind: _6 = <U as buf::buf_impl::Buf>::chunks_vectored(move _7, move _8) -> [return: bb3, unwind: bb5]
  }
  preds [bb1]
  succs [bb3, bb5]

bb3
  0: StorageDead(_8)
    SourceInfo(src/buf/chain.rs:168:50-168:51)
  1: StorageDead(_7)
    SourceInfo(src/buf/chain.rs:168:50-168:51)
  2: _14 = AddWithOverflow(_3, _6)
    SourceInfo(src/buf/chain.rs:168:9-168:51)
  Terminator {
      source_info: SourceInfo(src/buf/chain.rs:168:9-168:51)
      kind: assert(!move (_14.1: bool), "attempt to compute `{} + {}`, which would overflow", _3, move _6) -> [success: bb4, unwind: bb5]
  }
  preds [bb2]
  succs [bb4, bb5]

bb4
  0: _3 = move (_14.0: usize)
    SourceInfo(src/buf/chain.rs:168:9-168:51)
  1: StorageDead(_6)
    SourceInfo(src/buf/chain.rs:168:50-168:51)
  2: StorageDead(_10)
    SourceInfo(src/buf/chain.rs:168:51-168:52)
  3: StorageDead(_9)
    SourceInfo(src/buf/chain.rs:168:51-168:52)
  4: _0 = _3
    SourceInfo(src/buf/chain.rs:169:9-169:10)
  5: StorageDead(_3)
    SourceInfo(src/buf/chain.rs:170:5-170:6)
  Terminator {
      source_info: SourceInfo(src/buf/chain.rs:170:6-170:6)
      kind: return
  }
  preds [bb3]
  succs []

bb5
  Terminator {
      source_info: SourceInfo(src/buf/chain.rs:166:5-170:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3]
  succs []

