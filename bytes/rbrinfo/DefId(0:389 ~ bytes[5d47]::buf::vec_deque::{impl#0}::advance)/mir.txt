bb0
  0: StorageLive(_3)
    SourceInfo(src/buf/vec_deque.rs:38:9-38:26)
  1: StorageLive(_4)
    SourceInfo(src/buf/vec_deque.rs:38:9-38:13)
  2: _4 = &mut (*_1)
    SourceInfo(src/buf/vec_deque.rs:38:9-38:13)
  3: StorageLive(_5)
    SourceInfo(src/buf/vec_deque.rs:38:20-38:25)
  4: StorageLive(_6)
    SourceInfo(src/buf/vec_deque.rs:38:22-38:25)
  5: _6 = _2
    SourceInfo(src/buf/vec_deque.rs:38:22-38:25)
  6: _5 = core::ops::RangeTo::<usize> { end: move _6 }
    SourceInfo(src/buf/vec_deque.rs:38:20-38:25)
  7: StorageDead(_6)
    SourceInfo(src/buf/vec_deque.rs:38:24-38:25)
  Terminator {
      source_info: SourceInfo(src/buf/vec_deque.rs:38:9-38:26)
      kind: _3 = alloc::collections::VecDeque::<u8>::drain::<core::ops::RangeTo<usize>>(move _4, move _5) -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: StorageDead(_5)
    SourceInfo(src/buf/vec_deque.rs:38:25-38:26)
  1: StorageDead(_4)
    SourceInfo(src/buf/vec_deque.rs:38:25-38:26)
  Terminator {
      source_info: SourceInfo(src/buf/vec_deque.rs:38:26-38:27)
      kind: drop(_3) -> [return: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_3)
    SourceInfo(src/buf/vec_deque.rs:38:26-38:27)
  1: _0 = const ()
    SourceInfo(src/buf/vec_deque.rs:37:39-39:6)
  Terminator {
      source_info: SourceInfo(src/buf/vec_deque.rs:39:6-39:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(src/buf/vec_deque.rs:37:5-39:6)
      kind: resume
  }
  preds [bb0, bb1]
  succs []

