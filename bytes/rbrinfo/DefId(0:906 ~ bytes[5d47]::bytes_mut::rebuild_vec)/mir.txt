bb0
  0: StorageLive(_5)
    SourceInfo(src/bytes_mut.rs:1768:9-1768:12)
  1: StorageLive(_6)
    SourceInfo(src/bytes_mut.rs:1768:15-1768:18)
  2: _6 = _1
    SourceInfo(src/bytes_mut.rs:1768:15-1768:18)
  3: StorageLive(_7)
    SourceInfo(src/bytes_mut.rs:1768:23-1768:26)
  4: _7 = _4
    SourceInfo(src/bytes_mut.rs:1768:23-1768:26)
  Terminator {
      source_info: SourceInfo(src/bytes_mut.rs:1768:15-1768:27)
      kind: _5 = core::ptr::mut_ptr::<impl *mut u8>::sub(move _6, move _7) -> [return: bb1, unwind: bb5]
  }
  preds []
  succs [bb1, bb5]

bb1
  0: StorageDead(_7)
    SourceInfo(src/bytes_mut.rs:1768:26-1768:27)
  1: StorageDead(_6)
    SourceInfo(src/bytes_mut.rs:1768:26-1768:27)
  2: FakeRead(ForLet(None), _5)
    SourceInfo(src/bytes_mut.rs:1768:9-1768:12)
  3: StorageLive(_8)
    SourceInfo(src/bytes_mut.rs:1769:12-1769:15)
  4: _8 = _4
    SourceInfo(src/bytes_mut.rs:1769:12-1769:15)
  5: _9 = AddWithOverflow(_2, _8)
    SourceInfo(src/bytes_mut.rs:1769:5-1769:15)
  Terminator {
      source_info: SourceInfo(src/bytes_mut.rs:1769:5-1769:15)
      kind: assert(!move (_9.1: bool), "attempt to compute `{} + {}`, which would overflow", _2, move _8) -> [success: bb2, unwind: bb5]
  }
  preds [bb0]
  succs [bb2, bb5]

bb2
  0: _2 = move (_9.0: usize)
    SourceInfo(src/bytes_mut.rs:1769:5-1769:15)
  1: StorageDead(_8)
    SourceInfo(src/bytes_mut.rs:1769:14-1769:15)
  2: StorageLive(_10)
    SourceInfo(src/bytes_mut.rs:1770:12-1770:15)
  3: _10 = _4
    SourceInfo(src/bytes_mut.rs:1770:12-1770:15)
  4: _11 = AddWithOverflow(_3, _10)
    SourceInfo(src/bytes_mut.rs:1770:5-1770:15)
  Terminator {
      source_info: SourceInfo(src/bytes_mut.rs:1770:5-1770:15)
      kind: assert(!move (_11.1: bool), "attempt to compute `{} + {}`, which would overflow", _3, move _10) -> [success: bb3, unwind: bb5]
  }
  preds [bb1]
  succs [bb3, bb5]

bb3
  0: _3 = move (_11.0: usize)
    SourceInfo(src/bytes_mut.rs:1770:5-1770:15)
  1: StorageDead(_10)
    SourceInfo(src/bytes_mut.rs:1770:14-1770:15)
  2: StorageLive(_12)
    SourceInfo(src/bytes_mut.rs:1772:25-1772:28)
  3: _12 = _5
    SourceInfo(src/bytes_mut.rs:1772:25-1772:28)
  4: StorageLive(_13)
    SourceInfo(src/bytes_mut.rs:1772:30-1772:33)
  5: _13 = _2
    SourceInfo(src/bytes_mut.rs:1772:30-1772:33)
  6: StorageLive(_14)
    SourceInfo(src/bytes_mut.rs:1772:35-1772:38)
  7: _14 = _3
    SourceInfo(src/bytes_mut.rs:1772:35-1772:38)
  Terminator {
      source_info: SourceInfo(src/bytes_mut.rs:1772:5-1772:39)
      kind: _0 = alloc::vec::Vec::<u8>::from_raw_parts(move _12, move _13, move _14) -> [return: bb4, unwind: bb5]
  }
  preds [bb2]
  succs [bb4, bb5]

bb4
  0: StorageDead(_14)
    SourceInfo(src/bytes_mut.rs:1772:38-1772:39)
  1: StorageDead(_13)
    SourceInfo(src/bytes_mut.rs:1772:38-1772:39)
  2: StorageDead(_12)
    SourceInfo(src/bytes_mut.rs:1772:38-1772:39)
  3: StorageDead(_5)
    SourceInfo(src/bytes_mut.rs:1773:1-1773:2)
  Terminator {
      source_info: SourceInfo(src/bytes_mut.rs:1773:2-1773:2)
      kind: return
  }
  preds [bb3]
  succs []

bb5
  Terminator {
      source_info: SourceInfo(src/bytes_mut.rs:1767:1-1773:2)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3]
  succs []

