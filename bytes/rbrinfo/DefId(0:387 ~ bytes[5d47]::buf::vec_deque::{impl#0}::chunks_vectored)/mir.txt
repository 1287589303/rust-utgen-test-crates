bb0
  0: StorageLive(_3)
    SourceInfo(src/buf/vec_deque.rs:23:9-25:10)
  1: StorageLive(_4)
    SourceInfo(src/buf/vec_deque.rs:23:12-23:27)
  2: StorageLive(_5)
    SourceInfo(src/buf/vec_deque.rs:23:12-23:16)
  3: _5 = &(*_1)
    SourceInfo(src/buf/vec_deque.rs:23:12-23:16)
  Terminator {
      source_info: SourceInfo(src/buf/vec_deque.rs:23:12-23:27)
      kind: _4 = alloc::collections::VecDeque::<u8>::is_empty(move _5) -> [return: bb1, unwind: bb21]
  }
  preds []
  succs [bb1, bb21]

bb1
  Terminator {
      source_info: SourceInfo(src/buf/vec_deque.rs:23:12-23:27)
      kind: switchInt(move _4) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_5)
    SourceInfo(src/buf/vec_deque.rs:23:26-23:27)
  Terminator {
      source_info: SourceInfo(src/buf/vec_deque.rs:23:46-25:10)
      kind: goto -> bb6
  }
  preds [bb1]
  succs [bb6]

bb3
  0: StorageDead(_5)
    SourceInfo(src/buf/vec_deque.rs:23:26-23:27)
  1: StorageLive(_6)
    SourceInfo(src/buf/vec_deque.rs:23:31-23:45)
  2: StorageLive(_7)
    SourceInfo(src/buf/vec_deque.rs:23:31-23:34)
  3: _7 = &(*_2)
    SourceInfo(src/buf/vec_deque.rs:23:31-23:34)
  Terminator {
      source_info: SourceInfo(src/buf/vec_deque.rs:23:31-23:45)
      kind: _6 = core::slice::<impl [std::io::IoSlice<'_>]>::is_empty(move _7) -> [return: bb4, unwind: bb21]
  }
  preds [bb1]
  succs [bb4, bb21]

bb4
  Terminator {
      source_info: SourceInfo(src/buf/vec_deque.rs:23:31-23:45)
      kind: switchInt(move _6) -> [0: bb7, otherwise: bb5]
  }
  preds [bb3]
  succs [bb5, bb7]

bb5
  0: StorageDead(_7)
    SourceInfo(src/buf/vec_deque.rs:23:44-23:45)
  Terminator {
      source_info: SourceInfo(src/buf/vec_deque.rs:23:46-25:10)
      kind: goto -> bb6
  }
  preds [bb4]
  succs [bb6]

bb6
  0: _0 = const 0_usize
    SourceInfo(src/buf/vec_deque.rs:24:20-24:21)
  1: StorageDead(_6)
    SourceInfo(src/buf/vec_deque.rs:25:9-25:10)
  2: StorageDead(_4)
    SourceInfo(src/buf/vec_deque.rs:25:9-25:10)
  3: StorageDead(_3)
    SourceInfo(src/buf/vec_deque.rs:25:9-25:10)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb20
  }
  preds [bb2, bb5]
  succs [bb20]

bb7
  0: StorageDead(_7)
    SourceInfo(src/buf/vec_deque.rs:23:44-23:45)
  1: _3 = const ()
    SourceInfo(src/buf/vec_deque.rs:25:10-25:10)
  2: StorageDead(_6)
    SourceInfo(src/buf/vec_deque.rs:25:9-25:10)
  3: StorageDead(_4)
    SourceInfo(src/buf/vec_deque.rs:25:9-25:10)
  4: StorageDead(_3)
    SourceInfo(src/buf/vec_deque.rs:25:9-25:10)
  5: StorageLive(_11)
    SourceInfo(src/buf/vec_deque.rs:27:24-27:40)
  6: StorageLive(_12)
    SourceInfo(src/buf/vec_deque.rs:27:24-27:28)
  7: _12 = &(*_1)
    SourceInfo(src/buf/vec_deque.rs:27:24-27:28)
  Terminator {
      source_info: SourceInfo(src/buf/vec_deque.rs:27:24-27:40)
      kind: _11 = alloc::collections::VecDeque::<u8>::as_slices(move _12) -> [return: bb8, unwind: bb21]
  }
  preds [bb4]
  succs [bb8, bb21]

bb8
  0: StorageDead(_12)
    SourceInfo(src/buf/vec_deque.rs:27:39-27:40)
  1: PlaceMention(_11)
    SourceInfo(src/buf/vec_deque.rs:27:24-27:40)
  2: StorageLive(_9)
    SourceInfo(src/buf/vec_deque.rs:27:14-27:16)
  3: _9 = (_11.0: &[u8])
    SourceInfo(src/buf/vec_deque.rs:27:14-27:16)
  4: StorageLive(_10)
    SourceInfo(src/buf/vec_deque.rs:27:18-27:20)
  5: _10 = (_11.1: &[u8])
    SourceInfo(src/buf/vec_deque.rs:27:18-27:20)
  6: StorageDead(_11)
    SourceInfo(src/buf/vec_deque.rs:27:40-27:41)
  7: StorageLive(_13)
    SourceInfo(src/buf/vec_deque.rs:28:18-28:38)
  8: StorageLive(_14)
    SourceInfo(src/buf/vec_deque.rs:28:35-28:37)
  9: _14 = &(*_9)
    SourceInfo(src/buf/vec_deque.rs:28:35-28:37)
  Terminator {
      source_info: SourceInfo(src/buf/vec_deque.rs:28:18-28:38)
      kind: _13 = std::io::IoSlice::<'_>::new(move _14) -> [return: bb9, unwind: bb21]
  }
  preds [bb7]
  succs [bb9, bb21]

bb9
  0: StorageDead(_14)
    SourceInfo(src/buf/vec_deque.rs:28:37-28:38)
  1: StorageLive(_15)
    SourceInfo(src/buf/vec_deque.rs:28:13-28:14)
  2: _15 = const 0_usize
    SourceInfo(src/buf/vec_deque.rs:28:13-28:14)
  3: _16 = Len((*_2))
    SourceInfo(src/buf/vec_deque.rs:28:9-28:15)
  4: _17 = Lt(_15, _16)
    SourceInfo(src/buf/vec_deque.rs:28:9-28:15)
  Terminator {
      source_info: SourceInfo(src/buf/vec_deque.rs:28:9-28:15)
      kind: assert(move _17, "index out of bounds: the length is {} but the index is {}", move _16, _15) -> [success: bb10, unwind: bb21]
  }
  preds [bb8]
  succs [bb10, bb21]

bb10
  0: (*_2)[_15] = move _13
    SourceInfo(src/buf/vec_deque.rs:28:9-28:38)
  1: StorageDead(_13)
    SourceInfo(src/buf/vec_deque.rs:28:37-28:38)
  2: StorageDead(_15)
    SourceInfo(src/buf/vec_deque.rs:28:38-28:39)
  3: StorageLive(_18)
    SourceInfo(src/buf/vec_deque.rs:29:9-31:10)
  4: StorageLive(_19)
    SourceInfo(src/buf/vec_deque.rs:29:12-29:25)
  5: StorageLive(_20)
    SourceInfo(src/buf/vec_deque.rs:29:12-29:14)
  6: _20 = &(*_10)
    SourceInfo(src/buf/vec_deque.rs:29:12-29:14)
  Terminator {
      source_info: SourceInfo(src/buf/vec_deque.rs:29:12-29:25)
      kind: _19 = core::slice::<impl [u8]>::is_empty(move _20) -> [return: bb11, unwind: bb21]
  }
  preds [bb9]
  succs [bb11, bb21]

bb11
  Terminator {
      source_info: SourceInfo(src/buf/vec_deque.rs:29:12-29:25)
      kind: switchInt(move _19) -> [0: bb13, otherwise: bb12]
  }
  preds [bb10]
  succs [bb12, bb13]

bb12
  0: StorageDead(_20)
    SourceInfo(src/buf/vec_deque.rs:29:24-29:25)
  Terminator {
      source_info: SourceInfo(src/buf/vec_deque.rs:29:44-31:10)
      kind: goto -> bb16
  }
  preds [bb11]
  succs [bb16]

bb13
  0: StorageDead(_20)
    SourceInfo(src/buf/vec_deque.rs:29:24-29:25)
  1: StorageLive(_21)
    SourceInfo(src/buf/vec_deque.rs:29:29-29:43)
  2: StorageLive(_22)
    SourceInfo(src/buf/vec_deque.rs:29:29-29:38)
  3: StorageLive(_23)
    SourceInfo(src/buf/vec_deque.rs:29:29-29:32)
  4: _23 = &(*_2)
    SourceInfo(src/buf/vec_deque.rs:29:29-29:32)
  Terminator {
      source_info: SourceInfo(src/buf/vec_deque.rs:29:29-29:38)
      kind: _22 = core::slice::<impl [std::io::IoSlice<'_>]>::len(move _23) -> [return: bb14, unwind: bb21]
  }
  preds [bb11]
  succs [bb14, bb21]

bb14
  0: StorageDead(_23)
    SourceInfo(src/buf/vec_deque.rs:29:37-29:38)
  1: _21 = Eq(move _22, const 1_usize)
    SourceInfo(src/buf/vec_deque.rs:29:29-29:43)
  Terminator {
      source_info: SourceInfo(src/buf/vec_deque.rs:29:29-29:43)
      kind: switchInt(move _21) -> [0: bb17, otherwise: bb15]
  }
  preds [bb13]
  succs [bb15, bb17]

bb15
  0: StorageDead(_22)
    SourceInfo(src/buf/vec_deque.rs:29:42-29:43)
  Terminator {
      source_info: SourceInfo(src/buf/vec_deque.rs:29:44-31:10)
      kind: goto -> bb16
  }
  preds [bb14]
  succs [bb16]

bb16
  0: _0 = const 1_usize
    SourceInfo(src/buf/vec_deque.rs:30:20-30:21)
  1: StorageDead(_21)
    SourceInfo(src/buf/vec_deque.rs:31:9-31:10)
  2: StorageDead(_19)
    SourceInfo(src/buf/vec_deque.rs:31:9-31:10)
  3: StorageDead(_18)
    SourceInfo(src/buf/vec_deque.rs:31:9-31:10)
  4: StorageDead(_10)
    SourceInfo(src/buf/vec_deque.rs:35:5-35:6)
  5: StorageDead(_9)
    SourceInfo(src/buf/vec_deque.rs:35:5-35:6)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb20
  }
  preds [bb12, bb15]
  succs [bb20]

bb17
  0: StorageDead(_22)
    SourceInfo(src/buf/vec_deque.rs:29:42-29:43)
  1: _18 = const ()
    SourceInfo(src/buf/vec_deque.rs:31:10-31:10)
  2: StorageDead(_21)
    SourceInfo(src/buf/vec_deque.rs:31:9-31:10)
  3: StorageDead(_19)
    SourceInfo(src/buf/vec_deque.rs:31:9-31:10)
  4: StorageDead(_18)
    SourceInfo(src/buf/vec_deque.rs:31:9-31:10)
  5: StorageLive(_25)
    SourceInfo(src/buf/vec_deque.rs:33:18-33:38)
  6: StorageLive(_26)
    SourceInfo(src/buf/vec_deque.rs:33:35-33:37)
  7: _26 = &(*_10)
    SourceInfo(src/buf/vec_deque.rs:33:35-33:37)
  Terminator {
      source_info: SourceInfo(src/buf/vec_deque.rs:33:18-33:38)
      kind: _25 = std::io::IoSlice::<'_>::new(move _26) -> [return: bb18, unwind: bb21]
  }
  preds [bb14]
  succs [bb18, bb21]

bb18
  0: StorageDead(_26)
    SourceInfo(src/buf/vec_deque.rs:33:37-33:38)
  1: StorageLive(_27)
    SourceInfo(src/buf/vec_deque.rs:33:13-33:14)
  2: _27 = const 1_usize
    SourceInfo(src/buf/vec_deque.rs:33:13-33:14)
  3: _28 = Len((*_2))
    SourceInfo(src/buf/vec_deque.rs:33:9-33:15)
  4: _29 = Lt(_27, _28)
    SourceInfo(src/buf/vec_deque.rs:33:9-33:15)
  Terminator {
      source_info: SourceInfo(src/buf/vec_deque.rs:33:9-33:15)
      kind: assert(move _29, "index out of bounds: the length is {} but the index is {}", move _28, _27) -> [success: bb19, unwind: bb21]
  }
  preds [bb17]
  succs [bb19, bb21]

bb19
  0: (*_2)[_27] = move _25
    SourceInfo(src/buf/vec_deque.rs:33:9-33:38)
  1: StorageDead(_25)
    SourceInfo(src/buf/vec_deque.rs:33:37-33:38)
  2: StorageDead(_27)
    SourceInfo(src/buf/vec_deque.rs:33:38-33:39)
  3: _0 = const 2_usize
    SourceInfo(src/buf/vec_deque.rs:34:9-34:10)
  4: StorageDead(_10)
    SourceInfo(src/buf/vec_deque.rs:35:5-35:6)
  5: StorageDead(_9)
    SourceInfo(src/buf/vec_deque.rs:35:5-35:6)
  Terminator {
      source_info: SourceInfo(src/buf/vec_deque.rs:35:6-35:6)
      kind: goto -> bb20
  }
  preds [bb18]
  succs [bb20]

bb20
  Terminator {
      source_info: SourceInfo(src/buf/vec_deque.rs:35:6-35:6)
      kind: return
  }
  preds [bb6, bb16, bb19]
  succs []

bb21
  Terminator {
      source_info: SourceInfo(src/buf/vec_deque.rs:22:5-35:6)
      kind: resume
  }
  preds [bb0, bb3, bb7, bb8, bb9, bb10, bb13, bb17, bb18]
  succs []

