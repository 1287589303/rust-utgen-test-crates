bb0
  0: StorageLive(_3)
    SourceInfo(src/bytes.rs:837:9-837:24)
  1: StorageLive(_4)
    SourceInfo(src/bytes.rs:837:9-837:24)
  2: StorageLive(_5)
    SourceInfo(src/bytes.rs:837:9-837:13)
  3: _5 = &(*_1)
    SourceInfo(src/bytes.rs:837:9-837:13)
  Terminator {
      source_info: SourceInfo(src/bytes.rs:837:9-837:24)
      kind: _4 = bytes::Bytes::as_slice(move _5) -> [return: bb1, unwind: bb4]
  }
  preds []
  succs [bb1, bb4]

bb1
  0: _3 = &(*_4)
    SourceInfo(src/bytes.rs:837:9-837:24)
  1: StorageDead(_5)
    SourceInfo(src/bytes.rs:837:23-837:24)
  2: StorageLive(_6)
    SourceInfo(src/bytes.rs:837:37-837:53)
  3: StorageLive(_7)
    SourceInfo(src/bytes.rs:837:37-837:53)
  4: StorageLive(_8)
    SourceInfo(src/bytes.rs:837:37-837:42)
  5: _8 = &(*_2)
    SourceInfo(src/bytes.rs:837:37-837:42)
  Terminator {
      source_info: SourceInfo(src/bytes.rs:837:37-837:53)
      kind: _7 = core::str::<impl str>::as_bytes(move _8) -> [return: bb2, unwind: bb4]
  }
  preds [bb0]
  succs [bb2, bb4]

bb2
  0: _6 = &(*_7)
    SourceInfo(src/bytes.rs:837:37-837:53)
  1: StorageDead(_8)
    SourceInfo(src/bytes.rs:837:52-837:53)
  Terminator {
      source_info: SourceInfo(src/bytes.rs:837:9-837:54)
      kind: _0 = <[u8] as core::cmp::PartialOrd>::partial_cmp(move _3, move _6) -> [return: bb3, unwind: bb4]
  }
  preds [bb1]
  succs [bb3, bb4]

bb3
  0: StorageDead(_6)
    SourceInfo(src/bytes.rs:837:53-837:54)
  1: StorageDead(_3)
    SourceInfo(src/bytes.rs:837:53-837:54)
  2: StorageDead(_7)
    SourceInfo(src/bytes.rs:838:5-838:6)
  3: StorageDead(_4)
    SourceInfo(src/bytes.rs:838:5-838:6)
  Terminator {
      source_info: SourceInfo(src/bytes.rs:838:6-838:6)
      kind: return
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(src/bytes.rs:836:5-838:6)
      kind: resume
  }
  preds [bb0, bb1, bb2]
  succs []

