bb0
  0: StorageLive(_3)
    SourceInfo(src/bytes.rs:807:9-807:24)
  1: StorageLive(_4)
    SourceInfo(src/bytes.rs:807:9-807:24)
  2: StorageLive(_5)
    SourceInfo(src/bytes.rs:807:9-807:13)
  3: _5 = &(*_1)
    SourceInfo(src/bytes.rs:807:9-807:13)
  Terminator {
      source_info: SourceInfo(src/bytes.rs:807:9-807:24)
      kind: _4 = bytes::Bytes::as_slice(move _5) -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: _3 = &_4
    SourceInfo(src/bytes.rs:807:9-807:24)
  1: StorageDead(_5)
    SourceInfo(src/bytes.rs:807:23-807:24)
  2: StorageLive(_6)
    SourceInfo(src/bytes.rs:807:28-807:33)
  3: _6 = &_2
    SourceInfo(src/bytes.rs:807:28-807:33)
  Terminator {
      source_info: SourceInfo(src/bytes.rs:807:9-807:33)
      kind: _0 = <&[u8] as core::cmp::PartialEq>::eq(move _3, move _6) -> [return: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_6)
    SourceInfo(src/bytes.rs:807:32-807:33)
  1: StorageDead(_3)
    SourceInfo(src/bytes.rs:807:32-807:33)
  2: StorageDead(_4)
    SourceInfo(src/bytes.rs:808:5-808:6)
  Terminator {
      source_info: SourceInfo(src/bytes.rs:808:6-808:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(src/bytes.rs:806:5-808:6)
      kind: resume
  }
  preds [bb0, bb1]
  succs []

