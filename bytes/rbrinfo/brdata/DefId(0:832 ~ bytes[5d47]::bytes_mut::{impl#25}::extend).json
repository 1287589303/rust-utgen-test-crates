{
  "name": "bytes::bytes_mut::{impl#25}::extend",
  "mod_info": {
    "name": "bytes_mut",
    "loc": "src/lib.rs:83:1:83:15"
  },
  "visible": true,
  "loc": "src/bytes_mut.rs:1397:5:1404:6",
  "doc": "",
  "code": [
    "fn extend<T>(&mut self, iter: T)",
    "where",
    "    T: IntoIterator<Item = Bytes>,",
    "{",
    "    for bytes in iter {",
    "        self.extend_from_slice(&bytes)",
    "    }",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 1,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "bytes in iter",
          "norm": null,
          "value": "true",
          "line": 1401,
          "bound": null
        },
        {
          "cond": "bytes in iter",
          "norm": null,
          "value": "false",
          "line": 1401,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        7,
        9,
        10,
        11,
        12,
        2,
        3,
        4,
        6,
        8,
        13,
        14,
        15,
        16
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "bytes in iter",
          "norm": null,
          "value": "false",
          "line": 1401,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        6,
        8,
        13,
        14,
        15,
        16
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}