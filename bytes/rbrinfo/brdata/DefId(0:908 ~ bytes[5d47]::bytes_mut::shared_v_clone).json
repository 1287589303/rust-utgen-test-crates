{
  "name": "bytes::bytes_mut::shared_v_clone",
  "mod_info": {
    "name": "bytes_mut",
    "loc": "src/lib.rs:83:1:83:15"
  },
  "visible": false,
  "loc": "src/bytes_mut.rs:1785:1:1791:2",
  "doc": "",
  "code": [
    "unsafe fn shared_v_clone(data: &AtomicPtr<()>, ptr: *const u8, len: usize) -> Bytes {",
    "    let shared = data.load(Ordering::Relaxed) as *mut Shared;",
    "    increment_shared(shared);",
    "",
    "    let data = AtomicPtr::new(shared as *mut ());",
    "    Bytes::with_vtable(ptr, len, data, &SHARED_VTABLE)",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}