{
  "name": "bytes::buf::buf_impl::{impl#3}::advance",
  "mod_info": {
    "name": "buf::buf_impl",
    "loc": "src/buf/mod.rs:17:1:17:14"
  },
  "visible": true,
  "loc": "src/buf/buf_impl.rs:2941:5:2957:6",
  "doc": "",
  "code": [
    "fn advance(&mut self, cnt: usize) {",
    "    let len = self.get_ref().as_ref().len();",
    "    let pos = self.position();",
    "",
    "    // We intentionally allow `cnt == 0` here even if `pos > len`.",
    "    let max_cnt = saturating_sub_usize_u64(len, pos);",
    "    if cnt > max_cnt {",
    "        panic_advance(&TryGetError {",
    "            requested: cnt,",
    "            available: max_cnt,",
    "        });",
    "    }",
    "",
    "    // This will not overflow because either `cnt == 0` or the sum is not",
    "    // greater than `len`.",
    "    self.set_position(pos + cnt as u64);",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "cnt > max_cnt",
          "norm": null,
          "value": "true",
          "line": 2947,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        10
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "cnt > max_cnt",
          "norm": null,
          "value": "false",
          "line": 2947,
          "bound": "cnt == max_cnt"
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        7,
        8,
        9
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}