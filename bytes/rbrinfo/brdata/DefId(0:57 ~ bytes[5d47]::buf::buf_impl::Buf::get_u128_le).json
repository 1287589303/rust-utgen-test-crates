{
  "name": "bytes::buf::buf_impl::Buf::get_u128_le",
  "mod_info": {
    "name": "buf::buf_impl",
    "loc": "src/buf/mod.rs:17:1:17:14"
  },
  "visible": true,
  "loc": "src/buf/buf_impl.rs:769:5:771:6",
  "doc": "/// Gets an unsigned 128 bit integer from `self` in little-endian byte order.\n///\n/// The current position is advanced by 16.\n///\n/// # Examples\n///\n/// ```\n/// use bytes::Buf;\n///\n/// let mut buf = &b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01 hello\"[..];\n/// assert_eq!(0x01020304050607080910111213141516, buf.get_u128_le());\n/// ```\n///\n/// # Panics\n///\n/// This function panics if there is not enough remaining data in `self`.\n",
  "code": [
    "fn get_u128_le(&mut self) -> u128 {",
    "    buf_get_impl!(self, u128::from_le_bytes);",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}