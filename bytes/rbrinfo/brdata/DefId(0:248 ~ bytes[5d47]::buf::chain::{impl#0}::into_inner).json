{
  "name": "bytes::buf::chain::{impl#0}::into_inner",
  "mod_info": {
    "name": "buf::chain",
    "loc": "src/buf/mod.rs:19:1:19:11"
  },
  "visible": true,
  "loc": "src/buf/chain.rs:125:5:127:6",
  "doc": "/// Consumes this `Chain`, returning the underlying values.\n///\n/// # Examples\n///\n/// ```\n/// use bytes::Buf;\n///\n/// let chain = (&b\"hello\"[..])\n///     .chain(&b\"world\"[..]);\n///\n/// let (first, last) = chain.into_inner();\n/// assert_eq!(first[..], b\"hello\"[..]);\n/// assert_eq!(last[..], b\"world\"[..]);\n/// ```\n",
  "code": [
    "pub fn into_inner(self) -> (T, U) {",
    "    (self.a, self.b)",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "(self.a, self.b)",
      "path": [
        0,
        1,
        2,
        3
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}