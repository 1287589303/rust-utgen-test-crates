{
  "name": "bytes::bytes_mut::{impl#0}::from_vec",
  "mod_info": {
    "name": "bytes_mut",
    "loc": "src/lib.rs:83:1:83:15"
  },
  "visible": true,
  "loc": "src/bytes_mut.rs:924:5:939:6",
  "doc": "",
  "code": [
    "pub(crate) fn from_vec(vec: Vec<u8>) -> BytesMut {",
    "    let mut vec = ManuallyDrop::new(vec);",
    "    let ptr = vptr(vec.as_mut_ptr());",
    "    let len = vec.len();",
    "    let cap = vec.capacity();",
    "",
    "    let original_capacity_repr = original_capacity_to_repr(cap);",
    "    let data = (original_capacity_repr << ORIGINAL_CAPACITY_OFFSET) | KIND_VEC;",
    "",
    "    BytesMut {",
    "        ptr,",
    "        len,",
    "        cap,",
    "        data: invalid_ptr(data),",
    "    }",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "BytesMut {\n            ptr,\n            len,\n            cap,\n            data: invalid_ptr(data),\n        }",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}