{
  "name": "bytes::buf::uninit_slice::{impl#0}::len",
  "mod_info": {
    "name": "buf::uninit_slice",
    "loc": "src/buf/mod.rs:25:1:25:18"
  },
  "visible": true,
  "loc": "src/buf/uninit_slice.rs:205:5:207:6",
  "doc": "/// Returns the number of bytes in the slice.\n///\n/// # Examples\n///\n/// ```\n/// use bytes::BufMut;\n///\n/// let mut data = [0, 1, 2];\n/// let mut slice = &mut data[..];\n/// let len = BufMut::chunk_mut(&mut slice).len();\n///\n/// assert_eq!(len, 3);\n/// ```\n",
  "code": [
    "pub fn len(&self) -> usize {",
    "    self.0.len()",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}