{
  "name": "bytes::bytes_mut::{impl#3}::chunk_mut",
  "mod_info": {
    "name": "bytes_mut",
    "loc": "src/lib.rs:83:1:83:15"
  },
  "visible": true,
  "loc": "src/bytes_mut.rs:1191:5:1196:6",
  "doc": "",
  "code": [
    "fn chunk_mut(&mut self) -> &mut UninitSlice {",
    "    if self.capacity() == self.len() {",
    "        self.reserve(64);",
    "    }",
    "    self.spare_capacity_mut().into()",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.capacity() == self.len()",
          "norm": null,
          "value": "true",
          "line": 1192,
          "bound": null
        }
      ],
      "ret": "self.spare_capacity_mut().into()",
      "path": [
        0,
        1,
        2,
        3,
        4,
        6,
        7,
        8
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.capacity() == self.len()",
          "norm": null,
          "value": "false",
          "line": 1192,
          "bound": null
        }
      ],
      "ret": "self.spare_capacity_mut().into()",
      "path": [
        0,
        1,
        2,
        5,
        6,
        7,
        8
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}