{
  "name": "bytes::bytes_mut::{impl#0}::split_to",
  "mod_info": {
    "name": "bytes_mut",
    "loc": "src/lib.rs:83:1:83:15"
  },
  "visible": true,
  "loc": "src/bytes_mut.rs:395:5:412:6",
  "doc": "/// Splits the buffer into two at the given index.\n///\n/// Afterwards `self` contains elements `[at, len)`, and the returned `BytesMut`\n/// contains elements `[0, at)`.\n///\n/// This is an `O(1)` operation that just increases the reference count and\n/// sets a few indices.\n///\n/// # Examples\n///\n/// ```\n/// use bytes::BytesMut;\n///\n/// let mut a = BytesMut::from(&b\"hello world\"[..]);\n/// let mut b = a.split_to(5);\n///\n/// a[0] = b'!';\n/// b[0] = b'j';\n///\n/// assert_eq!(&a[..], b\"!world\");\n/// assert_eq!(&b[..], b\"jello\");\n/// ```\n///\n/// # Panics\n///\n/// Panics if `at > len`.\n",
  "code": [
    "pub fn split_to(&mut self, at: usize) -> BytesMut {",
    "    assert!(",
    "        at <= self.len(),",
    "        \"split_to out of bounds: {:?} <= {:?}\",",
    "        at,",
    "        self.len(),",
    "    );",
    "",
    "    unsafe {",
    "        let mut other = self.shallow_clone();",
    "        // SAFETY: We've checked that `at` <= `self.len()` and we know that `self.len()` <=",
    "        // `self.capacity()`.",
    "        self.advance_unchecked(at);",
    "        other.cap = at;",
    "        other.len = at;",
    "        other",
    "    }",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "at <= self.len()",
          "norm": null,
          "value": "true",
          "line": 397,
          "bound": "at == self.len()"
        }
      ],
      "ret": "other",
      "path": [
        0,
        1,
        2,
        8,
        9,
        10
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "at <= self.len()",
          "norm": null,
          "value": "false",
          "line": 397,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        5,
        6,
        7,
        12
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}