{
  "name": "bytes::bytes_mut::increment_shared",
  "mod_info": {
    "name": "bytes_mut",
    "loc": "src/lib.rs:83:1:83:15"
  },
  "visible": false,
  "loc": "src/bytes_mut.rs:1425:1:1431:2",
  "doc": "",
  "code": [
    "unsafe fn increment_shared(ptr: *mut Shared) {",
    "    let old_size = (*ptr).ref_count.fetch_add(1, Ordering::Relaxed);",
    "",
    "    if old_size > isize::MAX as usize {",
    "        crate::abort();",
    "    }",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "old_size > isize::MAX as usize",
          "norm": "isize::MAX as usize < old_size",
          "value": "true",
          "line": 1428,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "old_size > isize::MAX as usize",
          "norm": "isize::MAX as usize < old_size",
          "value": "false",
          "line": 1428,
          "bound": "old_size == isize::MAX as usize"
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}