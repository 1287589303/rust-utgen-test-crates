{
  "name": "bytes::buf::buf_impl::Buf::copy_to_slice",
  "mod_info": {
    "name": "buf::buf_impl",
    "loc": "src/buf/mod.rs:17:1:17:14"
  },
  "visible": true,
  "loc": "src/buf/buf_impl.rs:294:5:297:6",
  "doc": "/// Copies bytes from `self` into `dst`.\n///\n/// The cursor is advanced by the number of bytes copied. `self` must have\n/// enough remaining bytes to fill `dst`.\n///\n/// # Examples\n///\n/// ```\n/// use bytes::Buf;\n///\n/// let mut buf = &b\"hello world\"[..];\n/// let mut dst = [0; 5];\n///\n/// buf.copy_to_slice(&mut dst);\n/// assert_eq!(&b\"hello\"[..], &dst);\n/// assert_eq!(6, buf.remaining());\n/// ```\n///\n/// # Panics\n///\n/// This function panics if `self.remaining() < dst.len()`.\n",
  "code": [
    "fn copy_to_slice(&mut self, dst: &mut [u8]) {",
    "    self.try_copy_to_slice(dst)",
    "        .unwrap_or_else(|error| panic_advance(&error));",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}