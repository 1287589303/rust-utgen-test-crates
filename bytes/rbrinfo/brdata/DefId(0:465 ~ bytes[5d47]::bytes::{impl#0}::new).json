{
  "name": "bytes::bytes::{impl#0}::new",
  "mod_info": {
    "name": "bytes",
    "loc": "src/lib.rs:82:1:82:11"
  },
  "visible": true,
  "loc": "src/bytes.rs:139:5:144:6",
  "doc": "/// Creates a new empty `Bytes`.\n///\n/// This will not allocate and the returned `Bytes` handle will be empty.\n///\n/// # Examples\n///\n/// ```\n/// use bytes::Bytes;\n///\n/// let b = Bytes::new();\n/// assert_eq!(&b[..], b\"\");\n/// ```\n",
  "code": [
    "pub const fn new() -> Self {",
    "    // Make it a named const to work around",
    "    // \"unsizing casts are not allowed in const fn\"",
    "    const EMPTY: &[u8] = &[];",
    "    Bytes::from_static(EMPTY)",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}