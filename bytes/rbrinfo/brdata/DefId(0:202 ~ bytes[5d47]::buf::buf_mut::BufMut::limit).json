{
  "name": "bytes::buf::buf_mut::BufMut::limit",
  "mod_info": {
    "name": "buf::buf_mut",
    "loc": "src/buf/mod.rs:18:1:18:13"
  },
  "visible": true,
  "loc": "src/buf/buf_mut.rs:1285:5:1290:6",
  "doc": "/// Creates an adaptor which can write at most `limit` bytes to `self`.\n///\n/// # Examples\n///\n/// ```\n/// use bytes::BufMut;\n///\n/// let arr = &mut [0u8; 128][..];\n/// assert_eq!(arr.remaining_mut(), 128);\n///\n/// let dst = arr.limit(10);\n/// assert_eq!(dst.remaining_mut(), 10);\n/// ```\n",
  "code": [
    "fn limit(self, limit: usize) -> Limit<Self>",
    "where",
    "    Self: Sized,",
    "{",
    "    limit::new(self, limit)",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}