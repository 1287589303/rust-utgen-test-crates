{
  "name": "bytes::abort",
  "mod_info": {
    "name": "",
    "loc": "src/lib.rs:1:1:199:2"
  },
  "visible": true,
  "loc": "src/lib.rs:95:1:112:2",
  "doc": "",
  "code": [
    "fn abort() -> ! {",
    "    #[cfg(feature = \"std\")]",
    "    {",
    "        std::process::abort();",
    "    }",
    "",
    "    #[cfg(not(feature = \"std\"))]",
    "    {",
    "        struct Abort;",
    "        impl Drop for Abort {",
    "            fn drop(&mut self) {",
    "                panic!();",
    "            }",
    "        }",
    "        let _a = Abort;",
    "        panic!(\"abort\");",
    "    }",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}