{
  "name": "bytes::buf::reader::{impl#0}::into_inner",
  "mod_info": {
    "name": "buf::reader",
    "loc": "src/buf/mod.rs:23:1:23:12"
  },
  "visible": true,
  "loc": "src/buf/reader.rs:60:5:62:6",
  "doc": "/// Consumes this `Reader`, returning the underlying value.\n///\n/// # Examples\n///\n/// ```rust\n/// use bytes::Buf;\n/// use std::io;\n///\n/// let mut buf = b\"hello world\".reader();\n/// let mut dst = vec![];\n///\n/// io::copy(&mut buf, &mut dst).unwrap();\n///\n/// let buf = buf.into_inner();\n/// assert_eq!(0, buf.remaining());\n/// ```\n",
  "code": [
    "pub fn into_inner(self) -> B {",
    "    self.buf",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "self.buf",
      "path": [
        0,
        1
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}