{
  "name": "bytes::buf::buf_impl::Buf::reader",
  "mod_info": {
    "name": "buf::buf_impl",
    "loc": "src/buf/mod.rs:17:1:17:14"
  },
  "visible": true,
  "loc": "src/buf/buf_impl.rs:2448:5:2453:6",
  "doc": "/// Creates an adaptor which implements the `Read` trait for `self`.\n///\n/// This function returns a new value which implements `Read` by adapting\n/// the `Read` trait functions to the `Buf` trait functions. Given that\n/// `Buf` operations are infallible, none of the `Read` functions will\n/// return with `Err`.\n///\n/// # Examples\n///\n/// ```\n/// use bytes::{Bytes, Buf};\n/// use std::io::Read;\n///\n/// let buf = Bytes::from(\"hello world\");\n///\n/// let mut reader = buf.reader();\n/// let mut dst = [0; 1024];\n///\n/// let num = reader.read(&mut dst).unwrap();\n///\n/// assert_eq!(11, num);\n/// assert_eq!(&dst[..11], &b\"hello world\"[..]);\n/// ```\n",
  "code": [
    "fn reader(self) -> Reader<Self>",
    "where",
    "    Self: Sized,",
    "{",
    "    reader::new(self)",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}