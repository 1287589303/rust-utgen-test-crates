{
  "name": "bytes::buf::buf_impl::Buf::chain",
  "mod_info": {
    "name": "buf::buf_impl",
    "loc": "src/buf/mod.rs:17:1:17:14"
  },
  "visible": true,
  "loc": "src/buf/buf_impl.rs:2416:5:2421:6",
  "doc": "/// Creates an adaptor which will chain this buffer with another.\n///\n/// The returned `Buf` instance will first consume all bytes from `self`.\n/// Afterwards the output is equivalent to the output of next.\n///\n/// # Examples\n///\n/// ```\n/// use bytes::Buf;\n///\n/// let mut chain = b\"hello \"[..].chain(&b\"world\"[..]);\n///\n/// let full = chain.copy_to_bytes(11);\n/// assert_eq!(full.chunk(), b\"hello world\");\n/// ```\n",
  "code": [
    "fn chain<U: Buf>(self, next: U) -> Chain<Self, U>",
    "where",
    "    Self: Sized,",
    "{",
    "    Chain::new(self, next)",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}