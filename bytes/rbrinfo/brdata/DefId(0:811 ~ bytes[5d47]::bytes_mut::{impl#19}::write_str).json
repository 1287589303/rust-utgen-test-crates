{
  "name": "bytes::bytes_mut::{impl#19}::write_str",
  "mod_info": {
    "name": "bytes_mut",
    "loc": "src/lib.rs:83:1:83:15"
  },
  "visible": true,
  "loc": "src/bytes_mut.rs:1330:5:1337:6",
  "doc": "",
  "code": [
    "fn write_str(&mut self, s: &str) -> fmt::Result {",
    "    if self.remaining_mut() >= s.len() {",
    "        self.put_slice(s.as_bytes());",
    "        Ok(())",
    "    } else {",
    "        Err(fmt::Error)",
    "    }",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.remaining_mut() >= s.len()",
          "norm": "s.len() <= self.remaining_mut()",
          "value": "true",
          "line": 1331,
          "bound": "self.remaining_mut() == s.len()"
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        7
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.remaining_mut() >= s.len()",
          "norm": "s.len() <= self.remaining_mut()",
          "value": "false",
          "line": 1331,
          "bound": null
        }
      ],
      "ret": "Err(fmt::Error)",
      "path": [
        0,
        1,
        2,
        6,
        7
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}