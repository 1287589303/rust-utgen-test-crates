{
  "name": "bytes::bytes_mut::shared_v_to_mut",
  "mod_info": {
    "name": "bytes_mut",
    "loc": "src/lib.rs:83:1:83:15"
  },
  "visible": false,
  "loc": "src/bytes_mut.rs:1815:1:1842:2",
  "doc": "",
  "code": [
    "unsafe fn shared_v_to_mut(data: &AtomicPtr<()>, ptr: *const u8, len: usize) -> BytesMut {",
    "    let shared: *mut Shared = data.load(Ordering::Relaxed).cast();",
    "",
    "    if (*shared).is_unique() {",
    "        let shared = &mut *shared;",
    "",
    "        // The capacity is always the original capacity of the buffer",
    "        // minus the offset from the start of the buffer",
    "        let v = &mut shared.vec;",
    "        let v_capacity = v.capacity();",
    "        let v_ptr = v.as_mut_ptr();",
    "        let offset = offset_from(ptr as *mut u8, v_ptr);",
    "        let cap = v_capacity - offset;",
    "",
    "        let ptr = vptr(ptr as *mut u8);",
    "",
    "        BytesMut {",
    "            ptr,",
    "            len,",
    "            cap,",
    "            data: shared,",
    "        }",
    "    } else {",
    "        let v = slice::from_raw_parts(ptr, len).to_vec();",
    "        release_shared(shared);",
    "        BytesMut::from_vec(v)",
    "    }",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "(*shared).is_unique()",
          "norm": null,
          "value": "true",
          "line": 1818,
          "bound": null
        }
      ],
      "ret": "BytesMut {\n            ptr,\n            len,\n            cap,\n            data: shared,\n        }",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        16
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "(*shared).is_unique()",
          "norm": null,
          "value": "false",
          "line": 1818,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        10,
        11,
        12,
        13,
        14,
        15,
        16
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}