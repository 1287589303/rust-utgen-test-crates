{
  "name": "bytes::bytes_mut::{impl#0}::shallow_clone",
  "mod_info": {
    "name": "bytes_mut",
    "loc": "src/lib.rs:83:1:83:15"
  },
  "visible": false,
  "loc": "src/bytes_mut.rs:1058:5:1066:6",
  "doc": "/// Makes an exact shallow clone of `self`.\n///\n/// The kind of `self` doesn't matter, but this is unsafe\n/// because the clone will have the same offsets. You must\n/// be sure the returned value to the user doesn't allow\n/// two views into the same range.\n",
  "code": [
    "unsafe fn shallow_clone(&mut self) -> BytesMut {",
    "    if self.kind() == KIND_ARC {",
    "        increment_shared(self.data);",
    "        ptr::read(self)",
    "    } else {",
    "        self.promote_to_shared(/*ref_count = */ 2);",
    "        ptr::read(self)",
    "    }",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.kind() == KIND_ARC",
          "norm": "KIND_ARC == self.kind()",
          "value": "true",
          "line": 1059,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        8
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.kind() == KIND_ARC",
          "norm": "KIND_ARC == self.kind()",
          "value": "false",
          "line": 1059,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        5,
        6,
        7,
        8
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}