{
  "name": "bytes::bytes::{impl#0}::slice",
  "mod_info": {
    "name": "bytes",
    "loc": "src/lib.rs:82:1:82:11"
  },
  "visible": true,
  "loc": "src/bytes.rs:373:5:413:6",
  "doc": "/// Returns a slice of self for the provided range.\n///\n/// This will increment the reference count for the underlying memory and\n/// return a new `Bytes` handle set to the slice.\n///\n/// This operation is `O(1)`.\n///\n/// # Examples\n///\n/// ```\n/// use bytes::Bytes;\n///\n/// let a = Bytes::from(&b\"hello world\"[..]);\n/// let b = a.slice(2..5);\n///\n/// assert_eq!(&b[..], b\"llo\");\n/// ```\n///\n/// # Panics\n///\n/// Requires that `begin <= end` and `end <= self.len()`, otherwise slicing\n/// will panic.\n",
  "code": [
    "pub fn slice(&self, range: impl RangeBounds<usize>) -> Self {",
    "    use core::ops::Bound;",
    "",
    "    let len = self.len();",
    "",
    "    let begin = match range.start_bound() {",
    "        Bound::Included(&n) => n,",
    "        Bound::Excluded(&n) => n.checked_add(1).expect(\"out of range\"),",
    "        Bound::Unbounded => 0,",
    "    };",
    "",
    "    let end = match range.end_bound() {",
    "        Bound::Included(&n) => n.checked_add(1).expect(\"out of range\"),",
    "        Bound::Excluded(&n) => n,",
    "        Bound::Unbounded => len,",
    "    };",
    "",
    "    assert!(",
    "        begin <= end,",
    "        \"range start must not be greater than end: {:?} <= {:?}\",",
    "        begin,",
    "        end,",
    "    );",
    "    assert!(",
    "        end <= len,",
    "        \"range end out of bounds: {:?} <= {:?}\",",
    "        end,",
    "        len,",
    "    );",
    "",
    "    if end == begin {",
    "        return Bytes::new();",
    "    }",
    "",
    "    let mut ret = self.clone();",
    "",
    "    ret.len = end - begin;",
    "    ret.ptr = unsafe { ret.ptr.add(begin) };",
    "",
    "    ret",
    "}"
  ],
  "size": {
    "chain": 36,
    "contra": 0,
    "min_set": 4
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 378,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 384,
          "bound": null
        },
        {
          "cond": "begin <= end",
          "norm": null,
          "value": "true",
          "line": 391,
          "bound": "begin == end"
        },
        {
          "cond": "end <= len",
          "norm": null,
          "value": "true",
          "line": 397,
          "bound": "end == len"
        },
        {
          "cond": "end == begin",
          "norm": "begin == end",
          "value": "true",
          "line": 403,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        6,
        11,
        12,
        16,
        21,
        22,
        27,
        32,
        38,
        39
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 378,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 384,
          "bound": null
        },
        {
          "cond": "begin <= end",
          "norm": null,
          "value": "true",
          "line": 391,
          "bound": "begin == end"
        },
        {
          "cond": "end <= len",
          "norm": null,
          "value": "true",
          "line": 397,
          "bound": "end == len"
        },
        {
          "cond": "end == begin",
          "norm": "begin == end",
          "value": "false",
          "line": 403,
          "bound": null
        }
      ],
      "ret": "ret",
      "path": [
        0,
        1,
        2,
        6,
        11,
        12,
        16,
        21,
        22,
        27,
        33,
        34,
        35,
        36,
        37,
        39
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 378,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 384,
          "bound": null
        },
        {
          "cond": "begin <= end",
          "norm": null,
          "value": "true",
          "line": 391,
          "bound": "begin == end"
        },
        {
          "cond": "end <= len",
          "norm": null,
          "value": "false",
          "line": 397,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        6,
        11,
        12,
        16,
        21,
        22,
        28,
        29,
        30,
        31,
        41,
        42
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 378,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 384,
          "bound": null
        },
        {
          "cond": "begin <= end",
          "norm": null,
          "value": "false",
          "line": 391,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        6,
        11,
        12,
        16,
        21,
        23,
        24,
        25,
        26,
        41,
        42
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 378,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Excluded(&n)",
          "norm": null,
          "value": "true",
          "line": 384,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Excluded(&n)",
          "norm": null,
          "value": "true",
          "line": 384,
          "bound": null
        },
        {
          "cond": "begin <= end",
          "norm": null,
          "value": "true",
          "line": 391,
          "bound": "begin == end"
        },
        {
          "cond": "end <= len",
          "norm": null,
          "value": "true",
          "line": 397,
          "bound": "end == len"
        },
        {
          "cond": "end == begin",
          "norm": "begin == end",
          "value": "true",
          "line": 403,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        6,
        11,
        12,
        15,
        20,
        21,
        22,
        27,
        32,
        38,
        39
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 378,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Excluded(&n)",
          "norm": null,
          "value": "true",
          "line": 384,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Excluded(&n)",
          "norm": null,
          "value": "true",
          "line": 384,
          "bound": null
        },
        {
          "cond": "begin <= end",
          "norm": null,
          "value": "true",
          "line": 391,
          "bound": "begin == end"
        },
        {
          "cond": "end <= len",
          "norm": null,
          "value": "true",
          "line": 397,
          "bound": "end == len"
        },
        {
          "cond": "end == begin",
          "norm": "begin == end",
          "value": "false",
          "line": 403,
          "bound": null
        }
      ],
      "ret": "ret",
      "path": [
        0,
        1,
        2,
        6,
        11,
        12,
        15,
        20,
        21,
        22,
        27,
        33,
        34,
        35,
        36,
        37,
        39
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 378,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Excluded(&n)",
          "norm": null,
          "value": "true",
          "line": 384,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Excluded(&n)",
          "norm": null,
          "value": "true",
          "line": 384,
          "bound": null
        },
        {
          "cond": "begin <= end",
          "norm": null,
          "value": "true",
          "line": 391,
          "bound": "begin == end"
        },
        {
          "cond": "end <= len",
          "norm": null,
          "value": "false",
          "line": 397,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        6,
        11,
        12,
        15,
        20,
        21,
        22,
        28,
        29,
        30,
        31,
        41,
        42
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 8,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 378,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Excluded(&n)",
          "norm": null,
          "value": "true",
          "line": 384,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Excluded(&n)",
          "norm": null,
          "value": "true",
          "line": 384,
          "bound": null
        },
        {
          "cond": "begin <= end",
          "norm": null,
          "value": "false",
          "line": 391,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        6,
        11,
        12,
        15,
        20,
        21,
        23,
        24,
        25,
        26,
        41,
        42
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 9,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 378,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Included(&n)",
          "norm": null,
          "value": "true",
          "line": 384,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Included(&n)",
          "norm": null,
          "value": "true",
          "line": 384,
          "bound": null
        },
        {
          "cond": "begin <= end",
          "norm": null,
          "value": "true",
          "line": 391,
          "bound": "begin == end"
        },
        {
          "cond": "end <= len",
          "norm": null,
          "value": "true",
          "line": 397,
          "bound": "end == len"
        },
        {
          "cond": "end == begin",
          "norm": "begin == end",
          "value": "true",
          "line": 403,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        6,
        11,
        12,
        14,
        17,
        18,
        19,
        21,
        22,
        27,
        32,
        38,
        39
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 10,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 378,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Included(&n)",
          "norm": null,
          "value": "true",
          "line": 384,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Included(&n)",
          "norm": null,
          "value": "true",
          "line": 384,
          "bound": null
        },
        {
          "cond": "begin <= end",
          "norm": null,
          "value": "true",
          "line": 391,
          "bound": "begin == end"
        },
        {
          "cond": "end <= len",
          "norm": null,
          "value": "true",
          "line": 397,
          "bound": "end == len"
        },
        {
          "cond": "end == begin",
          "norm": "begin == end",
          "value": "false",
          "line": 403,
          "bound": null
        }
      ],
      "ret": "ret",
      "path": [
        0,
        1,
        2,
        6,
        11,
        12,
        14,
        17,
        18,
        19,
        21,
        22,
        27,
        33,
        34,
        35,
        36,
        37,
        39
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 11,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 378,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Included(&n)",
          "norm": null,
          "value": "true",
          "line": 384,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Included(&n)",
          "norm": null,
          "value": "true",
          "line": 384,
          "bound": null
        },
        {
          "cond": "begin <= end",
          "norm": null,
          "value": "true",
          "line": 391,
          "bound": "begin == end"
        },
        {
          "cond": "end <= len",
          "norm": null,
          "value": "false",
          "line": 397,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        6,
        11,
        12,
        14,
        17,
        18,
        19,
        21,
        22,
        28,
        29,
        30,
        31,
        41,
        42
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 12,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 378,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Included(&n)",
          "norm": null,
          "value": "true",
          "line": 384,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Included(&n)",
          "norm": null,
          "value": "true",
          "line": 384,
          "bound": null
        },
        {
          "cond": "begin <= end",
          "norm": null,
          "value": "false",
          "line": 391,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        6,
        11,
        12,
        14,
        17,
        18,
        19,
        21,
        23,
        24,
        25,
        26,
        41,
        42
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 13,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Excluded(&n)",
          "norm": null,
          "value": "true",
          "line": 378,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Excluded(&n)",
          "norm": null,
          "value": "true",
          "line": 378,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 384,
          "bound": null
        },
        {
          "cond": "begin <= end",
          "norm": null,
          "value": "true",
          "line": 391,
          "bound": "begin == end"
        },
        {
          "cond": "end <= len",
          "norm": null,
          "value": "true",
          "line": 397,
          "bound": "end == len"
        },
        {
          "cond": "end == begin",
          "norm": "begin == end",
          "value": "true",
          "line": 403,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        11,
        12,
        16,
        21,
        22,
        27,
        32,
        38,
        39
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 14,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Excluded(&n)",
          "norm": null,
          "value": "true",
          "line": 378,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Excluded(&n)",
          "norm": null,
          "value": "true",
          "line": 378,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 384,
          "bound": null
        },
        {
          "cond": "begin <= end",
          "norm": null,
          "value": "true",
          "line": 391,
          "bound": "begin == end"
        },
        {
          "cond": "end <= len",
          "norm": null,
          "value": "true",
          "line": 397,
          "bound": "end == len"
        },
        {
          "cond": "end == begin",
          "norm": "begin == end",
          "value": "false",
          "line": 403,
          "bound": null
        }
      ],
      "ret": "ret",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        11,
        12,
        16,
        21,
        22,
        27,
        33,
        34,
        35,
        36,
        37,
        39
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 15,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Excluded(&n)",
          "norm": null,
          "value": "true",
          "line": 378,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Excluded(&n)",
          "norm": null,
          "value": "true",
          "line": 378,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 384,
          "bound": null
        },
        {
          "cond": "begin <= end",
          "norm": null,
          "value": "true",
          "line": 391,
          "bound": "begin == end"
        },
        {
          "cond": "end <= len",
          "norm": null,
          "value": "false",
          "line": 397,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        11,
        12,
        16,
        21,
        22,
        28,
        29,
        30,
        31,
        41,
        42
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 16,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Excluded(&n)",
          "norm": null,
          "value": "true",
          "line": 378,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Excluded(&n)",
          "norm": null,
          "value": "true",
          "line": 378,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 384,
          "bound": null
        },
        {
          "cond": "begin <= end",
          "norm": null,
          "value": "false",
          "line": 391,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        11,
        12,
        16,
        21,
        23,
        24,
        25,
        26,
        41,
        42
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 17,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Excluded(&n)",
          "norm": null,
          "value": "true",
          "line": 378,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Excluded(&n)",
          "norm": null,
          "value": "true",
          "line": 378,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Excluded(&n)",
          "norm": null,
          "value": "true",
          "line": 384,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Excluded(&n)",
          "norm": null,
          "value": "true",
          "line": 384,
          "bound": null
        },
        {
          "cond": "begin <= end",
          "norm": null,
          "value": "true",
          "line": 391,
          "bound": "begin == end"
        },
        {
          "cond": "end <= len",
          "norm": null,
          "value": "true",
          "line": 397,
          "bound": "end == len"
        },
        {
          "cond": "end == begin",
          "norm": "begin == end",
          "value": "true",
          "line": 403,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        11,
        12,
        15,
        20,
        21,
        22,
        27,
        32,
        38,
        39
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 18,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Excluded(&n)",
          "norm": null,
          "value": "true",
          "line": 378,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Excluded(&n)",
          "norm": null,
          "value": "true",
          "line": 378,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Excluded(&n)",
          "norm": null,
          "value": "true",
          "line": 384,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Excluded(&n)",
          "norm": null,
          "value": "true",
          "line": 384,
          "bound": null
        },
        {
          "cond": "begin <= end",
          "norm": null,
          "value": "true",
          "line": 391,
          "bound": "begin == end"
        },
        {
          "cond": "end <= len",
          "norm": null,
          "value": "true",
          "line": 397,
          "bound": "end == len"
        },
        {
          "cond": "end == begin",
          "norm": "begin == end",
          "value": "false",
          "line": 403,
          "bound": null
        }
      ],
      "ret": "ret",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        11,
        12,
        15,
        20,
        21,
        22,
        27,
        33,
        34,
        35,
        36,
        37,
        39
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 19,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Excluded(&n)",
          "norm": null,
          "value": "true",
          "line": 378,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Excluded(&n)",
          "norm": null,
          "value": "true",
          "line": 378,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Excluded(&n)",
          "norm": null,
          "value": "true",
          "line": 384,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Excluded(&n)",
          "norm": null,
          "value": "true",
          "line": 384,
          "bound": null
        },
        {
          "cond": "begin <= end",
          "norm": null,
          "value": "true",
          "line": 391,
          "bound": "begin == end"
        },
        {
          "cond": "end <= len",
          "norm": null,
          "value": "false",
          "line": 397,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        11,
        12,
        15,
        20,
        21,
        22,
        28,
        29,
        30,
        31,
        41,
        42
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 20,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Excluded(&n)",
          "norm": null,
          "value": "true",
          "line": 378,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Excluded(&n)",
          "norm": null,
          "value": "true",
          "line": 378,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Excluded(&n)",
          "norm": null,
          "value": "true",
          "line": 384,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Excluded(&n)",
          "norm": null,
          "value": "true",
          "line": 384,
          "bound": null
        },
        {
          "cond": "begin <= end",
          "norm": null,
          "value": "false",
          "line": 391,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        11,
        12,
        15,
        20,
        21,
        23,
        24,
        25,
        26,
        41,
        42
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 21,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Excluded(&n)",
          "norm": null,
          "value": "true",
          "line": 378,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Excluded(&n)",
          "norm": null,
          "value": "true",
          "line": 378,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Included(&n)",
          "norm": null,
          "value": "true",
          "line": 384,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Included(&n)",
          "norm": null,
          "value": "true",
          "line": 384,
          "bound": null
        },
        {
          "cond": "begin <= end",
          "norm": null,
          "value": "true",
          "line": 391,
          "bound": "begin == end"
        },
        {
          "cond": "end <= len",
          "norm": null,
          "value": "true",
          "line": 397,
          "bound": "end == len"
        },
        {
          "cond": "end == begin",
          "norm": "begin == end",
          "value": "true",
          "line": 403,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        11,
        12,
        14,
        17,
        18,
        19,
        21,
        22,
        27,
        32,
        38,
        39
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 22,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Excluded(&n)",
          "norm": null,
          "value": "true",
          "line": 378,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Excluded(&n)",
          "norm": null,
          "value": "true",
          "line": 378,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Included(&n)",
          "norm": null,
          "value": "true",
          "line": 384,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Included(&n)",
          "norm": null,
          "value": "true",
          "line": 384,
          "bound": null
        },
        {
          "cond": "begin <= end",
          "norm": null,
          "value": "true",
          "line": 391,
          "bound": "begin == end"
        },
        {
          "cond": "end <= len",
          "norm": null,
          "value": "true",
          "line": 397,
          "bound": "end == len"
        },
        {
          "cond": "end == begin",
          "norm": "begin == end",
          "value": "false",
          "line": 403,
          "bound": null
        }
      ],
      "ret": "ret",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        11,
        12,
        14,
        17,
        18,
        19,
        21,
        22,
        27,
        33,
        34,
        35,
        36,
        37,
        39
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 23,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Excluded(&n)",
          "norm": null,
          "value": "true",
          "line": 378,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Excluded(&n)",
          "norm": null,
          "value": "true",
          "line": 378,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Included(&n)",
          "norm": null,
          "value": "true",
          "line": 384,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Included(&n)",
          "norm": null,
          "value": "true",
          "line": 384,
          "bound": null
        },
        {
          "cond": "begin <= end",
          "norm": null,
          "value": "true",
          "line": 391,
          "bound": "begin == end"
        },
        {
          "cond": "end <= len",
          "norm": null,
          "value": "false",
          "line": 397,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        11,
        12,
        14,
        17,
        18,
        19,
        21,
        22,
        28,
        29,
        30,
        31,
        41,
        42
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 24,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Excluded(&n)",
          "norm": null,
          "value": "true",
          "line": 378,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Excluded(&n)",
          "norm": null,
          "value": "true",
          "line": 378,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Included(&n)",
          "norm": null,
          "value": "true",
          "line": 384,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Included(&n)",
          "norm": null,
          "value": "true",
          "line": 384,
          "bound": null
        },
        {
          "cond": "begin <= end",
          "norm": null,
          "value": "false",
          "line": 391,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        11,
        12,
        14,
        17,
        18,
        19,
        21,
        23,
        24,
        25,
        26,
        41,
        42
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 25,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Included(&n)",
          "norm": null,
          "value": "true",
          "line": 378,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Included(&n)",
          "norm": null,
          "value": "true",
          "line": 378,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 384,
          "bound": null
        },
        {
          "cond": "begin <= end",
          "norm": null,
          "value": "true",
          "line": 391,
          "bound": "begin == end"
        },
        {
          "cond": "end <= len",
          "norm": null,
          "value": "true",
          "line": 397,
          "bound": "end == len"
        },
        {
          "cond": "end == begin",
          "norm": "begin == end",
          "value": "true",
          "line": 403,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        7,
        11,
        12,
        16,
        21,
        22,
        27,
        32,
        38,
        39
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 26,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Included(&n)",
          "norm": null,
          "value": "true",
          "line": 378,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Included(&n)",
          "norm": null,
          "value": "true",
          "line": 378,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 384,
          "bound": null
        },
        {
          "cond": "begin <= end",
          "norm": null,
          "value": "true",
          "line": 391,
          "bound": "begin == end"
        },
        {
          "cond": "end <= len",
          "norm": null,
          "value": "true",
          "line": 397,
          "bound": "end == len"
        },
        {
          "cond": "end == begin",
          "norm": "begin == end",
          "value": "false",
          "line": 403,
          "bound": null
        }
      ],
      "ret": "ret",
      "path": [
        0,
        1,
        2,
        4,
        7,
        11,
        12,
        16,
        21,
        22,
        27,
        33,
        34,
        35,
        36,
        37,
        39
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 27,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Included(&n)",
          "norm": null,
          "value": "true",
          "line": 378,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Included(&n)",
          "norm": null,
          "value": "true",
          "line": 378,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 384,
          "bound": null
        },
        {
          "cond": "begin <= end",
          "norm": null,
          "value": "true",
          "line": 391,
          "bound": "begin == end"
        },
        {
          "cond": "end <= len",
          "norm": null,
          "value": "false",
          "line": 397,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        7,
        11,
        12,
        16,
        21,
        22,
        28,
        29,
        30,
        31,
        41,
        42
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 28,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Included(&n)",
          "norm": null,
          "value": "true",
          "line": 378,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Included(&n)",
          "norm": null,
          "value": "true",
          "line": 378,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 384,
          "bound": null
        },
        {
          "cond": "begin <= end",
          "norm": null,
          "value": "false",
          "line": 391,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        7,
        11,
        12,
        16,
        21,
        23,
        24,
        25,
        26,
        41,
        42
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 29,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Included(&n)",
          "norm": null,
          "value": "true",
          "line": 378,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Included(&n)",
          "norm": null,
          "value": "true",
          "line": 378,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Excluded(&n)",
          "norm": null,
          "value": "true",
          "line": 384,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Excluded(&n)",
          "norm": null,
          "value": "true",
          "line": 384,
          "bound": null
        },
        {
          "cond": "begin <= end",
          "norm": null,
          "value": "true",
          "line": 391,
          "bound": "begin == end"
        },
        {
          "cond": "end <= len",
          "norm": null,
          "value": "true",
          "line": 397,
          "bound": "end == len"
        },
        {
          "cond": "end == begin",
          "norm": "begin == end",
          "value": "true",
          "line": 403,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        7,
        11,
        12,
        15,
        20,
        21,
        22,
        27,
        32,
        38,
        39
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 30,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Included(&n)",
          "norm": null,
          "value": "true",
          "line": 378,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Included(&n)",
          "norm": null,
          "value": "true",
          "line": 378,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Excluded(&n)",
          "norm": null,
          "value": "true",
          "line": 384,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Excluded(&n)",
          "norm": null,
          "value": "true",
          "line": 384,
          "bound": null
        },
        {
          "cond": "begin <= end",
          "norm": null,
          "value": "true",
          "line": 391,
          "bound": "begin == end"
        },
        {
          "cond": "end <= len",
          "norm": null,
          "value": "true",
          "line": 397,
          "bound": "end == len"
        },
        {
          "cond": "end == begin",
          "norm": "begin == end",
          "value": "false",
          "line": 403,
          "bound": null
        }
      ],
      "ret": "ret",
      "path": [
        0,
        1,
        2,
        4,
        7,
        11,
        12,
        15,
        20,
        21,
        22,
        27,
        33,
        34,
        35,
        36,
        37,
        39
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 31,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Included(&n)",
          "norm": null,
          "value": "true",
          "line": 378,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Included(&n)",
          "norm": null,
          "value": "true",
          "line": 378,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Excluded(&n)",
          "norm": null,
          "value": "true",
          "line": 384,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Excluded(&n)",
          "norm": null,
          "value": "true",
          "line": 384,
          "bound": null
        },
        {
          "cond": "begin <= end",
          "norm": null,
          "value": "true",
          "line": 391,
          "bound": "begin == end"
        },
        {
          "cond": "end <= len",
          "norm": null,
          "value": "false",
          "line": 397,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        7,
        11,
        12,
        15,
        20,
        21,
        22,
        28,
        29,
        30,
        31,
        41,
        42
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 32,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Included(&n)",
          "norm": null,
          "value": "true",
          "line": 378,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Included(&n)",
          "norm": null,
          "value": "true",
          "line": 378,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Excluded(&n)",
          "norm": null,
          "value": "true",
          "line": 384,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Excluded(&n)",
          "norm": null,
          "value": "true",
          "line": 384,
          "bound": null
        },
        {
          "cond": "begin <= end",
          "norm": null,
          "value": "false",
          "line": 391,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        7,
        11,
        12,
        15,
        20,
        21,
        23,
        24,
        25,
        26,
        41,
        42
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 33,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Included(&n)",
          "norm": null,
          "value": "true",
          "line": 378,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Included(&n)",
          "norm": null,
          "value": "true",
          "line": 378,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Included(&n)",
          "norm": null,
          "value": "true",
          "line": 384,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Included(&n)",
          "norm": null,
          "value": "true",
          "line": 384,
          "bound": null
        },
        {
          "cond": "begin <= end",
          "norm": null,
          "value": "true",
          "line": 391,
          "bound": "begin == end"
        },
        {
          "cond": "end <= len",
          "norm": null,
          "value": "true",
          "line": 397,
          "bound": "end == len"
        },
        {
          "cond": "end == begin",
          "norm": "begin == end",
          "value": "true",
          "line": 403,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        7,
        11,
        12,
        14,
        17,
        18,
        19,
        21,
        22,
        27,
        32,
        38,
        39
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 34,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Included(&n)",
          "norm": null,
          "value": "true",
          "line": 378,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Included(&n)",
          "norm": null,
          "value": "true",
          "line": 378,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Included(&n)",
          "norm": null,
          "value": "true",
          "line": 384,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Included(&n)",
          "norm": null,
          "value": "true",
          "line": 384,
          "bound": null
        },
        {
          "cond": "begin <= end",
          "norm": null,
          "value": "true",
          "line": 391,
          "bound": "begin == end"
        },
        {
          "cond": "end <= len",
          "norm": null,
          "value": "true",
          "line": 397,
          "bound": "end == len"
        },
        {
          "cond": "end == begin",
          "norm": "begin == end",
          "value": "false",
          "line": 403,
          "bound": null
        }
      ],
      "ret": "ret",
      "path": [
        0,
        1,
        2,
        4,
        7,
        11,
        12,
        14,
        17,
        18,
        19,
        21,
        22,
        27,
        33,
        34,
        35,
        36,
        37,
        39
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 35,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Included(&n)",
          "norm": null,
          "value": "true",
          "line": 378,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Included(&n)",
          "norm": null,
          "value": "true",
          "line": 378,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Included(&n)",
          "norm": null,
          "value": "true",
          "line": 384,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Included(&n)",
          "norm": null,
          "value": "true",
          "line": 384,
          "bound": null
        },
        {
          "cond": "begin <= end",
          "norm": null,
          "value": "true",
          "line": 391,
          "bound": "begin == end"
        },
        {
          "cond": "end <= len",
          "norm": null,
          "value": "false",
          "line": 397,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        7,
        11,
        12,
        14,
        17,
        18,
        19,
        21,
        22,
        28,
        29,
        30,
        31,
        41,
        42
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 36,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Included(&n)",
          "norm": null,
          "value": "true",
          "line": 378,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Included(&n)",
          "norm": null,
          "value": "true",
          "line": 378,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Included(&n)",
          "norm": null,
          "value": "true",
          "line": 384,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Included(&n)",
          "norm": null,
          "value": "true",
          "line": 384,
          "bound": null
        },
        {
          "cond": "begin <= end",
          "norm": null,
          "value": "false",
          "line": 391,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        7,
        11,
        12,
        14,
        17,
        18,
        19,
        21,
        23,
        24,
        25,
        26,
        41,
        42
      ],
      "may_contra": false,
      "min_set": false
    }
  ]
}