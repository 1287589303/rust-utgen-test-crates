{
  "name": "bytes::bytes::promotable_to_vec",
  "mod_info": {
    "name": "bytes",
    "loc": "src/lib.rs:82:1:82:11"
  },
  "visible": false,
  "loc": "src/bytes.rs:1221:1:1245:2",
  "doc": "",
  "code": [
    "unsafe fn promotable_to_vec(",
    "    data: &AtomicPtr<()>,",
    "    ptr: *const u8,",
    "    len: usize,",
    "    f: fn(*mut ()) -> *mut u8,",
    ") -> Vec<u8> {",
    "    let shared = data.load(Ordering::Acquire);",
    "    let kind = shared as usize & KIND_MASK;",
    "",
    "    if kind == KIND_ARC {",
    "        shared_to_vec_impl(shared.cast(), ptr, len)",
    "    } else {",
    "        // If Bytes holds a Vec, then the offset must be 0.",
    "        debug_assert_eq!(kind, KIND_VEC);",
    "",
    "        let buf = f(shared);",
    "",
    "        let cap = offset_from(ptr, buf) + len;",
    "",
    "        // Copy back buffer",
    "        ptr::copy(ptr, buf, len);",
    "",
    "        Vec::from_raw_parts(buf, len, cap)",
    "    }",
    "}"
  ],
  "size": {
    "chain": 3,
    "contra": 0,
    "min_set": 3
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "kind == KIND_ARC",
          "norm": "KIND_ARC == kind",
          "value": "true",
          "line": 1230,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        16
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "kind == KIND_ARC",
          "norm": "KIND_ARC == kind",
          "value": "false",
          "line": 1230,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        5,
        6,
        7,
        10,
        11,
        12,
        13,
        14,
        15,
        16
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "kind == KIND_ARC",
          "norm": "KIND_ARC == kind",
          "value": "false",
          "line": 1230,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "false",
          "line": 40,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        5,
        6,
        8,
        17
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}