bb0
  0: StorageLive(_4)
    SourceInfo(src/bytes.rs:1351:9-1351:12)
  1: StorageLive(_5)
    SourceInfo(src/bytes.rs:1351:15-1351:39)
  2: StorageLive(_6)
    SourceInfo(src/bytes.rs:1351:27-1351:33)
  3: _6 = _2
    SourceInfo(src/bytes.rs:1351:27-1351:33)
  4: StorageLive(_7)
    SourceInfo(src/bytes.rs:1351:35-1351:38)
  5: StorageLive(_8)
    SourceInfo(src/bytes.rs:1351:35-1351:38)
  6: _8 = _1
    SourceInfo(src/bytes.rs:1351:35-1351:38)
  7: _7 = move _8 as *const u8 (PointerCoercion(MutToConstPointer))
    SourceInfo(src/bytes.rs:1351:35-1351:38)
  8: StorageDead(_8)
    SourceInfo(src/bytes.rs:1351:37-1351:38)
  Terminator {
      source_info: SourceInfo(src/bytes.rs:1351:15-1351:39)
      kind: _5 = offset_from(move _6, move _7) -> [return: bb1, unwind: bb6]
  }
  preds []
  succs [bb1, bb6]

bb1
  0: StorageDead(_7)
    SourceInfo(src/bytes.rs:1351:38-1351:39)
  1: StorageDead(_6)
    SourceInfo(src/bytes.rs:1351:38-1351:39)
  2: StorageLive(_9)
    SourceInfo(src/bytes.rs:1351:42-1351:45)
  3: _9 = _3
    SourceInfo(src/bytes.rs:1351:42-1351:45)
  4: _10 = AddWithOverflow(_5, _9)
    SourceInfo(src/bytes.rs:1351:15-1351:45)
  Terminator {
      source_info: SourceInfo(src/bytes.rs:1351:15-1351:45)
      kind: assert(!move (_10.1: bool), "attempt to compute `{} + {}`, which would overflow", move _5, move _9) -> [success: bb2, unwind: bb6]
  }
  preds [bb0]
  succs [bb2, bb6]

bb2
  0: _4 = move (_10.0: usize)
    SourceInfo(src/bytes.rs:1351:15-1351:45)
  1: StorageDead(_9)
    SourceInfo(src/bytes.rs:1351:44-1351:45)
  2: StorageDead(_5)
    SourceInfo(src/bytes.rs:1351:44-1351:45)
  3: FakeRead(ForLet(None), _4)
    SourceInfo(src/bytes.rs:1351:9-1351:12)
  4: StorageLive(_11)
    SourceInfo(src/bytes.rs:1352:13-1352:16)
  5: _11 = _1
    SourceInfo(src/bytes.rs:1352:13-1352:16)
  6: StorageLive(_12)
    SourceInfo(src/bytes.rs:1352:18-1352:58)
  7: StorageLive(_13)
    SourceInfo(src/bytes.rs:1352:18-1352:49)
  8: StorageLive(_14)
    SourceInfo(src/bytes.rs:1352:42-1352:45)
  9: _14 = _4
    SourceInfo(src/bytes.rs:1352:42-1352:45)
  Terminator {
      source_info: SourceInfo(src/bytes.rs:1352:18-1352:49)
      kind: _13 = core::alloc::Layout::from_size_align(move _14, const 1_usize) -> [return: bb3, unwind: bb6]
  }
  preds [bb1]
  succs [bb3, bb6]

bb3
  0: StorageDead(_14)
    SourceInfo(src/bytes.rs:1352:48-1352:49)
  Terminator {
      source_info: SourceInfo(src/bytes.rs:1352:18-1352:58)
      kind: _12 = core::result::Result::<core::alloc::Layout, core::alloc::LayoutError>::unwrap(move _13) -> [return: bb4, unwind: bb6]
  }
  preds [bb2]
  succs [bb4, bb6]

bb4
  0: StorageDead(_13)
    SourceInfo(src/bytes.rs:1352:57-1352:58)
  Terminator {
      source_info: SourceInfo(src/bytes.rs:1352:5-1352:59)
      kind: _0 = alloc::alloc::dealloc(move _11, move _12) -> [return: bb5, unwind: bb6]
  }
  preds [bb3]
  succs [bb5, bb6]

bb5
  0: StorageDead(_12)
    SourceInfo(src/bytes.rs:1352:58-1352:59)
  1: StorageDead(_11)
    SourceInfo(src/bytes.rs:1352:58-1352:59)
  2: StorageDead(_4)
    SourceInfo(src/bytes.rs:1353:1-1353:2)
  Terminator {
      source_info: SourceInfo(src/bytes.rs:1353:2-1353:2)
      kind: return
  }
  preds [bb4]
  succs []

bb6
  Terminator {
      source_info: SourceInfo(src/bytes.rs:1350:1-1353:2)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3, bb4]
  succs []

