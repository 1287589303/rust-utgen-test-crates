[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            _2 = ((*((*_1).3: &bytes::Vtable)).0: for<'a> unsafe fn(&'a core::sync::atomic::AtomicPtr<()>, *const u8, usize) -> bytes::Bytes),
            StorageLive(_3),
            StorageLive(_4),
            _4 = &((*_1).2: core::sync::atomic::AtomicPtr<()>),
            _3 = &(*_4),
            StorageLive(_5),
            _5 = ((*_1).0: *const u8),
            StorageLive(_6),
            _6 = ((*_1).1: usize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/bytes.rs:694:18: 694:69 (#0),
                    scope: scope[0],
                },
                kind: _0 = move _2(move _3, move _5, move _6) -> [return: bb1, unwind: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
            StorageDead(_5),
            StorageDead(_3),
            StorageDead(_2),
            StorageDead(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/bytes.rs:695:6: 695:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/bytes.rs:693:5: 695:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bytes::Bytes,
        user_ty: None,
        source_info: SourceInfo {
            span: src/bytes.rs:693:24: 693:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} bytes::Bytes,
        user_ty: None,
        source_info: SourceInfo {
            span: src/bytes.rs:693:14: 693:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/bytes.rs:694:18: 694:69 (#0),
                },
            ),
        ),
        ty: Binder { value: unsafe fn(&'^0.Named(DefId(0:1773 ~ bytes[5d47]::bytes::Vtable::'_), "'_") core::sync::atomic::AtomicPtr<()>, *const u8, usize) -> bytes::Bytes, bound_vars: [Region(BrNamed(DefId(0:1773 ~ bytes[5d47]::bytes::Vtable::'_), '_))] },
        user_ty: None,
        source_info: SourceInfo {
            span: src/bytes.rs:694:18: 694:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/bytes.rs:694:18: 694:69 (#0),
                },
            ),
        ),
        ty: &'{erased} core::sync::atomic::AtomicPtr<()>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/bytes.rs:694:38: 694:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/bytes.rs:694:18: 694:69 (#0),
                },
            ),
        ),
        ty: &'{erased} core::sync::atomic::AtomicPtr<()>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/bytes.rs:694:38: 694:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/bytes.rs:694:18: 694:69 (#0),
                },
            ),
        ),
        ty: *const u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/bytes.rs:694:50: 694:58 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/bytes.rs:694:18: 694:69 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/bytes.rs:694:60: 694:68 (#0),
            scope: scope[0],
        },
    },
]