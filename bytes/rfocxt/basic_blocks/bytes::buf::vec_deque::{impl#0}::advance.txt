[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            StorageLive(_4),
            _4 = &mut (*_1),
            StorageLive(_5),
            StorageLive(_6),
            _6 = _2,
            _5 = core::ops::RangeTo::<usize> { end: move _6 },
            StorageDead(_6),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/vec_deque.rs:38:9: 38:26 (#0),
                    scope: scope[0],
                },
                kind: _3 = alloc::collections::VecDeque::<u8>::drain::<core::ops::RangeTo<usize>>(move _4, move _5) -> [return: bb1, unwind: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
            StorageDead(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/vec_deque.rs:38:26: 38:27 (#0),
                    scope: scope[0],
                },
                kind: drop(_3) -> [return: bb2, unwind: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
            _0 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/vec_deque.rs:39:6: 39:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/vec_deque.rs:37:5: 39:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/vec_deque.rs:37:38: 37:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefMut,
                ),
            ),
        ),
        ty: &'{erased} mut alloc::collections::VecDeque<u8, alloc::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/vec_deque.rs:37:16: 37:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/buf/vec_deque.rs:37:32: 37:37 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/buf/vec_deque.rs:37:27: 37:30 (#0),
                            ),
                        ),
                        pat_span: src/buf/vec_deque.rs:37:27: 37:30 (#0),
                    },
                ),
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/vec_deque.rs:37:27: 37:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: alloc::collections::vec_deque::Drain<'{erased}, u8, alloc::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/vec_deque.rs:38:9: 38:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut alloc::collections::VecDeque<u8, alloc::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/vec_deque.rs:38:9: 38:13 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::RangeTo<usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/vec_deque.rs:38:20: 38:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/vec_deque.rs:38:22: 38:25 (#0),
            scope: scope[0],
        },
    },
]