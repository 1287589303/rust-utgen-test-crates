[
    BasicBlockData {
        statements: [
            StorageLive(_4),
            StorageLive(_5),
            StorageLive(_6),
            StorageLive(_7),
            _7 = &(*(*_1)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/buf_mut.rs:1584:12: 1584:22 (#0),
                    scope: scope[0],
                },
                kind: _6 = core::slice::<impl [core::mem::MaybeUninit<u8>]>::len(move _7) -> [return: bb1, unwind: bb8],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_7),
            StorageLive(_8),
            _8 = _3,
            _5 = Lt(move _6, move _8),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/buf_mut.rs:1584:12: 1584:28 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _5) -> [0: bb4, otherwise: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_8),
            StorageDead(_6),
            StorageLive(_10),
            StorageLive(_11),
            StorageLive(_12),
            StorageLive(_13),
            StorageLive(_14),
            _14 = _3,
            StorageLive(_15),
            StorageLive(_16),
            _16 = &(*(*_1)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/buf_mut.rs:1587:28: 1587:38 (#0),
                    scope: scope[0],
                },
                kind: _15 = core::slice::<impl [core::mem::MaybeUninit<u8>]>::len(move _16) -> [return: bb3, unwind: bb8],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_16),
            _13 = TryGetError { requested: move _14, available: move _15 },
            StorageDead(_15),
            StorageDead(_14),
            _12 = &_13,
            _11 = &(*_12),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/buf_mut.rs:1585:13: 1588:15 (#0),
                    scope: scope[0],
                },
                kind: _10 = panic_advance(move _11) -> bb8,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_8),
            StorageDead(_6),
            _4 = const (),
            StorageDead(_5),
            StorageDead(_4),
            StorageLive(_17),
            StorageLive(_18),
            StorageLive(_19),
            StorageLive(_20),
            _20 = &mut (*(*_1)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/buf_mut.rs:1593:30: 1593:47 (#0),
                    scope: scope[0],
                },
                kind: _19 = core::slice::<impl [core::mem::MaybeUninit<u8>]>::as_mut_ptr(move _20) -> [return: bb5, unwind: bb8],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_20),
            _18 = move _19 as *mut u8 (PtrToPtr),
            StorageDead(_19),
            StorageLive(_21),
            _21 = _2,
            StorageLive(_22),
            _22 = _3,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/buf_mut.rs:1593:13: 1593:69 (#0),
                    scope: scope[0],
                },
                kind: _17 = core::intrinsics::write_bytes::<u8>(move _18, move _21, move _22) -> [return: bb6, unwind: bb8],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_22),
            StorageDead(_21),
            StorageDead(_18),
            StorageDead(_17),
            StorageLive(_23),
            StorageLive(_24),
            _24 = &mut (*_1),
            StorageLive(_25),
            _25 = _3,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/buf_mut.rs:1594:13: 1594:34 (#0),
                    scope: scope[0],
                },
                kind: _23 = <&mut [core::mem::MaybeUninit<u8>] as buf::buf_mut::BufMut>::advance_mut(move _24, move _25) -> [return: bb7, unwind: bb8],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_25),
            StorageDead(_24),
            StorageDead(_23),
            _0 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/buf_mut.rs:1596:6: 1596:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/buf_mut.rs:1583:5: 1596:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:1583:49: 1583:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefMut,
                ),
            ),
        ),
        ty: &'{erased} mut &'{erased} mut [core::mem::MaybeUninit<u8>],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:1583:18: 1583:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/buf/buf_mut.rs:1583:34: 1583:36 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/buf/buf_mut.rs:1583:29: 1583:32 (#0),
                            ),
                        ),
                        pat_span: src/buf/buf_mut.rs:1583:29: 1583:32 (#0),
                    },
                ),
            ),
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:1583:29: 1583:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/buf/buf_mut.rs:1583:43: 1583:48 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/buf/buf_mut.rs:1583:38: 1583:41 (#0),
                            ),
                        ),
                        pat_span: src/buf/buf_mut.rs:1583:38: 1583:41 (#0),
                    },
                ),
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:1583:38: 1583:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:1584:9: 1589:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:1584:12: 1584:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:1584:12: 1584:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [core::mem::MaybeUninit<u8>],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:1584:12: 1584:16 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:1584:25: 1584:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:1584:29: 1589:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:1585:13: 1588:15 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} TryGetError,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:1585:27: 1588:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} TryGetError,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:1585:27: 1588:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: TryGetError,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:1585:28: 1588:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:1586:28: 1586:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:1587:28: 1587:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [core::mem::MaybeUninit<u8>],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:1587:28: 1587:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:1593:13: 1593:69 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:1593:30: 1593:58 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *mut core::mem::MaybeUninit<u8>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:1593:30: 1593:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut [core::mem::MaybeUninit<u8>],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:1593:30: 1593:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:1593:60: 1593:63 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:1593:65: 1593:68 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:1594:13: 1594:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut &'{erased} mut [core::mem::MaybeUninit<u8>],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:1594:13: 1594:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:1594:30: 1594:33 (#0),
            scope: scope[0],
        },
    },
]