[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            _2 = ((*((*_1).3: &bytes::Vtable)).3: for<'a> unsafe fn(&'a core::sync::atomic::AtomicPtr<()>) -> bool),
            StorageLive(_3),
            StorageLive(_4),
            _4 = &((*_1).2: core::sync::atomic::AtomicPtr<()>),
            _3 = &(*_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/bytes.rs:343:18: 343:53 (#0),
                    scope: scope[0],
                },
                kind: _0 = move _2(move _3) -> [return: bb1, unwind: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
            StorageDead(_2),
            StorageDead(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/bytes.rs:344:6: 344:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/bytes.rs:342:5: 344:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/bytes.rs:342:32: 342:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} bytes::Bytes,
        user_ty: None,
        source_info: SourceInfo {
            span: src/bytes.rs:342:22: 342:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/bytes.rs:343:18: 343:53 (#0),
                },
            ),
        ),
        ty: Binder { value: unsafe fn(&'^0.Named(DefId(0:1776 ~ bytes[5d47]::bytes::Vtable::'_#3), "'_") core::sync::atomic::AtomicPtr<()>) -> bool, bound_vars: [Region(BrNamed(DefId(0:1776 ~ bytes[5d47]::bytes::Vtable::'_#3), '_))] },
        user_ty: None,
        source_info: SourceInfo {
            span: src/bytes.rs:343:18: 343:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/bytes.rs:343:18: 343:53 (#0),
                },
            ),
        ),
        ty: &'{erased} core::sync::atomic::AtomicPtr<()>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/bytes.rs:343:42: 343:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/bytes.rs:343:18: 343:53 (#0),
                },
            ),
        ),
        ty: &'{erased} core::sync::atomic::AtomicPtr<()>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/bytes.rs:343:42: 343:52 (#0),
            scope: scope[0],
        },
    },
]