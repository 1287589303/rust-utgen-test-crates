[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            StorageLive(_4),
            _4 = &((*_1).0: T),
            StorageLive(_5),
            _5 = &mut (*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/chain.rs:167:21: 167:48 (#0),
                    scope: scope[0],
                },
                kind: _3 = <T as buf::buf_impl::Buf>::chunks_vectored(move _4, move _5) -> [return: bb1, unwind: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
            StorageDead(_4),
            FakeRead(ForLet(None), _3),
            StorageLive(_6),
            StorageLive(_7),
            _7 = &((*_1).1: U),
            StorageLive(_8),
            StorageLive(_9),
            StorageLive(_10),
            StorageLive(_11),
            _11 = &mut (*_2),
            StorageLive(_12),
            StorageLive(_13),
            _13 = _3,
            _12 = core::ops::RangeFrom::<usize> { start: move _13 },
            StorageDead(_13),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/chain.rs:168:45: 168:50 (#0),
                    scope: scope[1],
                },
                kind: _10 = <[std::io::IoSlice<'_>] as core::ops::IndexMut<core::ops::RangeFrom<usize>>>::index_mut(move _11, move _12) -> [return: bb2, unwind: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_12),
            StorageDead(_11),
            _9 = &mut (*_10),
            _8 = &mut (*_9),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/chain.rs:168:14: 168:51 (#0),
                    scope: scope[1],
                },
                kind: _6 = <U as buf::buf_impl::Buf>::chunks_vectored(move _7, move _8) -> [return: bb3, unwind: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_8),
            StorageDead(_7),
            _14 = AddWithOverflow(_3, _6),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/chain.rs:168:9: 168:51 (#0),
                    scope: scope[1],
                },
                kind: assert(!move (_14.1: bool), "attempt to compute `{} + {}`, which would overflow", _3, move _6) -> [success: bb4, unwind: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _3 = move (_14.0: usize),
            StorageDead(_6),
            StorageDead(_10),
            StorageDead(_9),
            _0 = _3,
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/chain.rs:170:6: 170:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/chain.rs:166:5: 170:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/chain.rs:166:66: 166:71 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} buf::chain::Chain<T/#0, U/#1>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/chain.rs:166:28: 166:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/buf/chain.rs:166:43: 166:61 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/buf/chain.rs:166:38: 166:41 (#0),
                            ),
                        ),
                        pat_span: src/buf/chain.rs:166:38: 166:41 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut [std::io::IoSlice<'{erased}>],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/chain.rs:166:38: 166:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/buf/chain.rs:167:21: 167:48 (#0),
                            ),
                        ),
                        pat_span: src/buf/chain.rs:167:13: 167:18 (#0),
                    },
                ),
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/chain.rs:167:13: 167:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} T/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/chain.rs:167:21: 167:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut [std::io::IoSlice<'{erased}>],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/chain.rs:167:44: 167:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/chain.rs:168:14: 168:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} U/#1,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/chain.rs:168:14: 168:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut [std::io::IoSlice<'{erased}>],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/chain.rs:168:37: 168:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut [std::io::IoSlice<'{erased}>],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/chain.rs:168:37: 168:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut [std::io::IoSlice<'{erased}>],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/chain.rs:168:45: 168:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut [std::io::IoSlice<'{erased}>],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/chain.rs:168:42: 168:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::RangeFrom<usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/chain.rs:168:46: 168:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/chain.rs:168:46: 168:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (usize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/chain.rs:168:9: 168:51 (#0),
            scope: scope[0],
        },
    },
]