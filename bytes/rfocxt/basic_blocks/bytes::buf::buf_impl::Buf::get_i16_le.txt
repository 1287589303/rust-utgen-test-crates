[
    BasicBlockData {
        statements: [
            StorageLive(_4),
            StorageLive(_5),
            StorageLive(_6),
            StorageLive(_7),
            _7 = &mut _1,
            _6 = {closure@src/buf/buf_impl.rs:74:17: 74:19} { self: move _7 },
            _5 = &mut _6,
            StorageDead(_7),
            StorageLive(_8),
            _8 = (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/buf_impl.rs:74:16: 74:60 (#24),
                    scope: scope[0],
                },
                kind: _4 = <{closure@src/buf/buf_impl.rs:74:17: 74:19} as core::ops::FnMut<()>>::call_mut(move _5, move _8) -> [return: bb1, unwind: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_8),
            StorageDead(_5),
            StorageLive(_9),
            _9 = {closure@src/buf/buf_impl.rs:75:29: 75:36},
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/buf_impl.rs:74:16: 75:59 (#24),
                    scope: scope[0],
                },
                kind: _0 = core::result::Result::<i16, TryGetError>::unwrap_or_else::<{closure@src/buf/buf_impl.rs:75:29: 75:36}>(move _4, move _9) -> [return: bb2, unwind: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_9),
            StorageDead(_4),
            StorageDead(_6),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/buf_impl.rs:456:6: 456:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/buf_impl.rs:454:5: 456:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: i16,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_impl.rs:454:33: 454:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefMut,
                ),
            ),
        ),
        ty: &'{erased} mut Self/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_impl.rs:454:19: 454:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_impl.rs:454:37: 456:6 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_impl.rs:73:42: 76:6 (#24),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<i16, TryGetError>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_impl.rs:74:16: 74:60 (#24),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut Closure(DefId(0:996 ~ bytes[5d47]::buf::buf_impl::Buf::get_i16_le::{closure#0}), [Self/#0, i16, Binder { value: extern "RustCall" fn(()) -> core::result::Result<i16, TryGetError>, bound_vars: [] }, (&'{erased} mut &'{erased} mut Self/#0,)]),
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_impl.rs:74:16: 74:58 (#24),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: Closure(
            DefId(0:996 ~ bytes[5d47]::buf::buf_impl::Buf::get_i16_le::{closure#0}),
            [
                Self/#0,
                i16,
                Binder { value: extern "RustCall" fn(()) -> core::result::Result<i16, TryGetError>, bound_vars: [] },
                (&'{erased} mut &'{erased} mut Self/#0,),
            ],
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_impl.rs:74:16: 74:58 (#24),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut &'{erased} mut Self/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_impl.rs:74:16: 74:58 (#24),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_impl.rs:74:16: 74:60 (#24),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: Closure(
            DefId(0:997 ~ bytes[5d47]::buf::buf_impl::Buf::get_i16_le::{closure#1}),
            [
                Self/#0,
                i32,
                Binder { value: extern "RustCall" fn((TryGetError,)) -> i16, bound_vars: [] },
                (),
            ],
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_impl.rs:75:29: 75:58 (#24),
            scope: scope[0],
        },
    },
]