[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            StorageLive(_4),
            StorageLive(_5),
            _5 = &((*_1).0: B),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/writer.rs:79:26: 79:50 (#0),
                    scope: scope[0],
                },
                kind: _4 = <B as buf::buf_mut::BufMut>::remaining_mut(move _5) -> [return: bb1, unwind: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
            StorageLive(_6),
            StorageLive(_7),
            _7 = &(*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/writer.rs:79:52: 79:61 (#0),
                    scope: scope[0],
                },
                kind: _6 = core::slice::<impl [u8]>::len(move _7) -> [return: bb2, unwind: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_7),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/writer.rs:79:17: 79:62 (#0),
                    scope: scope[0],
                },
                kind: _3 = core::cmp::min::<usize>(move _4, move _6) -> [return: bb3, unwind: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
            StorageDead(_4),
            FakeRead(ForLet(None), _3),
            StorageLive(_8),
            StorageLive(_9),
            _9 = &mut ((*_1).0: B),
            StorageLive(_10),
            StorageLive(_11),
            StorageLive(_12),
            StorageLive(_13),
            _13 = &(*_2),
            StorageLive(_14),
            StorageLive(_15),
            _15 = _3,
            _14 = core::ops::RangeTo::<usize> { end: move _15 },
            StorageDead(_15),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/writer.rs:81:32: 81:37 (#0),
                    scope: scope[1],
                },
                kind: _12 = <[u8] as core::ops::Index<core::ops::RangeTo<usize>>>::index(move _13, move _14) -> [return: bb4, unwind: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_14),
            StorageDead(_13),
            _11 = &(*_12),
            _10 = &(*_11),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/writer.rs:81:9: 81:38 (#0),
                    scope: scope[1],
                },
                kind: _8 = <B as buf::buf_mut::BufMut>::put_slice(move _9, move _10) -> [return: bb5, unwind: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_10),
            StorageDead(_9),
            StorageDead(_12),
            StorageDead(_11),
            StorageDead(_8),
            StorageLive(_16),
            _16 = _3,
            _0 = core::result::Result::<usize, std::io::Error>::Ok(move _16),
            StorageDead(_16),
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/writer.rs:83:6: 83:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/writer.rs:78:5: 83:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<usize, std::io::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/writer.rs:78:40: 78:57 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefMut,
                ),
            ),
        ),
        ty: &'{erased} mut buf::writer::Writer<B/#0>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/writer.rs:78:14: 78:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/buf/writer.rs:78:30: 78:35 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/buf/writer.rs:78:25: 78:28 (#0),
                            ),
                        ),
                        pat_span: src/buf/writer.rs:78:25: 78:28 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/writer.rs:78:25: 78:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/buf/writer.rs:79:17: 79:62 (#0),
                            ),
                        ),
                        pat_span: src/buf/writer.rs:79:13: 79:14 (#0),
                    },
                ),
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/writer.rs:79:13: 79:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/writer.rs:79:26: 79:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} B/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/writer.rs:79:26: 79:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/writer.rs:79:52: 79:61 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/writer.rs:79:52: 79:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/writer.rs:81:9: 81:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut B/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/writer.rs:81:9: 81:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/writer.rs:81:28: 81:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/writer.rs:81:28: 81:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/writer.rs:81:32: 81:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/writer.rs:81:29: 81:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::RangeTo<usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/writer.rs:81:33: 81:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/writer.rs:81:35: 81:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/writer.rs:82:12: 82:13 (#0),
            scope: scope[0],
        },
    },
]