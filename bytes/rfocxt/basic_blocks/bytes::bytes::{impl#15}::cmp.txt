[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            StorageLive(_4),
            StorageLive(_5),
            _5 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/bytes.rs:799:9: 799:24 (#0),
                    scope: scope[0],
                },
                kind: _4 = bytes::Bytes::as_slice(move _5) -> [return: bb1, unwind: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _3 = &(*_4),
            StorageDead(_5),
            StorageLive(_6),
            StorageLive(_7),
            StorageLive(_8),
            _8 = &(*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/bytes.rs:799:29: 799:45 (#0),
                    scope: scope[0],
                },
                kind: _7 = bytes::Bytes::as_slice(move _8) -> [return: bb2, unwind: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _6 = &(*_7),
            StorageDead(_8),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/bytes.rs:799:9: 799:46 (#0),
                    scope: scope[0],
                },
                kind: _0 = <[u8] as core::cmp::Ord>::cmp(move _3, move _6) -> [return: bb3, unwind: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
            StorageDead(_3),
            StorageDead(_7),
            StorageDead(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/bytes.rs:800:6: 800:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/bytes.rs:798:5: 800:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::cmp::Ordering,
        user_ty: None,
        source_info: SourceInfo {
            span: src/bytes.rs:798:37: 798:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} bytes::Bytes,
        user_ty: None,
        source_info: SourceInfo {
            span: src/bytes.rs:798:12: 798:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/bytes.rs:798:26: 798:32 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/bytes.rs:798:19: 798:24 (#0),
                            ),
                        ),
                        pat_span: src/bytes.rs:798:19: 798:24 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} bytes::Bytes,
        user_ty: None,
        source_info: SourceInfo {
            span: src/bytes.rs:798:19: 798:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/bytes.rs:799:9: 799:46 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/bytes.rs:799:9: 799:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/bytes.rs:799:9: 799:46 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/bytes.rs:799:9: 799:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/bytes.rs:799:9: 799:46 (#0),
                },
            ),
        ),
        ty: &'{erased} bytes::Bytes,
        user_ty: None,
        source_info: SourceInfo {
            span: src/bytes.rs:799:9: 799:13 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/bytes.rs:799:9: 799:46 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/bytes.rs:799:29: 799:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/bytes.rs:799:9: 799:46 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/bytes.rs:799:29: 799:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/bytes.rs:799:9: 799:46 (#0),
                },
            ),
        ),
        ty: &'{erased} bytes::Bytes,
        user_ty: None,
        source_info: SourceInfo {
            span: src/bytes.rs:799:29: 799:34 (#0),
            scope: scope[0],
        },
    },
]