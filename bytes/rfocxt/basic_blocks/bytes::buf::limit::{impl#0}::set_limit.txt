[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            _3 = _2,
            ((*_1).1: usize) = move _3,
            _0 = const (),
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/limit.rs:56:6: 56:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/limit.rs:54:44: 54:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefMut,
                ),
            ),
        ),
        ty: &'{erased} mut buf::limit::Limit<T/#0>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/limit.rs:54:22: 54:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/buf/limit.rs:54:38: 54:43 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/buf/limit.rs:54:33: 54:36 (#0),
                            ),
                        ),
                        pat_span: src/buf/limit.rs:54:33: 54:36 (#0),
                    },
                ),
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/limit.rs:54:33: 54:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: src/buf/limit.rs:55:9: 55:25 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/limit.rs:55:22: 55:25 (#0),
            scope: scope[0],
        },
    },
]