[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            StorageLive(_4),
            StorageLive(_5),
            StorageLive(_6),
            _6 = &_1,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/buf_impl.rs:1162:12: 1162:28 (#0),
                    scope: scope[0],
                },
                kind: _5 = <&mut Self as buf::buf_impl::Buf>::remaining(move _6) -> [return: bb1, unwind: bb22],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
            StorageLive(_7),
            StorageLive(_8),
            _8 = &(*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/buf_impl.rs:1162:31: 1162:40 (#0),
                    scope: scope[0],
                },
                kind: _7 = core::slice::<impl [u8]>::len(move _8) -> [return: bb2, unwind: bb22],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_8),
            _4 = Lt(move _5, move _7),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/buf_impl.rs:1162:12: 1162:40 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _4) -> [0: bb6, otherwise: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_7),
            StorageDead(_5),
            StorageLive(_10),
            StorageLive(_11),
            StorageLive(_12),
            _12 = &(*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/buf_impl.rs:1164:28: 1164:37 (#0),
                    scope: scope[0],
                },
                kind: _11 = core::slice::<impl [u8]>::len(move _12) -> [return: bb4, unwind: bb22],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_12),
            StorageLive(_13),
            StorageLive(_14),
            _14 = &_1,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/buf_impl.rs:1165:28: 1165:44 (#0),
                    scope: scope[0],
                },
                kind: _13 = <&mut Self as buf::buf_impl::Buf>::remaining(move _14) -> [return: bb5, unwind: bb22],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_14),
            _10 = TryGetError { requested: move _11, available: move _13 },
            StorageDead(_13),
            StorageDead(_11),
            _0 = core::result::Result::<(), TryGetError>::Err(move _10),
            StorageDead(_10),
            StorageDead(_4),
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/buf_impl.rs:1179:6: 1179:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb21,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_7),
            StorageDead(_5),
            _3 = const (),
            StorageDead(_4),
            StorageDead(_3),
            StorageLive(_15),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/buf_impl.rs:1169:9: 1177:10 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb7,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/buf_impl.rs:1169:9: 1177:10 (#0),
                    scope: scope[0],
                },
                kind: falseUnwind -> [real: bb8, unwind: bb22],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_17),
            StorageLive(_18),
            _18 = &(*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/buf_impl.rs:1169:16: 1169:30 (#0),
                    scope: scope[0],
                },
                kind: _17 = core::slice::<impl [u8]>::is_empty(move _18) -> [return: bb9, unwind: bb22],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/buf_impl.rs:1169:16: 1169:30 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _17) -> [0: bb11, otherwise: bb10],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_18),
            StorageLive(_48),
            _15 = const (),
            StorageDead(_48),
            StorageDead(_17),
            StorageDead(_15),
            StorageLive(_50),
            _50 = (),
            _0 = core::result::Result::<(), TryGetError>::Ok(move _50),
            StorageDead(_50),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/buf_impl.rs:1179:6: 1179:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb21,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_18),
            StorageLive(_19),
            StorageLive(_20),
            _20 = &_1,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/buf_impl.rs:1170:23: 1170:35 (#0),
                    scope: scope[0],
                },
                kind: _19 = <&mut Self as buf::buf_impl::Buf>::chunk(move _20) -> [return: bb12, unwind: bb22],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_20),
            FakeRead(ForLet(None), _19),
            StorageLive(_21),
            StorageLive(_22),
            StorageLive(_23),
            _23 = &(*_19),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/buf_impl.rs:1171:34: 1171:43 (#0),
                    scope: scope[1],
                },
                kind: _22 = core::slice::<impl [u8]>::len(move _23) -> [return: bb13, unwind: bb22],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_23),
            StorageLive(_24),
            StorageLive(_25),
            _25 = &(*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/buf_impl.rs:1171:45: 1171:54 (#0),
                    scope: scope[1],
                },
                kind: _24 = core::slice::<impl [u8]>::len(move _25) -> [return: bb14, unwind: bb22],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_25),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/buf_impl.rs:1171:23: 1171:55 (#0),
                    scope: scope[1],
                },
                kind: _21 = <usize as core::cmp::Ord>::min(move _22, move _24) -> [return: bb15, unwind: bb22],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_24),
            StorageDead(_22),
            FakeRead(ForLet(None), _21),
            StorageLive(_26),
            StorageLive(_27),
            StorageLive(_28),
            StorageLive(_29),
            _29 = &mut (*_2),
            StorageLive(_30),
            StorageLive(_31),
            _31 = _21,
            _30 = core::ops::RangeTo::<usize> { end: move _31 },
            StorageDead(_31),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/buf_impl.rs:1173:16: 1173:23 (#0),
                    scope: scope[2],
                },
                kind: _28 = <[u8] as core::ops::IndexMut<core::ops::RangeTo<usize>>>::index_mut(move _29, move _30) -> [return: bb16, unwind: bb22],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _27 = &mut (*_28),
            StorageDead(_30),
            StorageDead(_29),
            StorageLive(_32),
            StorageLive(_33),
            StorageLive(_34),
            StorageLive(_35),
            _35 = &(*_19),
            StorageLive(_36),
            StorageLive(_37),
            _37 = _21,
            _36 = core::ops::RangeTo::<usize> { end: move _37 },
            StorageDead(_37),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/buf_impl.rs:1173:44: 1173:51 (#0),
                    scope: scope[2],
                },
                kind: _34 = <[u8] as core::ops::Index<core::ops::RangeTo<usize>>>::index(move _35, move _36) -> [return: bb17, unwind: bb22],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_36),
            StorageDead(_35),
            _33 = &(*_34),
            _32 = &(*_33),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/buf_impl.rs:1173:13: 1173:52 (#0),
                    scope: scope[2],
                },
                kind: _26 = core::slice::<impl [u8]>::copy_from_slice(move _27, move _32) -> [return: bb18, unwind: bb22],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_32),
            StorageDead(_27),
            StorageDead(_34),
            StorageDead(_33),
            StorageDead(_28),
            StorageDead(_26),
            StorageLive(_38),
            StorageLive(_39),
            StorageLive(_40),
            StorageLive(_41),
            _41 = &mut (*_2),
            StorageLive(_42),
            StorageLive(_43),
            _43 = _21,
            _42 = core::ops::RangeFrom::<usize> { start: move _43 },
            StorageDead(_43),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/buf_impl.rs:1174:27: 1174:34 (#0),
                    scope: scope[2],
                },
                kind: _40 = <[u8] as core::ops::IndexMut<core::ops::RangeFrom<usize>>>::index_mut(move _41, move _42) -> [return: bb19, unwind: bb22],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_42),
            StorageDead(_41),
            _39 = &mut (*_40),
            _38 = &mut (*_39),
            _2 = move _38,
            StorageDead(_38),
            StorageDead(_40),
            StorageDead(_39),
            StorageLive(_44),
            StorageLive(_45),
            _45 = &mut (*_1),
            StorageLive(_46),
            _46 = _21,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/buf_impl.rs:1176:13: 1176:30 (#0),
                    scope: scope[2],
                },
                kind: _44 = <Self as buf::buf_impl::Buf>::advance(move _45, move _46) -> [return: bb20, unwind: bb22],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_46),
            StorageDead(_45),
            StorageDead(_44),
            _16 = const (),
            StorageDead(_21),
            StorageDead(_19),
            StorageDead(_17),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/buf_impl.rs:1169:9: 1177:10 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb7,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/buf_impl.rs:1179:6: 1179:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/buf_impl.rs:1161:5: 1179:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), TryGetError>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_impl.rs:1161:60: 1161:83 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefMut,
                ),
            ),
        ),
        ty: &'{erased} mut Self/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_impl.rs:1161:26: 1161:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: Some(
                            src/buf/buf_impl.rs:1161:46: 1161:55 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/buf/buf_impl.rs:1161:37: 1161:44 (#0),
                            ),
                        ),
                        pat_span: src/buf/buf_impl.rs:1161:37: 1161:44 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_impl.rs:1161:37: 1161:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_impl.rs:1162:9: 1167:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_impl.rs:1162:12: 1162:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_impl.rs:1162:12: 1162:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} &'{erased} mut Self/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_impl.rs:1162:12: 1162:16 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_impl.rs:1162:31: 1162:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_impl.rs:1162:31: 1162:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_impl.rs:1162:41: 1167:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: TryGetError,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_impl.rs:1163:24: 1166:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_impl.rs:1164:28: 1164:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_impl.rs:1164:28: 1164:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_impl.rs:1165:28: 1165:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} &'{erased} mut Self/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_impl.rs:1165:28: 1165:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_impl.rs:1169:9: 1177:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_impl.rs:1161:5: 1179:6 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: src/buf/buf_impl.rs:1169:9: 1177:10 (#418),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_impl.rs:1169:16: 1169:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: src/buf/buf_impl.rs:1169:9: 1177:10 (#418),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_impl.rs:1169:16: 1169:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/buf/buf_impl.rs:1170:23: 1170:35 (#0),
                            ),
                        ),
                        pat_span: src/buf/buf_impl.rs:1170:17: 1170:20 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_impl.rs:1170:17: 1170:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} &'{erased} mut Self/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_impl.rs:1170:23: 1170:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/buf/buf_impl.rs:1171:23: 1171:55 (#0),
                            ),
                        ),
                        pat_span: src/buf/buf_impl.rs:1171:17: 1171:20 (#0),
                    },
                ),
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_impl.rs:1171:17: 1171:20 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_impl.rs:1171:34: 1171:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_impl.rs:1171:34: 1171:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_impl.rs:1171:45: 1171:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_impl.rs:1171:45: 1171:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_impl.rs:1173:13: 1173:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_impl.rs:1173:13: 1173:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_impl.rs:1173:16: 1173:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_impl.rs:1173:13: 1173:16 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::RangeTo<usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_impl.rs:1173:17: 1173:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_impl.rs:1173:19: 1173:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_impl.rs:1173:40: 1173:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_impl.rs:1173:40: 1173:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_impl.rs:1173:44: 1173:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_impl.rs:1173:41: 1173:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::RangeTo<usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_impl.rs:1173:45: 1173:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_impl.rs:1173:47: 1173:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_impl.rs:1174:19: 1174:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_impl.rs:1174:19: 1174:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_impl.rs:1174:27: 1174:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_impl.rs:1174:24: 1174:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::RangeFrom<usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_impl.rs:1174:28: 1174:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_impl.rs:1174:28: 1174:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_impl.rs:1176:13: 1176:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut Self/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_impl.rs:1176:13: 1176:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_impl.rs:1176:26: 1176:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: src/buf/buf_impl.rs:1169:9: 1177:10 (#418),
                },
            ),
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_impl.rs:1169:9: 1177:10 (#418),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_impl.rs:1169:9: 1177:10 (#418),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_impl.rs:1169:9: 1177:10 (#418),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_impl.rs:1178:12: 1178:14 (#0),
            scope: scope[0],
        },
    },
]