[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            StorageLive(_4),
            StorageLive(_5),
            StorageLive(_6),
            StorageLive(_7),
            StorageLive(_8),
            _8 = _1,
            _7 = move _8 as *mut core::mem::MaybeUninit<u8> (PtrToPtr),
            AscribeUserType(_7, o, UserTypeProjection { base: UserType(1), projs: [] }),
            _6 = _7,
            StorageDead(_8),
            StorageLive(_9),
            _9 = _2,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/uninit_slice.rs:84:13: 84:64 (#0),
                    scope: scope[0],
                },
                kind: _5 = core::slice::from_raw_parts_mut::<'_, core::mem::MaybeUninit<u8>>(move _6, move _9) -> [return: bb1, unwind: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _4 = &mut (*_5),
            StorageDead(_9),
            StorageDead(_6),
            FakeRead(ForLet(None), _4),
            AscribeUserType(_4, o, UserTypeProjection { base: UserType(2), projs: [] }),
            StorageDead(_7),
            StorageDead(_5),
            StorageLive(_10),
            StorageLive(_11),
            _11 = &mut (*_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/uninit_slice.rs:85:9: 85:33 (#0),
                    scope: scope[1],
                },
                kind: _10 = buf::uninit_slice::UninitSlice::uninit(move _11) -> [return: bb2, unwind: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _3 = &mut (*_10),
            StorageDead(_11),
            StorageDead(_4),
            _0 = &mut (*_3),
            StorageDead(_10),
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/uninit_slice.rs:86:6: 86:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/uninit_slice.rs:82:5: 86:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut buf::uninit_slice::UninitSlice,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/uninit_slice.rs:82:71: 82:90 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/buf/uninit_slice.rs:82:47: 82:54 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/buf/uninit_slice.rs:82:42: 82:45 (#0),
                            ),
                        ),
                        pat_span: src/buf/uninit_slice.rs:82:42: 82:45 (#0),
                    },
                ),
            ),
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/uninit_slice.rs:82:42: 82:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/buf/uninit_slice.rs:82:61: 82:66 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/buf/uninit_slice.rs:82:56: 82:59 (#0),
                            ),
                        ),
                        pat_span: src/buf/uninit_slice.rs:82:56: 82:59 (#0),
                    },
                ),
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/uninit_slice.rs:82:56: 82:59 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut buf::uninit_slice::UninitSlice,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/uninit_slice.rs:85:9: 85:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/buf/uninit_slice.rs:84:13: 84:64 (#0),
                            ),
                        ),
                        pat_span: src/buf/uninit_slice.rs:83:13: 83:23 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut [core::mem::MaybeUninit<u8>],
        user_ty: Some(
            UserTypeProjections {
                contents: [
                    (
                        UserTypeProjection {
                            base: UserType(0),
                            projs: [],
                        },
                        src/buf/uninit_slice.rs:83:25: 83:47 (#0),
                    ),
                ],
            },
        ),
        source_info: SourceInfo {
            span: src/buf/uninit_slice.rs:83:13: 83:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut [core::mem::MaybeUninit<u8>],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/uninit_slice.rs:84:13: 84:64 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *mut core::mem::MaybeUninit<u8>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/uninit_slice.rs:84:45: 84:58 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *mut core::mem::MaybeUninit<u8>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/uninit_slice.rs:84:45: 84:58 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/uninit_slice.rs:84:45: 84:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/uninit_slice.rs:84:60: 84:63 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/buf/uninit_slice.rs:85:9: 85:33 (#0),
                },
            ),
        ),
        ty: &'{erased} mut buf::uninit_slice::UninitSlice,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/uninit_slice.rs:85:9: 85:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/buf/uninit_slice.rs:85:9: 85:33 (#0),
                },
            ),
        ),
        ty: &'{erased} mut [core::mem::MaybeUninit<u8>],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/uninit_slice.rs:85:22: 85:32 (#0),
            scope: scope[0],
        },
    },
]