[
    BasicBlockData {
        statements: [
            StorageLive(_5),
            StorageLive(_6),
            StorageLive(_7),
            StorageLive(_8),
            _8 = &_2,
            StorageLive(_9),
            _9 = &mut _1,
            _7 = {closure@src/buf/buf_impl.rs:82:17: 82:19} { nbytes: move _8, self: move _9 },
            _6 = &mut _7,
            StorageDead(_9),
            StorageDead(_8),
            StorageLive(_10),
            _10 = (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/buf_impl.rs:82:16: 82:73 (#64),
                    scope: scope[0],
                },
                kind: _5 = <{closure@src/buf/buf_impl.rs:82:17: 82:19} as core::ops::FnMut<()>>::call_mut(move _6, move _10) -> [return: bb1, unwind: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_10),
            StorageDead(_6),
            StorageLive(_11),
            _11 = {closure@src/buf/buf_impl.rs:83:29: 83:36},
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/buf_impl.rs:82:16: 83:59 (#64),
                    scope: scope[0],
                },
                kind: _0 = core::result::Result::<u64, TryGetError>::unwrap_or_else::<{closure@src/buf/buf_impl.rs:83:29: 83:36}>(move _5, move _11) -> [return: bb2, unwind: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_11),
            StorageDead(_5),
            StorageDead(_7),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/buf_impl.rs:878:6: 878:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/buf_impl.rs:876:5: 878:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_impl.rs:876:46: 876:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefMut,
                ),
            ),
        ),
        ty: &'{erased} mut Self/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_impl.rs:876:17: 876:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/buf/buf_impl.rs:876:36: 876:41 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/buf/buf_impl.rs:876:28: 876:34 (#0),
                            ),
                        ),
                        pat_span: src/buf/buf_impl.rs:876:28: 876:34 (#0),
                    },
                ),
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_impl.rs:876:28: 876:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_impl.rs:876:50: 878:6 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_impl.rs:81:57: 84:6 (#64),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<u64, TryGetError>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_impl.rs:82:16: 82:73 (#64),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut Closure(DefId(0:1076 ~ bytes[5d47]::buf::buf_impl::Buf::get_uint::{closure#0}), [Self/#0, i16, Binder { value: extern "RustCall" fn(()) -> core::result::Result<u64, TryGetError>, bound_vars: [] }, (&'{erased} usize, &'{erased} mut &'{erased} mut Self/#0)]),
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_impl.rs:82:16: 82:71 (#64),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: Closure(
            DefId(0:1076 ~ bytes[5d47]::buf::buf_impl::Buf::get_uint::{closure#0}),
            [
                Self/#0,
                i16,
                Binder { value: extern "RustCall" fn(()) -> core::result::Result<u64, TryGetError>, bound_vars: [] },
                (&'{erased} usize, &'{erased} mut &'{erased} mut Self/#0),
            ],
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_impl.rs:82:16: 82:71 (#64),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_impl.rs:82:16: 82:71 (#64),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut &'{erased} mut Self/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_impl.rs:82:16: 82:71 (#64),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_impl.rs:82:16: 82:73 (#64),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: Closure(
            DefId(0:1077 ~ bytes[5d47]::buf::buf_impl::Buf::get_uint::{closure#1}),
            [
                Self/#0,
                i32,
                Binder { value: extern "RustCall" fn((TryGetError,)) -> u64, bound_vars: [] },
                (),
            ],
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_impl.rs:83:29: 83:58 (#64),
            scope: scope[0],
        },
    },
]