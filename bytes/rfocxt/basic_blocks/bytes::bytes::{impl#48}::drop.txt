[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            _2 = ((*_1).0: *mut u8),
            StorageLive(_3),
            StorageLive(_4),
            StorageLive(_5),
            _5 = ((*_1).1: usize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/bytes.rs:1366:36: 1366:72 (#0),
                    scope: scope[0],
                },
                kind: _4 = core::alloc::Layout::from_size_align(move _5, const 1_usize) -> [return: bb1, unwind: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/bytes.rs:1366:36: 1366:81 (#0),
                    scope: scope[0],
                },
                kind: _3 = core::result::Result::<core::alloc::Layout, core::alloc::LayoutError>::unwrap(move _4) -> [return: bb2, unwind: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/bytes.rs:1366:18: 1366:82 (#0),
                    scope: scope[0],
                },
                kind: _0 = alloc::alloc::dealloc(move _2, move _3) -> [return: bb3, unwind: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/bytes.rs:1367:6: 1367:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/bytes.rs:1365:5: 1367:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/bytes.rs:1365:23: 1365:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefMut,
                ),
            ),
        ),
        ty: &'{erased} mut bytes::Shared,
        user_ty: None,
        source_info: SourceInfo {
            span: src/bytes.rs:1365:13: 1365:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: src/bytes.rs:1366:18: 1366:82 (#0),
                },
            ),
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/bytes.rs:1366:26: 1366:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: src/bytes.rs:1366:18: 1366:82 (#0),
                },
            ),
        ),
        ty: core::alloc::Layout,
        user_ty: None,
        source_info: SourceInfo {
            span: src/bytes.rs:1366:36: 1366:81 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: src/bytes.rs:1366:18: 1366:82 (#0),
                },
            ),
        ),
        ty: core::result::Result<core::alloc::Layout, core::alloc::LayoutError>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/bytes.rs:1366:36: 1366:72 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: src/bytes.rs:1366:18: 1366:82 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/bytes.rs:1366:60: 1366:68 (#0),
            scope: scope[0],
        },
    },
]