[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            StorageLive(_4),
            StorageLive(_5),
            _5 = ((*_1).1: usize),
            _4 = Eq(move _5, const 0_usize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/take.rs:161:12: 161:27 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _4) -> [0: bb2, otherwise: bb1],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
            _0 = const 0_usize,
            StorageDead(_4),
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[0],
                },
                kind: goto -> bb50,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
            _3 = const (),
            StorageDead(_4),
            StorageDead(_3),
            StorageLive(_7),
            StorageLive(_8),
            StorageLive(_9),
            StorageLive(_10),
            StorageLive(_11),
            StorageLive(_12),
            _12 = [],
            _11 = &_12,
            _10 = &(*_11),
            _9 = move _10 as &[u8] (PointerCoercion(Unsize)),
            StorageDead(_10),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/take.rs:167:13: 167:30 (#0),
                    scope: scope[0],
                },
                kind: _8 = std::io::IoSlice::<'_>::new(move _9) -> [return: bb3, unwind: bb51],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_9),
            StorageLive(_13),
            StorageLive(_14),
            StorageLive(_15),
            StorageLive(_16),
            StorageLive(_17),
            _17 = [],
            _16 = &_17,
            _15 = &(*_16),
            _14 = move _15 as &[u8] (PointerCoercion(Unsize)),
            StorageDead(_15),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/take.rs:168:13: 168:30 (#0),
                    scope: scope[0],
                },
                kind: _13 = std::io::IoSlice::<'_>::new(move _14) -> [return: bb4, unwind: bb51],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_14),
            StorageLive(_18),
            StorageLive(_19),
            StorageLive(_20),
            StorageLive(_21),
            StorageLive(_22),
            _22 = [],
            _21 = &_22,
            _20 = &(*_21),
            _19 = move _20 as &[u8] (PointerCoercion(Unsize)),
            StorageDead(_20),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/take.rs:169:13: 169:30 (#0),
                    scope: scope[0],
                },
                kind: _18 = std::io::IoSlice::<'_>::new(move _19) -> [return: bb5, unwind: bb51],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_19),
            StorageLive(_23),
            StorageLive(_24),
            StorageLive(_25),
            StorageLive(_26),
            StorageLive(_27),
            _27 = [],
            _26 = &_27,
            _25 = &(*_26),
            _24 = move _25 as &[u8] (PointerCoercion(Unsize)),
            StorageDead(_25),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/take.rs:170:13: 170:30 (#0),
                    scope: scope[0],
                },
                kind: _23 = std::io::IoSlice::<'_>::new(move _24) -> [return: bb6, unwind: bb51],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_24),
            StorageLive(_28),
            StorageLive(_29),
            StorageLive(_30),
            StorageLive(_31),
            StorageLive(_32),
            _32 = [],
            _31 = &_32,
            _30 = &(*_31),
            _29 = move _30 as &[u8] (PointerCoercion(Unsize)),
            StorageDead(_30),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/take.rs:171:13: 171:30 (#0),
                    scope: scope[0],
                },
                kind: _28 = std::io::IoSlice::<'_>::new(move _29) -> [return: bb7, unwind: bb51],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_29),
            StorageLive(_33),
            StorageLive(_34),
            StorageLive(_35),
            StorageLive(_36),
            StorageLive(_37),
            _37 = [],
            _36 = &_37,
            _35 = &(*_36),
            _34 = move _35 as &[u8] (PointerCoercion(Unsize)),
            StorageDead(_35),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/take.rs:172:13: 172:30 (#0),
                    scope: scope[0],
                },
                kind: _33 = std::io::IoSlice::<'_>::new(move _34) -> [return: bb8, unwind: bb51],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_34),
            StorageLive(_38),
            StorageLive(_39),
            StorageLive(_40),
            StorageLive(_41),
            StorageLive(_42),
            _42 = [],
            _41 = &_42,
            _40 = &(*_41),
            _39 = move _40 as &[u8] (PointerCoercion(Unsize)),
            StorageDead(_40),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/take.rs:173:13: 173:30 (#0),
                    scope: scope[0],
                },
                kind: _38 = std::io::IoSlice::<'_>::new(move _39) -> [return: bb9, unwind: bb51],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_39),
            StorageLive(_43),
            StorageLive(_44),
            StorageLive(_45),
            StorageLive(_46),
            StorageLive(_47),
            _47 = [],
            _46 = &_47,
            _45 = &(*_46),
            _44 = move _45 as &[u8] (PointerCoercion(Unsize)),
            StorageDead(_45),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/take.rs:174:13: 174:30 (#0),
                    scope: scope[0],
                },
                kind: _43 = std::io::IoSlice::<'_>::new(move _44) -> [return: bb10, unwind: bb51],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_44),
            StorageLive(_48),
            StorageLive(_49),
            StorageLive(_50),
            StorageLive(_51),
            StorageLive(_52),
            _52 = [],
            _51 = &_52,
            _50 = &(*_51),
            _49 = move _50 as &[u8] (PointerCoercion(Unsize)),
            StorageDead(_50),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/take.rs:175:13: 175:30 (#0),
                    scope: scope[0],
                },
                kind: _48 = std::io::IoSlice::<'_>::new(move _49) -> [return: bb11, unwind: bb51],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_49),
            StorageLive(_53),
            StorageLive(_54),
            StorageLive(_55),
            StorageLive(_56),
            StorageLive(_57),
            _57 = [],
            _56 = &_57,
            _55 = &(*_56),
            _54 = move _55 as &[u8] (PointerCoercion(Unsize)),
            StorageDead(_55),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/take.rs:176:13: 176:30 (#0),
                    scope: scope[0],
                },
                kind: _53 = std::io::IoSlice::<'_>::new(move _54) -> [return: bb12, unwind: bb51],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_54),
            StorageLive(_58),
            StorageLive(_59),
            StorageLive(_60),
            StorageLive(_61),
            StorageLive(_62),
            _62 = [],
            _61 = &_62,
            _60 = &(*_61),
            _59 = move _60 as &[u8] (PointerCoercion(Unsize)),
            StorageDead(_60),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/take.rs:177:13: 177:30 (#0),
                    scope: scope[0],
                },
                kind: _58 = std::io::IoSlice::<'_>::new(move _59) -> [return: bb13, unwind: bb51],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_59),
            StorageLive(_63),
            StorageLive(_64),
            StorageLive(_65),
            StorageLive(_66),
            StorageLive(_67),
            _67 = [],
            _66 = &_67,
            _65 = &(*_66),
            _64 = move _65 as &[u8] (PointerCoercion(Unsize)),
            StorageDead(_65),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/take.rs:178:13: 178:30 (#0),
                    scope: scope[0],
                },
                kind: _63 = std::io::IoSlice::<'_>::new(move _64) -> [return: bb14, unwind: bb51],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_64),
            StorageLive(_68),
            StorageLive(_69),
            StorageLive(_70),
            StorageLive(_71),
            StorageLive(_72),
            _72 = [],
            _71 = &_72,
            _70 = &(*_71),
            _69 = move _70 as &[u8] (PointerCoercion(Unsize)),
            StorageDead(_70),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/take.rs:179:13: 179:30 (#0),
                    scope: scope[0],
                },
                kind: _68 = std::io::IoSlice::<'_>::new(move _69) -> [return: bb15, unwind: bb51],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_69),
            StorageLive(_73),
            StorageLive(_74),
            StorageLive(_75),
            StorageLive(_76),
            StorageLive(_77),
            _77 = [],
            _76 = &_77,
            _75 = &(*_76),
            _74 = move _75 as &[u8] (PointerCoercion(Unsize)),
            StorageDead(_75),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/take.rs:180:13: 180:30 (#0),
                    scope: scope[0],
                },
                kind: _73 = std::io::IoSlice::<'_>::new(move _74) -> [return: bb16, unwind: bb51],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_74),
            StorageLive(_78),
            StorageLive(_79),
            StorageLive(_80),
            StorageLive(_81),
            StorageLive(_82),
            _82 = [],
            _81 = &_82,
            _80 = &(*_81),
            _79 = move _80 as &[u8] (PointerCoercion(Unsize)),
            StorageDead(_80),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/take.rs:181:13: 181:30 (#0),
                    scope: scope[0],
                },
                kind: _78 = std::io::IoSlice::<'_>::new(move _79) -> [return: bb17, unwind: bb51],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_79),
            StorageLive(_83),
            StorageLive(_84),
            StorageLive(_85),
            StorageLive(_86),
            StorageLive(_87),
            _87 = [],
            _86 = &_87,
            _85 = &(*_86),
            _84 = move _85 as &[u8] (PointerCoercion(Unsize)),
            StorageDead(_85),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/take.rs:182:13: 182:30 (#0),
                    scope: scope[0],
                },
                kind: _83 = std::io::IoSlice::<'_>::new(move _84) -> [return: bb18, unwind: bb51],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_84),
            _7 = [move _8, move _13, move _18, move _23, move _28, move _33, move _38, move _43, move _48, move _53, move _58, move _63, move _68, move _73, move _78, move _83],
            StorageDead(_83),
            StorageDead(_78),
            StorageDead(_73),
            StorageDead(_68),
            StorageDead(_63),
            StorageDead(_58),
            StorageDead(_53),
            StorageDead(_48),
            StorageDead(_43),
            StorageDead(_38),
            StorageDead(_33),
            StorageDead(_28),
            StorageDead(_23),
            StorageDead(_18),
            StorageDead(_13),
            StorageDead(_8),
            FakeRead(ForLet(None), _7),
            AscribeUserType(_7, o, UserTypeProjection { base: UserType(17), projs: [] }),
            StorageDead(_87),
            StorageDead(_86),
            StorageDead(_82),
            StorageDead(_81),
            StorageDead(_77),
            StorageDead(_76),
            StorageDead(_72),
            StorageDead(_71),
            StorageDead(_67),
            StorageDead(_66),
            StorageDead(_62),
            StorageDead(_61),
            StorageDead(_57),
            StorageDead(_56),
            StorageDead(_52),
            StorageDead(_51),
            StorageDead(_47),
            StorageDead(_46),
            StorageDead(_42),
            StorageDead(_41),
            StorageDead(_37),
            StorageDead(_36),
            StorageDead(_32),
            StorageDead(_31),
            StorageDead(_27),
            StorageDead(_26),
            StorageDead(_22),
            StorageDead(_21),
            StorageDead(_17),
            StorageDead(_16),
            StorageDead(_12),
            StorageDead(_11),
            StorageLive(_88),
            StorageLive(_89),
            _89 = &((*_1).0: T),
            StorageLive(_90),
            StorageLive(_91),
            StorageLive(_92),
            StorageLive(_93),
            _93 = &mut _7,
            StorageLive(_94),
            StorageLive(_95),
            StorageLive(_96),
            StorageLive(_97),
            _97 = &(*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/take.rs:187:44: 187:53 (#0),
                    scope: scope[1],
                },
                kind: _96 = core::slice::<impl [std::io::IoSlice<'_>]>::len(move _97) -> [return: bb19, unwind: bb51],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_97),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/take.rs:187:44: 187:62 (#0),
                    scope: scope[1],
                },
                kind: _95 = <usize as core::cmp::Ord>::min(move _96, const <buf::take::Take<T> as buf::buf_impl::Buf>::chunks_vectored::LEN) -> [return: bb20, unwind: bb51],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_96),
            _94 = core::ops::RangeTo::<usize> { end: move _95 },
            StorageDead(_95),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/take.rs:187:41: 187:63 (#0),
                    scope: scope[1],
                },
                kind: _92 = <[std::io::IoSlice<'_>; 16] as core::ops::IndexMut<core::ops::RangeTo<usize>>>::index_mut(move _93, move _94) -> [return: bb21, unwind: bb51],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_94),
            StorageDead(_93),
            _91 = &mut (*_92),
            _90 = &mut (*_91),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/take.rs:185:19: 187:64 (#0),
                    scope: scope[1],
                },
                kind: _88 = <T as buf::buf_impl::Buf>::chunks_vectored(move _89, move _90) -> [return: bb22, unwind: bb51],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_90),
            StorageDead(_89),
            FakeRead(ForLet(None), _88),
            StorageDead(_92),
            StorageDead(_91),
            StorageLive(_98),
            _98 = ((*_1).1: usize),
            FakeRead(ForLet(None), _98),
            StorageLive(_99),
            StorageLive(_100),
            StorageLive(_101),
            StorageLive(_102),
            StorageLive(_103),
            StorageLive(_104),
            StorageLive(_105),
            StorageLive(_106),
            _106 = &mut (*_2),
            StorageLive(_107),
            StorageLive(_108),
            _108 = _88,
            _107 = core::ops::RangeTo::<usize> { end: move _108 },
            StorageDead(_108),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/take.rs:189:37: 189:44 (#0),
                    scope: scope[3],
                },
                kind: _105 = <[std::io::IoSlice<'_>] as core::ops::IndexMut<core::ops::RangeTo<usize>>>::index_mut(move _106, move _107) -> [return: bb23, unwind: bb51],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _104 = &mut (*_105),
            StorageDead(_107),
            StorageDead(_106),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/take.rs:189:34: 189:55 (#0),
                    scope: scope[3],
                },
                kind: _103 = core::slice::<impl [std::io::IoSlice<'_>]>::iter_mut(move _104) -> [return: bb24, unwind: bb51],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_104),
            StorageLive(_109),
            StorageLive(_110),
            StorageLive(_111),
            _111 = &_7,
            _110 = move _111 as &[std::io::IoSlice<'_>] (PointerCoercion(Unsize)),
            StorageDead(_111),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/take.rs:189:60: 189:73 (#0),
                    scope: scope[3],
                },
                kind: _109 = core::slice::<impl [std::io::IoSlice<'_>]>::iter(move _110) -> [return: bb25, unwind: bb51],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_110),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/take.rs:189:34: 189:74 (#0),
                    scope: scope[3],
                },
                kind: _102 = <core::slice::IterMut<'_, std::io::IoSlice<'_>> as core::iter::Iterator>::zip::<core::slice::Iter<'_, std::io::IoSlice<'_>>>(move _103, move _109) -> [return: bb26, unwind: bb51],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_109),
            StorageDead(_103),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/take.rs:189:34: 189:86 (#0),
                    scope: scope[3],
                },
                kind: _101 = <core::iter::Zip<core::slice::IterMut<'_, std::io::IoSlice<'_>>, core::slice::Iter<'_, std::io::IoSlice<'_>>> as core::iter::Iterator>::enumerate(move _102) -> [return: bb27, unwind: bb51],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_102),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/take.rs:189:34: 189:86 (#540),
                    scope: scope[3],
                },
                kind: _100 = <core::iter::Enumerate<core::iter::Zip<core::slice::IterMut<'_, std::io::IoSlice<'_>>, core::slice::Iter<'_, std::io::IoSlice<'_>>>> as core::iter::IntoIterator>::into_iter(move _101) -> [return: bb28, unwind: bb51],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_101),
            PlaceMention(_100),
            StorageLive(_112),
            _112 = move _100,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/take.rs:189:9: 201:10 (#539),
                    scope: scope[4],
                },
                kind: goto -> bb29,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/take.rs:189:9: 201:10 (#539),
                    scope: scope[4],
                },
                kind: falseUnwind -> [real: bb30, unwind: bb51],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_114),
            StorageLive(_115),
            StorageLive(_116),
            StorageLive(_117),
            _117 = &mut _112,
            _116 = &mut (*_117),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/take.rs:189:34: 189:86 (#540),
                    scope: scope[4],
                },
                kind: _115 = <core::iter::Enumerate<core::iter::Zip<core::slice::IterMut<'_, std::io::IoSlice<'_>>, core::slice::Iter<'_, std::io::IoSlice<'_>>>> as core::iter::Iterator>::next(move _116) -> [return: bb31, unwind: bb51],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_116),
            PlaceMention(_115),
            _118 = discriminant(_115),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/take.rs:189:34: 189:86 (#540),
                    scope: scope[4],
                },
                kind: switchInt(move _118) -> [0: bb33, 1: bb34, otherwise: bb32],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _115),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/take.rs:189:34: 189:86 (#540),
                    scope: scope[4],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/take.rs:189:9: 201:10 (#539),
                    scope: scope[4],
                },
                kind: falseEdge -> [real: bb35, imaginary: bb34],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_120),
            _120 = (((_115 as Some).0: (usize, (&mut std::io::IoSlice<'_>, &std::io::IoSlice<'_>))).0: usize),
            StorageLive(_121),
            _121 = move ((((_115 as Some).0: (usize, (&mut std::io::IoSlice<'_>, &std::io::IoSlice<'_>))).1: (&mut std::io::IoSlice<'_>, &std::io::IoSlice<'_>)).0: &mut std::io::IoSlice<'_>),
            StorageLive(_122),
            _122 = ((((_115 as Some).0: (usize, (&mut std::io::IoSlice<'_>, &std::io::IoSlice<'_>))).1: (&mut std::io::IoSlice<'_>, &std::io::IoSlice<'_>)).1: &std::io::IoSlice<'_>),
            StorageLive(_123),
            StorageLive(_124),
            StorageLive(_125),
            StorageLive(_126),
            _126 = &(*_122),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/take.rs:190:32: 190:50 (#0),
                    scope: scope[6],
                },
                kind: _125 = <std::io::IoSlice<'_> as core::ops::Deref>::deref(move _126) -> [return: bb36, unwind: bb51],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _99 = const (),
            StorageDead(_117),
            StorageDead(_115),
            StorageDead(_114),
            StorageDead(_112),
            StorageDead(_105),
            StorageDead(_100),
            StorageDead(_99),
            _0 = _88,
            StorageDead(_98),
            StorageDead(_88),
            StorageDead(_7),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/take.rs:203:6: 203:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb50,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _124 = &(*_125),
            StorageDead(_126),
            StorageLive(_127),
            StorageLive(_128),
            _128 = _98,
            _127 = core::ops::RangeTo::<usize> { end: move _128 },
            StorageDead(_128),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/take.rs:190:32: 190:50 (#0),
                    scope: scope[6],
                },
                kind: _123 = core::slice::<impl [u8]>::get::<core::ops::RangeTo<usize>>(move _124, move _127) -> [return: bb37, unwind: bb51],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_127),
            StorageDead(_124),
            PlaceMention(_123),
            _129 = discriminant(_123),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/take.rs:190:20: 190:29 (#0),
                    scope: scope[6],
                },
                kind: switchInt(move _129) -> [1: bb38, otherwise: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/take.rs:190:20: 190:29 (#0),
                    scope: scope[6],
                },
                kind: falseEdge -> [real: bb39, imaginary: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_130),
            _130 = ((_123 as Some).0: &[u8]),
            StorageLive(_132),
            StorageLive(_133),
            _133 = &(*_130),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/take.rs:192:36: 192:79 (#0),
                    scope: scope[6],
                },
                kind: _132 = core::intrinsics::transmute::<&[u8], &[u8]>(move _133) -> [return: bb40, unwind: bb51],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_133),
            FakeRead(ForLet(None), _132),
            StorageLive(_134),
            StorageLive(_135),
            _135 = &(*_132),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/take.rs:193:24: 193:41 (#0),
                    scope: scope[7],
                },
                kind: _134 = std::io::IoSlice::<'_>::new(move _135) -> [return: bb41, unwind: bb51],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_135),
            (*_121) = move _134,
            StorageDead(_134),
            StorageLive(_136),
            _136 = _120,
            _137 = AddWithOverflow(_136, const 1_usize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/take.rs:194:24: 194:29 (#0),
                    scope: scope[7],
                },
                kind: assert(!move (_137.1: bool), "attempt to compute `{} + {}`, which would overflow", move _136, const 1_usize) -> [success: bb42, unwind: bb51],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _0 = move (_137.0: usize),
            StorageDead(_136),
            StorageDead(_132),
            StorageDead(_130),
            StorageDead(_125),
            StorageDead(_123),
            StorageDead(_122),
            StorageDead(_121),
            StorageDead(_120),
            StorageDead(_117),
            StorageDead(_115),
            StorageDead(_114),
            StorageDead(_112),
            StorageDead(_105),
            StorageDead(_100),
            StorageDead(_99),
            StorageDead(_98),
            StorageDead(_88),
            StorageDead(_7),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[0],
                },
                kind: goto -> bb50,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_138),
            StorageLive(_139),
            StorageLive(_140),
            StorageLive(_141),
            _141 = &(*_122),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/take.rs:197:75: 197:80 (#0),
                    scope: scope[5],
                },
                kind: _140 = <std::io::IoSlice<'_> as core::ops::Deref>::deref(move _141) -> [return: bb44, unwind: bb51],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _139 = &(*_140),
            StorageDead(_141),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/take.rs:197:36: 197:81 (#0),
                    scope: scope[5],
                },
                kind: _138 = core::intrinsics::transmute::<&[u8], &[u8]>(move _139) -> [return: bb45, unwind: bb51],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_139),
            FakeRead(ForLet(None), _138),
            StorageDead(_140),
            StorageLive(_142),
            StorageLive(_143),
            _143 = &(*_138),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/take.rs:198:24: 198:41 (#0),
                    scope: scope[8],
                },
                kind: _142 = std::io::IoSlice::<'_>::new(move _143) -> [return: bb46, unwind: bb51],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_143),
            (*_121) = move _142,
            StorageDead(_142),
            StorageLive(_144),
            StorageLive(_145),
            StorageLive(_146),
            StorageLive(_147),
            _147 = &(*_122),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/take.rs:199:26: 199:37 (#0),
                    scope: scope[8],
                },
                kind: _146 = <std::io::IoSlice<'_> as core::ops::Deref>::deref(move _147) -> [return: bb47, unwind: bb51],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _145 = &(*_146),
            StorageDead(_147),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/take.rs:199:26: 199:37 (#0),
                    scope: scope[8],
                },
                kind: _144 = core::slice::<impl [u8]>::len(move _145) -> [return: bb48, unwind: bb51],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_145),
            _148 = SubWithOverflow(_98, _144),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/take.rs:199:17: 199:37 (#0),
                    scope: scope[8],
                },
                kind: assert(!move (_148.1: bool), "attempt to compute `{} - {}`, which would overflow", _98, move _144) -> [success: bb49, unwind: bb51],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _98 = move (_148.0: usize),
            StorageDead(_144),
            StorageDead(_146),
            _114 = const (),
            StorageDead(_138),
            StorageDead(_125),
            StorageDead(_123),
            StorageDead(_122),
            StorageDead(_121),
            StorageDead(_120),
            StorageDead(_117),
            StorageDead(_115),
            StorageDead(_114),
            _113 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/take.rs:189:9: 201:10 (#539),
                    scope: scope[4],
                },
                kind: goto -> bb29,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/take.rs:203:6: 203:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/take.rs:160:5: 203:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:160:66: 160:71 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} buf::take::Take<T/#0>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:160:28: 160:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/buf/take.rs:160:43: 160:61 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/buf/take.rs:160:38: 160:41 (#0),
                            ),
                        ),
                        pat_span: src/buf/take.rs:160:38: 160:41 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut [std::io::IoSlice<'{erased}>],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:160:38: 160:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:161:9: 163:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:161:12: 161:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:161:12: 161:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:161:28: 163:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/buf/take.rs:166:46: 183:10 (#0),
                            ),
                        ),
                        pat_span: src/buf/take.rs:166:13: 166:23 (#0),
                    },
                ),
            ),
        ),
        ty: [std::io::IoSlice<'{erased}>; 16_usize],
        user_ty: Some(
            UserTypeProjections {
                contents: [
                    (
                        UserTypeProjection {
                            base: UserType(0),
                            projs: [],
                        },
                        src/buf/take.rs:166:25: 166:43 (#0),
                    ),
                ],
            },
        ),
        source_info: SourceInfo {
            span: src/buf/take.rs:166:13: 166:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::io::IoSlice<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:167:13: 167:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:167:26: 167:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8; 0_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:167:26: 167:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8; 0_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:167:26: 167:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: [u8; 0_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:167:27: 167:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::io::IoSlice<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:168:13: 168:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:168:26: 168:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8; 0_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:168:26: 168:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8; 0_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:168:26: 168:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: [u8; 0_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:168:27: 168:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::io::IoSlice<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:169:13: 169:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:169:26: 169:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8; 0_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:169:26: 169:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8; 0_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:169:26: 169:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: [u8; 0_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:169:27: 169:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::io::IoSlice<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:170:13: 170:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:170:26: 170:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8; 0_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:170:26: 170:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8; 0_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:170:26: 170:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: [u8; 0_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:170:27: 170:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::io::IoSlice<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:171:13: 171:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:171:26: 171:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8; 0_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:171:26: 171:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8; 0_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:171:26: 171:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: [u8; 0_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:171:27: 171:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::io::IoSlice<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:172:13: 172:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:172:26: 172:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8; 0_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:172:26: 172:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8; 0_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:172:26: 172:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: [u8; 0_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:172:27: 172:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::io::IoSlice<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:173:13: 173:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:173:26: 173:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8; 0_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:173:26: 173:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8; 0_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:173:26: 173:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: [u8; 0_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:173:27: 173:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::io::IoSlice<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:174:13: 174:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:174:26: 174:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8; 0_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:174:26: 174:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8; 0_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:174:26: 174:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: [u8; 0_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:174:27: 174:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::io::IoSlice<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:175:13: 175:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:175:26: 175:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8; 0_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:175:26: 175:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8; 0_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:175:26: 175:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: [u8; 0_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:175:27: 175:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::io::IoSlice<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:176:13: 176:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:176:26: 176:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8; 0_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:176:26: 176:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8; 0_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:176:26: 176:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: [u8; 0_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:176:27: 176:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::io::IoSlice<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:177:13: 177:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:177:26: 177:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8; 0_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:177:26: 177:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8; 0_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:177:26: 177:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: [u8; 0_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:177:27: 177:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::io::IoSlice<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:178:13: 178:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:178:26: 178:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8; 0_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:178:26: 178:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8; 0_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:178:26: 178:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: [u8; 0_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:178:27: 178:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::io::IoSlice<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:179:13: 179:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:179:26: 179:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8; 0_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:179:26: 179:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8; 0_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:179:26: 179:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: [u8; 0_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:179:27: 179:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::io::IoSlice<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:180:13: 180:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:180:26: 180:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8; 0_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:180:26: 180:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8; 0_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:180:26: 180:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: [u8; 0_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:180:27: 180:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::io::IoSlice<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:181:13: 181:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:181:26: 181:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8; 0_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:181:26: 181:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8; 0_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:181:26: 181:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: [u8; 0_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:181:27: 181:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::io::IoSlice<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:182:13: 182:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:182:26: 182:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8; 0_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:182:26: 182:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8; 0_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:182:26: 182:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: [u8; 0_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:182:27: 182:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/buf/take.rs:185:19: 187:64 (#0),
                            ),
                        ),
                        pat_span: src/buf/take.rs:185:13: 185:16 (#0),
                    },
                ),
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:185:13: 185:16 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} T/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:185:19: 186:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut [std::io::IoSlice<'{erased}>],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:187:30: 187:63 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut [std::io::IoSlice<'{erased}>],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:187:30: 187:63 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut [std::io::IoSlice<'{erased}>],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:187:41: 187:63 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut [std::io::IoSlice<'{erased}>; 16_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:187:35: 187:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::RangeTo<usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:187:42: 187:62 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:187:44: 187:62 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:187:44: 187:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [std::io::IoSlice<'{erased}>],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:187:44: 187:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/buf/take.rs:188:25: 188:35 (#0),
                            ),
                        ),
                        pat_span: src/buf/take.rs:188:13: 188:22 (#0),
                    },
                ),
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:188:13: 188:22 (#0),
            scope: scope[2],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:189:9: 201:10 (#539),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::iter::Enumerate<core::iter::Zip<core::slice::IterMut<'{erased}, std::io::IoSlice<'{erased}>>, core::slice::Iter<'{erased}, std::io::IoSlice<'{erased}>>>>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:189:34: 189:86 (#540),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::iter::Enumerate<core::iter::Zip<core::slice::IterMut<'{erased}, std::io::IoSlice<'{erased}>>, core::slice::Iter<'{erased}, std::io::IoSlice<'{erased}>>>>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:189:34: 189:86 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::iter::Zip<core::slice::IterMut<'{erased}, std::io::IoSlice<'{erased}>>, core::slice::Iter<'{erased}, std::io::IoSlice<'{erased}>>>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:189:34: 189:74 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::slice::IterMut<'{erased}, std::io::IoSlice<'{erased}>>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:189:34: 189:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut [std::io::IoSlice<'{erased}>],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:189:34: 189:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut [std::io::IoSlice<'{erased}>],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:189:37: 189:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut [std::io::IoSlice<'{erased}>],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:189:34: 189:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::RangeTo<usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:189:38: 189:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:189:40: 189:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::slice::Iter<'{erased}, std::io::IoSlice<'{erased}>>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:189:60: 189:73 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [std::io::IoSlice<'{erased}>],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:189:60: 189:66 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [std::io::IoSlice<'{erased}>; 16_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:189:60: 189:66 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _100,
                                ),
                                src/buf/take.rs:189:34: 189:86 (#540),
                            ),
                        ),
                        pat_span: src/buf/take.rs:189:34: 189:86 (#540),
                    },
                ),
            ),
        ),
        ty: core::iter::Enumerate<core::iter::Zip<core::slice::IterMut<'{erased}, std::io::IoSlice<'{erased}>>, core::slice::Iter<'{erased}, std::io::IoSlice<'{erased}>>>>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:189:34: 189:86 (#540),
            scope: scope[3],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:160:5: 203:6 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:189:34: 189:86 (#540),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<(usize, (&'{erased} mut std::io::IoSlice<'{erased}>, &'{erased} std::io::IoSlice<'{erased}>))>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:189:34: 189:86 (#540),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::iter::Enumerate<core::iter::Zip<core::slice::IterMut<'{erased}, std::io::IoSlice<'{erased}>>, core::slice::Iter<'{erased}, std::io::IoSlice<'{erased}>>>>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:189:34: 189:86 (#540),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::iter::Enumerate<core::iter::Zip<core::slice::IterMut<'{erased}, std::io::IoSlice<'{erased}>>, core::slice::Iter<'{erased}, std::io::IoSlice<'{erased}>>>>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:189:34: 189:86 (#540),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:189:9: 201:10 (#539),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:189:9: 201:10 (#539),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _115,
                                ),
                                src/buf/take.rs:189:34: 189:86 (#540),
                            ),
                        ),
                        pat_span: src/buf/take.rs:189:13: 189:30 (#541),
                    },
                ),
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:189:14: 189:15 (#0),
            scope: scope[4],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _115,
                                ),
                                src/buf/take.rs:189:34: 189:86 (#540),
                            ),
                        ),
                        pat_span: src/buf/take.rs:189:13: 189:30 (#541),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut std::io::IoSlice<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:189:18: 189:21 (#0),
            scope: scope[4],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _115,
                                ),
                                src/buf/take.rs:189:34: 189:86 (#540),
                            ),
                        ),
                        pat_span: src/buf/take.rs:189:13: 189:30 (#541),
                    },
                ),
            ),
        ),
        ty: &'{erased} std::io::IoSlice<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:189:23: 189:28 (#0),
            scope: scope[4],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: src/buf/take.rs:190:13: 200:14 (#0),
                },
            ),
        ),
        ty: core::option::Option<&'{erased} [u8]>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:190:32: 190:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: src/buf/take.rs:190:13: 200:14 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:190:32: 190:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: src/buf/take.rs:190:13: 200:14 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:190:32: 190:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: src/buf/take.rs:190:13: 200:14 (#0),
                },
            ),
        ),
        ty: &'{erased} std::io::IoSlice<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:190:32: 190:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: src/buf/take.rs:190:13: 200:14 (#0),
                },
            ),
        ),
        ty: core::ops::RangeTo<usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:190:42: 190:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:190:44: 190:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:190:20: 190:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _123,
                                ),
                                src/buf/take.rs:190:32: 190:50 (#0),
                            ),
                        ),
                        pat_span: src/buf/take.rs:190:20: 190:29 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:190:25: 190:28 (#0),
            scope: scope[6],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: src/buf/take.rs:190:13: 200:14 (#0),
                },
            ),
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:190:51: 195:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/buf/take.rs:192:27: 192:81 (#0),
                            ),
                        ),
                        pat_span: src/buf/take.rs:192:21: 192:24 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:192:21: 192:24 (#0),
            scope: scope[6],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/buf/take.rs:192:36: 192:79 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:192:75: 192:78 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::io::IoSlice<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:193:24: 193:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:193:37: 193:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:194:24: 194:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (usize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:194:24: 194:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/buf/take.rs:197:27: 197:83 (#0),
                            ),
                        ),
                        pat_span: src/buf/take.rs:197:21: 197:24 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:197:21: 197:24 (#0),
            scope: scope[5],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/buf/take.rs:197:36: 197:81 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:197:75: 197:80 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/buf/take.rs:197:36: 197:81 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:197:75: 197:80 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/buf/take.rs:197:36: 197:81 (#0),
                },
            ),
        ),
        ty: &'{erased} std::io::IoSlice<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:197:75: 197:80 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::io::IoSlice<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:198:24: 198:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:198:37: 198:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:199:26: 199:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:199:26: 199:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:199:26: 199:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} std::io::IoSlice<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:199:26: 199:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (usize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/take.rs:199:17: 199:37 (#0),
            scope: scope[0],
        },
    },
]