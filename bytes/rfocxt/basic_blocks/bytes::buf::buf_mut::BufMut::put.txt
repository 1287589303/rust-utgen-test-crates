[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            StorageLive(_4),
            StorageLive(_5),
            StorageLive(_6),
            _6 = &_1,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/buf_mut.rs:206:12: 206:32 (#0),
                    scope: scope[0],
                },
                kind: _5 = <&mut Self as buf::buf_mut::BufMut>::remaining_mut(move _6) -> [return: bb1, unwind: bb23],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
            StorageLive(_7),
            StorageLive(_8),
            _8 = &_2,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/buf_mut.rs:206:35: 206:50 (#0),
                    scope: scope[0],
                },
                kind: _7 = <T as buf::buf_impl::Buf>::remaining(move _8) -> [return: bb2, unwind: bb23],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_8),
            _4 = Lt(move _5, move _7),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/buf_mut.rs:206:12: 206:50 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _4) -> [0: bb6, otherwise: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_7),
            StorageDead(_5),
            StorageLive(_10),
            StorageLive(_11),
            StorageLive(_12),
            StorageLive(_13),
            StorageLive(_14),
            StorageLive(_15),
            _15 = &_2,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/buf_mut.rs:208:28: 208:43 (#0),
                    scope: scope[0],
                },
                kind: _14 = <T as buf::buf_impl::Buf>::remaining(move _15) -> [return: bb4, unwind: bb23],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_15),
            StorageLive(_16),
            StorageLive(_17),
            _17 = &_1,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/buf_mut.rs:209:28: 209:48 (#0),
                    scope: scope[0],
                },
                kind: _16 = <&mut Self as buf::buf_mut::BufMut>::remaining_mut(move _17) -> [return: bb5, unwind: bb23],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_17),
            _13 = TryGetError { requested: move _14, available: move _16 },
            StorageDead(_16),
            StorageDead(_14),
            _12 = &_13,
            _11 = &(*_12),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/buf_mut.rs:207:13: 210:15 (#0),
                    scope: scope[0],
                },
                kind: _10 = panic_advance(move _11) -> bb23,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_7),
            StorageDead(_5),
            _3 = const (),
            StorageDead(_4),
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/buf_mut.rs:213:9: 223:10 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb7,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/buf_mut.rs:213:9: 223:10 (#0),
                    scope: scope[0],
                },
                kind: falseUnwind -> [real: bb8, unwind: bb23],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_19),
            StorageLive(_20),
            _20 = &_2,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/buf_mut.rs:213:15: 213:34 (#0),
                    scope: scope[0],
                },
                kind: _19 = <T as buf::buf_impl::Buf>::has_remaining(move _20) -> [return: bb9, unwind: bb23],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/buf_mut.rs:213:15: 213:34 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _19) -> [0: bb21, otherwise: bb10],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_20),
            StorageLive(_21),
            StorageLive(_22),
            _22 = &_2,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/buf_mut.rs:214:21: 214:32 (#0),
                    scope: scope[0],
                },
                kind: _21 = <T as buf::buf_impl::Buf>::chunk(move _22) -> [return: bb11, unwind: bb23],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_22),
            FakeRead(ForLet(None), _21),
            StorageLive(_23),
            StorageLive(_24),
            _24 = &mut (*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/buf_mut.rs:215:21: 215:37 (#0),
                    scope: scope[1],
                },
                kind: _23 = <Self as buf::buf_mut::BufMut>::chunk_mut(move _24) -> [return: bb12, unwind: bb23],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_24),
            FakeRead(ForLet(None), _23),
            StorageLive(_25),
            StorageLive(_26),
            StorageLive(_27),
            _27 = &(*_21),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/buf_mut.rs:216:34: 216:41 (#0),
                    scope: scope[2],
                },
                kind: _26 = core::slice::<impl [u8]>::len(move _27) -> [return: bb13, unwind: bb23],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_27),
            StorageLive(_28),
            StorageLive(_29),
            _29 = &(*_23),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/buf_mut.rs:216:43: 216:50 (#0),
                    scope: scope[2],
                },
                kind: _28 = buf::uninit_slice::UninitSlice::len(move _29) -> [return: bb14, unwind: bb23],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_29),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/buf_mut.rs:216:23: 216:51 (#0),
                    scope: scope[2],
                },
                kind: _25 = <usize as core::cmp::Ord>::min(move _26, move _28) -> [return: bb15, unwind: bb23],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_28),
            StorageDead(_26),
            FakeRead(ForLet(None), _25),
            StorageLive(_30),
            StorageLive(_31),
            StorageLive(_32),
            StorageLive(_33),
            _33 = &mut (*_23),
            StorageLive(_34),
            StorageLive(_35),
            _35 = _25,
            _34 = core::ops::RangeTo::<usize> { end: move _35 },
            StorageDead(_35),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/buf_mut.rs:218:14: 218:21 (#0),
                    scope: scope[3],
                },
                kind: _32 = <buf::uninit_slice::UninitSlice as core::ops::IndexMut<core::ops::RangeTo<usize>>>::index_mut(move _33, move _34) -> [return: bb16, unwind: bb23],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _31 = &mut (*_32),
            StorageDead(_34),
            StorageDead(_33),
            StorageLive(_36),
            StorageLive(_37),
            StorageLive(_38),
            StorageLive(_39),
            _39 = &(*_21),
            StorageLive(_40),
            StorageLive(_41),
            _41 = _25,
            _40 = core::ops::RangeTo::<usize> { end: move _41 },
            StorageDead(_41),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/buf_mut.rs:218:40: 218:47 (#0),
                    scope: scope[3],
                },
                kind: _38 = <[u8] as core::ops::Index<core::ops::RangeTo<usize>>>::index(move _39, move _40) -> [return: bb17, unwind: bb23],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_40),
            StorageDead(_39),
            _37 = &(*_38),
            _36 = &(*_37),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/buf_mut.rs:218:13: 218:48 (#0),
                    scope: scope[3],
                },
                kind: _30 = buf::uninit_slice::UninitSlice::copy_from_slice(move _31, move _36) -> [return: bb18, unwind: bb23],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_36),
            StorageDead(_31),
            StorageDead(_38),
            StorageDead(_37),
            StorageDead(_32),
            StorageDead(_30),
            StorageLive(_42),
            StorageLive(_43),
            _43 = &mut (*_1),
            StorageLive(_44),
            _44 = _25,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/buf_mut.rs:221:22: 221:43 (#0),
                    scope: scope[3],
                },
                kind: _42 = <Self as buf::buf_mut::BufMut>::advance_mut(move _43, move _44) -> [return: bb19, unwind: bb23],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_44),
            StorageDead(_43),
            StorageDead(_42),
            StorageLive(_45),
            StorageLive(_46),
            _46 = &mut _2,
            StorageLive(_47),
            _47 = _25,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/buf_mut.rs:222:13: 222:29 (#0),
                    scope: scope[3],
                },
                kind: _45 = <T as buf::buf_impl::Buf>::advance(move _46, move _47) -> [return: bb20, unwind: bb23],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_47),
            StorageDead(_46),
            StorageDead(_45),
            _18 = const (),
            StorageDead(_25),
            StorageDead(_23),
            StorageDead(_21),
            StorageDead(_19),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/buf_mut.rs:213:9: 223:10 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb7,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_20),
            StorageLive(_49),
            _0 = const (),
            StorageDead(_49),
            StorageDead(_19),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/buf_mut.rs:224:5: 224:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb22, unwind: bb24],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/buf_mut.rs:224:6: 224:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/buf_mut.rs:224:5: 224:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb24, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/buf_mut.rs:202:5: 224:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:202:49: 202:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefMut,
                ),
            ),
        ),
        ty: &'{erased} mut Self/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:202:27: 202:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: Some(
                            src/buf/buf_mut.rs:202:47: 202:48 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/buf/buf_mut.rs:202:38: 202:45 (#0),
                            ),
                        ),
                        pat_span: src/buf/buf_mut.rs:202:38: 202:45 (#0),
                    },
                ),
            ),
        ),
        ty: T/#1,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:202:38: 202:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:206:9: 211:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:206:12: 206:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:206:12: 206:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} &'{erased} mut Self/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:206:12: 206:16 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:206:35: 206:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} T/#1,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:206:35: 206:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:206:51: 211:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:207:13: 210:15 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} TryGetError,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:207:27: 210:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} TryGetError,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:207:27: 210:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: TryGetError,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:207:28: 210:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:208:28: 208:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} T/#1,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:208:28: 208:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:209:28: 209:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} &'{erased} mut Self/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:209:28: 209:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:202:5: 224:6 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: src/buf/buf_mut.rs:213:9: 223:10 (#503),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:213:15: 213:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: src/buf/buf_mut.rs:213:9: 223:10 (#503),
                },
            ),
        ),
        ty: &'{erased} T/#1,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:213:15: 213:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/buf/buf_mut.rs:214:21: 214:32 (#0),
                            ),
                        ),
                        pat_span: src/buf/buf_mut.rs:214:17: 214:18 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:214:17: 214:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} T/#1,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:214:21: 214:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/buf/buf_mut.rs:215:21: 215:37 (#0),
                            ),
                        ),
                        pat_span: src/buf/buf_mut.rs:215:17: 215:18 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut buf::uninit_slice::UninitSlice,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:215:17: 215:18 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut Self/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:215:21: 215:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/buf/buf_mut.rs:216:23: 216:51 (#0),
                            ),
                        ),
                        pat_span: src/buf/buf_mut.rs:216:17: 216:20 (#0),
                    },
                ),
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:216:17: 216:20 (#0),
            scope: scope[2],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:216:34: 216:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:216:34: 216:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:216:43: 216:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} buf::uninit_slice::UninitSlice,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:216:43: 216:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:218:13: 218:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut buf::uninit_slice::UninitSlice,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:218:13: 218:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut buf::uninit_slice::UninitSlice,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:218:14: 218:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut buf::uninit_slice::UninitSlice,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:218:13: 218:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::RangeTo<usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:218:15: 218:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:218:17: 218:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:218:38: 218:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:218:38: 218:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:218:40: 218:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:218:39: 218:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::RangeTo<usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:218:41: 218:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:218:43: 218:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: src/buf/buf_mut.rs:221:22: 221:43 (#0),
                },
            ),
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:221:22: 221:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: src/buf/buf_mut.rs:221:22: 221:43 (#0),
                },
            ),
        ),
        ty: &'{erased} mut Self/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:221:22: 221:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: src/buf/buf_mut.rs:221:22: 221:43 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:221:39: 221:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:222:13: 222:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut T/#1,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:222:13: 222:16 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:222:25: 222:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: src/buf/buf_mut.rs:213:9: 223:10 (#503),
                },
            ),
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:213:9: 223:10 (#503),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:213:9: 223:10 (#503),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:213:9: 223:10 (#503),
            scope: scope[0],
        },
    },
]