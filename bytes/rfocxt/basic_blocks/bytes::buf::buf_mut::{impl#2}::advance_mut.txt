[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            StorageLive(_4),
            StorageLive(_5),
            StorageLive(_6),
            _6 = &(*(*_1)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/buf_mut.rs:1498:12: 1498:22 (#0),
                    scope: scope[0],
                },
                kind: _5 = core::slice::<impl [u8]>::len(move _6) -> [return: bb1, unwind: bb7],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
            StorageLive(_7),
            _7 = _2,
            _4 = Lt(move _5, move _7),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/buf_mut.rs:1498:12: 1498:28 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _4) -> [0: bb4, otherwise: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_7),
            StorageDead(_5),
            StorageLive(_9),
            StorageLive(_10),
            StorageLive(_11),
            StorageLive(_12),
            StorageLive(_13),
            _13 = _2,
            StorageLive(_14),
            StorageLive(_15),
            _15 = &(*(*_1)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/buf_mut.rs:1501:28: 1501:38 (#0),
                    scope: scope[0],
                },
                kind: _14 = core::slice::<impl [u8]>::len(move _15) -> [return: bb3, unwind: bb7],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_15),
            _12 = TryGetError { requested: move _13, available: move _14 },
            StorageDead(_14),
            StorageDead(_13),
            _11 = &_12,
            _10 = &(*_11),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/buf_mut.rs:1499:13: 1502:15 (#0),
                    scope: scope[0],
                },
                kind: _9 = panic_advance(move _10) -> bb7,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_7),
            StorageDead(_5),
            _3 = const (),
            StorageDead(_4),
            StorageDead(_3),
            StorageLive(_17),
            StorageLive(_18),
            StorageLive(_19),
            StorageLive(_20),
            _20 = &mut (*_1),
            StorageLive(_21),
            StorageLive(_22),
            StorageLive(_23),
            StorageLive(_24),
            _24 = [],
            _23 = &mut _24,
            _22 = &mut (*_23),
            _21 = move _22 as &mut [u8] (PointerCoercion(Unsize)),
            StorageDead(_22),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/buf_mut.rs:1506:22: 1506:55 (#0),
                    scope: scope[0],
                },
                kind: _19 = core::mem::replace::<&mut [u8]>(move _20, move _21) -> [return: bb5, unwind: bb7],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _18 = &mut (*_19),
            StorageDead(_21),
            StorageDead(_20),
            StorageLive(_25),
            _25 = _2,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/buf_mut.rs:1506:22: 1506:73 (#0),
                    scope: scope[0],
                },
                kind: _17 = core::slice::<impl [u8]>::split_at_mut(move _18, move _25) -> [return: bb6, unwind: bb7],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_25),
            StorageDead(_18),
            PlaceMention(_17),
            StorageLive(_16),
            _16 = move (_17.1: &mut [u8]),
            StorageDead(_24),
            StorageDead(_23),
            StorageDead(_19),
            StorageDead(_17),
            StorageLive(_26),
            _26 = &mut (*_16),
            (*_1) = move _26,
            StorageDead(_26),
            _0 = const (),
            StorageDead(_16),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/buf_mut.rs:1508:6: 1508:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/buf/buf_mut.rs:1497:5: 1508:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:1497:49: 1497:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefMut,
                ),
            ),
        ),
        ty: &'{erased} mut &'{erased} mut [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:1497:27: 1497:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/buf/buf_mut.rs:1497:43: 1497:48 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/buf/buf_mut.rs:1497:38: 1497:41 (#0),
                            ),
                        ),
                        pat_span: src/buf/buf_mut.rs:1497:38: 1497:41 (#0),
                    },
                ),
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:1497:38: 1497:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:1498:9: 1503:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:1498:12: 1498:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:1498:12: 1498:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:1498:12: 1498:16 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:1498:25: 1498:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:1498:29: 1503:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:1499:13: 1502:15 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} TryGetError,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:1499:27: 1502:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} TryGetError,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:1499:27: 1502:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: TryGetError,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:1499:28: 1502:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:1500:28: 1500:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:1501:28: 1501:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:1501:28: 1501:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _17,
                                ),
                                src/buf/buf_mut.rs:1506:22: 1506:73 (#0),
                            ),
                        ),
                        pat_span: src/buf/buf_mut.rs:1506:13: 1506:19 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:1506:17: 1506:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (&'{erased} mut [u8], &'{erased} mut [u8]),
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:1506:22: 1506:73 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:1506:22: 1506:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:1506:22: 1506:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut &'{erased} mut [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:1506:41: 1506:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:1506:47: 1506:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut [u8; 0_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:1506:47: 1506:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut [u8; 0_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:1506:47: 1506:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: [u8; 0_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:1506:52: 1506:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:1506:69: 1506:72 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/buf/buf_mut.rs:1507:17: 1507:18 (#0),
            scope: scope[0],
        },
    },
]