[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut buf: &[u8] = &b\"\\x01\\x02 hello\"[..]; // remaining() == 8",
          "    let result = buf.try_get_u16_le();",
          "    // Calling the function to demonstrate the test",
          "    let _ = result;",
          "}"
        ],
        "oracle": [
          "    assert_eq!(Ok(0x0201_u16), buf.try_get_u16_le());",
          "    assert_eq!(6, buf.remaining());"
        ],
        "code": [
          "{",
          "    let mut buf: &[u8] = &b\"\\x01\\x02 hello\"[..]; // remaining() == 8",
          "    let result = buf.try_get_u16_le();",
          "    // Calling the function to demonstrate the test",
          "    let _ = result;",
          "    assert_eq!(Ok(0x0201_u16), buf.try_get_u16_le());",
          "    assert_eq!(6, buf.remaining());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut buf: &[u8] = &b\"\\x03\\x04\"[..]; // remaining() == 2",
          "    let result = buf.try_get_u16_le();",
          "    // Calling the function to demonstrate the test",
          "    let _ = result;",
          "}"
        ],
        "oracle": [
          "    assert_eq!(buf.remaining(), 2);",
          "    assert_eq!(result, Ok(0x0403_u16);"
        ],
        "code": [
          "{",
          "    let mut buf: &[u8] = &b\"\\x03\\x04\"[..]; // remaining() == 2",
          "    let result = buf.try_get_u16_le();",
          "    // Calling the function to demonstrate the test",
          "    let _ = result;",
          "    assert_eq!(buf.remaining(), 2);",
          "    assert_eq!(result, Ok(0x0403_u16);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut buf: &[u8] = &b\"\\x05\"[..]; // remaining() == 1",
          "    let result = buf.try_get_u16_le();",
          "    // Calling the function to demonstrate the test",
          "    let _ = result;",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Err(TryGetError { requested: 2, available: 1 }));",
          "    assert_eq!(buf.remaining(), 1);"
        ],
        "code": [
          "{",
          "    let mut buf: &[u8] = &b\"\\x05\"[..]; // remaining() == 1",
          "    let result = buf.try_get_u16_le();",
          "    // Calling the function to demonstrate the test",
          "    let _ = result;",
          "    assert_eq!(result, Err(TryGetError { requested: 2, available: 1 }));",
          "    assert_eq!(buf.remaining(), 1);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]