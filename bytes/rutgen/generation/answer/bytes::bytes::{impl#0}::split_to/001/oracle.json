[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut a = Bytes::from_static(b\"hello\");",
          "    let b = a.split_to(a.len());",
          "}"
        ],
        "oracle": [
          "    assert_eq!(a.len(), 0);",
          "    assert_eq!(b.len(), 5);",
          "    assert_eq!(&b.as_slice(), b\"hello\");",
          "    assert!(a.is_empty());"
        ],
        "code": [
          "{",
          "    let mut a = Bytes::from_static(b\"hello\");",
          "    let b = a.split_to(a.len());",
          "    assert_eq!(a.len(), 0);",
          "    assert_eq!(b.len(), 5);",
          "    assert_eq!(&b.as_slice(), b\"hello\");",
          "    assert!(a.is_empty());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut a = Bytes::from_static(b\"hello\");",
          "    let b = a.split_to(0);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(a.len(), 5);",
          "    assert_eq!(b.len(), 0);",
          "    assert_eq!(a.as_slice(), b\"hello\");",
          "    assert_eq!(b.as_slice(), b\"\");",
          "    assert!(b.is_empty());",
          "    assert!(!a.is_empty());",
          "    assert!(b.is_unique());",
          "    assert!(a.is_unique());"
        ],
        "code": [
          "{",
          "    let mut a = Bytes::from_static(b\"hello\");",
          "    let b = a.split_to(0);",
          "    assert_eq!(a.len(), 5);",
          "    assert_eq!(b.len(), 0);",
          "    assert_eq!(a.as_slice(), b\"hello\");",
          "    assert_eq!(b.as_slice(), b\"\");",
          "    assert!(b.is_empty());",
          "    assert!(!a.is_empty());",
          "    assert!(b.is_unique());",
          "    assert!(a.is_unique());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut a = Bytes::from_static(b\"hello\");",
          "    let b = a.split_to(3);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(a.len(), 2);",
          "    assert_eq!(b.len(), 3);",
          "    assert_eq!(&a[..], b\"lo\");",
          "    assert_eq!(&b[..], b\"hel\");",
          "    assert_eq!(b.as_ptr(), a.as_ptr().wrapping_sub(3));",
          "    assert!(b.is_empty() == false);",
          "    assert!(a.is_empty() == false);"
        ],
        "code": [
          "{",
          "    let mut a = Bytes::from_static(b\"hello\");",
          "    let b = a.split_to(3);",
          "    assert_eq!(a.len(), 2);",
          "    assert_eq!(b.len(), 3);",
          "    assert_eq!(&a[..], b\"lo\");",
          "    assert_eq!(&b[..], b\"hel\");",
          "    assert_eq!(b.as_ptr(), a.as_ptr().wrapping_sub(3));",
          "    assert!(b.is_empty() == false);",
          "    assert!(a.is_empty() == false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]