[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut buf: &[u8] = &b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x0A\"[..];",
          "    let _ = buf.try_get_i64();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(Ok(0x0102030405060708_i64), buf.try_get_i64());",
          "    assert_eq!(1, buf.remaining());",
          "    assert_eq!(Err(TryGetError { requested: 8, available: 7 }), buf.try_get_i64());",
          "    assert_eq!(7, buf.remaining());"
        ],
        "code": [
          "{",
          "    let mut buf: &[u8] = &b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x0A\"[..];",
          "    let _ = buf.try_get_i64();",
          "    assert_eq!(Ok(0x0102030405060708_i64), buf.try_get_i64());",
          "    assert_eq!(1, buf.remaining());",
          "    assert_eq!(Err(TryGetError { requested: 8, available: 7 }), buf.try_get_i64());",
          "    assert_eq!(7, buf.remaining());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut buf: &[u8] = &b\"\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\\x00\\x00\"[..];",
          "    let _ = buf.try_get_i64();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(buf.remaining(), 2);",
          "    assert_eq!(_buf.try_get_i64(), Ok(0xFFFFFFFFFFFFFFFF_i64));",
          "    assert_eq!(buf.remaining(), 0);"
        ],
        "code": [
          "{",
          "    let mut buf: &[u8] = &b\"\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\\x00\\x00\"[..];",
          "    let _ = buf.try_get_i64();",
          "    assert_eq!(buf.remaining(), 2);",
          "    assert_eq!(_buf.try_get_i64(), Ok(0xFFFFFFFFFFFFFFFF_i64));",
          "    assert_eq!(buf.remaining(), 0);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut buf: &[u8] = &b\"\\x10\\x20\\x30\\x40\\x50\\x60\\x70\\x80\"[..];",
          "    let _ = buf.try_get_i64();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(Ok(0x1020304050607080_i64), buf.try_get_i64());",
          "    assert_eq!(0, buf.remaining());"
        ],
        "code": [
          "{",
          "    let mut buf: &[u8] = &b\"\\x10\\x20\\x30\\x40\\x50\\x60\\x70\\x80\"[..];",
          "    let _ = buf.try_get_i64();",
          "    assert_eq!(Ok(0x1020304050607080_i64), buf.try_get_i64());",
          "    assert_eq!(0, buf.remaining());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut buf: &[u8] = &b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\"[..];",
          "    let _ = buf.try_get_i64();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(Ok(0x0102030405060708_i64), buf.try_get_i64());",
          "    assert_eq!(6, buf.remaining());",
          "    assert_eq!(Err(TryGetError{requested: 8, available: 7}), buf.try_get_i64());",
          "    assert_eq!(7, buf.remaining());"
        ],
        "code": [
          "{",
          "    let mut buf: &[u8] = &b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\"[..];",
          "    let _ = buf.try_get_i64();",
          "    assert_eq!(Ok(0x0102030405060708_i64), buf.try_get_i64());",
          "    assert_eq!(6, buf.remaining());",
          "    assert_eq!(Err(TryGetError{requested: 8, available: 7}), buf.try_get_i64());",
          "    assert_eq!(7, buf.remaining());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut buf: &[u8] = &b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x0A\\x0B\"[..];",
          "    let _ = buf.try_get_i64();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(buf.remaining(), 4);",
          "    assert_eq!(buf.try_get_i64().unwrap(), 0x0001020304050607_i64);",
          "    assert_eq!(buf.remaining(), 4);",
          "    assert_eq!(buf.try_get_i64(), Err(TryGetError { requested: 8, available: 4 }));",
          "    assert_eq!(buf.remaining(), 4);"
        ],
        "code": [
          "{",
          "    let mut buf: &[u8] = &b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x0A\\x0B\"[..];",
          "    let _ = buf.try_get_i64();",
          "    assert_eq!(buf.remaining(), 4);",
          "    assert_eq!(buf.try_get_i64().unwrap(), 0x0001020304050607_i64);",
          "    assert_eq!(buf.remaining(), 4);",
          "    assert_eq!(buf.try_get_i64(), Err(TryGetError { requested: 8, available: 4 }));",
          "    assert_eq!(buf.remaining(), 4);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]