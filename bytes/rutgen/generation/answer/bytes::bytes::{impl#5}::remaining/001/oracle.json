[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let bytes = Bytes::new();",
          "    let _result = bytes.remaining();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(bytes.remaining(), 0);"
        ],
        "code": [
          "{",
          "    let bytes = Bytes::new();",
          "    let _result = bytes.remaining();",
          "    assert_eq!(bytes.remaining(), 0);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let data: &'static [u8] = &[1, 2, 3, 4, 5];",
          "    let bytes = Bytes::from_static(data);",
          "    let _result = bytes.remaining();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(bytes.remaining(), 5);"
        ],
        "code": [
          "{",
          "    let data: &'static [u8] = &[1, 2, 3, 4, 5];",
          "    let bytes = Bytes::from_static(data);",
          "    let _result = bytes.remaining();",
          "    assert_eq!(bytes.remaining(), 5);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let data: &'static [u8] = &[0; usize::MAX];",
          "    let bytes = Bytes::from_static(data);",
          "    let _result = bytes.remaining();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(bytes.remaining(), usize::MAX);"
        ],
        "code": [
          "{",
          "    let data: &'static [u8] = &[0; usize::MAX];",
          "    let bytes = Bytes::from_static(data);",
          "    let _result = bytes.remaining();",
          "    assert_eq!(bytes.remaining(), usize::MAX);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]