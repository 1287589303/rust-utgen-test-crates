[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut buf: &[u8] = &b\"\\xA1\\xA0\\x09\\x08 hello\"[..];",
          "    let result = buf.try_get_i32_le();",
          "    let remaining = buf.remaining();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(Ok(0x0809A0A1_i32), buf.try_get_i32_le());",
          "    assert_eq!(6, buf.remaining());",
          "    assert_eq!(Err(TryGetError{requested: 4, available: 3}), buf.try_get_i32_le());",
          "    assert_eq!(3, buf.remaining());"
        ],
        "code": [
          "{",
          "    let mut buf: &[u8] = &b\"\\xA1\\xA0\\x09\\x08 hello\"[..];",
          "    let result = buf.try_get_i32_le();",
          "    let remaining = buf.remaining();",
          "    assert_eq!(Ok(0x0809A0A1_i32), buf.try_get_i32_le());",
          "    assert_eq!(6, buf.remaining());",
          "    assert_eq!(Err(TryGetError{requested: 4, available: 3}), buf.try_get_i32_le());",
          "    assert_eq!(3, buf.remaining());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut buf: &[u8] = &b\"\\x08\\x09\\xA0\"[..];",
          "    let result = buf.try_get_i32_le();",
          "    let remaining = buf.remaining();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(Ok(0x0809A0A1_i32), buf.try_get_i32_le());",
          "    assert_eq!(6, buf.remaining());",
          "    assert_eq!(Err(TryGetError{requested: 4, available: 3}), buf.try_get_i32_le());",
          "    assert_eq!(3, buf.remaining());",
          "    assert!(buf.remaining() < 4);"
        ],
        "code": [
          "{",
          "    let mut buf: &[u8] = &b\"\\x08\\x09\\xA0\"[..];",
          "    let result = buf.try_get_i32_le();",
          "    let remaining = buf.remaining();",
          "    assert_eq!(Ok(0x0809A0A1_i32), buf.try_get_i32_le());",
          "    assert_eq!(6, buf.remaining());",
          "    assert_eq!(Err(TryGetError{requested: 4, available: 3}), buf.try_get_i32_le());",
          "    assert_eq!(3, buf.remaining());",
          "    assert!(buf.remaining() < 4);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]