[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    struct MockBuf {",
          "        data: &'static [u8],",
          "        position: usize,",
          "    }",
          "",
          "    impl MockBuf {",
          "        fn remaining(&self) -> usize {",
          "            self.data.len() - self.position",
          "        }",
          "",
          "        fn chunk(&self) -> &[u8] {",
          "            &self.data[self.position..]",
          "        }",
          "",
          "        fn advance(&mut self, cnt: usize) {",
          "            self.position += cnt;",
          "        }",
          "    }",
          "",
          "    let mut buf = MockBuf {",
          "        data: &b\"\"[..],",
          "        position: 0,",
          "    };",
          "    ",
          "    let result = buf.try_get_u8();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Err(TryGetError { requested: 1, available: 0 }));"
        ],
        "code": [
          "{",
          "    struct MockBuf {",
          "        data: &'static [u8],",
          "        position: usize,",
          "    }",
          "",
          "    impl MockBuf {",
          "        fn remaining(&self) -> usize {",
          "            self.data.len() - self.position",
          "        }",
          "",
          "        fn chunk(&self) -> &[u8] {",
          "            &self.data[self.position..]",
          "        }",
          "",
          "        fn advance(&mut self, cnt: usize) {",
          "            self.position += cnt;",
          "        }",
          "    }",
          "",
          "    let mut buf = MockBuf {",
          "        data: &b\"\"[..],",
          "        position: 0,",
          "    };",
          "    ",
          "    let result = buf.try_get_u8();",
          "    assert_eq!(result, Err(TryGetError { requested: 1, available: 0 }));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]