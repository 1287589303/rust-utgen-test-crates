[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut buf = &b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16\"[..];",
          "    let _ = buf.try_get_i128();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(Ok(0x01020304050607080910111213141516_i128), buf.try_get_i128());",
          "    assert_eq!(0, buf.remaining());"
        ],
        "code": [
          "{",
          "    let mut buf = &b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16\"[..];",
          "    let _ = buf.try_get_i128();",
          "    assert_eq!(Ok(0x01020304050607080910111213141516_i128), buf.try_get_i128());",
          "    assert_eq!(0, buf.remaining());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut buf = &b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\"[..];",
          "    let _ = buf.try_get_i128();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(buf.remaining(), 15);",
          "    assert_eq!(buf.try_get_i128(), Err(TryGetError{requested: 16, available: 15}));",
          "    assert_eq!(Ok(0x01020304050607080910111213141516_i128), buf.try_get_i128());",
          "    assert_eq!(buf.remaining(), 6);",
          "    assert!(matches!(buf.try_get_i128(), Ok(_)));"
        ],
        "code": [
          "{",
          "    let mut buf = &b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\"[..];",
          "    let _ = buf.try_get_i128();",
          "    assert_eq!(buf.remaining(), 15);",
          "    assert_eq!(buf.try_get_i128(), Err(TryGetError{requested: 16, available: 15}));",
          "    assert_eq!(Ok(0x01020304050607080910111213141516_i128), buf.try_get_i128());",
          "    assert_eq!(buf.remaining(), 6);",
          "    assert!(matches!(buf.try_get_i128(), Ok(_)));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut buf = &b\"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"[..];",
          "    let _ = buf.try_get_i128();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(Ok(0_i128), buf.try_get_i128());",
          "    assert_eq!(0, buf.remaining());",
          "    ",
          "    let mut buf = &b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16 hello\"[..];",
          "    assert_eq!(Ok(0x01020304050607080910111213141516_i128), buf.try_get_i128());",
          "    assert_eq!(6, buf.remaining());",
          "    ",
          "    let mut buf = &b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\"[..];",
          "    assert_eq!(Err(TryGetError{requested: 16, available: 15}), buf.try_get_i128());",
          "    assert_eq!(15, buf.remaining());"
        ],
        "code": [
          "{",
          "    let mut buf = &b\"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"[..];",
          "    let _ = buf.try_get_i128();",
          "    assert_eq!(Ok(0_i128), buf.try_get_i128());",
          "    assert_eq!(0, buf.remaining());",
          "    ",
          "    let mut buf = &b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16 hello\"[..];",
          "    assert_eq!(Ok(0x01020304050607080910111213141516_i128), buf.try_get_i128());",
          "    assert_eq!(6, buf.remaining());",
          "    ",
          "    let mut buf = &b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\"[..];",
          "    assert_eq!(Err(TryGetError{requested: 16, available: 15}), buf.try_get_i128());",
          "    assert_eq!(15, buf.remaining());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]