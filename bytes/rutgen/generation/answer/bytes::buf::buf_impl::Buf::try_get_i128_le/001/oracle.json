[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut buf: &[u8] = &b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x0A\\x0B\\x0C\\x0D\\x0E\"[..]; // 15 bytes",
          "    let result = buf.try_get_i128_le();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Err(TryGetError { requested: 16, available: 15 }));"
        ],
        "code": [
          "{",
          "    let mut buf: &[u8] = &b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x0A\\x0B\\x0C\\x0D\\x0E\"[..]; // 15 bytes",
          "    let result = buf.try_get_i128_le();",
          "    assert_eq!(result, Err(TryGetError { requested: 16, available: 15 }));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut buf: &mut &[u8] = &mut &b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01\"[..]; // 16 bytes",
          "    let result = buf.try_get_i128_le();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(Err(TryGetError { requested: 16, available: 15 }), result);"
        ],
        "code": [
          "{",
          "    let mut buf: &mut &[u8] = &mut &b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01\"[..]; // 16 bytes",
          "    let result = buf.try_get_i128_le();",
          "    assert_eq!(Err(TryGetError { requested: 16, available: 15 }), result);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]