[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let b = Bytes::new();",
          "    b.is_empty();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(b.is_empty(), true);"
        ],
        "code": [
          "{",
          "    let b = Bytes::new();",
          "    b.is_empty();",
          "    assert_eq!(b.is_empty(), true);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let data = [1, 2, 3];",
          "    let b = Bytes::from_static(&data);",
          "    b.is_empty();",
          "}"
        ],
        "oracle": [
          "    assert!(!b.is_empty());"
        ],
        "code": [
          "{",
          "    let data = [1, 2, 3];",
          "    let b = Bytes::from_static(&data);",
          "    b.is_empty();",
          "    assert!(!b.is_empty());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let data = vec![0u8; usize::MAX];",
          "    let b = Bytes::from_owner(data);",
          "    b.is_empty();",
          "}"
        ],
        "oracle": [
          "    assert!(!b.is_empty());"
        ],
        "code": [
          "{",
          "    let data = vec![0u8; usize::MAX];",
          "    let b = Bytes::from_owner(data);",
          "    b.is_empty();",
          "    assert!(!b.is_empty());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]