[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut buf: &mut [u8] = &mut [1, 2, 3];",
          "    buf.advance(buf.len());",
          "}"
        ],
        "oracle": [
          "    assert_eq!(buf.len(), 3);",
          "    buf.advance(3);",
          "    assert_eq!(buf.len(), 0);",
          "    assert!(std::panic::catch_unwind(|| buf.advance(1)).is_err());",
          "    assert_eq!(buf.len(), 0);"
        ],
        "code": [
          "{",
          "    let mut buf: &mut [u8] = &mut [1, 2, 3];",
          "    buf.advance(buf.len());",
          "    assert_eq!(buf.len(), 3);",
          "    buf.advance(3);",
          "    assert_eq!(buf.len(), 0);",
          "    assert!(std::panic::catch_unwind(|| buf.advance(1)).is_err());",
          "    assert_eq!(buf.len(), 0);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut buf: &mut [u8] = &mut [1, 2, 3, 4, 5];",
          "    buf.advance(3);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(buf.len(), 2);",
          "    assert_eq!(buf[0], 4);",
          "    assert_eq!(buf[1], 5);",
          "    assert!(std::panic::catch_unwind(|| buf.advance(3)).is_err());",
          "    assert_eq!(buf.len(), 2);",
          "    assert_eq!(buf, &[4, 5]);"
        ],
        "code": [
          "{",
          "    let mut buf: &mut [u8] = &mut [1, 2, 3, 4, 5];",
          "    buf.advance(3);",
          "    assert_eq!(buf.len(), 2);",
          "    assert_eq!(buf[0], 4);",
          "    assert_eq!(buf[1], 5);",
          "    assert!(std::panic::catch_unwind(|| buf.advance(3)).is_err());",
          "    assert_eq!(buf.len(), 2);",
          "    assert_eq!(buf, &[4, 5]);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [
          "#[should_panic]"
        ],
        "prefix": [
          "{",
          "    let mut buf: &mut [u8] = &mut [];",
          "    buf.advance(1);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(panic_advance.call_count, 0);",
          "    assert_eq!(buf.len(), 0);",
          "    assert_eq!(panic_advance.last_error.requested, 1);",
          "    assert_eq!(panic_advance.last_error.available, 0);"
        ],
        "code": [
          "{",
          "    let mut buf: &mut [u8] = &mut [];",
          "    buf.advance(1);",
          "    assert_eq!(panic_advance.call_count, 0);",
          "    assert_eq!(buf.len(), 0);",
          "    assert_eq!(panic_advance.last_error.requested, 1);",
          "    assert_eq!(panic_advance.last_error.available, 0);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]