[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [
          "#[should_panic]"
        ],
        "prefix": [
          "{",
          "    let mut byte_vec = BytesMut::with_capacity(5);",
          "    byte_vec.resize(5, 0u8);",
          "    let at = byte_vec.len() + 1;",
          "    let _ = byte_vec.split_to(at);",
          "}"
        ],
        "oracle": [
          "    assert!((byte_vec.len() + 1) > byte_vec.len());",
          "    assert!(std::panic::catch_unwind(|| byte_vec.split_to(byte_vec.len() + 1)).is_err());",
          "    assert_eq!(byte_vec.len(), 5);",
          "    assert_eq!(byte_vec.capacity(), 5);"
        ],
        "code": [
          "{",
          "    let mut byte_vec = BytesMut::with_capacity(5);",
          "    byte_vec.resize(5, 0u8);",
          "    let at = byte_vec.len() + 1;",
          "    let _ = byte_vec.split_to(at);",
          "    assert!((byte_vec.len() + 1) > byte_vec.len());",
          "    assert!(std::panic::catch_unwind(|| byte_vec.split_to(byte_vec.len() + 1)).is_err());",
          "    assert_eq!(byte_vec.len(), 5);",
          "    assert_eq!(byte_vec.capacity(), 5);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]