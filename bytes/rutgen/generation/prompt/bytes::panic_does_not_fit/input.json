{
  "system_pt": "As a software testing expert, infer the test input conditions or ranges based on the provided information. Follow these guidelines:\n1. Provide test input conditions or ranges in one line in plain text only, without additional explanations or Markdown formatting\n2. Analyze the function under test, context, preconditions, and expected return values or types to determine appropriate test input conditions or ranges\n3. The inferred test input conditions or ranges should comprehensively satisfy all provided preconditions simultaneously.\n4. Ensure the test input conditions or ranges cover boundary cases and edge scenarios\n",
  "static_pt": "The context for the focal function is as follows:\n// src/lib.rs\n// crate name is bytes\npub use crate::buf::{Buf, BufMut};\npub use crate::bytes::Bytes;\npub use crate::bytes_mut::BytesMut;\n#[cold]\nfn panic_does_not_fit(size: usize, nbytes: usize) -> ! {\n    panic!(\n        \"size too large: the integer type can fit {} bytes, but nbytes is {}\", size,\n        nbytes\n    );\n}\n\nThe function to be tested is presented with each line formatted as 'line number + code':\n179 fn panic_does_not_fit(size: usize, nbytes: usize) -> ! {\n180     panic!(\n181         \"size too large: the integer type can fit {} bytes, but nbytes is {}\",\n182         size, nbytes\n183     );\n184 }\n\nWhen inferring test input conditions or ranges, consider the following preconditions and expected return values or types:\n"
}