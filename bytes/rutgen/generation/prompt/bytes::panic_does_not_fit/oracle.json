{
  "system_pt": "As a software testing expert, please generate accurate test oracles code based on the provided information. Follow these guidelines:\n1. Generate executable test oracle codes in plain text format, one per line. Do not output complete test functions, avoid additional explanations, and do not use Markdown.\n2. Combine the given function under test, context, relevant documentation, preconditions, expected return values or types, test input conditions or ranges, and existing test function prefixes to infer and generate corresponding test oracles code.\n3. Only generate necessary test oracles to ensure comprehensive validation.\n",
  "static_pt": "The context for the focal function is as follows:\n// src/lib.rs\n// crate name is bytes\npub use crate::buf::{Buf, BufMut};\npub use crate::bytes::Bytes;\npub use crate::bytes_mut::BytesMut;\n#[cold]\nfn panic_does_not_fit(size: usize, nbytes: usize) -> ! {\n    panic!(\n        \"size too large: the integer type can fit {} bytes, but nbytes is {}\", size,\n        nbytes\n    );\n}\n\nThe function to be tested is presented with each line formatted as 'line number + code':\n179 fn panic_does_not_fit(size: usize, nbytes: usize) -> ! {\n180     panic!(\n181         \"size too large: the integer type can fit {} bytes, but nbytes is {}\",\n182         size, nbytes\n183     );\n184 }\n\nThe path conditions that the generated test functions should satisfy are as follows:\n"
}