[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let a = \"abcd\";",
          "    let b = \"abce\";",
          "    let _result = osa_distance(a, b);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(osa_distance(\"abcd\", \"abce\"), 1);",
          "    assert_eq!(osa_distance(\"abcd\", \"abcd\"), 0);",
          "    assert_eq!(osa_distance(\"abc\", \"abcd\"), 1);",
          "    assert_eq!(osa_distance(\"abcde\", \"abce\"), 2);",
          "    assert_eq!(osa_distance(\"a\", \"b\"), 1);",
          "    assert_eq!(osa_distance(\"\", \"abc\"), 3);",
          "    assert_eq!(osa_distance(\"abc\", \"\"), 3);",
          "    assert_eq!(osa_distance(\"a\", \"\"), 1);",
          "    assert_eq!(osa_distance(\"\", \"\"), 0);",
          "    assert_eq!(osa_distance(\"abc\", \"cab\"), 2);"
        ],
        "code": [
          "{",
          "    let a = \"abcd\";",
          "    let b = \"abce\";",
          "    let _result = osa_distance(a, b);",
          "    assert_eq!(osa_distance(\"abcd\", \"abce\"), 1);",
          "    assert_eq!(osa_distance(\"abcd\", \"abcd\"), 0);",
          "    assert_eq!(osa_distance(\"abc\", \"abcd\"), 1);",
          "    assert_eq!(osa_distance(\"abcde\", \"abce\"), 2);",
          "    assert_eq!(osa_distance(\"a\", \"b\"), 1);",
          "    assert_eq!(osa_distance(\"\", \"abc\"), 3);",
          "    assert_eq!(osa_distance(\"abc\", \"\"), 3);",
          "    assert_eq!(osa_distance(\"a\", \"\"), 1);",
          "    assert_eq!(osa_distance(\"\", \"\"), 0);",
          "    assert_eq!(osa_distance(\"abc\", \"cab\"), 2);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let a = \"hello\";",
          "    let b = \"hallo\";",
          "    let _result = osa_distance(a, b);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(1, osa_distance(\"hello\", \"hallo\"));",
          "    assert_eq!(2, osa_distance(\"abc\", \"bac\"));",
          "    assert_eq!(3, osa_distance(\"ab\", \"bca\"));",
          "    assert_eq!(0, osa_distance(\"\", \"\"));",
          "    assert_eq!(5, osa_distance(\"hello\", \"world\"));",
          "    assert_eq!(2, osa_distance(\"abcde\", \"abcfde\"));",
          "    assert_eq!(1, osa_distance(\"a\", \"b\"));",
          "    assert_eq!(4, osa_distance(\"kitten\", \"sitting\"));",
          "    assert_eq!(3, osa_distance(\"flaw\", \"lawn\"));",
          "    assert_eq!(2, osa_distance(\"ca\", \"abc\"));",
          "    assert_eq!(3, osa_distance(\"abc\", \"acd\"));"
        ],
        "code": [
          "{",
          "    let a = \"hello\";",
          "    let b = \"hallo\";",
          "    let _result = osa_distance(a, b);",
          "    assert_eq!(1, osa_distance(\"hello\", \"hallo\"));",
          "    assert_eq!(2, osa_distance(\"abc\", \"bac\"));",
          "    assert_eq!(3, osa_distance(\"ab\", \"bca\"));",
          "    assert_eq!(0, osa_distance(\"\", \"\"));",
          "    assert_eq!(5, osa_distance(\"hello\", \"world\"));",
          "    assert_eq!(2, osa_distance(\"abcde\", \"abcfde\"));",
          "    assert_eq!(1, osa_distance(\"a\", \"b\"));",
          "    assert_eq!(4, osa_distance(\"kitten\", \"sitting\"));",
          "    assert_eq!(3, osa_distance(\"flaw\", \"lawn\"));",
          "    assert_eq!(2, osa_distance(\"ca\", \"abc\"));",
          "    assert_eq!(3, osa_distance(\"abc\", \"acd\"));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let a = \"kitten\";",
          "    let b = \"sittin\";",
          "    let _result = osa_distance(a, b);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(osa_distance(\"kitten\", \"sittin\"), 3);",
          "    assert_eq!(osa_distance(\"abc\", \"abc\"), 0);",
          "    assert_eq!(osa_distance(\"abc\", \"abcd\"), 1);",
          "    assert_eq!(osa_distance(\"a\", \"b\"), 1);",
          "    assert_eq!(osa_distance(\"\", \"b\"), 1);",
          "    assert_eq!(osa_distance(\"abc\", \"\"), 3);",
          "    assert_eq!(osa_distance(\"bca\", \"abc\"), 2);",
          "    assert_eq!(osa_distance(\"a\", \"aa\"), 1);",
          "    assert_eq!(osa_distance(\"abcd\", \"bcd\"), 1);",
          "    assert_eq!(osa_distance(\"abcd\", \"dcba\"), 4);"
        ],
        "code": [
          "{",
          "    let a = \"kitten\";",
          "    let b = \"sittin\";",
          "    let _result = osa_distance(a, b);",
          "    assert_eq!(osa_distance(\"kitten\", \"sittin\"), 3);",
          "    assert_eq!(osa_distance(\"abc\", \"abc\"), 0);",
          "    assert_eq!(osa_distance(\"abc\", \"abcd\"), 1);",
          "    assert_eq!(osa_distance(\"a\", \"b\"), 1);",
          "    assert_eq!(osa_distance(\"\", \"b\"), 1);",
          "    assert_eq!(osa_distance(\"abc\", \"\"), 3);",
          "    assert_eq!(osa_distance(\"bca\", \"abc\"), 2);",
          "    assert_eq!(osa_distance(\"a\", \"aa\"), 1);",
          "    assert_eq!(osa_distance(\"abcd\", \"bcd\"), 1);",
          "    assert_eq!(osa_distance(\"abcd\", \"dcba\"), 4);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let a = \"test\";",
          "    let b = \"tset\";",
          "    let _result = osa_distance(a, b);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(osa_distance(\"ab\", \"bca\"), 3);",
          "    assert_eq!(osa_distance(\"test\", \"tset\"), 1);",
          "    assert_eq!(osa_distance(\"abc\", \"acb\"), 1);",
          "    assert_eq!(osa_distance(\"abc\", \"xyz\"), 3);",
          "    assert_eq!(osa_distance(\"a\", \"\"), 1);",
          "    assert_eq!(osa_distance(\"\", \"a\"), 1);",
          "    assert_eq!(osa_distance(\"\", \"\"), 0);",
          "    assert_eq!(osa_distance(\"a\", \"a\"), 0);",
          "    assert_eq!(osa_distance(\"abcd\", \"abcde\"), 1);",
          "    assert_eq!(osa_distance(\"abcd\", \"abdc\"), 1);"
        ],
        "code": [
          "{",
          "    let a = \"test\";",
          "    let b = \"tset\";",
          "    let _result = osa_distance(a, b);",
          "    assert_eq!(osa_distance(\"ab\", \"bca\"), 3);",
          "    assert_eq!(osa_distance(\"test\", \"tset\"), 1);",
          "    assert_eq!(osa_distance(\"abc\", \"acb\"), 1);",
          "    assert_eq!(osa_distance(\"abc\", \"xyz\"), 3);",
          "    assert_eq!(osa_distance(\"a\", \"\"), 1);",
          "    assert_eq!(osa_distance(\"\", \"a\"), 1);",
          "    assert_eq!(osa_distance(\"\", \"\"), 0);",
          "    assert_eq!(osa_distance(\"a\", \"a\"), 0);",
          "    assert_eq!(osa_distance(\"abcd\", \"abcde\"), 1);",
          "    assert_eq!(osa_distance(\"abcd\", \"abdc\"), 1);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let a = \"rust\";",
          "    let b = \"ruts\";",
          "    let _result = osa_distance(a, b);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(1, osa_distance(\"rust\", \"ruts\"));",
          "    assert_eq!(2, osa_distance(\"abc\", \"def\"));",
          "    assert_eq!(3, osa_distance(\"abc\", \"bcda\"));",
          "    assert_eq!(0, osa_distance(\"\", \"\"));",
          "    assert_eq!(4, osa_distance(\"abcd\", \"\"));",
          "    assert_eq!(3, osa_distance(\"\", \"abc\"));",
          "    assert_eq!(2, osa_distance(\"a\", \"ab\"));",
          "    assert_eq!(1, osa_distance(\"ab\", \"a\"));",
          "    assert_eq!(1, osa_distance(\"abc\", \"ac\"));",
          "    assert_eq!(1, osa_distance(\"abc\", \"cab\"));",
          "    assert_eq!(2, osa_distance(\"ab\", \"cde\"));",
          "    assert_eq!(5, osa_distance(\"string\", \"strong\"));",
          "    assert_eq!(3, osa_distance(\"abcdef\", \"acef\"));",
          "    assert_eq!(4, osa_distance(\"abcdefg\", \"ghijklm\"));"
        ],
        "code": [
          "{",
          "    let a = \"rust\";",
          "    let b = \"ruts\";",
          "    let _result = osa_distance(a, b);",
          "    assert_eq!(1, osa_distance(\"rust\", \"ruts\"));",
          "    assert_eq!(2, osa_distance(\"abc\", \"def\"));",
          "    assert_eq!(3, osa_distance(\"abc\", \"bcda\"));",
          "    assert_eq!(0, osa_distance(\"\", \"\"));",
          "    assert_eq!(4, osa_distance(\"abcd\", \"\"));",
          "    assert_eq!(3, osa_distance(\"\", \"abc\"));",
          "    assert_eq!(2, osa_distance(\"a\", \"ab\"));",
          "    assert_eq!(1, osa_distance(\"ab\", \"a\"));",
          "    assert_eq!(1, osa_distance(\"abc\", \"ac\"));",
          "    assert_eq!(1, osa_distance(\"abc\", \"cab\"));",
          "    assert_eq!(2, osa_distance(\"ab\", \"cde\"));",
          "    assert_eq!(5, osa_distance(\"string\", \"strong\"));",
          "    assert_eq!(3, osa_distance(\"abcdef\", \"acef\"));",
          "    assert_eq!(4, osa_distance(\"abcdefg\", \"ghijklm\"));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let a = \"abcd\";",
          "    let b = \"dcba\";",
          "    let _result = osa_distance(a, b);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(4, osa_distance(\"abcd\", \"dcba\"));",
          "    assert_eq!(1, osa_distance(\"a\", \"b\"));",
          "    assert_eq!(0, osa_distance(\"\", \"\"));",
          "    assert_eq!(1, osa_distance(\"a\", \"\"));",
          "    assert_eq!(1, osa_distance(\"\", \"a\"));",
          "    assert_eq!(2, osa_distance(\"abc\", \"ac\"));",
          "    assert_eq!(3, osa_distance(\"abcde\", \"ecdba\"));",
          "    assert_eq!(2, osa_distance(\"aab\", \"cab\"));"
        ],
        "code": [
          "{",
          "    let a = \"abcd\";",
          "    let b = \"dcba\";",
          "    let _result = osa_distance(a, b);",
          "    assert_eq!(4, osa_distance(\"abcd\", \"dcba\"));",
          "    assert_eq!(1, osa_distance(\"a\", \"b\"));",
          "    assert_eq!(0, osa_distance(\"\", \"\"));",
          "    assert_eq!(1, osa_distance(\"a\", \"\"));",
          "    assert_eq!(1, osa_distance(\"\", \"a\"));",
          "    assert_eq!(2, osa_distance(\"abc\", \"ac\"));",
          "    assert_eq!(3, osa_distance(\"abcde\", \"ecdba\"));",
          "    assert_eq!(2, osa_distance(\"aab\", \"cab\"));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]