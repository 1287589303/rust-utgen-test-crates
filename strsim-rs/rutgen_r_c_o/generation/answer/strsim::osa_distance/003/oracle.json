[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let a = \"abc\";",
          "    let b = \"def\";",
          "    let result = osa_distance(a, b);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, 3);",
          "    assert!(result.is::<usize>());",
          "    assert_eq!(osa_distance(\"abc\", \"\"), 3);",
          "    assert_eq!(osa_distance(\"\", \"def\"), 3);",
          "    assert_eq!(osa_distance(\"\", \"\"), 0);",
          "    assert_eq!(osa_distance(\"abc\", \"abc\"), 0);",
          "    assert_eq!(osa_distance(\"a\", \"b\"), 1);",
          "    assert_eq!(osa_distance(\"ab\", \"ba\"), 1);",
          "    assert_eq!(osa_distance(\"abcd\", \"badc\"), 2);",
          "    assert_eq!(osa_distance(\"ab\", \"bca\"), 3);"
        ],
        "code": [
          "{",
          "    let a = \"abc\";",
          "    let b = \"def\";",
          "    let result = osa_distance(a, b);",
          "    assert_eq!(result, 3);",
          "    assert!(result.is::<usize>());",
          "    assert_eq!(osa_distance(\"abc\", \"\"), 3);",
          "    assert_eq!(osa_distance(\"\", \"def\"), 3);",
          "    assert_eq!(osa_distance(\"\", \"\"), 0);",
          "    assert_eq!(osa_distance(\"abc\", \"abc\"), 0);",
          "    assert_eq!(osa_distance(\"a\", \"b\"), 1);",
          "    assert_eq!(osa_distance(\"ab\", \"ba\"), 1);",
          "    assert_eq!(osa_distance(\"abcd\", \"badc\"), 2);",
          "    assert_eq!(osa_distance(\"ab\", \"bca\"), 3);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let a = \"abcd\";",
          "    let b = \"efgh\";",
          "    let result = osa_distance(a, b);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(4, result);"
        ],
        "code": [
          "{",
          "    let a = \"abcd\";",
          "    let b = \"efgh\";",
          "    let result = osa_distance(a, b);",
          "    assert_eq!(4, result);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let a = \"ab\";",
          "    let b = \"cd\";",
          "    let result = osa_distance(a, b);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, 4);"
        ],
        "code": [
          "{",
          "    let a = \"ab\";",
          "    let b = \"cd\";",
          "    let result = osa_distance(a, b);",
          "    assert_eq!(result, 4);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let a = \"xyz\";",
          "    let b = \"ABC\";",
          "    let result = osa_distance(a, b);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(3, result);",
          "    assert_eq!(0, osa_distance(\"\", \"\"));",
          "    assert_eq!(3, osa_distance(\"abc\", \"\"));",
          "    assert_eq!(2, osa_distance(\"ab\", \"abc\"));",
          "    assert_eq!(4, osa_distance(\"abcd\", \"abef\"));",
          "    assert_eq!(1, osa_distance(\"x\", \"y\"));",
          "    assert_eq!(1, osa_distance(\"a\", \"aa\"));",
          "    assert_eq!(3, osa_distance(\"kitten\", \"sitting\"));",
          "    assert_eq!(2, osa_distance(\"flaw\", \"lawn\"));",
          "    assert_eq!(5, osa_distance(\"intention\", \"execution\"));",
          "    assert_eq!(3, osa_distance(\"abc\", \"defg\"));",
          "    assert_eq!(0, osa_distance(\"same\", \"same\"));",
          "    assert_eq!(1, osa_distance(\"a\", \"b\"));",
          "    assert_eq!(3, osa_distance(\"aaa\", \"bbb\"));",
          "    assert_eq!(3, osa_distance(\"abc\", \"cba\"));",
          "    assert_eq!(2, osa_distance(\"abcde\", \"abcfde\"));"
        ],
        "code": [
          "{",
          "    let a = \"xyz\";",
          "    let b = \"ABC\";",
          "    let result = osa_distance(a, b);",
          "    assert_eq!(3, result);",
          "    assert_eq!(0, osa_distance(\"\", \"\"));",
          "    assert_eq!(3, osa_distance(\"abc\", \"\"));",
          "    assert_eq!(2, osa_distance(\"ab\", \"abc\"));",
          "    assert_eq!(4, osa_distance(\"abcd\", \"abef\"));",
          "    assert_eq!(1, osa_distance(\"x\", \"y\"));",
          "    assert_eq!(1, osa_distance(\"a\", \"aa\"));",
          "    assert_eq!(3, osa_distance(\"kitten\", \"sitting\"));",
          "    assert_eq!(2, osa_distance(\"flaw\", \"lawn\"));",
          "    assert_eq!(5, osa_distance(\"intention\", \"execution\"));",
          "    assert_eq!(3, osa_distance(\"abc\", \"defg\"));",
          "    assert_eq!(0, osa_distance(\"same\", \"same\"));",
          "    assert_eq!(1, osa_distance(\"a\", \"b\"));",
          "    assert_eq!(3, osa_distance(\"aaa\", \"bbb\"));",
          "    assert_eq!(3, osa_distance(\"abc\", \"cba\"));",
          "    assert_eq!(2, osa_distance(\"abcde\", \"abcfde\"));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let a = \"\";",
          "    let b = \"xyz\";",
          "    let result = osa_distance(a, b);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(3, result);"
        ],
        "code": [
          "{",
          "    let a = \"\";",
          "    let b = \"xyz\";",
          "    let result = osa_distance(a, b);",
          "    assert_eq!(3, result);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let a = \"abc\";",
          "    let b = \"\";",
          "    let result = osa_distance(a, b);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(3, result);"
        ],
        "code": [
          "{",
          "    let a = \"abc\";",
          "    let b = \"\";",
          "    let result = osa_distance(a, b);",
          "    assert_eq!(3, result);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let a = \"ab\";",
          "    let b = \"ba\";",
          "    let result = osa_distance(a, b);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(1, result);",
          "    assert_eq!(0, osa_distance(\"\", \"abcd\"));",
          "    assert_eq!(4, osa_distance(\"abcd\", \"\"));",
          "    assert_eq!(3, osa_distance(\"abc\", \"bca\"));",
          "    assert_eq!(2, osa_distance(\"abc\", \"acb\"));",
          "    assert_eq!(2, osa_distance(\"ab\", \"cba\"));"
        ],
        "code": [
          "{",
          "    let a = \"ab\";",
          "    let b = \"ba\";",
          "    let result = osa_distance(a, b);",
          "    assert_eq!(1, result);",
          "    assert_eq!(0, osa_distance(\"\", \"abcd\"));",
          "    assert_eq!(4, osa_distance(\"abcd\", \"\"));",
          "    assert_eq!(3, osa_distance(\"abc\", \"bca\"));",
          "    assert_eq!(2, osa_distance(\"abc\", \"acb\"));",
          "    assert_eq!(2, osa_distance(\"ab\", \"cba\"));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let a = \"aabb\";",
          "    let b = \"bbaa\";",
          "    let result = osa_distance(a, b);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(osa_distance(\"a\", \"b\"), 1);",
          "    assert_eq!(osa_distance(\"aa\", \"bb\"), 2);",
          "    assert_eq!(osa_distance(\"abcd\", \"badc\"), 3);",
          "    assert_eq!(osa_distance(\"aabbcc\", \"bbaacc\"), 4);",
          "    assert_eq!(osa_distance(\"aaaa\", \"aaa\"), 1);",
          "    assert_eq!(osa_distance(\"abc\", \"abc\"), 0);",
          "    assert_eq!(osa_distance(\"a\", \"\"), 1);",
          "    assert_eq!(osa_distance(\"\", \"a\"), 1);"
        ],
        "code": [
          "{",
          "    let a = \"aabb\";",
          "    let b = \"bbaa\";",
          "    let result = osa_distance(a, b);",
          "    assert_eq!(osa_distance(\"a\", \"b\"), 1);",
          "    assert_eq!(osa_distance(\"aa\", \"bb\"), 2);",
          "    assert_eq!(osa_distance(\"abcd\", \"badc\"), 3);",
          "    assert_eq!(osa_distance(\"aabbcc\", \"bbaacc\"), 4);",
          "    assert_eq!(osa_distance(\"aaaa\", \"aaa\"), 1);",
          "    assert_eq!(osa_distance(\"abc\", \"abc\"), 0);",
          "    assert_eq!(osa_distance(\"a\", \"\"), 1);",
          "    assert_eq!(osa_distance(\"\", \"a\"), 1);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]