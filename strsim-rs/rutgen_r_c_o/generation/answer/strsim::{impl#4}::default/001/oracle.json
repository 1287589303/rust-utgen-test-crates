[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let hashmap: GrowingHashmapChar<i32> = GrowingHashmapChar::default();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(hashmap.used, 0);",
          "    assert_eq!(hashmap.fill, 0);",
          "    assert_eq!(hashmap.mask, -1);",
          "    assert!(hashmap.map.is_none());"
        ],
        "code": [
          "{",
          "    let hashmap: GrowingHashmapChar<i32> = GrowingHashmapChar::default();",
          "    assert_eq!(hashmap.used, 0);",
          "    assert_eq!(hashmap.fill, 0);",
          "    assert_eq!(hashmap.mask, -1);",
          "    assert!(hashmap.map.is_none());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let hashmap: GrowingHashmapChar<String> = GrowingHashmapChar::default();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(hashmap.used, 0);",
          "    assert_eq!(hashmap.fill, 0);",
          "    assert_eq!(hashmap.mask, -1);",
          "    assert_eq!(hashmap.map, None);"
        ],
        "code": [
          "{",
          "    let hashmap: GrowingHashmapChar<String> = GrowingHashmapChar::default();",
          "    assert_eq!(hashmap.used, 0);",
          "    assert_eq!(hashmap.fill, 0);",
          "    assert_eq!(hashmap.mask, -1);",
          "    assert_eq!(hashmap.map, None);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]