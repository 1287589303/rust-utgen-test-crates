bb0
  0: StorageLive(_3)
    SourceInfo(src/lib.rs:535:13-535:25)
  1: StorageLive(_4)
    SourceInfo(src/lib.rs:535:28-535:37)
  2: _4 = ((*_1).2: i32)
    SourceInfo(src/lib.rs:535:28-535:37)
  3: _5 = AddWithOverflow(_4, const 1_i32)
    SourceInfo(src/lib.rs:535:28-535:41)
  Terminator {
      source_info: SourceInfo(src/lib.rs:535:28-535:41)
      kind: assert(!move (_5.1: bool), "attempt to compute `{} + {}`, which would overflow", move _4, const 1_i32) -> [success: bb1, unwind: bb42]
  }
  preds []
  succs [bb1, bb42]

bb1
  0: _3 = move (_5.0: i32)
    SourceInfo(src/lib.rs:535:28-535:41)
  1: StorageDead(_4)
    SourceInfo(src/lib.rs:535:40-535:41)
  2: FakeRead(ForLet(None), _3)
    SourceInfo(src/lib.rs:535:13-535:25)
  3: StorageLive(_6)
    SourceInfo(src/lib.rs:536:9-538:10)
  Terminator {
      source_info: SourceInfo(src/lib.rs:536:9-538:10)
      kind: goto -> bb2
  }
  preds [bb0]
  succs [bb2]

bb2
  Terminator {
      source_info: SourceInfo(src/lib.rs:536:9-538:10)
      kind: falseUnwind -> [real: bb3, unwind: bb42]
  }
  preds [bb1, bb5]
  succs [bb3, bb42]

bb3
  0: StorageLive(_8)
    SourceInfo(src/lib.rs:536:15-536:35)
  1: StorageLive(_9)
    SourceInfo(src/lib.rs:536:15-536:23)
  2: _9 = _3
    SourceInfo(src/lib.rs:536:15-536:23)
  3: StorageLive(_10)
    SourceInfo(src/lib.rs:536:27-536:35)
  4: _10 = _2
    SourceInfo(src/lib.rs:536:27-536:35)
  5: _8 = Le(move _9, move _10)
    SourceInfo(src/lib.rs:536:15-536:35)
  Terminator {
      source_info: SourceInfo(src/lib.rs:536:15-536:35)
      kind: switchInt(move _8) -> [0: bb6, otherwise: bb4]
  }
  preds [bb2]
  succs [bb4, bb6]

bb4
  0: StorageDead(_10)
    SourceInfo(src/lib.rs:536:34-536:35)
  1: StorageDead(_9)
    SourceInfo(src/lib.rs:536:34-536:35)
  2: _11 = const 1_i32 as u32 (IntToInt)
    SourceInfo(src/lib.rs:537:13-537:27)
  3: _12 = Lt(move _11, const 32_u32)
    SourceInfo(src/lib.rs:537:13-537:27)
  Terminator {
      source_info: SourceInfo(src/lib.rs:537:13-537:27)
      kind: assert(move _12, "attempt to shift left by `{}`, which would overflow", const 1_i32) -> [success: bb5, unwind: bb42]
  }
  preds [bb3]
  succs [bb5, bb42]

bb5
  0: _3 = Shl(_3, const 1_i32)
    SourceInfo(src/lib.rs:537:13-537:27)
  1: _7 = const ()
    SourceInfo(src/lib.rs:536:36-538:10)
  2: StorageDead(_8)
    SourceInfo(src/lib.rs:538:9-538:10)
  Terminator {
      source_info: SourceInfo(src/lib.rs:536:9-538:10)
      kind: goto -> bb2
  }
  preds [bb4]
  succs [bb2]

bb6
  0: StorageDead(_10)
    SourceInfo(src/lib.rs:536:34-536:35)
  1: StorageDead(_9)
    SourceInfo(src/lib.rs:536:34-536:35)
  2: StorageLive(_14)
    SourceInfo(src/lib.rs:536:9-538:10)
  3: _6 = const ()
    SourceInfo(src/lib.rs:536:9-538:10)
  4: StorageDead(_14)
    SourceInfo(src/lib.rs:538:9-538:10)
  5: StorageDead(_8)
    SourceInfo(src/lib.rs:538:9-538:10)
  6: StorageDead(_6)
    SourceInfo(src/lib.rs:538:9-538:10)
  7: StorageLive(_16)
    SourceInfo(src/lib.rs:540:21-540:30)
  8: _16 = ((*_1).0: i32)
    SourceInfo(src/lib.rs:540:21-540:30)
  9: ((*_1).1: i32) = move _16
    SourceInfo(src/lib.rs:540:9-540:30)
  10: StorageDead(_16)
    SourceInfo(src/lib.rs:540:29-540:30)
  11: StorageLive(_17)
    SourceInfo(src/lib.rs:541:21-541:29)
  12: _17 = _3
    SourceInfo(src/lib.rs:541:21-541:29)
  13: _18 = SubWithOverflow(_17, const 1_i32)
    SourceInfo(src/lib.rs:541:21-541:33)
  Terminator {
      source_info: SourceInfo(src/lib.rs:541:21-541:33)
      kind: assert(!move (_18.1: bool), "attempt to compute `{} - {}`, which would overflow", move _17, const 1_i32) -> [success: bb7, unwind: bb42]
  }
  preds [bb3]
  succs [bb7, bb42]

bb7
  0: ((*_1).2: i32) = move (_18.0: i32)
    SourceInfo(src/lib.rs:541:9-541:33)
  1: StorageDead(_17)
    SourceInfo(src/lib.rs:541:32-541:33)
  2: StorageLive(_19)
    SourceInfo(src/lib.rs:543:13-543:20)
  3: StorageLive(_20)
    SourceInfo(src/lib.rs:544:13-546:67)
  4: StorageLive(_21)
    SourceInfo(src/lib.rs:544:13-546:67)
  5: StorageLive(_22)
    SourceInfo(src/lib.rs:544:13-545:26)
  6: StorageLive(_23)
    SourceInfo(src/lib.rs:544:13-544:21)
  7: _23 = &mut ((*_1).3: std::option::Option<std::vec::Vec<GrowingHashmapMapElemChar<ValueType>>>)
    SourceInfo(src/lib.rs:544:13-544:21)
  Terminator {
      source_info: SourceInfo(src/lib.rs:544:13-545:26)
      kind: _22 = std::option::Option::<std::vec::Vec<GrowingHashmapMapElemChar<ValueType>>>::as_mut(move _23) -> [return: bb8, unwind: bb42]
  }
  preds [bb6]
  succs [bb8, bb42]

bb8
  0: StorageDead(_23)
    SourceInfo(src/lib.rs:545:25-545:26)
  1: StorageLive(_24)
    SourceInfo(src/lib.rs:546:25-546:66)
  2: StorageLive(_25)
    SourceInfo(src/lib.rs:546:25-546:66)
  3: _25 = const "callers have to ensure map is allocated"
    SourceInfo(src/lib.rs:546:25-546:66)
  4: _24 = &(*_25)
    SourceInfo(src/lib.rs:546:25-546:66)
  Terminator {
      source_info: SourceInfo(src/lib.rs:544:13-546:67)
      kind: _21 = std::option::Option::<&mut std::vec::Vec<GrowingHashmapMapElemChar<ValueType>>>::expect(move _22, move _24) -> [return: bb9, unwind: bb42]
  }
  preds [bb7]
  succs [bb9, bb42]

bb9
  0: _20 = &mut (*_21)
    SourceInfo(src/lib.rs:544:13-546:67)
  1: StorageDead(_24)
    SourceInfo(src/lib.rs:546:66-546:67)
  2: StorageDead(_22)
    SourceInfo(src/lib.rs:546:66-546:67)
  3: StorageLive(_26)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:47:9-47:42)
  4: StorageLive(_27)
    SourceInfo(src/lib.rs:547:18-547:67)
  Terminator {
      source_info: SourceInfo(src/lib.rs:547:18-547:67)
      kind: _27 = <GrowingHashmapMapElemChar<ValueType> as std::default::Default>::default() -> [return: bb10, unwind: bb42]
  }
  preds [bb8]
  succs [bb10, bb42]

bb10
  0: StorageLive(_28)
    SourceInfo(src/lib.rs:547:69-547:86)
  1: StorageLive(_29)
    SourceInfo(src/lib.rs:547:69-547:77)
  2: _29 = _3
    SourceInfo(src/lib.rs:547:69-547:77)
  3: _28 = move _29 as usize (IntToInt)
    SourceInfo(src/lib.rs:547:69-547:86)
  4: StorageDead(_29)
    SourceInfo(src/lib.rs:547:85-547:86)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:47:9-47:42)
      kind: _26 = std::vec::from_elem::<GrowingHashmapMapElemChar<ValueType>>(move _27, move _28) -> [return: bb11, unwind: bb42]
  }
  preds [bb9]
  succs [bb11, bb42]

bb11
  0: StorageDead(_28)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:47:41-47:42)
  1: StorageDead(_27)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:47:41-47:42)
  Terminator {
      source_info: SourceInfo(src/lib.rs:543:23-548:10)
      kind: _19 = std::mem::replace::<std::vec::Vec<GrowingHashmapMapElemChar<ValueType>>>(move _20, move _26) -> [return: bb12, unwind: bb41]
  }
  preds [bb10]
  succs [bb12, bb41]

bb12
  0: StorageDead(_26)
    SourceInfo(src/lib.rs:548:9-548:10)
  1: StorageDead(_20)
    SourceInfo(src/lib.rs:548:9-548:10)
  2: FakeRead(ForLet(None), _19)
    SourceInfo(src/lib.rs:543:13-543:20)
  3: StorageDead(_25)
    SourceInfo(src/lib.rs:548:10-548:11)
  4: StorageDead(_21)
    SourceInfo(src/lib.rs:548:10-548:11)
  5: StorageLive(_30)
    SourceInfo(src/lib.rs:550:9-561:10)
  6: StorageLive(_31)
    SourceInfo(src/lib.rs:550:21-550:28)
  7: StorageLive(_32)
    SourceInfo(src/lib.rs:550:21-550:28)
  8: _32 = move _19
    SourceInfo(src/lib.rs:550:21-550:28)
  Terminator {
      source_info: SourceInfo(src/lib.rs:550:21-550:28)
      kind: _31 = <std::vec::Vec<GrowingHashmapMapElemChar<ValueType>> as std::iter::IntoIterator>::into_iter(move _32) -> [return: bb13, unwind: bb39]
  }
  preds [bb11]
  succs [bb13, bb39]

bb13
  0: StorageDead(_32)
    SourceInfo(src/lib.rs:550:27-550:28)
  1: PlaceMention(_31)
    SourceInfo(src/lib.rs:550:21-550:28)
  2: StorageLive(_33)
    SourceInfo(src/lib.rs:550:21-550:28)
  3: _33 = move _31
    SourceInfo(src/lib.rs:550:21-550:28)
  Terminator {
      source_info: SourceInfo(src/lib.rs:550:9-561:10)
      kind: goto -> bb14
  }
  preds [bb12]
  succs [bb14]

bb14
  Terminator {
      source_info: SourceInfo(src/lib.rs:550:9-561:10)
      kind: falseUnwind -> [real: bb15, unwind: bb37]
  }
  preds [bb13, bb32]
  succs [bb15, bb37]

bb15
  0: StorageLive(_34)
    SourceInfo(src/lib.rs:550:21-550:28)
  1: StorageLive(_35)
    SourceInfo(src/lib.rs:550:21-550:28)
  2: StorageLive(_36)
    SourceInfo(src/lib.rs:550:21-550:28)
  3: StorageLive(_37)
    SourceInfo(src/lib.rs:550:21-550:28)
  4: _37 = &mut _33
    SourceInfo(src/lib.rs:550:21-550:28)
  5: _36 = &mut (*_37)
    SourceInfo(src/lib.rs:550:21-550:28)
  Terminator {
      source_info: SourceInfo(src/lib.rs:550:21-550:28)
      kind: _35 = <std::vec::IntoIter<GrowingHashmapMapElemChar<ValueType>> as std::iter::Iterator>::next(move _36) -> [return: bb16, unwind: bb37]
  }
  preds [bb14]
  succs [bb16, bb37]

bb16
  0: StorageDead(_36)
    SourceInfo(src/lib.rs:550:27-550:28)
  1: PlaceMention(_35)
    SourceInfo(src/lib.rs:550:21-550:28)
  2: _38 = discriminant(_35)
    SourceInfo(src/lib.rs:550:21-550:28)
  Terminator {
      source_info: SourceInfo(src/lib.rs:550:21-550:28)
      kind: switchInt(move _38) -> [0: bb18, 1: bb19, otherwise: bb17]
  }
  preds [bb15]
  succs [bb17, bb18, bb19]

bb17
  0: FakeRead(ForMatchedPlace(None), _35)
    SourceInfo(src/lib.rs:550:21-550:28)
  Terminator {
      source_info: SourceInfo(src/lib.rs:550:21-550:28)
      kind: unreachable
  }
  preds [bb16]
  succs []

bb18
  Terminator {
      source_info: SourceInfo(src/lib.rs:550:9-561:10)
      kind: falseEdge -> [real: bb20, imaginary: bb19]
  }
  preds [bb16]
  succs [bb19, bb20]

bb19
  0: StorageLive(_40)
    SourceInfo(src/lib.rs:550:13-550:17)
  1: _40 = move ((_35 as Some).0: GrowingHashmapMapElemChar<ValueType>)
    SourceInfo(src/lib.rs:550:13-550:17)
  2: StorageLive(_41)
    SourceInfo(src/lib.rs:551:16-551:48)
  3: StorageLive(_42)
    SourceInfo(src/lib.rs:551:16-551:26)
  4: _42 = &(_40.1: ValueType)
    SourceInfo(src/lib.rs:551:16-551:26)
  5: StorageLive(_43)
    SourceInfo(src/lib.rs:551:30-551:48)
  6: StorageLive(_44)
    SourceInfo(src/lib.rs:551:30-551:48)
  Terminator {
      source_info: SourceInfo(src/lib.rs:551:30-551:48)
      kind: _44 = <ValueType as std::default::Default>::default() -> [return: bb21, unwind: bb37]
  }
  preds [bb16, bb18]
  succs [bb21, bb37]

bb20
  0: _30 = const ()
    SourceInfo(src/lib.rs:550:9-561:10)
  Terminator {
      source_info: SourceInfo(src/lib.rs:550:9-561:10)
      kind: goto -> bb33
  }
  preds [bb18]
  succs [bb33]

bb21
  0: _43 = &_44
    SourceInfo(src/lib.rs:551:30-551:48)
  Terminator {
      source_info: SourceInfo(src/lib.rs:551:16-551:48)
      kind: _41 = <ValueType as std::cmp::PartialEq>::ne(move _42, move _43) -> [return: bb22, unwind: bb37]
  }
  preds [bb19]
  succs [bb22, bb37]

bb22
  Terminator {
      source_info: SourceInfo(src/lib.rs:551:16-551:48)
      kind: switchInt(move _41) -> [0: bb31, otherwise: bb23]
  }
  preds [bb21]
  succs [bb23, bb31]

bb23
  0: StorageDead(_44)
    SourceInfo(src/lib.rs:551:47-551:48)
  1: StorageDead(_43)
    SourceInfo(src/lib.rs:551:47-551:48)
  2: StorageDead(_42)
    SourceInfo(src/lib.rs:551:47-551:48)
  3: StorageLive(_45)
    SourceInfo(src/lib.rs:552:21-552:22)
  4: StorageLive(_46)
    SourceInfo(src/lib.rs:552:25-552:29)
  5: _46 = &(*_1)
    SourceInfo(src/lib.rs:552:25-552:29)
  6: StorageLive(_47)
    SourceInfo(src/lib.rs:552:37-552:45)
  7: _47 = (_40.0: u32)
    SourceInfo(src/lib.rs:552:37-552:45)
  Terminator {
      source_info: SourceInfo(src/lib.rs:552:25-552:46)
      kind: _45 = GrowingHashmapChar::<ValueType>::lookup(move _46, move _47) -> [return: bb24, unwind: bb37]
  }
  preds [bb22]
  succs [bb24, bb37]

bb24
  0: StorageDead(_47)
    SourceInfo(src/lib.rs:552:45-552:46)
  1: StorageDead(_46)
    SourceInfo(src/lib.rs:552:45-552:46)
  2: FakeRead(ForLet(None), _45)
    SourceInfo(src/lib.rs:552:21-552:22)
  3: StorageLive(_48)
    SourceInfo(src/lib.rs:553:21-553:29)
  4: StorageLive(_49)
    SourceInfo(src/lib.rs:553:82-553:85)
  5: StorageLive(_50)
    SourceInfo(src/lib.rs:553:37-553:82)
  6: StorageLive(_51)
    SourceInfo(src/lib.rs:553:37-553:82)
  7: StorageLive(_52)
    SourceInfo(src/lib.rs:553:37-553:54)
  8: StorageLive(_53)
    SourceInfo(src/lib.rs:553:37-553:45)
  9: _53 = &mut ((*_1).3: std::option::Option<std::vec::Vec<GrowingHashmapMapElemChar<ValueType>>>)
    SourceInfo(src/lib.rs:553:37-553:45)
  Terminator {
      source_info: SourceInfo(src/lib.rs:553:37-553:54)
      kind: _52 = std::option::Option::<std::vec::Vec<GrowingHashmapMapElemChar<ValueType>>>::as_mut(move _53) -> [return: bb25, unwind: bb37]
  }
  preds [bb23]
  succs [bb25, bb37]

bb25
  0: StorageDead(_53)
    SourceInfo(src/lib.rs:553:53-553:54)
  1: StorageLive(_54)
    SourceInfo(src/lib.rs:553:62-553:81)
  2: StorageLive(_55)
    SourceInfo(src/lib.rs:553:62-553:81)
  3: _55 = const "map created above"
    SourceInfo(src/lib.rs:553:62-553:81)
  4: _54 = &(*_55)
    SourceInfo(src/lib.rs:553:62-553:81)
  Terminator {
      source_info: SourceInfo(src/lib.rs:553:37-553:82)
      kind: _51 = std::option::Option::<&mut std::vec::Vec<GrowingHashmapMapElemChar<ValueType>>>::expect(move _52, move _54) -> [return: bb26, unwind: bb37]
  }
  preds [bb24]
  succs [bb26, bb37]

bb26
  0: _50 = &mut (*_51)
    SourceInfo(src/lib.rs:553:37-553:82)
  1: StorageDead(_54)
    SourceInfo(src/lib.rs:553:81-553:82)
  2: StorageDead(_52)
    SourceInfo(src/lib.rs:553:81-553:82)
  3: StorageLive(_56)
    SourceInfo(src/lib.rs:553:83-553:84)
  4: _56 = _45
    SourceInfo(src/lib.rs:553:83-553:84)
  Terminator {
      source_info: SourceInfo(src/lib.rs:553:82-553:85)
      kind: _49 = <std::vec::Vec<GrowingHashmapMapElemChar<ValueType>> as std::ops::IndexMut<usize>>::index_mut(move _50, move _56) -> [return: bb27, unwind: bb37]
  }
  preds [bb25]
  succs [bb27, bb37]

bb27
  0: StorageDead(_56)
    SourceInfo(src/lib.rs:553:84-553:85)
  1: StorageDead(_50)
    SourceInfo(src/lib.rs:553:84-553:85)
  2: _48 = &mut (*_49)
    SourceInfo(src/lib.rs:553:32-553:85)
  3: FakeRead(ForLet(None), _48)
    SourceInfo(src/lib.rs:553:21-553:29)
  4: StorageDead(_55)
    SourceInfo(src/lib.rs:553:85-553:86)
  5: StorageLive(_57)
    SourceInfo(src/lib.rs:554:32-554:40)
  6: _57 = (_40.0: u32)
    SourceInfo(src/lib.rs:554:32-554:40)
  7: ((*_48).0: u32) = move _57
    SourceInfo(src/lib.rs:554:17-554:40)
  8: StorageDead(_57)
    SourceInfo(src/lib.rs:554:39-554:40)
  9: StorageLive(_58)
    SourceInfo(src/lib.rs:555:34-555:44)
  10: _58 = (_40.1: ValueType)
    SourceInfo(src/lib.rs:555:34-555:44)
  11: ((*_48).1: ValueType) = move _58
    SourceInfo(src/lib.rs:555:17-555:44)
  12: StorageDead(_58)
    SourceInfo(src/lib.rs:555:43-555:44)
  13: _59 = SubWithOverflow(((*_1).0: i32), const 1_i32)
    SourceInfo(src/lib.rs:556:17-556:31)
  Terminator {
      source_info: SourceInfo(src/lib.rs:556:17-556:31)
      kind: assert(!move (_59.1: bool), "attempt to compute `{} - {}`, which would overflow", ((*_1).0: i32), const 1_i32) -> [success: bb28, unwind: bb37]
  }
  preds [bb26]
  succs [bb28, bb37]

bb28
  0: ((*_1).0: i32) = move (_59.0: i32)
    SourceInfo(src/lib.rs:556:17-556:31)
  1: StorageLive(_60)
    SourceInfo(src/lib.rs:557:20-557:34)
  2: StorageLive(_61)
    SourceInfo(src/lib.rs:557:20-557:29)
  3: _61 = ((*_1).0: i32)
    SourceInfo(src/lib.rs:557:20-557:29)
  4: _60 = Eq(move _61, const 0_i32)
    SourceInfo(src/lib.rs:557:20-557:34)
  Terminator {
      source_info: SourceInfo(src/lib.rs:557:20-557:34)
      kind: switchInt(move _60) -> [0: bb30, otherwise: bb29]
  }
  preds [bb27]
  succs [bb29, bb30]

bb29
  0: StorageDead(_61)
    SourceInfo(src/lib.rs:557:33-557:34)
  1: _30 = const ()
    SourceInfo(src/lib.rs:558:21-558:26)
  2: StorageDead(_60)
    SourceInfo(src/lib.rs:559:17-559:18)
  3: StorageDead(_51)
    SourceInfo(src/lib.rs:560:13-560:14)
  4: StorageDead(_49)
    SourceInfo(src/lib.rs:560:13-560:14)
  5: StorageDead(_48)
    SourceInfo(src/lib.rs:560:13-560:14)
  6: StorageDead(_45)
    SourceInfo(src/lib.rs:560:13-560:14)
  7: StorageDead(_41)
    SourceInfo(src/lib.rs:560:13-560:14)
  8: StorageDead(_40)
    SourceInfo(src/lib.rs:561:9-561:10)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb33
  }
  preds [bb28]
  succs [bb33]

bb30
  0: StorageDead(_61)
    SourceInfo(src/lib.rs:557:33-557:34)
  1: _34 = const ()
    SourceInfo(src/lib.rs:559:18-559:18)
  2: StorageDead(_60)
    SourceInfo(src/lib.rs:559:17-559:18)
  3: StorageDead(_51)
    SourceInfo(src/lib.rs:560:13-560:14)
  4: StorageDead(_49)
    SourceInfo(src/lib.rs:560:13-560:14)
  5: StorageDead(_48)
    SourceInfo(src/lib.rs:560:13-560:14)
  6: StorageDead(_45)
    SourceInfo(src/lib.rs:560:13-560:14)
  Terminator {
      source_info: SourceInfo(src/lib.rs:551:13-560:14)
      kind: goto -> bb32
  }
  preds [bb28]
  succs [bb32]

bb31
  0: StorageDead(_44)
    SourceInfo(src/lib.rs:551:47-551:48)
  1: StorageDead(_43)
    SourceInfo(src/lib.rs:551:47-551:48)
  2: StorageDead(_42)
    SourceInfo(src/lib.rs:551:47-551:48)
  3: _34 = const ()
    SourceInfo(src/lib.rs:560:14-560:14)
  Terminator {
      source_info: SourceInfo(src/lib.rs:551:13-560:14)
      kind: goto -> bb32
  }
  preds [bb22]
  succs [bb32]

bb32
  0: StorageDead(_41)
    SourceInfo(src/lib.rs:560:13-560:14)
  1: StorageDead(_40)
    SourceInfo(src/lib.rs:561:9-561:10)
  2: StorageDead(_37)
    SourceInfo(src/lib.rs:561:9-561:10)
  3: StorageDead(_35)
    SourceInfo(src/lib.rs:561:9-561:10)
  4: StorageDead(_34)
    SourceInfo(src/lib.rs:561:9-561:10)
  5: _7 = const ()
    SourceInfo(src/lib.rs:550:9-561:10)
  Terminator {
      source_info: SourceInfo(src/lib.rs:550:9-561:10)
      kind: goto -> bb14
  }
  preds [bb30, bb31]
  succs [bb14]

bb33
  0: StorageDead(_37)
    SourceInfo(src/lib.rs:561:9-561:10)
  1: StorageDead(_35)
    SourceInfo(src/lib.rs:561:9-561:10)
  2: StorageDead(_34)
    SourceInfo(src/lib.rs:561:9-561:10)
  Terminator {
      source_info: SourceInfo(src/lib.rs:561:9-561:10)
      kind: drop(_33) -> [return: bb34, unwind: bb38]
  }
  preds [bb20, bb29]
  succs [bb34, bb38]

bb34
  0: StorageDead(_33)
    SourceInfo(src/lib.rs:561:9-561:10)
  Terminator {
      source_info: SourceInfo(src/lib.rs:561:9-561:10)
      kind: drop(_31) -> [return: bb35, unwind: bb40]
  }
  preds [bb33]
  succs [bb35, bb40]

bb35
  0: StorageDead(_31)
    SourceInfo(src/lib.rs:561:9-561:10)
  1: StorageDead(_30)
    SourceInfo(src/lib.rs:561:9-561:10)
  2: StorageLive(_63)
    SourceInfo(src/lib.rs:563:21-563:30)
  3: _63 = ((*_1).1: i32)
    SourceInfo(src/lib.rs:563:21-563:30)
  4: ((*_1).0: i32) = move _63
    SourceInfo(src/lib.rs:563:9-563:30)
  5: StorageDead(_63)
    SourceInfo(src/lib.rs:563:29-563:30)
  6: _0 = const ()
    SourceInfo(src/lib.rs:534:39-564:6)
  Terminator {
      source_info: SourceInfo(src/lib.rs:564:5-564:6)
      kind: drop(_19) -> [return: bb36, unwind: bb42]
  }
  preds [bb34]
  succs [bb36, bb42]

bb36
  0: StorageDead(_19)
    SourceInfo(src/lib.rs:564:5-564:6)
  1: StorageDead(_3)
    SourceInfo(src/lib.rs:564:5-564:6)
  Terminator {
      source_info: SourceInfo(src/lib.rs:564:6-564:6)
      kind: return
  }
  preds [bb35]
  succs []

bb37
  Terminator {
      source_info: SourceInfo(src/lib.rs:561:9-561:10)
      kind: drop(_33) -> [return: bb38, unwind terminate(cleanup)]
  }
  preds [bb14, bb15, bb19, bb21, bb23, bb24, bb25, bb26, bb27]
  succs [bb38]

bb38
  Terminator {
      source_info: SourceInfo(src/lib.rs:561:9-561:10)
      kind: drop(_31) -> [return: bb40, unwind terminate(cleanup)]
  }
  preds [bb33, bb37]
  succs [bb40]

bb39
  Terminator {
      source_info: SourceInfo(src/lib.rs:550:27-550:28)
      kind: drop(_32) -> [return: bb40, unwind terminate(cleanup)]
  }
  preds [bb12]
  succs [bb40]

bb40
  Terminator {
      source_info: SourceInfo(src/lib.rs:564:5-564:6)
      kind: drop(_19) -> [return: bb42, unwind terminate(cleanup)]
  }
  preds [bb34, bb38, bb39]
  succs [bb42]

bb41
  Terminator {
      source_info: SourceInfo(src/lib.rs:548:9-548:10)
      kind: drop(_26) -> [return: bb42, unwind terminate(cleanup)]
  }
  preds [bb11]
  succs [bb42]

bb42
  Terminator {
      source_info: SourceInfo(src/lib.rs:534:5-564:6)
      kind: resume
  }
  preds [bb0, bb2, bb4, bb6, bb7, bb8, bb9, bb10, bb35, bb40, bb41]
  succs []

