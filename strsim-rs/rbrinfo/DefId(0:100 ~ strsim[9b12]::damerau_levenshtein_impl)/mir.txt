bb0
  0: StorageLive(_5)
    SourceInfo(src/lib.rs:619:9-619:16)
  1: StorageLive(_6)
    SourceInfo(src/lib.rs:619:19-619:43)
  2: StorageLive(_7)
    SourceInfo(src/lib.rs:619:19-619:34)
  3: StorageLive(_8)
    SourceInfo(src/lib.rs:619:23-619:27)
  4: _8 = _2
    SourceInfo(src/lib.rs:619:23-619:27)
  5: StorageLive(_9)
    SourceInfo(src/lib.rs:619:29-619:33)
  6: _9 = _4
    SourceInfo(src/lib.rs:619:29-619:33)
  Terminator {
      source_info: SourceInfo(src/lib.rs:619:19-619:34)
      kind: _7 = std::cmp::max::<usize>(move _8, move _9) -> [return: bb1, unwind: bb100]
  }
  preds []
  succs [bb1, bb100]

bb1
  0: StorageDead(_9)
    SourceInfo(src/lib.rs:619:33-619:34)
  1: StorageDead(_8)
    SourceInfo(src/lib.rs:619:33-619:34)
  2: _6 = move _7 as isize (IntToInt)
    SourceInfo(src/lib.rs:619:19-619:43)
  3: StorageDead(_7)
    SourceInfo(src/lib.rs:619:42-619:43)
  4: _10 = AddWithOverflow(_6, const 1_isize)
    SourceInfo(src/lib.rs:619:19-619:47)
  Terminator {
      source_info: SourceInfo(src/lib.rs:619:19-619:47)
      kind: assert(!move (_10.1: bool), "attempt to compute `{} + {}`, which would overflow", move _6, const 1_isize) -> [success: bb2, unwind: bb100]
  }
  preds [bb0]
  succs [bb2, bb100]

bb2
  0: _5 = move (_10.0: isize)
    SourceInfo(src/lib.rs:619:19-619:47)
  1: StorageDead(_6)
    SourceInfo(src/lib.rs:619:46-619:47)
  2: FakeRead(ForLet(None), _5)
    SourceInfo(src/lib.rs:619:9-619:16)
  3: StorageLive(_11)
    SourceInfo(src/lib.rs:621:9-621:24)
  Terminator {
      source_info: SourceInfo(src/lib.rs:621:27-621:71)
      kind: _11 = <HybridGrowingHashmapChar<RowId> as std::default::Default>::default() -> [return: bb3, unwind: bb100]
  }
  preds [bb1]
  succs [bb3, bb100]

bb3
  0: FakeRead(ForLet(None), _11)
    SourceInfo(src/lib.rs:621:9-621:24)
  1: StorageLive(_12)
    SourceInfo(src/lib.rs:623:9-623:13)
  2: StorageLive(_13)
    SourceInfo(src/lib.rs:623:16-623:20)
  3: _13 = _4
    SourceInfo(src/lib.rs:623:16-623:20)
  4: _14 = AddWithOverflow(_13, const 2_usize)
    SourceInfo(src/lib.rs:623:16-623:24)
  Terminator {
      source_info: SourceInfo(src/lib.rs:623:16-623:24)
      kind: assert(!move (_14.1: bool), "attempt to compute `{} + {}`, which would overflow", move _13, const 2_usize) -> [success: bb4, unwind: bb99]
  }
  preds [bb2]
  succs [bb4, bb99]

bb4
  0: _12 = move (_14.0: usize)
    SourceInfo(src/lib.rs:623:16-623:24)
  1: StorageDead(_13)
    SourceInfo(src/lib.rs:623:23-623:24)
  2: FakeRead(ForLet(None), _12)
    SourceInfo(src/lib.rs:623:9-623:13)
  3: StorageLive(_15)
    SourceInfo(src/lib.rs:624:9-624:15)
  4: StorageLive(_16)
    SourceInfo(src/lib.rs:624:23-624:30)
  5: _16 = _5
    SourceInfo(src/lib.rs:624:23-624:30)
  6: StorageLive(_17)
    SourceInfo(src/lib.rs:624:32-624:36)
  7: _17 = _12
    SourceInfo(src/lib.rs:624:32-624:36)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:47:9-47:42)
      kind: _15 = std::vec::from_elem::<isize>(move _16, move _17) -> [return: bb5, unwind: bb99]
  }
  preds [bb3]
  succs [bb5, bb99]

bb5
  0: StorageDead(_17)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:47:41-47:42)
  1: StorageDead(_16)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:47:41-47:42)
  2: FakeRead(ForLet(None), _15)
    SourceInfo(src/lib.rs:624:9-624:15)
  3: StorageLive(_18)
    SourceInfo(src/lib.rs:625:9-625:15)
  4: StorageLive(_19)
    SourceInfo(src/lib.rs:625:23-625:30)
  5: _19 = _5
    SourceInfo(src/lib.rs:625:23-625:30)
  6: StorageLive(_20)
    SourceInfo(src/lib.rs:625:32-625:36)
  7: _20 = _12
    SourceInfo(src/lib.rs:625:32-625:36)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:47:9-47:42)
      kind: _18 = std::vec::from_elem::<isize>(move _19, move _20) -> [return: bb6, unwind: bb98]
  }
  preds [bb4]
  succs [bb6, bb98]

bb6
  0: StorageDead(_20)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:47:41-47:42)
  1: StorageDead(_19)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:47:41-47:42)
  2: FakeRead(ForLet(None), _18)
    SourceInfo(src/lib.rs:625:9-625:15)
  3: StorageLive(_21)
    SourceInfo(src/lib.rs:626:9-626:14)
  4: StorageLive(_22)
    SourceInfo(src/lib.rs:626:29-627:39)
  5: StorageLive(_23)
    SourceInfo(src/lib.rs:626:29-626:51)
  6: StorageLive(_24)
    SourceInfo(src/lib.rs:626:30-626:37)
  7: _24 = _5
    SourceInfo(src/lib.rs:626:30-626:37)
  8: StorageLive(_25)
    SourceInfo(src/lib.rs:626:39-626:50)
  9: StorageLive(_26)
    SourceInfo(src/lib.rs:626:39-626:46)
  10: _26 = _5
    SourceInfo(src/lib.rs:626:39-626:46)
  11: _27 = AddWithOverflow(_26, const 1_isize)
    SourceInfo(src/lib.rs:626:39-626:50)
  Terminator {
      source_info: SourceInfo(src/lib.rs:626:39-626:50)
      kind: assert(!move (_27.1: bool), "attempt to compute `{} + {}`, which would overflow", move _26, const 1_isize) -> [success: bb7, unwind: bb97]
  }
  preds [bb5]
  succs [bb7, bb97]

bb7
  0: _25 = move (_27.0: isize)
    SourceInfo(src/lib.rs:626:39-626:50)
  1: StorageDead(_26)
    SourceInfo(src/lib.rs:626:49-626:50)
  2: _23 = std::ops::Range::<isize> { start: move _24, end: move _25 }
    SourceInfo(src/lib.rs:626:29-626:51)
  3: StorageDead(_25)
    SourceInfo(src/lib.rs:626:50-626:51)
  4: StorageDead(_24)
    SourceInfo(src/lib.rs:626:50-626:51)
  5: StorageLive(_28)
    SourceInfo(src/lib.rs:627:16-627:38)
  6: StorageLive(_29)
    SourceInfo(src/lib.rs:627:19-627:38)
  7: StorageLive(_30)
    SourceInfo(src/lib.rs:627:19-627:29)
  8: StorageLive(_31)
    SourceInfo(src/lib.rs:627:20-627:24)
  9: _31 = _12
    SourceInfo(src/lib.rs:627:20-627:24)
  10: _32 = SubWithOverflow(_31, const 1_usize)
    SourceInfo(src/lib.rs:627:19-627:29)
  Terminator {
      source_info: SourceInfo(src/lib.rs:627:19-627:29)
      kind: assert(!move (_32.1: bool), "attempt to compute `{} - {}`, which would overflow", move _31, const 1_usize) -> [success: bb8, unwind: bb97]
  }
  preds [bb6]
  succs [bb8, bb97]

bb8
  0: _30 = move (_32.0: usize)
    SourceInfo(src/lib.rs:627:19-627:29)
  1: StorageDead(_31)
    SourceInfo(src/lib.rs:627:28-627:29)
  2: _29 = move _30 as isize (IntToInt)
    SourceInfo(src/lib.rs:627:19-627:38)
  3: StorageDead(_30)
    SourceInfo(src/lib.rs:627:37-627:38)
  4: _28 = std::ops::Range::<isize> { start: const 0_isize, end: move _29 }
    SourceInfo(src/lib.rs:627:16-627:38)
  5: StorageDead(_29)
    SourceInfo(src/lib.rs:627:37-627:38)
  Terminator {
      source_info: SourceInfo(src/lib.rs:626:29-627:39)
      kind: _22 = <std::ops::Range<isize> as std::iter::Iterator>::chain::<std::ops::Range<isize>>(move _23, move _28) -> [return: bb9, unwind: bb97]
  }
  preds [bb7]
  succs [bb9, bb97]

bb9
  0: StorageDead(_28)
    SourceInfo(src/lib.rs:627:38-627:39)
  1: StorageDead(_23)
    SourceInfo(src/lib.rs:627:38-627:39)
  Terminator {
      source_info: SourceInfo(src/lib.rs:626:29-628:19)
      kind: _21 = <std::iter::Chain<std::ops::Range<isize>, std::ops::Range<isize>> as std::iter::Iterator>::collect::<std::vec::Vec<isize>>(move _22) -> [return: bb10, unwind: bb97]
  }
  preds [bb8]
  succs [bb10, bb97]

bb10
  0: StorageDead(_22)
    SourceInfo(src/lib.rs:628:18-628:19)
  1: FakeRead(ForLet(None), _21)
    SourceInfo(src/lib.rs:626:9-626:14)
  2: AscribeUserType(_21, o, UserTypeProjection { base: UserType(1), projs: [] })
    SourceInfo(src/lib.rs:626:16-626:26)
  3: StorageLive(_33)
    SourceInfo(src/lib.rs:630:5-664:6)
  4: StorageLive(_34)
    SourceInfo(src/lib.rs:630:21-630:64)
  5: StorageLive(_35)
    SourceInfo(src/lib.rs:630:21-630:64)
  6: StorageLive(_36)
    SourceInfo(src/lib.rs:630:21-630:35)
  7: StorageLive(_37)
    SourceInfo(src/lib.rs:630:21-630:23)
  8: _37 = move _1
    SourceInfo(src/lib.rs:630:21-630:23)
  Terminator {
      source_info: SourceInfo(src/lib.rs:630:21-630:35)
      kind: _36 = <Iter1 as std::iter::Iterator>::enumerate(move _37) -> [return: bb11, unwind: bb95]
  }
  preds [bb9]
  succs [bb11, bb95]

bb11
  0: StorageDead(_37)
    SourceInfo(src/lib.rs:630:34-630:35)
  1: StorageLive(_38)
    SourceInfo(src/lib.rs:630:40-630:63)
  2: _38 = {closure@src/lib.rs:630:40: 630:50}
    SourceInfo(src/lib.rs:630:40-630:63)
  Terminator {
      source_info: SourceInfo(src/lib.rs:630:21-630:64)
      kind: _35 = <std::iter::Enumerate<Iter1> as std::iter::Iterator>::map::<(usize, char), {closure@src/lib.rs:630:40: 630:50}>(move _36, move _38) -> [return: bb12, unwind: bb94]
  }
  preds [bb10]
  succs [bb12, bb94]

bb12
  0: StorageDead(_38)
    SourceInfo(src/lib.rs:630:63-630:64)
  1: StorageDead(_36)
    SourceInfo(src/lib.rs:630:63-630:64)
  Terminator {
      source_info: SourceInfo(src/lib.rs:630:21-630:64)
      kind: _34 = <std::iter::Map<std::iter::Enumerate<Iter1>, {closure@src/lib.rs:630:40: 630:50}> as std::iter::IntoIterator>::into_iter(move _35) -> [return: bb13, unwind: bb93]
  }
  preds [bb11]
  succs [bb13, bb93]

bb13
  0: StorageDead(_35)
    SourceInfo(src/lib.rs:630:63-630:64)
  1: PlaceMention(_34)
    SourceInfo(src/lib.rs:630:21-630:64)
  2: StorageLive(_39)
    SourceInfo(src/lib.rs:630:21-630:64)
  3: _39 = move _34
    SourceInfo(src/lib.rs:630:21-630:64)
  Terminator {
      source_info: SourceInfo(src/lib.rs:630:5-664:6)
      kind: goto -> bb14
  }
  preds [bb12]
  succs [bb14]

bb14
  Terminator {
      source_info: SourceInfo(src/lib.rs:630:5-664:6)
      kind: falseUnwind -> [real: bb15, unwind: bb91]
  }
  preds [bb13, bb75]
  succs [bb15, bb91]

bb15
  0: StorageLive(_41)
    SourceInfo(src/lib.rs:630:21-630:64)
  1: StorageLive(_42)
    SourceInfo(src/lib.rs:630:21-630:64)
  2: StorageLive(_43)
    SourceInfo(src/lib.rs:630:21-630:64)
  3: StorageLive(_44)
    SourceInfo(src/lib.rs:630:21-630:64)
  4: _44 = &mut _39
    SourceInfo(src/lib.rs:630:21-630:64)
  5: _43 = &mut (*_44)
    SourceInfo(src/lib.rs:630:21-630:64)
  Terminator {
      source_info: SourceInfo(src/lib.rs:630:21-630:64)
      kind: _42 = <std::iter::Map<std::iter::Enumerate<Iter1>, {closure@src/lib.rs:630:40: 630:50}> as std::iter::Iterator>::next(move _43) -> [return: bb16, unwind: bb91]
  }
  preds [bb14]
  succs [bb16, bb91]

bb16
  0: StorageDead(_43)
    SourceInfo(src/lib.rs:630:63-630:64)
  1: PlaceMention(_42)
    SourceInfo(src/lib.rs:630:21-630:64)
  2: _45 = discriminant(_42)
    SourceInfo(src/lib.rs:630:21-630:64)
  Terminator {
      source_info: SourceInfo(src/lib.rs:630:21-630:64)
      kind: switchInt(move _45) -> [0: bb18, 1: bb19, otherwise: bb17]
  }
  preds [bb15]
  succs [bb17, bb18, bb19]

bb17
  0: FakeRead(ForMatchedPlace(None), _42)
    SourceInfo(src/lib.rs:630:21-630:64)
  Terminator {
      source_info: SourceInfo(src/lib.rs:630:21-630:64)
      kind: unreachable
  }
  preds [bb16]
  succs []

bb18
  Terminator {
      source_info: SourceInfo(src/lib.rs:630:5-664:6)
      kind: falseEdge -> [real: bb20, imaginary: bb19]
  }
  preds [bb16]
  succs [bb19, bb20]

bb19
  0: StorageLive(_47)
    SourceInfo(src/lib.rs:630:10-630:11)
  1: _47 = (((_42 as Some).0: (usize, char)).0: usize)
    SourceInfo(src/lib.rs:630:10-630:11)
  2: StorageLive(_48)
    SourceInfo(src/lib.rs:630:13-630:16)
  3: _48 = (((_42 as Some).0: (usize, char)).1: char)
    SourceInfo(src/lib.rs:630:13-630:16)
  4: StorageLive(_49)
    SourceInfo(src/lib.rs:631:9-631:35)
  5: StorageLive(_50)
    SourceInfo(src/lib.rs:631:19-631:25)
  6: StorageLive(_51)
    SourceInfo(src/lib.rs:631:19-631:25)
  7: _51 = &mut _21
    SourceInfo(src/lib.rs:631:19-631:25)
  8: _50 = &mut (*_51)
    SourceInfo(src/lib.rs:631:19-631:25)
  9: StorageLive(_52)
    SourceInfo(src/lib.rs:631:27-631:34)
  10: StorageLive(_53)
    SourceInfo(src/lib.rs:631:27-631:34)
  11: _53 = &mut _18
    SourceInfo(src/lib.rs:631:27-631:34)
  12: _52 = &mut (*_53)
    SourceInfo(src/lib.rs:631:27-631:34)
  Terminator {
      source_info: SourceInfo(src/lib.rs:631:9-631:35)
      kind: _49 = std::mem::swap::<std::vec::Vec<isize>>(move _50, move _52) -> [return: bb21, unwind: bb91]
  }
  preds [bb16, bb18]
  succs [bb21, bb91]

bb20
  0: _33 = const ()
    SourceInfo(src/lib.rs:630:5-664:6)
  1: StorageDead(_44)
    SourceInfo(src/lib.rs:664:5-664:6)
  2: StorageDead(_42)
    SourceInfo(src/lib.rs:664:5-664:6)
  3: StorageDead(_41)
    SourceInfo(src/lib.rs:664:5-664:6)
  Terminator {
      source_info: SourceInfo(src/lib.rs:664:5-664:6)
      kind: drop(_39) -> [return: bb76, unwind: bb92]
  }
  preds [bb18]
  succs [bb76, bb92]

bb21
  0: StorageDead(_52)
    SourceInfo(src/lib.rs:631:34-631:35)
  1: StorageDead(_50)
    SourceInfo(src/lib.rs:631:34-631:35)
  2: StorageDead(_53)
    SourceInfo(src/lib.rs:631:35-631:36)
  3: StorageDead(_51)
    SourceInfo(src/lib.rs:631:35-631:36)
  4: StorageDead(_49)
    SourceInfo(src/lib.rs:631:35-631:36)
  5: StorageLive(_54)
    SourceInfo(src/lib.rs:632:13-632:28)
  6: _54 = const -1_isize
    SourceInfo(src/lib.rs:632:38-632:40)
  7: FakeRead(ForLet(None), _54)
    SourceInfo(src/lib.rs:632:13-632:28)
  8: AscribeUserType(_54, o, UserTypeProjection { base: UserType(3), projs: [] })
    SourceInfo(src/lib.rs:632:30-632:35)
  9: StorageLive(_55)
    SourceInfo(src/lib.rs:633:13-633:26)
  10: StorageLive(_56)
    SourceInfo(src/lib.rs:633:30-633:33)
  11: StorageLive(_57)
    SourceInfo(src/lib.rs:633:29-633:30)
  12: _57 = &_21
    SourceInfo(src/lib.rs:633:29-633:30)
  Terminator {
      source_info: SourceInfo(src/lib.rs:633:30-633:33)
      kind: _56 = <std::vec::Vec<isize> as std::ops::Index<usize>>::index(move _57, const 1_usize) -> [return: bb22, unwind: bb91]
  }
  preds [bb19]
  succs [bb22, bb91]

bb22
  0: _55 = (*_56)
    SourceInfo(src/lib.rs:633:29-633:33)
  1: StorageDead(_57)
    SourceInfo(src/lib.rs:633:32-633:33)
  2: FakeRead(ForLet(None), _55)
    SourceInfo(src/lib.rs:633:13-633:26)
  3: StorageDead(_56)
    SourceInfo(src/lib.rs:633:33-633:34)
  4: StorageLive(_58)
    SourceInfo(src/lib.rs:634:16-634:17)
  5: _58 = _47
    SourceInfo(src/lib.rs:634:16-634:17)
  6: StorageLive(_59)
    SourceInfo(src/lib.rs:634:10-634:13)
  7: StorageLive(_60)
    SourceInfo(src/lib.rs:634:9-634:10)
  8: _60 = &mut _21
    SourceInfo(src/lib.rs:634:9-634:10)
  Terminator {
      source_info: SourceInfo(src/lib.rs:634:10-634:13)
      kind: _59 = <std::vec::Vec<isize> as std::ops::IndexMut<usize>>::index_mut(move _60, const 1_usize) -> [return: bb23, unwind: bb91]
  }
  preds [bb21]
  succs [bb23, bb91]

bb23
  0: StorageDead(_60)
    SourceInfo(src/lib.rs:634:12-634:13)
  1: (*_59) = move _58 as isize (IntToInt)
    SourceInfo(src/lib.rs:634:9-634:26)
  2: StorageDead(_58)
    SourceInfo(src/lib.rs:634:25-634:26)
  3: StorageDead(_59)
    SourceInfo(src/lib.rs:634:26-634:27)
  4: StorageLive(_61)
    SourceInfo(src/lib.rs:635:13-635:18)
  5: _61 = _5
    SourceInfo(src/lib.rs:635:21-635:28)
  6: FakeRead(ForLet(None), _61)
    SourceInfo(src/lib.rs:635:13-635:18)
  7: StorageLive(_62)
    SourceInfo(src/lib.rs:637:9-662:10)
  8: StorageLive(_63)
    SourceInfo(src/lib.rs:637:25-637:76)
  9: StorageLive(_64)
    SourceInfo(src/lib.rs:637:25-637:76)
  10: StorageLive(_65)
    SourceInfo(src/lib.rs:637:25-637:47)
  11: StorageLive(_66)
    SourceInfo(src/lib.rs:637:25-637:35)
  12: StorageLive(_67)
    SourceInfo(src/lib.rs:637:25-637:27)
  13: _67 = &_3
    SourceInfo(src/lib.rs:637:25-637:27)
  Terminator {
      source_info: SourceInfo(src/lib.rs:637:25-637:35)
      kind: _66 = <Iter2 as std::clone::Clone>::clone(move _67) -> [return: bb24, unwind: bb91]
  }
  preds [bb22]
  succs [bb24, bb91]

bb24
  0: StorageDead(_67)
    SourceInfo(src/lib.rs:637:34-637:35)
  Terminator {
      source_info: SourceInfo(src/lib.rs:637:25-637:47)
      kind: _65 = <Iter2 as std::iter::Iterator>::enumerate(move _66) -> [return: bb25, unwind: bb90]
  }
  preds [bb23]
  succs [bb25, bb90]

bb25
  0: StorageDead(_66)
    SourceInfo(src/lib.rs:637:46-637:47)
  1: StorageLive(_68)
    SourceInfo(src/lib.rs:637:52-637:75)
  2: _68 = {closure@src/lib.rs:637:52: 637:62}
    SourceInfo(src/lib.rs:637:52-637:75)
  Terminator {
      source_info: SourceInfo(src/lib.rs:637:25-637:76)
      kind: _64 = <std::iter::Enumerate<Iter2> as std::iter::Iterator>::map::<(usize, char), {closure@src/lib.rs:637:52: 637:62}>(move _65, move _68) -> [return: bb26, unwind: bb89]
  }
  preds [bb24]
  succs [bb26, bb89]

bb26
  0: StorageDead(_68)
    SourceInfo(src/lib.rs:637:75-637:76)
  1: StorageDead(_65)
    SourceInfo(src/lib.rs:637:75-637:76)
  Terminator {
      source_info: SourceInfo(src/lib.rs:637:25-637:76)
      kind: _63 = <std::iter::Map<std::iter::Enumerate<Iter2>, {closure@src/lib.rs:637:52: 637:62}> as std::iter::IntoIterator>::into_iter(move _64) -> [return: bb27, unwind: bb88]
  }
  preds [bb25]
  succs [bb27, bb88]

bb27
  0: StorageDead(_64)
    SourceInfo(src/lib.rs:637:75-637:76)
  1: PlaceMention(_63)
    SourceInfo(src/lib.rs:637:25-637:76)
  2: StorageLive(_69)
    SourceInfo(src/lib.rs:637:25-637:76)
  3: _69 = move _63
    SourceInfo(src/lib.rs:637:25-637:76)
  Terminator {
      source_info: SourceInfo(src/lib.rs:637:9-662:10)
      kind: goto -> bb28
  }
  preds [bb26]
  succs [bb28]

bb28
  Terminator {
      source_info: SourceInfo(src/lib.rs:637:9-662:10)
      kind: falseUnwind -> [real: bb29, unwind: bb86]
  }
  preds [bb27, bb72]
  succs [bb29, bb86]

bb29
  0: StorageLive(_70)
    SourceInfo(src/lib.rs:637:25-637:76)
  1: StorageLive(_71)
    SourceInfo(src/lib.rs:637:25-637:76)
  2: StorageLive(_72)
    SourceInfo(src/lib.rs:637:25-637:76)
  3: StorageLive(_73)
    SourceInfo(src/lib.rs:637:25-637:76)
  4: _73 = &mut _69
    SourceInfo(src/lib.rs:637:25-637:76)
  5: _72 = &mut (*_73)
    SourceInfo(src/lib.rs:637:25-637:76)
  Terminator {
      source_info: SourceInfo(src/lib.rs:637:25-637:76)
      kind: _71 = <std::iter::Map<std::iter::Enumerate<Iter2>, {closure@src/lib.rs:637:52: 637:62}> as std::iter::Iterator>::next(move _72) -> [return: bb30, unwind: bb86]
  }
  preds [bb28]
  succs [bb30, bb86]

bb30
  0: StorageDead(_72)
    SourceInfo(src/lib.rs:637:75-637:76)
  1: PlaceMention(_71)
    SourceInfo(src/lib.rs:637:25-637:76)
  2: _74 = discriminant(_71)
    SourceInfo(src/lib.rs:637:25-637:76)
  Terminator {
      source_info: SourceInfo(src/lib.rs:637:25-637:76)
      kind: switchInt(move _74) -> [0: bb32, 1: bb33, otherwise: bb31]
  }
  preds [bb29]
  succs [bb31, bb32, bb33]

bb31
  0: FakeRead(ForMatchedPlace(None), _71)
    SourceInfo(src/lib.rs:637:25-637:76)
  Terminator {
      source_info: SourceInfo(src/lib.rs:637:25-637:76)
      kind: unreachable
  }
  preds [bb30]
  succs []

bb32
  Terminator {
      source_info: SourceInfo(src/lib.rs:637:9-662:10)
      kind: falseEdge -> [real: bb34, imaginary: bb33]
  }
  preds [bb30]
  succs [bb33, bb34]

bb33
  0: StorageLive(_76)
    SourceInfo(src/lib.rs:637:14-637:15)
  1: _76 = (((_71 as Some).0: (usize, char)).0: usize)
    SourceInfo(src/lib.rs:637:14-637:15)
  2: StorageLive(_77)
    SourceInfo(src/lib.rs:637:17-637:20)
  3: _77 = (((_71 as Some).0: (usize, char)).1: char)
    SourceInfo(src/lib.rs:637:17-637:20)
  4: StorageLive(_78)
    SourceInfo(src/lib.rs:638:17-638:21)
  5: StorageLive(_79)
    SourceInfo(src/lib.rs:638:24-638:29)
  6: StorageLive(_80)
    SourceInfo(src/lib.rs:638:26-638:29)
  7: StorageLive(_81)
    SourceInfo(src/lib.rs:638:24-638:26)
  8: _81 = &_18
    SourceInfo(src/lib.rs:638:24-638:26)
  9: StorageLive(_82)
    SourceInfo(src/lib.rs:638:27-638:28)
  10: _82 = _76
    SourceInfo(src/lib.rs:638:27-638:28)
  Terminator {
      source_info: SourceInfo(src/lib.rs:638:26-638:29)
      kind: _80 = <std::vec::Vec<isize> as std::ops::Index<usize>>::index(move _81, move _82) -> [return: bb35, unwind: bb86]
  }
  preds [bb30, bb32]
  succs [bb35, bb86]

bb34
  0: _62 = const ()
    SourceInfo(src/lib.rs:637:9-662:10)
  1: StorageDead(_73)
    SourceInfo(src/lib.rs:662:9-662:10)
  2: StorageDead(_71)
    SourceInfo(src/lib.rs:662:9-662:10)
  3: StorageDead(_70)
    SourceInfo(src/lib.rs:662:9-662:10)
  Terminator {
      source_info: SourceInfo(src/lib.rs:662:9-662:10)
      kind: drop(_69) -> [return: bb73, unwind: bb87]
  }
  preds [bb32]
  succs [bb73, bb87]

bb35
  0: _79 = (*_80)
    SourceInfo(src/lib.rs:638:24-638:29)
  1: StorageDead(_82)
    SourceInfo(src/lib.rs:638:28-638:29)
  2: StorageDead(_81)
    SourceInfo(src/lib.rs:638:28-638:29)
  3: StorageLive(_83)
    SourceInfo(src/lib.rs:638:32-638:55)
  4: StorageLive(_84)
    SourceInfo(src/lib.rs:638:44-638:54)
  5: StorageLive(_85)
    SourceInfo(src/lib.rs:638:44-638:47)
  6: _85 = _48
    SourceInfo(src/lib.rs:638:44-638:47)
  7: StorageLive(_86)
    SourceInfo(src/lib.rs:638:51-638:54)
  8: _86 = _77
    SourceInfo(src/lib.rs:638:51-638:54)
  9: _84 = Ne(move _85, move _86)
    SourceInfo(src/lib.rs:638:44-638:54)
  10: StorageDead(_86)
    SourceInfo(src/lib.rs:638:53-638:54)
  11: StorageDead(_85)
    SourceInfo(src/lib.rs:638:53-638:54)
  Terminator {
      source_info: SourceInfo(src/lib.rs:638:32-638:55)
      kind: _83 = <isize as std::convert::From<bool>>::from(move _84) -> [return: bb36, unwind: bb86]
  }
  preds [bb33]
  succs [bb36, bb86]

bb36
  0: StorageDead(_84)
    SourceInfo(src/lib.rs:638:54-638:55)
  1: _87 = AddWithOverflow(_79, _83)
    SourceInfo(src/lib.rs:638:24-638:55)
  Terminator {
      source_info: SourceInfo(src/lib.rs:638:24-638:55)
      kind: assert(!move (_87.1: bool), "attempt to compute `{} + {}`, which would overflow", move _79, move _83) -> [success: bb37, unwind: bb86]
  }
  preds [bb35]
  succs [bb37, bb86]

bb37
  0: _78 = move (_87.0: isize)
    SourceInfo(src/lib.rs:638:24-638:55)
  1: StorageDead(_83)
    SourceInfo(src/lib.rs:638:54-638:55)
  2: StorageDead(_79)
    SourceInfo(src/lib.rs:638:54-638:55)
  3: FakeRead(ForLet(None), _78)
    SourceInfo(src/lib.rs:638:17-638:21)
  4: StorageDead(_80)
    SourceInfo(src/lib.rs:638:55-638:56)
  5: StorageLive(_88)
    SourceInfo(src/lib.rs:639:17-639:21)
  6: StorageLive(_89)
    SourceInfo(src/lib.rs:639:24-639:28)
  7: StorageLive(_90)
    SourceInfo(src/lib.rs:639:25-639:28)
  8: StorageLive(_91)
    SourceInfo(src/lib.rs:639:24-639:25)
  9: _91 = &_21
    SourceInfo(src/lib.rs:639:24-639:25)
  10: StorageLive(_92)
    SourceInfo(src/lib.rs:639:26-639:27)
  11: _92 = _76
    SourceInfo(src/lib.rs:639:26-639:27)
  Terminator {
      source_info: SourceInfo(src/lib.rs:639:25-639:28)
      kind: _90 = <std::vec::Vec<isize> as std::ops::Index<usize>>::index(move _91, move _92) -> [return: bb38, unwind: bb86]
  }
  preds [bb36]
  succs [bb38, bb86]

bb38
  0: _89 = (*_90)
    SourceInfo(src/lib.rs:639:24-639:28)
  1: StorageDead(_92)
    SourceInfo(src/lib.rs:639:27-639:28)
  2: StorageDead(_91)
    SourceInfo(src/lib.rs:639:27-639:28)
  3: _93 = AddWithOverflow(_89, const 1_isize)
    SourceInfo(src/lib.rs:639:24-639:32)
  Terminator {
      source_info: SourceInfo(src/lib.rs:639:24-639:32)
      kind: assert(!move (_93.1: bool), "attempt to compute `{} + {}`, which would overflow", move _89, const 1_isize) -> [success: bb39, unwind: bb86]
  }
  preds [bb37]
  succs [bb39, bb86]

bb39
  0: _88 = move (_93.0: isize)
    SourceInfo(src/lib.rs:639:24-639:32)
  1: StorageDead(_89)
    SourceInfo(src/lib.rs:639:31-639:32)
  2: FakeRead(ForLet(None), _88)
    SourceInfo(src/lib.rs:639:17-639:21)
  3: StorageDead(_90)
    SourceInfo(src/lib.rs:639:32-639:33)
  4: StorageLive(_94)
    SourceInfo(src/lib.rs:640:17-640:19)
  5: StorageLive(_95)
    SourceInfo(src/lib.rs:640:22-640:31)
  6: StorageLive(_96)
    SourceInfo(src/lib.rs:640:24-640:31)
  7: StorageLive(_97)
    SourceInfo(src/lib.rs:640:22-640:24)
  8: _97 = &_18
    SourceInfo(src/lib.rs:640:22-640:24)
  9: StorageLive(_98)
    SourceInfo(src/lib.rs:640:25-640:30)
  10: StorageLive(_99)
    SourceInfo(src/lib.rs:640:25-640:26)
  11: _99 = _76
    SourceInfo(src/lib.rs:640:25-640:26)
  12: _100 = AddWithOverflow(_99, const 1_usize)
    SourceInfo(src/lib.rs:640:25-640:30)
  Terminator {
      source_info: SourceInfo(src/lib.rs:640:25-640:30)
      kind: assert(!move (_100.1: bool), "attempt to compute `{} + {}`, which would overflow", move _99, const 1_usize) -> [success: bb40, unwind: bb86]
  }
  preds [bb38]
  succs [bb40, bb86]

bb40
  0: _98 = move (_100.0: usize)
    SourceInfo(src/lib.rs:640:25-640:30)
  1: StorageDead(_99)
    SourceInfo(src/lib.rs:640:29-640:30)
  Terminator {
      source_info: SourceInfo(src/lib.rs:640:24-640:31)
      kind: _96 = <std::vec::Vec<isize> as std::ops::Index<usize>>::index(move _97, move _98) -> [return: bb41, unwind: bb86]
  }
  preds [bb39]
  succs [bb41, bb86]

bb41
  0: _95 = (*_96)
    SourceInfo(src/lib.rs:640:22-640:31)
  1: StorageDead(_98)
    SourceInfo(src/lib.rs:640:30-640:31)
  2: StorageDead(_97)
    SourceInfo(src/lib.rs:640:30-640:31)
  3: _101 = AddWithOverflow(_95, const 1_isize)
    SourceInfo(src/lib.rs:640:22-640:35)
  Terminator {
      source_info: SourceInfo(src/lib.rs:640:22-640:35)
      kind: assert(!move (_101.1: bool), "attempt to compute `{} + {}`, which would overflow", move _95, const 1_isize) -> [success: bb42, unwind: bb86]
  }
  preds [bb40]
  succs [bb42, bb86]

bb42
  0: _94 = move (_101.0: isize)
    SourceInfo(src/lib.rs:640:22-640:35)
  1: StorageDead(_95)
    SourceInfo(src/lib.rs:640:34-640:35)
  2: FakeRead(ForLet(None), _94)
    SourceInfo(src/lib.rs:640:17-640:19)
  3: StorageDead(_96)
    SourceInfo(src/lib.rs:640:35-640:36)
  4: StorageLive(_102)
    SourceInfo(src/lib.rs:641:17-641:25)
  5: StorageLive(_103)
    SourceInfo(src/lib.rs:641:32-641:36)
  6: _103 = _78
    SourceInfo(src/lib.rs:641:32-641:36)
  7: StorageLive(_104)
    SourceInfo(src/lib.rs:641:38-641:51)
  8: StorageLive(_105)
    SourceInfo(src/lib.rs:641:42-641:46)
  9: _105 = _88
    SourceInfo(src/lib.rs:641:42-641:46)
  10: StorageLive(_106)
    SourceInfo(src/lib.rs:641:48-641:50)
  11: _106 = _94
    SourceInfo(src/lib.rs:641:48-641:50)
  Terminator {
      source_info: SourceInfo(src/lib.rs:641:38-641:51)
      kind: _104 = std::cmp::min::<isize>(move _105, move _106) -> [return: bb43, unwind: bb86]
  }
  preds [bb41]
  succs [bb43, bb86]

bb43
  0: StorageDead(_106)
    SourceInfo(src/lib.rs:641:50-641:51)
  1: StorageDead(_105)
    SourceInfo(src/lib.rs:641:50-641:51)
  Terminator {
      source_info: SourceInfo(src/lib.rs:641:28-641:52)
      kind: _102 = std::cmp::min::<isize>(move _103, move _104) -> [return: bb44, unwind: bb86]
  }
  preds [bb42]
  succs [bb44, bb86]

bb44
  0: StorageDead(_104)
    SourceInfo(src/lib.rs:641:51-641:52)
  1: StorageDead(_103)
    SourceInfo(src/lib.rs:641:51-641:52)
  2: FakeRead(ForLet(None), _102)
    SourceInfo(src/lib.rs:641:17-641:25)
  3: StorageLive(_107)
    SourceInfo(src/lib.rs:643:13-658:14)
  4: StorageLive(_108)
    SourceInfo(src/lib.rs:643:16-643:26)
  5: StorageLive(_109)
    SourceInfo(src/lib.rs:643:16-643:19)
  6: _109 = _48
    SourceInfo(src/lib.rs:643:16-643:19)
  7: StorageLive(_110)
    SourceInfo(src/lib.rs:643:23-643:26)
  8: _110 = _77
    SourceInfo(src/lib.rs:643:23-643:26)
  9: _108 = Eq(move _109, move _110)
    SourceInfo(src/lib.rs:643:16-643:26)
  Terminator {
      source_info: SourceInfo(src/lib.rs:643:16-643:26)
      kind: switchInt(move _108) -> [0: bb50, otherwise: bb45]
  }
  preds [bb43]
  succs [bb45, bb50]

bb45
  0: StorageDead(_110)
    SourceInfo(src/lib.rs:643:25-643:26)
  1: StorageDead(_109)
    SourceInfo(src/lib.rs:643:25-643:26)
  2: StorageLive(_111)
    SourceInfo(src/lib.rs:644:31-644:32)
  3: _111 = _76
    SourceInfo(src/lib.rs:644:31-644:32)
  4: _54 = move _111 as isize (IntToInt)
    SourceInfo(src/lib.rs:644:17-644:41)
  5: StorageDead(_111)
    SourceInfo(src/lib.rs:644:40-644:41)
  6: StorageLive(_112)
    SourceInfo(src/lib.rs:645:29-645:38)
  7: StorageLive(_113)
    SourceInfo(src/lib.rs:645:31-645:38)
  8: StorageLive(_114)
    SourceInfo(src/lib.rs:645:29-645:31)
  9: _114 = &_18
    SourceInfo(src/lib.rs:645:29-645:31)
  10: StorageLive(_115)
    SourceInfo(src/lib.rs:645:32-645:37)
  11: StorageLive(_116)
    SourceInfo(src/lib.rs:645:32-645:33)
  12: _116 = _76
    SourceInfo(src/lib.rs:645:32-645:33)
  13: _117 = SubWithOverflow(_116, const 1_usize)
    SourceInfo(src/lib.rs:645:32-645:37)
  Terminator {
      source_info: SourceInfo(src/lib.rs:645:32-645:37)
      kind: assert(!move (_117.1: bool), "attempt to compute `{} - {}`, which would overflow", move _116, const 1_usize) -> [success: bb46, unwind: bb86]
  }
  preds [bb44]
  succs [bb46, bb86]

bb46
  0: _115 = move (_117.0: usize)
    SourceInfo(src/lib.rs:645:32-645:37)
  1: StorageDead(_116)
    SourceInfo(src/lib.rs:645:36-645:37)
  Terminator {
      source_info: SourceInfo(src/lib.rs:645:31-645:38)
      kind: _113 = <std::vec::Vec<isize> as std::ops::Index<usize>>::index(move _114, move _115) -> [return: bb47, unwind: bb86]
  }
  preds [bb45]
  succs [bb47, bb86]

bb47
  0: _112 = (*_113)
    SourceInfo(src/lib.rs:645:29-645:38)
  1: StorageDead(_115)
    SourceInfo(src/lib.rs:645:37-645:38)
  2: StorageDead(_114)
    SourceInfo(src/lib.rs:645:37-645:38)
  3: StorageLive(_118)
    SourceInfo(src/lib.rs:645:19-645:26)
  4: StorageLive(_119)
    SourceInfo(src/lib.rs:645:17-645:19)
  5: _119 = &mut _15
    SourceInfo(src/lib.rs:645:17-645:19)
  6: StorageLive(_120)
    SourceInfo(src/lib.rs:645:20-645:25)
  7: StorageLive(_121)
    SourceInfo(src/lib.rs:645:20-645:21)
  8: _121 = _76
    SourceInfo(src/lib.rs:645:20-645:21)
  9: _122 = AddWithOverflow(_121, const 1_usize)
    SourceInfo(src/lib.rs:645:20-645:25)
  Terminator {
      source_info: SourceInfo(src/lib.rs:645:20-645:25)
      kind: assert(!move (_122.1: bool), "attempt to compute `{} + {}`, which would overflow", move _121, const 1_usize) -> [success: bb48, unwind: bb86]
  }
  preds [bb46]
  succs [bb48, bb86]

bb48
  0: _120 = move (_122.0: usize)
    SourceInfo(src/lib.rs:645:20-645:25)
  1: StorageDead(_121)
    SourceInfo(src/lib.rs:645:24-645:25)
  Terminator {
      source_info: SourceInfo(src/lib.rs:645:19-645:26)
      kind: _118 = <std::vec::Vec<isize> as std::ops::IndexMut<usize>>::index_mut(move _119, move _120) -> [return: bb49, unwind: bb86]
  }
  preds [bb47]
  succs [bb49, bb86]

bb49
  0: StorageDead(_120)
    SourceInfo(src/lib.rs:645:25-645:26)
  1: StorageDead(_119)
    SourceInfo(src/lib.rs:645:25-645:26)
  2: (*_118) = move _112
    SourceInfo(src/lib.rs:645:17-645:38)
  3: StorageDead(_112)
    SourceInfo(src/lib.rs:645:37-645:38)
  4: StorageDead(_118)
    SourceInfo(src/lib.rs:645:38-645:39)
  5: StorageDead(_113)
    SourceInfo(src/lib.rs:645:38-645:39)
  6: StorageLive(_123)
    SourceInfo(src/lib.rs:646:21-646:30)
  7: _123 = _55
    SourceInfo(src/lib.rs:646:21-646:30)
  8: _61 = move _123
    SourceInfo(src/lib.rs:646:17-646:30)
  9: StorageDead(_123)
    SourceInfo(src/lib.rs:646:29-646:30)
  10: _107 = const ()
    SourceInfo(src/lib.rs:643:27-647:14)
  Terminator {
      source_info: SourceInfo(src/lib.rs:643:13-658:14)
      kind: goto -> bb68
  }
  preds [bb48]
  succs [bb68]

bb50
  0: StorageDead(_110)
    SourceInfo(src/lib.rs:643:25-643:26)
  1: StorageDead(_109)
    SourceInfo(src/lib.rs:643:25-643:26)
  2: StorageLive(_124)
    SourceInfo(src/lib.rs:648:21-648:22)
  3: StorageLive(_125)
    SourceInfo(src/lib.rs:648:25-648:45)
  4: StorageLive(_126)
    SourceInfo(src/lib.rs:648:25-648:36)
  5: _126 = &_11
    SourceInfo(src/lib.rs:648:25-648:36)
  6: StorageLive(_127)
    SourceInfo(src/lib.rs:648:41-648:44)
  7: _127 = _77
    SourceInfo(src/lib.rs:648:41-648:44)
  Terminator {
      source_info: SourceInfo(src/lib.rs:648:25-648:45)
      kind: _125 = HybridGrowingHashmapChar::<RowId>::get(move _126, move _127) -> [return: bb51, unwind: bb86]
  }
  preds [bb44]
  succs [bb51, bb86]

bb51
  0: StorageDead(_127)
    SourceInfo(src/lib.rs:648:44-648:45)
  1: StorageDead(_126)
    SourceInfo(src/lib.rs:648:44-648:45)
  2: _124 = (_125.0: isize)
    SourceInfo(src/lib.rs:648:25-648:49)
  3: FakeRead(ForLet(None), _124)
    SourceInfo(src/lib.rs:648:21-648:22)
  4: StorageDead(_125)
    SourceInfo(src/lib.rs:648:49-648:50)
  5: StorageLive(_128)
    SourceInfo(src/lib.rs:649:21-649:22)
  6: _128 = _54
    SourceInfo(src/lib.rs:649:25-649:36)
  7: FakeRead(ForLet(None), _128)
    SourceInfo(src/lib.rs:649:21-649:22)
  8: StorageLive(_129)
    SourceInfo(src/lib.rs:651:20-651:39)
  9: StorageLive(_130)
    SourceInfo(src/lib.rs:651:20-651:34)
  10: StorageLive(_131)
    SourceInfo(src/lib.rs:651:20-651:30)
  11: StorageLive(_132)
    SourceInfo(src/lib.rs:651:20-651:21)
  12: _132 = _76
    SourceInfo(src/lib.rs:651:20-651:21)
  13: _131 = move _132 as isize (IntToInt)
    SourceInfo(src/lib.rs:651:20-651:30)
  14: StorageDead(_132)
    SourceInfo(src/lib.rs:651:29-651:30)
  15: StorageLive(_133)
    SourceInfo(src/lib.rs:651:33-651:34)
  16: _133 = _128
    SourceInfo(src/lib.rs:651:33-651:34)
  17: _134 = SubWithOverflow(_131, _133)
    SourceInfo(src/lib.rs:651:20-651:34)
  Terminator {
      source_info: SourceInfo(src/lib.rs:651:20-651:34)
      kind: assert(!move (_134.1: bool), "attempt to compute `{} - {}`, which would overflow", move _131, move _133) -> [success: bb52, unwind: bb86]
  }
  preds [bb50]
  succs [bb52, bb86]

bb52
  0: _130 = move (_134.0: isize)
    SourceInfo(src/lib.rs:651:20-651:34)
  1: StorageDead(_133)
    SourceInfo(src/lib.rs:651:33-651:34)
  2: StorageDead(_131)
    SourceInfo(src/lib.rs:651:33-651:34)
  3: _129 = Eq(move _130, const 1_isize)
    SourceInfo(src/lib.rs:651:20-651:39)
  Terminator {
      source_info: SourceInfo(src/lib.rs:651:20-651:39)
      kind: switchInt(move _129) -> [0: bb59, otherwise: bb53]
  }
  preds [bb51]
  succs [bb53, bb59]

bb53
  0: StorageDead(_130)
    SourceInfo(src/lib.rs:651:38-651:39)
  1: StorageLive(_135)
    SourceInfo(src/lib.rs:652:25-652:34)
  2: StorageLive(_136)
    SourceInfo(src/lib.rs:652:37-652:46)
  3: StorageLive(_137)
    SourceInfo(src/lib.rs:652:39-652:46)
  4: StorageLive(_138)
    SourceInfo(src/lib.rs:652:37-652:39)
  5: _138 = &_15
    SourceInfo(src/lib.rs:652:37-652:39)
  6: StorageLive(_139)
    SourceInfo(src/lib.rs:652:40-652:45)
  7: StorageLive(_140)
    SourceInfo(src/lib.rs:652:40-652:41)
  8: _140 = _76
    SourceInfo(src/lib.rs:652:40-652:41)
  9: _141 = AddWithOverflow(_140, const 1_usize)
    SourceInfo(src/lib.rs:652:40-652:45)
  Terminator {
      source_info: SourceInfo(src/lib.rs:652:40-652:45)
      kind: assert(!move (_141.1: bool), "attempt to compute `{} + {}`, which would overflow", move _140, const 1_usize) -> [success: bb54, unwind: bb86]
  }
  preds [bb52]
  succs [bb54, bb86]

bb54
  0: _139 = move (_141.0: usize)
    SourceInfo(src/lib.rs:652:40-652:45)
  1: StorageDead(_140)
    SourceInfo(src/lib.rs:652:44-652:45)
  Terminator {
      source_info: SourceInfo(src/lib.rs:652:39-652:46)
      kind: _137 = <std::vec::Vec<isize> as std::ops::Index<usize>>::index(move _138, move _139) -> [return: bb55, unwind: bb86]
  }
  preds [bb53]
  succs [bb55, bb86]

bb55
  0: _136 = (*_137)
    SourceInfo(src/lib.rs:652:37-652:46)
  1: StorageDead(_139)
    SourceInfo(src/lib.rs:652:45-652:46)
  2: StorageDead(_138)
    SourceInfo(src/lib.rs:652:45-652:46)
  3: StorageLive(_142)
    SourceInfo(src/lib.rs:652:49-652:65)
  4: StorageLive(_143)
    SourceInfo(src/lib.rs:652:50-652:60)
  5: StorageLive(_144)
    SourceInfo(src/lib.rs:652:50-652:51)
  6: _144 = _47
    SourceInfo(src/lib.rs:652:50-652:51)
  7: _143 = move _144 as isize (IntToInt)
    SourceInfo(src/lib.rs:652:50-652:60)
  8: StorageDead(_144)
    SourceInfo(src/lib.rs:652:59-652:60)
  9: StorageLive(_145)
    SourceInfo(src/lib.rs:652:63-652:64)
  10: _145 = _124
    SourceInfo(src/lib.rs:652:63-652:64)
  11: _146 = SubWithOverflow(_143, _145)
    SourceInfo(src/lib.rs:652:49-652:65)
  Terminator {
      source_info: SourceInfo(src/lib.rs:652:49-652:65)
      kind: assert(!move (_146.1: bool), "attempt to compute `{} - {}`, which would overflow", move _143, move _145) -> [success: bb56, unwind: bb86]
  }
  preds [bb54]
  succs [bb56, bb86]

bb56
  0: _142 = move (_146.0: isize)
    SourceInfo(src/lib.rs:652:49-652:65)
  1: StorageDead(_145)
    SourceInfo(src/lib.rs:652:64-652:65)
  2: StorageDead(_143)
    SourceInfo(src/lib.rs:652:64-652:65)
  3: _147 = AddWithOverflow(_136, _142)
    SourceInfo(src/lib.rs:652:37-652:65)
  Terminator {
      source_info: SourceInfo(src/lib.rs:652:37-652:65)
      kind: assert(!move (_147.1: bool), "attempt to compute `{} + {}`, which would overflow", move _136, move _142) -> [success: bb57, unwind: bb86]
  }
  preds [bb55]
  succs [bb57, bb86]

bb57
  0: _135 = move (_147.0: isize)
    SourceInfo(src/lib.rs:652:37-652:65)
  1: StorageDead(_142)
    SourceInfo(src/lib.rs:652:64-652:65)
  2: StorageDead(_136)
    SourceInfo(src/lib.rs:652:64-652:65)
  3: FakeRead(ForLet(None), _135)
    SourceInfo(src/lib.rs:652:25-652:34)
  4: StorageDead(_137)
    SourceInfo(src/lib.rs:652:65-652:66)
  5: StorageLive(_148)
    SourceInfo(src/lib.rs:653:28-653:48)
  6: StorageLive(_149)
    SourceInfo(src/lib.rs:653:32-653:36)
  7: _149 = _102
    SourceInfo(src/lib.rs:653:32-653:36)
  8: StorageLive(_150)
    SourceInfo(src/lib.rs:653:38-653:47)
  9: _150 = _135
    SourceInfo(src/lib.rs:653:38-653:47)
  Terminator {
      source_info: SourceInfo(src/lib.rs:653:28-653:48)
      kind: _148 = std::cmp::min::<isize>(move _149, move _150) -> [return: bb58, unwind: bb86]
  }
  preds [bb56]
  succs [bb58, bb86]

bb58
  0: StorageDead(_150)
    SourceInfo(src/lib.rs:653:47-653:48)
  1: StorageDead(_149)
    SourceInfo(src/lib.rs:653:47-653:48)
  2: _102 = move _148
    SourceInfo(src/lib.rs:653:21-653:48)
  3: StorageDead(_148)
    SourceInfo(src/lib.rs:653:47-653:48)
  4: _107 = const ()
    SourceInfo(src/lib.rs:651:40-654:18)
  5: StorageDead(_135)
    SourceInfo(src/lib.rs:654:17-654:18)
  Terminator {
      source_info: SourceInfo(src/lib.rs:651:17-657:18)
      kind: goto -> bb67
  }
  preds [bb57]
  succs [bb67]

bb59
  0: StorageDead(_130)
    SourceInfo(src/lib.rs:651:38-651:39)
  1: StorageLive(_151)
    SourceInfo(src/lib.rs:654:27-654:46)
  2: StorageLive(_152)
    SourceInfo(src/lib.rs:654:27-654:41)
  3: StorageLive(_153)
    SourceInfo(src/lib.rs:654:27-654:37)
  4: StorageLive(_154)
    SourceInfo(src/lib.rs:654:27-654:28)
  5: _154 = _47
    SourceInfo(src/lib.rs:654:27-654:28)
  6: _153 = move _154 as isize (IntToInt)
    SourceInfo(src/lib.rs:654:27-654:37)
  7: StorageDead(_154)
    SourceInfo(src/lib.rs:654:36-654:37)
  8: StorageLive(_155)
    SourceInfo(src/lib.rs:654:40-654:41)
  9: _155 = _124
    SourceInfo(src/lib.rs:654:40-654:41)
  10: _156 = SubWithOverflow(_153, _155)
    SourceInfo(src/lib.rs:654:27-654:41)
  Terminator {
      source_info: SourceInfo(src/lib.rs:654:27-654:41)
      kind: assert(!move (_156.1: bool), "attempt to compute `{} - {}`, which would overflow", move _153, move _155) -> [success: bb60, unwind: bb86]
  }
  preds [bb52]
  succs [bb60, bb86]

bb60
  0: _152 = move (_156.0: isize)
    SourceInfo(src/lib.rs:654:27-654:41)
  1: StorageDead(_155)
    SourceInfo(src/lib.rs:654:40-654:41)
  2: StorageDead(_153)
    SourceInfo(src/lib.rs:654:40-654:41)
  3: _151 = Eq(move _152, const 1_isize)
    SourceInfo(src/lib.rs:654:27-654:46)
  Terminator {
      source_info: SourceInfo(src/lib.rs:654:27-654:46)
      kind: switchInt(move _151) -> [0: bb65, otherwise: bb61]
  }
  preds [bb59]
  succs [bb61, bb65]

bb61
  0: StorageDead(_152)
    SourceInfo(src/lib.rs:654:45-654:46)
  1: StorageLive(_157)
    SourceInfo(src/lib.rs:655:25-655:34)
  2: StorageLive(_158)
    SourceInfo(src/lib.rs:655:37-655:38)
  3: _158 = _61
    SourceInfo(src/lib.rs:655:37-655:38)
  4: StorageLive(_159)
    SourceInfo(src/lib.rs:655:41-655:57)
  5: StorageLive(_160)
    SourceInfo(src/lib.rs:655:42-655:52)
  6: StorageLive(_161)
    SourceInfo(src/lib.rs:655:42-655:43)
  7: _161 = _76
    SourceInfo(src/lib.rs:655:42-655:43)
  8: _160 = move _161 as isize (IntToInt)
    SourceInfo(src/lib.rs:655:42-655:52)
  9: StorageDead(_161)
    SourceInfo(src/lib.rs:655:51-655:52)
  10: StorageLive(_162)
    SourceInfo(src/lib.rs:655:55-655:56)
  11: _162 = _128
    SourceInfo(src/lib.rs:655:55-655:56)
  12: _163 = SubWithOverflow(_160, _162)
    SourceInfo(src/lib.rs:655:41-655:57)
  Terminator {
      source_info: SourceInfo(src/lib.rs:655:41-655:57)
      kind: assert(!move (_163.1: bool), "attempt to compute `{} - {}`, which would overflow", move _160, move _162) -> [success: bb62, unwind: bb86]
  }
  preds [bb60]
  succs [bb62, bb86]

bb62
  0: _159 = move (_163.0: isize)
    SourceInfo(src/lib.rs:655:41-655:57)
  1: StorageDead(_162)
    SourceInfo(src/lib.rs:655:56-655:57)
  2: StorageDead(_160)
    SourceInfo(src/lib.rs:655:56-655:57)
  3: _164 = AddWithOverflow(_158, _159)
    SourceInfo(src/lib.rs:655:37-655:57)
  Terminator {
      source_info: SourceInfo(src/lib.rs:655:37-655:57)
      kind: assert(!move (_164.1: bool), "attempt to compute `{} + {}`, which would overflow", move _158, move _159) -> [success: bb63, unwind: bb86]
  }
  preds [bb61]
  succs [bb63, bb86]

bb63
  0: _157 = move (_164.0: isize)
    SourceInfo(src/lib.rs:655:37-655:57)
  1: StorageDead(_159)
    SourceInfo(src/lib.rs:655:56-655:57)
  2: StorageDead(_158)
    SourceInfo(src/lib.rs:655:56-655:57)
  3: FakeRead(ForLet(None), _157)
    SourceInfo(src/lib.rs:655:25-655:34)
  4: StorageLive(_165)
    SourceInfo(src/lib.rs:656:28-656:48)
  5: StorageLive(_166)
    SourceInfo(src/lib.rs:656:32-656:36)
  6: _166 = _102
    SourceInfo(src/lib.rs:656:32-656:36)
  7: StorageLive(_167)
    SourceInfo(src/lib.rs:656:38-656:47)
  8: _167 = _157
    SourceInfo(src/lib.rs:656:38-656:47)
  Terminator {
      source_info: SourceInfo(src/lib.rs:656:28-656:48)
      kind: _165 = std::cmp::min::<isize>(move _166, move _167) -> [return: bb64, unwind: bb86]
  }
  preds [bb62]
  succs [bb64, bb86]

bb64
  0: StorageDead(_167)
    SourceInfo(src/lib.rs:656:47-656:48)
  1: StorageDead(_166)
    SourceInfo(src/lib.rs:656:47-656:48)
  2: _102 = move _165
    SourceInfo(src/lib.rs:656:21-656:48)
  3: StorageDead(_165)
    SourceInfo(src/lib.rs:656:47-656:48)
  4: _107 = const ()
    SourceInfo(src/lib.rs:654:47-657:18)
  5: StorageDead(_157)
    SourceInfo(src/lib.rs:657:17-657:18)
  Terminator {
      source_info: SourceInfo(src/lib.rs:654:24-657:18)
      kind: goto -> bb66
  }
  preds [bb63]
  succs [bb66]

bb65
  0: StorageDead(_152)
    SourceInfo(src/lib.rs:654:45-654:46)
  1: _107 = const ()
    SourceInfo(src/lib.rs:657:18-657:18)
  Terminator {
      source_info: SourceInfo(src/lib.rs:654:24-657:18)
      kind: goto -> bb66
  }
  preds [bb60]
  succs [bb66]

bb66
  0: StorageDead(_151)
    SourceInfo(src/lib.rs:657:17-657:18)
  Terminator {
      source_info: SourceInfo(src/lib.rs:651:17-657:18)
      kind: goto -> bb67
  }
  preds [bb64, bb65]
  succs [bb67]

bb67
  0: StorageDead(_129)
    SourceInfo(src/lib.rs:657:17-657:18)
  1: StorageDead(_128)
    SourceInfo(src/lib.rs:658:13-658:14)
  2: StorageDead(_124)
    SourceInfo(src/lib.rs:658:13-658:14)
  Terminator {
      source_info: SourceInfo(src/lib.rs:643:13-658:14)
      kind: goto -> bb68
  }
  preds [bb58, bb66]
  succs [bb68]

bb68
  0: StorageDead(_108)
    SourceInfo(src/lib.rs:658:13-658:14)
  1: StorageDead(_107)
    SourceInfo(src/lib.rs:658:13-658:14)
  2: StorageLive(_168)
    SourceInfo(src/lib.rs:660:25-660:33)
  3: StorageLive(_169)
    SourceInfo(src/lib.rs:660:26-660:33)
  4: StorageLive(_170)
    SourceInfo(src/lib.rs:660:25-660:26)
  5: _170 = &_21
    SourceInfo(src/lib.rs:660:25-660:26)
  6: StorageLive(_171)
    SourceInfo(src/lib.rs:660:27-660:32)
  7: StorageLive(_172)
    SourceInfo(src/lib.rs:660:27-660:28)
  8: _172 = _76
    SourceInfo(src/lib.rs:660:27-660:28)
  9: _173 = AddWithOverflow(_172, const 1_usize)
    SourceInfo(src/lib.rs:660:27-660:32)
  Terminator {
      source_info: SourceInfo(src/lib.rs:660:27-660:32)
      kind: assert(!move (_173.1: bool), "attempt to compute `{} + {}`, which would overflow", move _172, const 1_usize) -> [success: bb69, unwind: bb86]
  }
  preds [bb49, bb67]
  succs [bb69, bb86]

bb69
  0: _171 = move (_173.0: usize)
    SourceInfo(src/lib.rs:660:27-660:32)
  1: StorageDead(_172)
    SourceInfo(src/lib.rs:660:31-660:32)
  Terminator {
      source_info: SourceInfo(src/lib.rs:660:26-660:33)
      kind: _169 = <std::vec::Vec<isize> as std::ops::Index<usize>>::index(move _170, move _171) -> [return: bb70, unwind: bb86]
  }
  preds [bb68]
  succs [bb70, bb86]

bb70
  0: _168 = (*_169)
    SourceInfo(src/lib.rs:660:25-660:33)
  1: StorageDead(_171)
    SourceInfo(src/lib.rs:660:32-660:33)
  2: StorageDead(_170)
    SourceInfo(src/lib.rs:660:32-660:33)
  3: _55 = move _168
    SourceInfo(src/lib.rs:660:13-660:33)
  4: StorageDead(_168)
    SourceInfo(src/lib.rs:660:32-660:33)
  5: StorageDead(_169)
    SourceInfo(src/lib.rs:660:33-660:34)
  6: StorageLive(_174)
    SourceInfo(src/lib.rs:661:24-661:28)
  7: _174 = _102
    SourceInfo(src/lib.rs:661:24-661:28)
  8: StorageLive(_175)
    SourceInfo(src/lib.rs:661:14-661:21)
  9: StorageLive(_176)
    SourceInfo(src/lib.rs:661:13-661:14)
  10: _176 = &mut _21
    SourceInfo(src/lib.rs:661:13-661:14)
  11: StorageLive(_177)
    SourceInfo(src/lib.rs:661:15-661:20)
  12: StorageLive(_178)
    SourceInfo(src/lib.rs:661:15-661:16)
  13: _178 = _76
    SourceInfo(src/lib.rs:661:15-661:16)
  14: _179 = AddWithOverflow(_178, const 1_usize)
    SourceInfo(src/lib.rs:661:15-661:20)
  Terminator {
      source_info: SourceInfo(src/lib.rs:661:15-661:20)
      kind: assert(!move (_179.1: bool), "attempt to compute `{} + {}`, which would overflow", move _178, const 1_usize) -> [success: bb71, unwind: bb86]
  }
  preds [bb69]
  succs [bb71, bb86]

bb71
  0: _177 = move (_179.0: usize)
    SourceInfo(src/lib.rs:661:15-661:20)
  1: StorageDead(_178)
    SourceInfo(src/lib.rs:661:19-661:20)
  Terminator {
      source_info: SourceInfo(src/lib.rs:661:14-661:21)
      kind: _175 = <std::vec::Vec<isize> as std::ops::IndexMut<usize>>::index_mut(move _176, move _177) -> [return: bb72, unwind: bb86]
  }
  preds [bb70]
  succs [bb72, bb86]

bb72
  0: StorageDead(_177)
    SourceInfo(src/lib.rs:661:20-661:21)
  1: StorageDead(_176)
    SourceInfo(src/lib.rs:661:20-661:21)
  2: (*_175) = move _174
    SourceInfo(src/lib.rs:661:13-661:28)
  3: StorageDead(_174)
    SourceInfo(src/lib.rs:661:27-661:28)
  4: StorageDead(_175)
    SourceInfo(src/lib.rs:661:28-661:29)
  5: _70 = const ()
    SourceInfo(src/lib.rs:637:77-662:10)
  6: StorageDead(_102)
    SourceInfo(src/lib.rs:662:9-662:10)
  7: StorageDead(_94)
    SourceInfo(src/lib.rs:662:9-662:10)
  8: StorageDead(_88)
    SourceInfo(src/lib.rs:662:9-662:10)
  9: StorageDead(_78)
    SourceInfo(src/lib.rs:662:9-662:10)
  10: StorageDead(_77)
    SourceInfo(src/lib.rs:662:9-662:10)
  11: StorageDead(_76)
    SourceInfo(src/lib.rs:662:9-662:10)
  12: StorageDead(_73)
    SourceInfo(src/lib.rs:662:9-662:10)
  13: StorageDead(_71)
    SourceInfo(src/lib.rs:662:9-662:10)
  14: StorageDead(_70)
    SourceInfo(src/lib.rs:662:9-662:10)
  15: _40 = const ()
    SourceInfo(src/lib.rs:637:9-662:10)
  Terminator {
      source_info: SourceInfo(src/lib.rs:637:9-662:10)
      kind: goto -> bb28
  }
  preds [bb71]
  succs [bb28]

bb73
  0: StorageDead(_69)
    SourceInfo(src/lib.rs:662:9-662:10)
  Terminator {
      source_info: SourceInfo(src/lib.rs:662:9-662:10)
      kind: drop(_63) -> [return: bb74, unwind: bb91]
  }
  preds [bb34]
  succs [bb74, bb91]

bb74
  0: StorageDead(_63)
    SourceInfo(src/lib.rs:662:9-662:10)
  1: StorageDead(_62)
    SourceInfo(src/lib.rs:662:9-662:10)
  2: StorageLive(_180)
    SourceInfo(src/lib.rs:663:40-663:41)
  3: _180 = _47
    SourceInfo(src/lib.rs:663:40-663:41)
  4: StorageLive(_181)
    SourceInfo(src/lib.rs:663:9-663:33)
  5: StorageLive(_182)
    SourceInfo(src/lib.rs:663:9-663:20)
  6: _182 = &mut _11
    SourceInfo(src/lib.rs:663:9-663:20)
  7: StorageLive(_183)
    SourceInfo(src/lib.rs:663:29-663:32)
  8: _183 = _48
    SourceInfo(src/lib.rs:663:29-663:32)
  Terminator {
      source_info: SourceInfo(src/lib.rs:663:9-663:33)
      kind: _181 = HybridGrowingHashmapChar::<RowId>::get_mut(move _182, move _183) -> [return: bb75, unwind: bb91]
  }
  preds [bb73]
  succs [bb75, bb91]

bb75
  0: StorageDead(_183)
    SourceInfo(src/lib.rs:663:32-663:33)
  1: StorageDead(_182)
    SourceInfo(src/lib.rs:663:32-663:33)
  2: ((*_181).0: isize) = move _180 as isize (IntToInt)
    SourceInfo(src/lib.rs:663:9-663:50)
  3: StorageDead(_180)
    SourceInfo(src/lib.rs:663:49-663:50)
  4: StorageDead(_181)
    SourceInfo(src/lib.rs:663:50-663:51)
  5: _41 = const ()
    SourceInfo(src/lib.rs:630:65-664:6)
  6: StorageDead(_61)
    SourceInfo(src/lib.rs:664:5-664:6)
  7: StorageDead(_55)
    SourceInfo(src/lib.rs:664:5-664:6)
  8: StorageDead(_54)
    SourceInfo(src/lib.rs:664:5-664:6)
  9: StorageDead(_48)
    SourceInfo(src/lib.rs:664:5-664:6)
  10: StorageDead(_47)
    SourceInfo(src/lib.rs:664:5-664:6)
  11: StorageDead(_44)
    SourceInfo(src/lib.rs:664:5-664:6)
  12: StorageDead(_42)
    SourceInfo(src/lib.rs:664:5-664:6)
  13: StorageDead(_41)
    SourceInfo(src/lib.rs:664:5-664:6)
  14: _40 = const ()
    SourceInfo(src/lib.rs:630:5-664:6)
  Terminator {
      source_info: SourceInfo(src/lib.rs:630:5-664:6)
      kind: goto -> bb14
  }
  preds [bb74]
  succs [bb14]

bb76
  0: StorageDead(_39)
    SourceInfo(src/lib.rs:664:5-664:6)
  Terminator {
      source_info: SourceInfo(src/lib.rs:664:5-664:6)
      kind: drop(_34) -> [return: bb77, unwind: bb96]
  }
  preds [bb20]
  succs [bb77, bb96]

bb77
  0: StorageDead(_34)
    SourceInfo(src/lib.rs:664:5-664:6)
  1: StorageDead(_33)
    SourceInfo(src/lib.rs:664:5-664:6)
  2: StorageLive(_184)
    SourceInfo(src/lib.rs:666:5-666:16)
  3: StorageLive(_185)
    SourceInfo(src/lib.rs:666:6-666:16)
  4: StorageLive(_186)
    SourceInfo(src/lib.rs:666:5-666:6)
  5: _186 = &_21
    SourceInfo(src/lib.rs:666:5-666:6)
  6: StorageLive(_187)
    SourceInfo(src/lib.rs:666:7-666:15)
  7: StorageLive(_188)
    SourceInfo(src/lib.rs:666:7-666:11)
  8: _188 = _4
    SourceInfo(src/lib.rs:666:7-666:11)
  9: _189 = AddWithOverflow(_188, const 1_usize)
    SourceInfo(src/lib.rs:666:7-666:15)
  Terminator {
      source_info: SourceInfo(src/lib.rs:666:7-666:15)
      kind: assert(!move (_189.1: bool), "attempt to compute `{} + {}`, which would overflow", move _188, const 1_usize) -> [success: bb78, unwind: bb96]
  }
  preds [bb76]
  succs [bb78, bb96]

bb78
  0: _187 = move (_189.0: usize)
    SourceInfo(src/lib.rs:666:7-666:15)
  1: StorageDead(_188)
    SourceInfo(src/lib.rs:666:14-666:15)
  Terminator {
      source_info: SourceInfo(src/lib.rs:666:6-666:16)
      kind: _185 = <std::vec::Vec<isize> as std::ops::Index<usize>>::index(move _186, move _187) -> [return: bb79, unwind: bb96]
  }
  preds [bb77]
  succs [bb79, bb96]

bb79
  0: _184 = (*_185)
    SourceInfo(src/lib.rs:666:5-666:16)
  1: StorageDead(_187)
    SourceInfo(src/lib.rs:666:15-666:16)
  2: StorageDead(_186)
    SourceInfo(src/lib.rs:666:15-666:16)
  3: _0 = move _184 as usize (IntToInt)
    SourceInfo(src/lib.rs:666:5-666:25)
  4: StorageDead(_184)
    SourceInfo(src/lib.rs:666:24-666:25)
  Terminator {
      source_info: SourceInfo(src/lib.rs:667:1-667:2)
      kind: drop(_21) -> [return: bb80, unwind: bb97]
  }
  preds [bb78]
  succs [bb80, bb97]

bb80
  0: StorageDead(_21)
    SourceInfo(src/lib.rs:667:1-667:2)
  Terminator {
      source_info: SourceInfo(src/lib.rs:667:1-667:2)
      kind: drop(_18) -> [return: bb81, unwind: bb98]
  }
  preds [bb79]
  succs [bb81, bb98]

bb81
  0: StorageDead(_18)
    SourceInfo(src/lib.rs:667:1-667:2)
  Terminator {
      source_info: SourceInfo(src/lib.rs:667:1-667:2)
      kind: drop(_15) -> [return: bb82, unwind: bb99]
  }
  preds [bb80]
  succs [bb82, bb99]

bb82
  0: StorageDead(_15)
    SourceInfo(src/lib.rs:667:1-667:2)
  1: StorageDead(_12)
    SourceInfo(src/lib.rs:667:1-667:2)
  Terminator {
      source_info: SourceInfo(src/lib.rs:667:1-667:2)
      kind: drop(_11) -> [return: bb83, unwind: bb100]
  }
  preds [bb81]
  succs [bb83, bb100]

bb83
  0: StorageDead(_11)
    SourceInfo(src/lib.rs:667:1-667:2)
  1: StorageDead(_5)
    SourceInfo(src/lib.rs:667:1-667:2)
  2: StorageDead(_185)
    SourceInfo(src/lib.rs:667:1-667:2)
  Terminator {
      source_info: SourceInfo(src/lib.rs:667:1-667:2)
      kind: drop(_3) -> [return: bb84, unwind: bb101]
  }
  preds [bb82]
  succs [bb84, bb101]

bb84
  Terminator {
      source_info: SourceInfo(src/lib.rs:667:1-667:2)
      kind: drop(_1) -> [return: bb85, unwind: bb102]
  }
  preds [bb83]
  succs [bb85, bb102]

bb85
  Terminator {
      source_info: SourceInfo(src/lib.rs:667:2-667:2)
      kind: return
  }
  preds [bb84]
  succs []

bb86
  Terminator {
      source_info: SourceInfo(src/lib.rs:662:9-662:10)
      kind: drop(_69) -> [return: bb87, unwind terminate(cleanup)]
  }
  preds [bb28, bb29, bb33, bb35, bb36, bb37, bb38, bb39, bb40, bb41, bb42, bb43, bb45, bb46, bb47, bb48, bb50, bb51, bb53, bb54, bb55, bb56, bb57, bb59, bb61, bb62, bb63, bb68, bb69, bb70, bb71]
  succs [bb87]

bb87
  Terminator {
      source_info: SourceInfo(src/lib.rs:662:9-662:10)
      kind: drop(_63) -> [return: bb91, unwind terminate(cleanup)]
  }
  preds [bb34, bb86]
  succs [bb91]

bb88
  Terminator {
      source_info: SourceInfo(src/lib.rs:637:75-637:76)
      kind: drop(_64) -> [return: bb91, unwind terminate(cleanup)]
  }
  preds [bb26]
  succs [bb91]

bb89
  Terminator {
      source_info: SourceInfo(src/lib.rs:637:75-637:76)
      kind: drop(_65) -> [return: bb91, unwind terminate(cleanup)]
  }
  preds [bb25]
  succs [bb91]

bb90
  Terminator {
      source_info: SourceInfo(src/lib.rs:637:46-637:47)
      kind: drop(_66) -> [return: bb91, unwind terminate(cleanup)]
  }
  preds [bb24]
  succs [bb91]

bb91
  Terminator {
      source_info: SourceInfo(src/lib.rs:664:5-664:6)
      kind: drop(_39) -> [return: bb92, unwind terminate(cleanup)]
  }
  preds [bb14, bb15, bb19, bb21, bb22, bb23, bb73, bb74, bb87, bb88, bb89, bb90]
  succs [bb92]

bb92
  Terminator {
      source_info: SourceInfo(src/lib.rs:664:5-664:6)
      kind: drop(_34) -> [return: bb96, unwind terminate(cleanup)]
  }
  preds [bb20, bb91]
  succs [bb96]

bb93
  Terminator {
      source_info: SourceInfo(src/lib.rs:630:63-630:64)
      kind: drop(_35) -> [return: bb96, unwind terminate(cleanup)]
  }
  preds [bb12]
  succs [bb96]

bb94
  Terminator {
      source_info: SourceInfo(src/lib.rs:630:63-630:64)
      kind: drop(_36) -> [return: bb96, unwind terminate(cleanup)]
  }
  preds [bb11]
  succs [bb96]

bb95
  Terminator {
      source_info: SourceInfo(src/lib.rs:630:34-630:35)
      kind: drop(_37) -> [return: bb96, unwind terminate(cleanup)]
  }
  preds [bb10]
  succs [bb96]

bb96
  Terminator {
      source_info: SourceInfo(src/lib.rs:667:1-667:2)
      kind: drop(_21) -> [return: bb97, unwind terminate(cleanup)]
  }
  preds [bb76, bb77, bb78, bb92, bb93, bb94, bb95]
  succs [bb97]

bb97
  Terminator {
      source_info: SourceInfo(src/lib.rs:667:1-667:2)
      kind: drop(_18) -> [return: bb98, unwind terminate(cleanup)]
  }
  preds [bb6, bb7, bb8, bb9, bb79, bb96]
  succs [bb98]

bb98
  Terminator {
      source_info: SourceInfo(src/lib.rs:667:1-667:2)
      kind: drop(_15) -> [return: bb99, unwind terminate(cleanup)]
  }
  preds [bb5, bb80, bb97]
  succs [bb99]

bb99
  Terminator {
      source_info: SourceInfo(src/lib.rs:667:1-667:2)
      kind: drop(_11) -> [return: bb100, unwind terminate(cleanup)]
  }
  preds [bb3, bb4, bb81, bb98]
  succs [bb100]

bb100
  Terminator {
      source_info: SourceInfo(src/lib.rs:667:1-667:2)
      kind: drop(_3) -> [return: bb101, unwind terminate(cleanup)]
  }
  preds [bb0, bb1, bb2, bb82, bb99]
  succs [bb101]

bb101
  Terminator {
      source_info: SourceInfo(src/lib.rs:667:1-667:2)
      kind: drop(_1) -> [return: bb102, unwind terminate(cleanup)]
  }
  preds [bb83, bb100]
  succs [bb102]

bb102
  Terminator {
      source_info: SourceInfo(src/lib.rs:609:1-667:2)
      kind: resume
  }
  preds [bb84, bb101]
  succs []

