bb0
  0: StorageLive(_1)
    SourceInfo(src/lib.rs:603:18-603:47)
  Terminator {
      source_info: SourceInfo(src/lib.rs:603:18-603:47)
      kind: _1 = <GrowingHashmapChar<ValueType> as std::default::Default>::default() -> [return: bb1, unwind: bb5]
  }
  preds []
  succs [bb1, bb5]

bb1
  0: StorageLive(_2)
    SourceInfo(src/lib.rs:604:29-604:54)
  1: StorageLive(_3)
    SourceInfo(src/lib.rs:604:30-604:48)
  Terminator {
      source_info: SourceInfo(src/lib.rs:604:30-604:48)
      kind: _3 = <ValueType as std::default::Default>::default() -> [return: bb2, unwind: bb4]
  }
  preds [bb0]
  succs [bb2, bb4]

bb2
  0: _2 = [move _3; 256]
    SourceInfo(src/lib.rs:604:29-604:54)
  1: StorageDead(_3)
    SourceInfo(src/lib.rs:604:53-604:54)
  2: _0 = HybridGrowingHashmapChar::<ValueType> { map: move _1, extended_ascii: move _2 }
    SourceInfo(src/lib.rs:602:9-605:10)
  3: StorageDead(_2)
    SourceInfo(src/lib.rs:605:9-605:10)
  Terminator {
      source_info: SourceInfo(src/lib.rs:605:9-605:10)
      kind: drop(_1) -> [return: bb3, unwind: bb5]
  }
  preds [bb1]
  succs [bb3, bb5]

bb3
  0: StorageDead(_1)
    SourceInfo(src/lib.rs:605:9-605:10)
  Terminator {
      source_info: SourceInfo(src/lib.rs:606:6-606:6)
      kind: return
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(src/lib.rs:605:9-605:10)
      kind: drop(_1) -> [return: bb5, unwind terminate(cleanup)]
  }
  preds [bb1]
  succs [bb5]

bb5
  Terminator {
      source_info: SourceInfo(src/lib.rs:601:5-606:6)
      kind: resume
  }
  preds [bb0, bb2, bb4]
  succs []

