{
  "name": "strsim::jaro",
  "mod_info": {
    "name": "",
    "loc": "src/lib.rs:1:1:1307:2"
  },
  "visible": true,
  "loc": "src/lib.rs:186:1:188:2",
  "doc": "/// Calculates the Jaro similarity between two strings. The returned value\n/// is between 0.0 and 1.0 (higher value means more similar).\n///\n/// ```\n/// use strsim::jaro;\n///\n/// assert!((0.392 - jaro(\"Friedrich Nietzsche\", \"Jean-Paul Sartre\")).abs() <\n///         0.001);\n/// ```\n",
  "code": [
    "pub fn jaro(a: &str, b: &str) -> f64 {",
    "    generic_jaro(&StringWrapper(a), &StringWrapper(b))",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}