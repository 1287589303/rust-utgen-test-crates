{
  "name": "strsim::jaro_winkler",
  "mod_info": {
    "name": "",
    "loc": "src/lib.rs:1:1:1307:2"
  },
  "visible": true,
  "loc": "src/lib.rs:221:1:223:2",
  "doc": "/// Like Jaro but gives a boost to strings that have a common prefix.\n///\n/// ```\n/// use strsim::jaro_winkler;\n///\n/// assert!((0.866 - jaro_winkler(\"cheeseburger\", \"cheese fries\")).abs() <\n///         0.001);\n/// ```\n",
  "code": [
    "pub fn jaro_winkler(a: &str, b: &str) -> f64 {",
    "    generic_jaro_winkler(&StringWrapper(a), &StringWrapper(b))",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}