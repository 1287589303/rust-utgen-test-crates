{
  "name": "strsim::hamming",
  "mod_info": {
    "name": "",
    "loc": "src/lib.rs:1:1:1307:2"
  },
  "visible": true,
  "loc": "src/lib.rs:84:1:86:2",
  "doc": "/// Calculates the number of positions in the two strings where the characters\n/// differ. Returns an error if the strings have different lengths.\n///\n/// ```\n/// use strsim::{hamming, StrSimError::DifferentLengthArgs};\n///\n/// assert_eq!(Ok(3), hamming(\"hamming\", \"hammers\"));\n///\n/// assert_eq!(Err(DifferentLengthArgs), hamming(\"hamming\", \"ham\"));\n/// ```\n",
  "code": [
    "pub fn hamming(a: &str, b: &str) -> HammingResult {",
    "    generic_hamming(a.chars(), b.chars())",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}