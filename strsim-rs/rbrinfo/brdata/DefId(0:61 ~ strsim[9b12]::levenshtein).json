{
  "name": "strsim::levenshtein",
  "mod_info": {
    "name": "",
    "loc": "src/lib.rs:1:1:1307:2"
  },
  "visible": true,
  "loc": "src/lib.rs:269:1:271:2",
  "doc": "/// Calculates the minimum number of insertions, deletions, and substitutions\n/// required to change one string into the other.\n///\n/// ```\n/// use strsim::levenshtein;\n///\n/// assert_eq!(3, levenshtein(\"kitten\", \"sitting\"));\n/// ```\n",
  "code": [
    "pub fn levenshtein(a: &str, b: &str) -> usize {",
    "    generic_levenshtein(&StringWrapper(a), &StringWrapper(b))",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}