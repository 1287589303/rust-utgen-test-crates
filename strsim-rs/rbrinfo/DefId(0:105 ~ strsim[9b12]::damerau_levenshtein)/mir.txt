bb0
  0: StorageLive(_3)
    SourceInfo(src/lib.rs:678:30-678:39)
  1: StorageLive(_4)
    SourceInfo(src/lib.rs:678:30-678:31)
  2: _4 = &(*_1)
    SourceInfo(src/lib.rs:678:30-678:31)
  Terminator {
      source_info: SourceInfo(src/lib.rs:678:30-678:39)
      kind: _3 = core::str::<impl str>::chars(move _4) -> [return: bb1, unwind: bb8]
  }
  preds []
  succs [bb1, bb8]

bb1
  0: StorageDead(_4)
    SourceInfo(src/lib.rs:678:38-678:39)
  1: StorageLive(_5)
    SourceInfo(src/lib.rs:678:41-678:58)
  2: StorageLive(_6)
    SourceInfo(src/lib.rs:678:41-678:50)
  3: StorageLive(_7)
    SourceInfo(src/lib.rs:678:41-678:42)
  4: _7 = &(*_1)
    SourceInfo(src/lib.rs:678:41-678:42)
  Terminator {
      source_info: SourceInfo(src/lib.rs:678:41-678:50)
      kind: _6 = core::str::<impl str>::chars(move _7) -> [return: bb2, unwind: bb8]
  }
  preds [bb0]
  succs [bb2, bb8]

bb2
  0: StorageDead(_7)
    SourceInfo(src/lib.rs:678:49-678:50)
  Terminator {
      source_info: SourceInfo(src/lib.rs:678:41-678:58)
      kind: _5 = <std::str::Chars<'_> as std::iter::Iterator>::count(move _6) -> [return: bb3, unwind: bb8]
  }
  preds [bb1]
  succs [bb3, bb8]

bb3
  0: StorageDead(_6)
    SourceInfo(src/lib.rs:678:57-678:58)
  1: StorageLive(_8)
    SourceInfo(src/lib.rs:678:60-678:69)
  2: StorageLive(_9)
    SourceInfo(src/lib.rs:678:60-678:61)
  3: _9 = &(*_2)
    SourceInfo(src/lib.rs:678:60-678:61)
  Terminator {
      source_info: SourceInfo(src/lib.rs:678:60-678:69)
      kind: _8 = core::str::<impl str>::chars(move _9) -> [return: bb4, unwind: bb8]
  }
  preds [bb2]
  succs [bb4, bb8]

bb4
  0: StorageDead(_9)
    SourceInfo(src/lib.rs:678:68-678:69)
  1: StorageLive(_10)
    SourceInfo(src/lib.rs:678:71-678:88)
  2: StorageLive(_11)
    SourceInfo(src/lib.rs:678:71-678:80)
  3: StorageLive(_12)
    SourceInfo(src/lib.rs:678:71-678:72)
  4: _12 = &(*_2)
    SourceInfo(src/lib.rs:678:71-678:72)
  Terminator {
      source_info: SourceInfo(src/lib.rs:678:71-678:80)
      kind: _11 = core::str::<impl str>::chars(move _12) -> [return: bb5, unwind: bb8]
  }
  preds [bb3]
  succs [bb5, bb8]

bb5
  0: StorageDead(_12)
    SourceInfo(src/lib.rs:678:79-678:80)
  Terminator {
      source_info: SourceInfo(src/lib.rs:678:71-678:88)
      kind: _10 = <std::str::Chars<'_> as std::iter::Iterator>::count(move _11) -> [return: bb6, unwind: bb8]
  }
  preds [bb4]
  succs [bb6, bb8]

bb6
  0: StorageDead(_11)
    SourceInfo(src/lib.rs:678:87-678:88)
  Terminator {
      source_info: SourceInfo(src/lib.rs:678:5-678:89)
      kind: _0 = damerau_levenshtein_impl::<std::str::Chars<'_>, std::str::Chars<'_>>(move _3, move _5, move _8, move _10) -> [return: bb7, unwind: bb8]
  }
  preds [bb5]
  succs [bb7, bb8]

bb7
  0: StorageDead(_10)
    SourceInfo(src/lib.rs:678:88-678:89)
  1: StorageDead(_8)
    SourceInfo(src/lib.rs:678:88-678:89)
  2: StorageDead(_5)
    SourceInfo(src/lib.rs:678:88-678:89)
  3: StorageDead(_3)
    SourceInfo(src/lib.rs:678:88-678:89)
  Terminator {
      source_info: SourceInfo(src/lib.rs:679:2-679:2)
      kind: return
  }
  preds [bb6]
  succs []

bb8
  Terminator {
      source_info: SourceInfo(src/lib.rs:677:1-679:2)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3, bb4, bb5, bb6]
  succs []

