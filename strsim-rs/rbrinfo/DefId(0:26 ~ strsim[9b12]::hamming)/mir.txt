bb0
  0: StorageLive(_3)
    SourceInfo(src/lib.rs:85:21-85:30)
  1: StorageLive(_4)
    SourceInfo(src/lib.rs:85:21-85:22)
  2: _4 = &(*_1)
    SourceInfo(src/lib.rs:85:21-85:22)
  Terminator {
      source_info: SourceInfo(src/lib.rs:85:21-85:30)
      kind: _3 = core::str::<impl str>::chars(move _4) -> [return: bb1, unwind: bb4]
  }
  preds []
  succs [bb1, bb4]

bb1
  0: StorageDead(_4)
    SourceInfo(src/lib.rs:85:29-85:30)
  1: StorageLive(_5)
    SourceInfo(src/lib.rs:85:32-85:41)
  2: StorageLive(_6)
    SourceInfo(src/lib.rs:85:32-85:33)
  3: _6 = &(*_2)
    SourceInfo(src/lib.rs:85:32-85:33)
  Terminator {
      source_info: SourceInfo(src/lib.rs:85:32-85:41)
      kind: _5 = core::str::<impl str>::chars(move _6) -> [return: bb2, unwind: bb4]
  }
  preds [bb0]
  succs [bb2, bb4]

bb2
  0: StorageDead(_6)
    SourceInfo(src/lib.rs:85:40-85:41)
  Terminator {
      source_info: SourceInfo(src/lib.rs:85:5-85:42)
      kind: _0 = generic_hamming::<std::str::Chars<'_>, std::str::Chars<'_>, char, char>(move _3, move _5) -> [return: bb3, unwind: bb4]
  }
  preds [bb1]
  succs [bb3, bb4]

bb3
  0: StorageDead(_5)
    SourceInfo(src/lib.rs:85:41-85:42)
  1: StorageDead(_3)
    SourceInfo(src/lib.rs:85:41-85:42)
  Terminator {
      source_info: SourceInfo(src/lib.rs:86:2-86:2)
      kind: return
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(src/lib.rs:84:1-86:2)
      kind: resume
  }
  preds [bb0, bb1, bb2]
  succs []

