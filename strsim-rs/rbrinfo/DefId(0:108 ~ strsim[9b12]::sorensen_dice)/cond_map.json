{
  "src/lib.rs:732:23:732:34": [
    {
      "Bool": {
        "Binary": {
          "kind": "Lt",
          "expr": "b.len() < 2",
          "lhs": "b.len()",
          "rhs": "2",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/lib.rs:753:39:753:56": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "a.len() + b.len()",
          "lhs": "a.len()",
          "rhs": "b.len()",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/lib.rs:744:19:744:30": [
    {
      "For": {
        "iter_var": "bigram",
        "iter_range": "bigrams(&b)"
      }
    }
  ],
  "src/lib.rs:728:8:728:14": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "a == b",
          "lhs": "a",
          "rhs": "b",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/lib.rs:732:8:732:19": [
    {
      "Bool": {
        "Binary": {
          "kind": "Lt",
          "expr": "a.len() < 2",
          "lhs": "a.len()",
          "rhs": "2",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/lib.rs:753:5:753:68": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(2 * intersection_size) as f64 / (a.len() + b.len() - 2) as f64",
          "lhs": "(2 * intersection_size) as f64",
          "rhs": "(a.len() + b.len() - 2) as f64",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/lib.rs:753:5:753:28": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(2 * intersection_size)",
          "lhs": "2",
          "rhs": "intersection_size",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/lib.rs:753:38:753:61": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(a.len() + b.len() - 2)",
          "lhs": "a.len() + b.len()",
          "rhs": "2",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/lib.rs:738:19:738:30": [
    {
      "For": {
        "iter_var": "bigram",
        "iter_range": "bigrams(&a)"
      }
    }
  ]
}