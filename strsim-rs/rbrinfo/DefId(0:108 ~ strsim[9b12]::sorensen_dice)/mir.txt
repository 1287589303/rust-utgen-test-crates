bb0
  0: StorageLive(_3)
    SourceInfo(src/lib.rs:725:9-725:10)
  1: StorageLive(_4)
    SourceInfo(src/lib.rs:725:21-725:67)
  2: StorageLive(_5)
    SourceInfo(src/lib.rs:725:21-725:30)
  3: StorageLive(_6)
    SourceInfo(src/lib.rs:725:21-725:22)
  4: _6 = &(*_1)
    SourceInfo(src/lib.rs:725:21-725:22)
  Terminator {
      source_info: SourceInfo(src/lib.rs:725:21-725:30)
      kind: _5 = core::str::<impl str>::chars(move _6) -> [return: bb1, unwind: bb68]
  }
  preds []
  succs [bb1, bb68]

bb1
  0: StorageDead(_6)
    SourceInfo(src/lib.rs:725:29-725:30)
  1: StorageLive(_7)
    SourceInfo(src/lib.rs:725:38-725:66)
  2: _7 = {closure@src/lib.rs:725:38: 725:42}
    SourceInfo(src/lib.rs:725:38-725:66)
  Terminator {
      source_info: SourceInfo(src/lib.rs:725:21-725:67)
      kind: _4 = <std::str::Chars<'_> as std::iter::Iterator>::filter::<{closure@src/lib.rs:725:38: 725:42}>(move _5, move _7) -> [return: bb2, unwind: bb68]
  }
  preds [bb0]
  succs [bb2, bb68]

bb2
  0: StorageDead(_7)
    SourceInfo(src/lib.rs:725:66-725:67)
  1: StorageDead(_5)
    SourceInfo(src/lib.rs:725:66-725:67)
  Terminator {
      source_info: SourceInfo(src/lib.rs:725:21-725:77)
      kind: _3 = <std::iter::Filter<std::str::Chars<'_>, {closure@src/lib.rs:725:38: 725:42}> as std::iter::Iterator>::collect::<std::string::String>(move _4) -> [return: bb3, unwind: bb68]
  }
  preds [bb1]
  succs [bb3, bb68]

bb3
  0: StorageDead(_4)
    SourceInfo(src/lib.rs:725:76-725:77)
  1: FakeRead(ForLet(None), _3)
    SourceInfo(src/lib.rs:725:9-725:10)
  2: AscribeUserType(_3, o, UserTypeProjection { base: UserType(1), projs: [] })
    SourceInfo(src/lib.rs:725:12-725:18)
  3: StorageLive(_8)
    SourceInfo(src/lib.rs:726:9-726:10)
  4: StorageLive(_9)
    SourceInfo(src/lib.rs:726:21-726:67)
  5: StorageLive(_10)
    SourceInfo(src/lib.rs:726:21-726:30)
  6: StorageLive(_11)
    SourceInfo(src/lib.rs:726:21-726:22)
  7: _11 = &(*_2)
    SourceInfo(src/lib.rs:726:21-726:22)
  Terminator {
      source_info: SourceInfo(src/lib.rs:726:21-726:30)
      kind: _10 = core::str::<impl str>::chars(move _11) -> [return: bb4, unwind: bb67]
  }
  preds [bb2]
  succs [bb4, bb67]

bb4
  0: StorageDead(_11)
    SourceInfo(src/lib.rs:726:29-726:30)
  1: StorageLive(_12)
    SourceInfo(src/lib.rs:726:38-726:66)
  2: _12 = {closure@src/lib.rs:726:38: 726:42}
    SourceInfo(src/lib.rs:726:38-726:66)
  Terminator {
      source_info: SourceInfo(src/lib.rs:726:21-726:67)
      kind: _9 = <std::str::Chars<'_> as std::iter::Iterator>::filter::<{closure@src/lib.rs:726:38: 726:42}>(move _10, move _12) -> [return: bb5, unwind: bb67]
  }
  preds [bb3]
  succs [bb5, bb67]

bb5
  0: StorageDead(_12)
    SourceInfo(src/lib.rs:726:66-726:67)
  1: StorageDead(_10)
    SourceInfo(src/lib.rs:726:66-726:67)
  Terminator {
      source_info: SourceInfo(src/lib.rs:726:21-726:77)
      kind: _8 = <std::iter::Filter<std::str::Chars<'_>, {closure@src/lib.rs:726:38: 726:42}> as std::iter::Iterator>::collect::<std::string::String>(move _9) -> [return: bb6, unwind: bb67]
  }
  preds [bb4]
  succs [bb6, bb67]

bb6
  0: StorageDead(_9)
    SourceInfo(src/lib.rs:726:76-726:77)
  1: FakeRead(ForLet(None), _8)
    SourceInfo(src/lib.rs:726:9-726:10)
  2: AscribeUserType(_8, o, UserTypeProjection { base: UserType(3), projs: [] })
    SourceInfo(src/lib.rs:726:12-726:18)
  3: StorageLive(_13)
    SourceInfo(src/lib.rs:728:5-730:6)
  4: StorageLive(_14)
    SourceInfo(src/lib.rs:728:8-728:14)
  5: StorageLive(_15)
    SourceInfo(src/lib.rs:728:8-728:9)
  6: _15 = &_3
    SourceInfo(src/lib.rs:728:8-728:9)
  7: StorageLive(_16)
    SourceInfo(src/lib.rs:728:13-728:14)
  8: _16 = &_8
    SourceInfo(src/lib.rs:728:13-728:14)
  Terminator {
      source_info: SourceInfo(src/lib.rs:728:8-728:14)
      kind: _14 = <std::string::String as std::cmp::PartialEq>::eq(move _15, move _16) -> [return: bb7, unwind: bb66]
  }
  preds [bb5]
  succs [bb7, bb66]

bb7
  Terminator {
      source_info: SourceInfo(src/lib.rs:728:8-728:14)
      kind: switchInt(move _14) -> [0: bb9, otherwise: bb8]
  }
  preds [bb6]
  succs [bb8, bb9]

bb8
  0: StorageDead(_16)
    SourceInfo(src/lib.rs:728:13-728:14)
  1: StorageDead(_15)
    SourceInfo(src/lib.rs:728:13-728:14)
  2: _0 = const 1f64
    SourceInfo(src/lib.rs:729:16-729:19)
  3: StorageDead(_14)
    SourceInfo(src/lib.rs:730:5-730:6)
  4: StorageDead(_13)
    SourceInfo(src/lib.rs:730:5-730:6)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb55
  }
  preds [bb7]
  succs [bb55]

bb9
  0: StorageDead(_16)
    SourceInfo(src/lib.rs:728:13-728:14)
  1: StorageDead(_15)
    SourceInfo(src/lib.rs:728:13-728:14)
  2: _13 = const ()
    SourceInfo(src/lib.rs:730:6-730:6)
  3: StorageDead(_14)
    SourceInfo(src/lib.rs:730:5-730:6)
  4: StorageDead(_13)
    SourceInfo(src/lib.rs:730:5-730:6)
  5: StorageLive(_18)
    SourceInfo(src/lib.rs:732:5-734:6)
  6: StorageLive(_19)
    SourceInfo(src/lib.rs:732:8-732:19)
  7: StorageLive(_20)
    SourceInfo(src/lib.rs:732:8-732:15)
  8: StorageLive(_21)
    SourceInfo(src/lib.rs:732:8-732:9)
  9: _21 = &_3
    SourceInfo(src/lib.rs:732:8-732:9)
  Terminator {
      source_info: SourceInfo(src/lib.rs:732:8-732:15)
      kind: _20 = std::string::String::len(move _21) -> [return: bb10, unwind: bb66]
  }
  preds [bb7]
  succs [bb10, bb66]

bb10
  0: StorageDead(_21)
    SourceInfo(src/lib.rs:732:14-732:15)
  1: _19 = Lt(move _20, const 2_usize)
    SourceInfo(src/lib.rs:732:8-732:19)
  Terminator {
      source_info: SourceInfo(src/lib.rs:732:8-732:19)
      kind: switchInt(move _19) -> [0: bb12, otherwise: bb11]
  }
  preds [bb9]
  succs [bb11, bb12]

bb11
  0: StorageDead(_20)
    SourceInfo(src/lib.rs:732:18-732:19)
  Terminator {
      source_info: SourceInfo(src/lib.rs:732:35-734:6)
      kind: goto -> bb15
  }
  preds [bb10]
  succs [bb15]

bb12
  0: StorageDead(_20)
    SourceInfo(src/lib.rs:732:18-732:19)
  1: StorageLive(_22)
    SourceInfo(src/lib.rs:732:23-732:34)
  2: StorageLive(_23)
    SourceInfo(src/lib.rs:732:23-732:30)
  3: StorageLive(_24)
    SourceInfo(src/lib.rs:732:23-732:24)
  4: _24 = &_8
    SourceInfo(src/lib.rs:732:23-732:24)
  Terminator {
      source_info: SourceInfo(src/lib.rs:732:23-732:30)
      kind: _23 = std::string::String::len(move _24) -> [return: bb13, unwind: bb66]
  }
  preds [bb10]
  succs [bb13, bb66]

bb13
  0: StorageDead(_24)
    SourceInfo(src/lib.rs:732:29-732:30)
  1: _22 = Lt(move _23, const 2_usize)
    SourceInfo(src/lib.rs:732:23-732:34)
  Terminator {
      source_info: SourceInfo(src/lib.rs:732:23-732:34)
      kind: switchInt(move _22) -> [0: bb16, otherwise: bb14]
  }
  preds [bb12]
  succs [bb14, bb16]

bb14
  0: StorageDead(_23)
    SourceInfo(src/lib.rs:732:33-732:34)
  Terminator {
      source_info: SourceInfo(src/lib.rs:732:35-734:6)
      kind: goto -> bb15
  }
  preds [bb13]
  succs [bb15]

bb15
  0: _0 = const 0f64
    SourceInfo(src/lib.rs:733:16-733:19)
  1: StorageDead(_22)
    SourceInfo(src/lib.rs:734:5-734:6)
  2: StorageDead(_19)
    SourceInfo(src/lib.rs:734:5-734:6)
  3: StorageDead(_18)
    SourceInfo(src/lib.rs:734:5-734:6)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb55
  }
  preds [bb11, bb14]
  succs [bb55]

bb16
  0: StorageDead(_23)
    SourceInfo(src/lib.rs:732:33-732:34)
  1: _18 = const ()
    SourceInfo(src/lib.rs:734:6-734:6)
  2: StorageDead(_22)
    SourceInfo(src/lib.rs:734:5-734:6)
  3: StorageDead(_19)
    SourceInfo(src/lib.rs:734:5-734:6)
  4: StorageDead(_18)
    SourceInfo(src/lib.rs:734:5-734:6)
  5: StorageLive(_26)
    SourceInfo(src/lib.rs:736:9-736:22)
  Terminator {
      source_info: SourceInfo(src/lib.rs:736:55-736:69)
      kind: _26 = std::collections::HashMap::<(char, char), usize>::new() -> [return: bb17, unwind: bb66]
  }
  preds [bb13]
  succs [bb17, bb66]

bb17
  0: FakeRead(ForLet(None), _26)
    SourceInfo(src/lib.rs:736:9-736:22)
  1: AscribeUserType(_26, o, UserTypeProjection { base: UserType(6), projs: [] })
    SourceInfo(src/lib.rs:736:24-736:52)
  2: StorageLive(_27)
    SourceInfo(src/lib.rs:738:5-740:6)
  3: StorageLive(_28)
    SourceInfo(src/lib.rs:738:19-738:30)
  4: StorageLive(_29)
    SourceInfo(src/lib.rs:738:19-738:30)
  5: StorageLive(_30)
    SourceInfo(src/lib.rs:738:27-738:29)
  6: StorageLive(_31)
    SourceInfo(src/lib.rs:738:27-738:29)
  7: StorageLive(_32)
    SourceInfo(src/lib.rs:738:27-738:29)
  8: StorageLive(_33)
    SourceInfo(src/lib.rs:738:27-738:29)
  9: _33 = &_3
    SourceInfo(src/lib.rs:738:27-738:29)
  10: _32 = &(*_33)
    SourceInfo(src/lib.rs:738:27-738:29)
  Terminator {
      source_info: SourceInfo(src/lib.rs:738:27-738:29)
      kind: _31 = <std::string::String as std::ops::Deref>::deref(move _32) -> [return: bb18, unwind: bb65]
  }
  preds [bb16]
  succs [bb18, bb65]

bb18
  0: _30 = &(*_31)
    SourceInfo(src/lib.rs:738:27-738:29)
  1: StorageDead(_32)
    SourceInfo(src/lib.rs:738:28-738:29)
  Terminator {
      source_info: SourceInfo(src/lib.rs:738:19-738:30)
      kind: _29 = bigrams(move _30) -> [return: bb19, unwind: bb65]
  }
  preds [bb17]
  succs [bb19, bb65]

bb19
  0: StorageDead(_30)
    SourceInfo(src/lib.rs:738:29-738:30)
  Terminator {
      source_info: SourceInfo(src/lib.rs:738:19-738:30)
      kind: _28 = <impl std::iter::Iterator<Item = (char, char)> + '_ as std::iter::IntoIterator>::into_iter(move _29) -> [return: bb20, unwind: bb64]
  }
  preds [bb18]
  succs [bb20, bb64]

bb20
  0: StorageDead(_29)
    SourceInfo(src/lib.rs:738:29-738:30)
  1: PlaceMention(_28)
    SourceInfo(src/lib.rs:738:19-738:30)
  2: StorageLive(_34)
    SourceInfo(src/lib.rs:738:19-738:30)
  3: _34 = move _28
    SourceInfo(src/lib.rs:738:19-738:30)
  Terminator {
      source_info: SourceInfo(src/lib.rs:738:5-740:6)
      kind: goto -> bb21
  }
  preds [bb19]
  succs [bb21]

bb21
  Terminator {
      source_info: SourceInfo(src/lib.rs:738:5-740:6)
      kind: falseUnwind -> [real: bb22, unwind: bb62]
  }
  preds [bb20, bb30]
  succs [bb22, bb62]

bb22
  0: StorageLive(_36)
    SourceInfo(src/lib.rs:738:19-738:30)
  1: StorageLive(_37)
    SourceInfo(src/lib.rs:738:19-738:30)
  2: StorageLive(_38)
    SourceInfo(src/lib.rs:738:19-738:30)
  3: StorageLive(_39)
    SourceInfo(src/lib.rs:738:19-738:30)
  4: _39 = &mut _34
    SourceInfo(src/lib.rs:738:19-738:30)
  5: _38 = &mut (*_39)
    SourceInfo(src/lib.rs:738:19-738:30)
  Terminator {
      source_info: SourceInfo(src/lib.rs:738:19-738:30)
      kind: _37 = <impl std::iter::Iterator<Item = (char, char)> + '_ as std::iter::Iterator>::next(move _38) -> [return: bb23, unwind: bb62]
  }
  preds [bb21]
  succs [bb23, bb62]

bb23
  0: StorageDead(_38)
    SourceInfo(src/lib.rs:738:29-738:30)
  1: PlaceMention(_37)
    SourceInfo(src/lib.rs:738:19-738:30)
  2: _40 = discriminant(_37)
    SourceInfo(src/lib.rs:738:19-738:30)
  Terminator {
      source_info: SourceInfo(src/lib.rs:738:19-738:30)
      kind: switchInt(move _40) -> [0: bb25, 1: bb26, otherwise: bb24]
  }
  preds [bb22]
  succs [bb24, bb25, bb26]

bb24
  0: FakeRead(ForMatchedPlace(None), _37)
    SourceInfo(src/lib.rs:738:19-738:30)
  Terminator {
      source_info: SourceInfo(src/lib.rs:738:19-738:30)
      kind: unreachable
  }
  preds [bb23]
  succs []

bb25
  Terminator {
      source_info: SourceInfo(src/lib.rs:738:5-740:6)
      kind: falseEdge -> [real: bb27, imaginary: bb26]
  }
  preds [bb23]
  succs [bb26, bb27]

bb26
  0: StorageLive(_42)
    SourceInfo(src/lib.rs:738:9-738:15)
  1: _42 = ((_37 as Some).0: (char, char))
    SourceInfo(src/lib.rs:738:9-738:15)
  2: StorageLive(_43)
    SourceInfo(src/lib.rs:739:10-739:46)
  3: StorageLive(_44)
    SourceInfo(src/lib.rs:739:10-739:33)
  4: StorageLive(_45)
    SourceInfo(src/lib.rs:739:10-739:19)
  5: _45 = &mut _26
    SourceInfo(src/lib.rs:739:10-739:19)
  6: StorageLive(_46)
    SourceInfo(src/lib.rs:739:26-739:32)
  7: _46 = _42
    SourceInfo(src/lib.rs:739:26-739:32)
  Terminator {
      source_info: SourceInfo(src/lib.rs:739:10-739:33)
      kind: _44 = std::collections::HashMap::<(char, char), usize>::entry(move _45, move _46) -> [return: bb28, unwind: bb62]
  }
  preds [bb23, bb25]
  succs [bb28, bb62]

bb27
  0: _27 = const ()
    SourceInfo(src/lib.rs:738:5-740:6)
  1: StorageDead(_39)
    SourceInfo(src/lib.rs:740:5-740:6)
  2: StorageDead(_37)
    SourceInfo(src/lib.rs:740:5-740:6)
  3: StorageDead(_36)
    SourceInfo(src/lib.rs:740:5-740:6)
  Terminator {
      source_info: SourceInfo(src/lib.rs:740:5-740:6)
      kind: drop(_34) -> [return: bb31, unwind: bb63]
  }
  preds [bb25]
  succs [bb31, bb63]

bb28
  0: StorageDead(_46)
    SourceInfo(src/lib.rs:739:32-739:33)
  1: StorageDead(_45)
    SourceInfo(src/lib.rs:739:32-739:33)
  Terminator {
      source_info: SourceInfo(src/lib.rs:739:10-739:46)
      kind: _43 = std::collections::hash_map::Entry::<'_, (char, char), usize>::or_insert(move _44, const 0_usize) -> [return: bb29, unwind: bb62]
  }
  preds [bb26]
  succs [bb29, bb62]

bb29
  0: StorageDead(_44)
    SourceInfo(src/lib.rs:739:45-739:46)
  1: _47 = AddWithOverflow((*_43), const 1_usize)
    SourceInfo(src/lib.rs:739:9-739:51)
  Terminator {
      source_info: SourceInfo(src/lib.rs:739:9-739:51)
      kind: assert(!move (_47.1: bool), "attempt to compute `{} + {}`, which would overflow", (*_43), const 1_usize) -> [success: bb30, unwind: bb62]
  }
  preds [bb28]
  succs [bb30, bb62]

bb30
  0: (*_43) = move (_47.0: usize)
    SourceInfo(src/lib.rs:739:9-739:51)
  1: StorageDead(_43)
    SourceInfo(src/lib.rs:739:51-739:52)
  2: _36 = const ()
    SourceInfo(src/lib.rs:738:31-740:6)
  3: StorageDead(_42)
    SourceInfo(src/lib.rs:740:5-740:6)
  4: StorageDead(_39)
    SourceInfo(src/lib.rs:740:5-740:6)
  5: StorageDead(_37)
    SourceInfo(src/lib.rs:740:5-740:6)
  6: StorageDead(_36)
    SourceInfo(src/lib.rs:740:5-740:6)
  7: _35 = const ()
    SourceInfo(src/lib.rs:738:5-740:6)
  Terminator {
      source_info: SourceInfo(src/lib.rs:738:5-740:6)
      kind: goto -> bb21
  }
  preds [bb29]
  succs [bb21]

bb31
  0: StorageDead(_34)
    SourceInfo(src/lib.rs:740:5-740:6)
  Terminator {
      source_info: SourceInfo(src/lib.rs:740:5-740:6)
      kind: drop(_28) -> [return: bb32, unwind: bb65]
  }
  preds [bb27]
  succs [bb32, bb65]

bb32
  0: StorageDead(_33)
    SourceInfo(src/lib.rs:740:5-740:6)
  1: StorageDead(_31)
    SourceInfo(src/lib.rs:740:5-740:6)
  2: StorageDead(_28)
    SourceInfo(src/lib.rs:740:5-740:6)
  3: StorageDead(_27)
    SourceInfo(src/lib.rs:740:5-740:6)
  4: StorageLive(_48)
    SourceInfo(src/lib.rs:742:9-742:30)
  5: _48 = const 0_usize
    SourceInfo(src/lib.rs:742:33-742:40)
  6: FakeRead(ForLet(None), _48)
    SourceInfo(src/lib.rs:742:9-742:30)
  7: StorageLive(_49)
    SourceInfo(src/lib.rs:744:5-751:6)
  8: StorageLive(_50)
    SourceInfo(src/lib.rs:744:19-744:30)
  9: StorageLive(_51)
    SourceInfo(src/lib.rs:744:19-744:30)
  10: StorageLive(_52)
    SourceInfo(src/lib.rs:744:27-744:29)
  11: StorageLive(_53)
    SourceInfo(src/lib.rs:744:27-744:29)
  12: StorageLive(_54)
    SourceInfo(src/lib.rs:744:27-744:29)
  13: StorageLive(_55)
    SourceInfo(src/lib.rs:744:27-744:29)
  14: _55 = &_8
    SourceInfo(src/lib.rs:744:27-744:29)
  15: _54 = &(*_55)
    SourceInfo(src/lib.rs:744:27-744:29)
  Terminator {
      source_info: SourceInfo(src/lib.rs:744:27-744:29)
      kind: _53 = <std::string::String as std::ops::Deref>::deref(move _54) -> [return: bb33, unwind: bb65]
  }
  preds [bb31]
  succs [bb33, bb65]

bb33
  0: _52 = &(*_53)
    SourceInfo(src/lib.rs:744:27-744:29)
  1: StorageDead(_54)
    SourceInfo(src/lib.rs:744:28-744:29)
  Terminator {
      source_info: SourceInfo(src/lib.rs:744:19-744:30)
      kind: _51 = bigrams(move _52) -> [return: bb34, unwind: bb65]
  }
  preds [bb32]
  succs [bb34, bb65]

bb34
  0: StorageDead(_52)
    SourceInfo(src/lib.rs:744:29-744:30)
  Terminator {
      source_info: SourceInfo(src/lib.rs:744:19-744:30)
      kind: _50 = <impl std::iter::Iterator<Item = (char, char)> + '_ as std::iter::IntoIterator>::into_iter(move _51) -> [return: bb35, unwind: bb61]
  }
  preds [bb33]
  succs [bb35, bb61]

bb35
  0: StorageDead(_51)
    SourceInfo(src/lib.rs:744:29-744:30)
  1: PlaceMention(_50)
    SourceInfo(src/lib.rs:744:19-744:30)
  2: StorageLive(_56)
    SourceInfo(src/lib.rs:744:19-744:30)
  3: _56 = move _50
    SourceInfo(src/lib.rs:744:19-744:30)
  Terminator {
      source_info: SourceInfo(src/lib.rs:744:5-751:6)
      kind: goto -> bb36
  }
  preds [bb34]
  succs [bb36]

bb36
  Terminator {
      source_info: SourceInfo(src/lib.rs:744:5-751:6)
      kind: falseUnwind -> [real: bb37, unwind: bb59]
  }
  preds [bb35, bb44]
  succs [bb37, bb59]

bb37
  0: StorageLive(_57)
    SourceInfo(src/lib.rs:744:19-744:30)
  1: StorageLive(_58)
    SourceInfo(src/lib.rs:744:19-744:30)
  2: StorageLive(_59)
    SourceInfo(src/lib.rs:744:19-744:30)
  3: StorageLive(_60)
    SourceInfo(src/lib.rs:744:19-744:30)
  4: _60 = &mut _56
    SourceInfo(src/lib.rs:744:19-744:30)
  5: _59 = &mut (*_60)
    SourceInfo(src/lib.rs:744:19-744:30)
  Terminator {
      source_info: SourceInfo(src/lib.rs:744:19-744:30)
      kind: _58 = <impl std::iter::Iterator<Item = (char, char)> + '_ as std::iter::Iterator>::next(move _59) -> [return: bb38, unwind: bb59]
  }
  preds [bb36]
  succs [bb38, bb59]

bb38
  0: StorageDead(_59)
    SourceInfo(src/lib.rs:744:29-744:30)
  1: PlaceMention(_58)
    SourceInfo(src/lib.rs:744:19-744:30)
  2: _61 = discriminant(_58)
    SourceInfo(src/lib.rs:744:19-744:30)
  Terminator {
      source_info: SourceInfo(src/lib.rs:744:19-744:30)
      kind: switchInt(move _61) -> [0: bb40, 1: bb41, otherwise: bb39]
  }
  preds [bb37]
  succs [bb39, bb40, bb41]

bb39
  0: FakeRead(ForMatchedPlace(None), _58)
    SourceInfo(src/lib.rs:744:19-744:30)
  Terminator {
      source_info: SourceInfo(src/lib.rs:744:19-744:30)
      kind: unreachable
  }
  preds [bb38]
  succs []

bb40
  Terminator {
      source_info: SourceInfo(src/lib.rs:744:5-751:6)
      kind: falseEdge -> [real: bb42, imaginary: bb41]
  }
  preds [bb38]
  succs [bb41, bb42]

bb41
  0: StorageLive(_63)
    SourceInfo(src/lib.rs:744:9-744:15)
  1: _63 = ((_58 as Some).0: (char, char))
    SourceInfo(src/lib.rs:744:9-744:15)
  2: StorageLive(_64)
    SourceInfo(src/lib.rs:745:9-750:11)
  3: StorageLive(_65)
    SourceInfo(src/lib.rs:745:9-745:32)
  4: StorageLive(_66)
    SourceInfo(src/lib.rs:745:9-745:18)
  5: _66 = &mut _26
    SourceInfo(src/lib.rs:745:9-745:18)
  6: StorageLive(_67)
    SourceInfo(src/lib.rs:745:25-745:31)
  7: _67 = _63
    SourceInfo(src/lib.rs:745:25-745:31)
  Terminator {
      source_info: SourceInfo(src/lib.rs:745:9-745:32)
      kind: _65 = std::collections::HashMap::<(char, char), usize>::entry(move _66, move _67) -> [return: bb43, unwind: bb59]
  }
  preds [bb38, bb40]
  succs [bb43, bb59]

bb42
  0: _49 = const ()
    SourceInfo(src/lib.rs:744:5-751:6)
  1: StorageDead(_60)
    SourceInfo(src/lib.rs:751:5-751:6)
  2: StorageDead(_58)
    SourceInfo(src/lib.rs:751:5-751:6)
  3: StorageDead(_57)
    SourceInfo(src/lib.rs:751:5-751:6)
  Terminator {
      source_info: SourceInfo(src/lib.rs:751:5-751:6)
      kind: drop(_56) -> [return: bb45, unwind: bb60]
  }
  preds [bb40]
  succs [bb45, bb60]

bb43
  0: StorageDead(_67)
    SourceInfo(src/lib.rs:745:31-745:32)
  1: StorageDead(_66)
    SourceInfo(src/lib.rs:745:31-745:32)
  2: StorageLive(_68)
    SourceInfo(src/lib.rs:745:44-750:10)
  3: StorageLive(_69)
    SourceInfo(src/lib.rs:745:44-750:10)
  4: _69 = &mut _48
    SourceInfo(src/lib.rs:745:44-750:10)
  5: _68 = {closure@src/lib.rs:745:44: 745:48} { intersection_size: move _69 }
    SourceInfo(src/lib.rs:745:44-750:10)
  6: StorageDead(_69)
    SourceInfo(src/lib.rs:745:47-745:48)
  Terminator {
      source_info: SourceInfo(src/lib.rs:745:9-750:11)
      kind: _64 = std::collections::hash_map::Entry::<'_, (char, char), usize>::and_modify::<{closure@src/lib.rs:745:44: 745:48}>(move _65, move _68) -> [return: bb44, unwind: bb59]
  }
  preds [bb41]
  succs [bb44, bb59]

bb44
  0: StorageDead(_68)
    SourceInfo(src/lib.rs:750:10-750:11)
  1: StorageDead(_65)
    SourceInfo(src/lib.rs:750:10-750:11)
  2: StorageDead(_64)
    SourceInfo(src/lib.rs:750:11-750:12)
  3: _57 = const ()
    SourceInfo(src/lib.rs:744:31-751:6)
  4: StorageDead(_63)
    SourceInfo(src/lib.rs:751:5-751:6)
  5: StorageDead(_60)
    SourceInfo(src/lib.rs:751:5-751:6)
  6: StorageDead(_58)
    SourceInfo(src/lib.rs:751:5-751:6)
  7: StorageDead(_57)
    SourceInfo(src/lib.rs:751:5-751:6)
  8: _35 = const ()
    SourceInfo(src/lib.rs:744:5-751:6)
  Terminator {
      source_info: SourceInfo(src/lib.rs:744:5-751:6)
      kind: goto -> bb36
  }
  preds [bb43]
  succs [bb36]

bb45
  0: StorageDead(_56)
    SourceInfo(src/lib.rs:751:5-751:6)
  Terminator {
      source_info: SourceInfo(src/lib.rs:751:5-751:6)
      kind: drop(_50) -> [return: bb46, unwind: bb65]
  }
  preds [bb42]
  succs [bb46, bb65]

bb46
  0: StorageDead(_55)
    SourceInfo(src/lib.rs:751:5-751:6)
  1: StorageDead(_53)
    SourceInfo(src/lib.rs:751:5-751:6)
  2: StorageDead(_50)
    SourceInfo(src/lib.rs:751:5-751:6)
  3: StorageDead(_49)
    SourceInfo(src/lib.rs:751:5-751:6)
  4: StorageLive(_70)
    SourceInfo(src/lib.rs:753:5-753:35)
  5: StorageLive(_71)
    SourceInfo(src/lib.rs:753:5-753:28)
  6: StorageLive(_72)
    SourceInfo(src/lib.rs:753:10-753:27)
  7: _72 = _48
    SourceInfo(src/lib.rs:753:10-753:27)
  8: _73 = MulWithOverflow(const 2_usize, _72)
    SourceInfo(src/lib.rs:753:5-753:28)
  Terminator {
      source_info: SourceInfo(src/lib.rs:753:5-753:28)
      kind: assert(!move (_73.1: bool), "attempt to compute `{} * {}`, which would overflow", const 2_usize, move _72) -> [success: bb47, unwind: bb65]
  }
  preds [bb45]
  succs [bb47, bb65]

bb47
  0: _71 = move (_73.0: usize)
    SourceInfo(src/lib.rs:753:5-753:28)
  1: StorageDead(_72)
    SourceInfo(src/lib.rs:753:27-753:28)
  2: _70 = move _71 as f64 (IntToFloat)
    SourceInfo(src/lib.rs:753:5-753:35)
  3: StorageDead(_71)
    SourceInfo(src/lib.rs:753:34-753:35)
  4: StorageLive(_74)
    SourceInfo(src/lib.rs:753:38-753:68)
  5: StorageLive(_75)
    SourceInfo(src/lib.rs:753:38-753:61)
  6: StorageLive(_76)
    SourceInfo(src/lib.rs:753:39-753:56)
  7: StorageLive(_77)
    SourceInfo(src/lib.rs:753:39-753:46)
  8: StorageLive(_78)
    SourceInfo(src/lib.rs:753:39-753:40)
  9: _78 = &_3
    SourceInfo(src/lib.rs:753:39-753:40)
  Terminator {
      source_info: SourceInfo(src/lib.rs:753:39-753:46)
      kind: _77 = std::string::String::len(move _78) -> [return: bb48, unwind: bb65]
  }
  preds [bb46]
  succs [bb48, bb65]

bb48
  0: StorageDead(_78)
    SourceInfo(src/lib.rs:753:45-753:46)
  1: StorageLive(_79)
    SourceInfo(src/lib.rs:753:49-753:56)
  2: StorageLive(_80)
    SourceInfo(src/lib.rs:753:49-753:50)
  3: _80 = &_8
    SourceInfo(src/lib.rs:753:49-753:50)
  Terminator {
      source_info: SourceInfo(src/lib.rs:753:49-753:56)
      kind: _79 = std::string::String::len(move _80) -> [return: bb49, unwind: bb65]
  }
  preds [bb47]
  succs [bb49, bb65]

bb49
  0: StorageDead(_80)
    SourceInfo(src/lib.rs:753:55-753:56)
  1: _81 = AddWithOverflow(_77, _79)
    SourceInfo(src/lib.rs:753:39-753:56)
  Terminator {
      source_info: SourceInfo(src/lib.rs:753:39-753:56)
      kind: assert(!move (_81.1: bool), "attempt to compute `{} + {}`, which would overflow", move _77, move _79) -> [success: bb50, unwind: bb65]
  }
  preds [bb48]
  succs [bb50, bb65]

bb50
  0: _76 = move (_81.0: usize)
    SourceInfo(src/lib.rs:753:39-753:56)
  1: StorageDead(_79)
    SourceInfo(src/lib.rs:753:55-753:56)
  2: StorageDead(_77)
    SourceInfo(src/lib.rs:753:55-753:56)
  3: _82 = SubWithOverflow(_76, const 2_usize)
    SourceInfo(src/lib.rs:753:38-753:61)
  Terminator {
      source_info: SourceInfo(src/lib.rs:753:38-753:61)
      kind: assert(!move (_82.1: bool), "attempt to compute `{} - {}`, which would overflow", move _76, const 2_usize) -> [success: bb51, unwind: bb65]
  }
  preds [bb49]
  succs [bb51, bb65]

bb51
  0: _75 = move (_82.0: usize)
    SourceInfo(src/lib.rs:753:38-753:61)
  1: StorageDead(_76)
    SourceInfo(src/lib.rs:753:60-753:61)
  2: _74 = move _75 as f64 (IntToFloat)
    SourceInfo(src/lib.rs:753:38-753:68)
  3: StorageDead(_75)
    SourceInfo(src/lib.rs:753:67-753:68)
  4: _0 = Div(move _70, move _74)
    SourceInfo(src/lib.rs:753:5-753:68)
  5: StorageDead(_74)
    SourceInfo(src/lib.rs:753:67-753:68)
  6: StorageDead(_70)
    SourceInfo(src/lib.rs:753:67-753:68)
  7: StorageDead(_48)
    SourceInfo(src/lib.rs:754:1-754:2)
  Terminator {
      source_info: SourceInfo(src/lib.rs:754:1-754:2)
      kind: drop(_26) -> [return: bb52, unwind: bb66]
  }
  preds [bb50]
  succs [bb52, bb66]

bb52
  0: StorageDead(_26)
    SourceInfo(src/lib.rs:754:1-754:2)
  Terminator {
      source_info: SourceInfo(src/lib.rs:754:1-754:2)
      kind: drop(_8) -> [return: bb53, unwind: bb67]
  }
  preds [bb51]
  succs [bb53, bb67]

bb53
  0: StorageDead(_8)
    SourceInfo(src/lib.rs:754:1-754:2)
  Terminator {
      source_info: SourceInfo(src/lib.rs:754:1-754:2)
      kind: drop(_3) -> [return: bb54, unwind: bb68]
  }
  preds [bb52]
  succs [bb54, bb68]

bb54
  0: StorageDead(_3)
    SourceInfo(src/lib.rs:754:1-754:2)
  Terminator {
      source_info: SourceInfo(src/lib.rs:754:2-754:2)
      kind: goto -> bb58
  }
  preds [bb53]
  succs [bb58]

bb55
  Terminator {
      source_info: SourceInfo(src/lib.rs:754:1-754:2)
      kind: drop(_8) -> [return: bb56, unwind: bb67]
  }
  preds [bb8, bb15]
  succs [bb56, bb67]

bb56
  0: StorageDead(_8)
    SourceInfo(src/lib.rs:754:1-754:2)
  Terminator {
      source_info: SourceInfo(src/lib.rs:754:1-754:2)
      kind: drop(_3) -> [return: bb57, unwind: bb68]
  }
  preds [bb55]
  succs [bb57, bb68]

bb57
  0: StorageDead(_3)
    SourceInfo(src/lib.rs:754:1-754:2)
  Terminator {
      source_info: SourceInfo(src/lib.rs:754:2-754:2)
      kind: goto -> bb58
  }
  preds [bb56]
  succs [bb58]

bb58
  Terminator {
      source_info: SourceInfo(src/lib.rs:754:2-754:2)
      kind: return
  }
  preds [bb54, bb57]
  succs []

bb59
  Terminator {
      source_info: SourceInfo(src/lib.rs:751:5-751:6)
      kind: drop(_56) -> [return: bb60, unwind terminate(cleanup)]
  }
  preds [bb36, bb37, bb41, bb43]
  succs [bb60]

bb60
  Terminator {
      source_info: SourceInfo(src/lib.rs:751:5-751:6)
      kind: drop(_50) -> [return: bb65, unwind terminate(cleanup)]
  }
  preds [bb42, bb59]
  succs [bb65]

bb61
  Terminator {
      source_info: SourceInfo(src/lib.rs:744:29-744:30)
      kind: drop(_51) -> [return: bb65, unwind terminate(cleanup)]
  }
  preds [bb34]
  succs [bb65]

bb62
  Terminator {
      source_info: SourceInfo(src/lib.rs:740:5-740:6)
      kind: drop(_34) -> [return: bb63, unwind terminate(cleanup)]
  }
  preds [bb21, bb22, bb26, bb28, bb29]
  succs [bb63]

bb63
  Terminator {
      source_info: SourceInfo(src/lib.rs:740:5-740:6)
      kind: drop(_28) -> [return: bb65, unwind terminate(cleanup)]
  }
  preds [bb27, bb62]
  succs [bb65]

bb64
  Terminator {
      source_info: SourceInfo(src/lib.rs:738:29-738:30)
      kind: drop(_29) -> [return: bb65, unwind terminate(cleanup)]
  }
  preds [bb19]
  succs [bb65]

bb65
  Terminator {
      source_info: SourceInfo(src/lib.rs:754:1-754:2)
      kind: drop(_26) -> [return: bb66, unwind terminate(cleanup)]
  }
  preds [bb17, bb18, bb31, bb32, bb33, bb45, bb46, bb47, bb48, bb49, bb50, bb60, bb61, bb63, bb64]
  succs [bb66]

bb66
  Terminator {
      source_info: SourceInfo(src/lib.rs:754:1-754:2)
      kind: drop(_8) -> [return: bb67, unwind terminate(cleanup)]
  }
  preds [bb6, bb9, bb12, bb16, bb51, bb65]
  succs [bb67]

bb67
  Terminator {
      source_info: SourceInfo(src/lib.rs:754:1-754:2)
      kind: drop(_3) -> [return: bb68, unwind terminate(cleanup)]
  }
  preds [bb3, bb4, bb5, bb52, bb55, bb66]
  succs [bb68]

bb68
  Terminator {
      source_info: SourceInfo(src/lib.rs:721:1-754:2)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb53, bb56, bb67]
  succs []

