bb0
  0: StorageLive(_3)
    SourceInfo(src/lib.rs:301:9-301:14)
  1: StorageLive(_4)
    SourceInfo(src/lib.rs:301:17-301:26)
  2: StorageLive(_5)
    SourceInfo(src/lib.rs:301:17-301:18)
  3: _5 = &(*_2)
    SourceInfo(src/lib.rs:301:17-301:18)
  Terminator {
      source_info: SourceInfo(src/lib.rs:301:17-301:26)
      kind: _4 = core::str::<impl str>::chars(move _5) -> [return: bb1, unwind: bb72]
  }
  preds []
  succs [bb1, bb72]

bb1
  0: StorageDead(_5)
    SourceInfo(src/lib.rs:301:25-301:26)
  Terminator {
      source_info: SourceInfo(src/lib.rs:301:17-301:34)
      kind: _3 = <std::str::Chars<'_> as std::iter::Iterator>::count(move _4) -> [return: bb2, unwind: bb72]
  }
  preds [bb0]
  succs [bb2, bb72]

bb2
  0: StorageDead(_4)
    SourceInfo(src/lib.rs:301:33-301:34)
  1: FakeRead(ForLet(None), _3)
    SourceInfo(src/lib.rs:301:9-301:14)
  2: StorageLive(_6)
    SourceInfo(src/lib.rs:304:9-304:31)
  3: StorageLive(_7)
    SourceInfo(src/lib.rs:304:46-304:60)
  4: StorageLive(_8)
    SourceInfo(src/lib.rs:304:50-304:59)
  5: StorageLive(_9)
    SourceInfo(src/lib.rs:304:50-304:55)
  6: _9 = _3
    SourceInfo(src/lib.rs:304:50-304:55)
  7: _10 = AddWithOverflow(_9, const 1_usize)
    SourceInfo(src/lib.rs:304:50-304:59)
  Terminator {
      source_info: SourceInfo(src/lib.rs:304:50-304:59)
      kind: assert(!move (_10.1: bool), "attempt to compute `{} + {}`, which would overflow", move _9, const 1_usize) -> [success: bb3, unwind: bb72]
  }
  preds [bb1]
  succs [bb3, bb72]

bb3
  0: _8 = move (_10.0: usize)
    SourceInfo(src/lib.rs:304:50-304:59)
  1: StorageDead(_9)
    SourceInfo(src/lib.rs:304:58-304:59)
  2: _7 = std::ops::Range::<usize> { start: const 0_usize, end: move _8 }
    SourceInfo(src/lib.rs:304:46-304:60)
  3: StorageDead(_8)
    SourceInfo(src/lib.rs:304:59-304:60)
  Terminator {
      source_info: SourceInfo(src/lib.rs:304:46-304:70)
      kind: _6 = <std::ops::Range<usize> as std::iter::Iterator>::collect::<std::vec::Vec<usize>>(move _7) -> [return: bb4, unwind: bb72]
  }
  preds [bb2]
  succs [bb4, bb72]

bb4
  0: StorageDead(_7)
    SourceInfo(src/lib.rs:304:69-304:70)
  1: FakeRead(ForLet(None), _6)
    SourceInfo(src/lib.rs:304:9-304:31)
  2: AscribeUserType(_6, o, UserTypeProjection { base: UserType(1), projs: [] })
    SourceInfo(src/lib.rs:304:33-304:43)
  3: StorageLive(_11)
    SourceInfo(src/lib.rs:305:9-305:27)
  4: StorageLive(_12)
    SourceInfo(src/lib.rs:305:42-305:56)
  5: StorageLive(_13)
    SourceInfo(src/lib.rs:305:46-305:55)
  6: StorageLive(_14)
    SourceInfo(src/lib.rs:305:46-305:51)
  7: _14 = _3
    SourceInfo(src/lib.rs:305:46-305:51)
  8: _15 = AddWithOverflow(_14, const 1_usize)
    SourceInfo(src/lib.rs:305:46-305:55)
  Terminator {
      source_info: SourceInfo(src/lib.rs:305:46-305:55)
      kind: assert(!move (_15.1: bool), "attempt to compute `{} + {}`, which would overflow", move _14, const 1_usize) -> [success: bb5, unwind: bb71]
  }
  preds [bb3]
  succs [bb5, bb71]

bb5
  0: _13 = move (_15.0: usize)
    SourceInfo(src/lib.rs:305:46-305:55)
  1: StorageDead(_14)
    SourceInfo(src/lib.rs:305:54-305:55)
  2: _12 = std::ops::Range::<usize> { start: const 0_usize, end: move _13 }
    SourceInfo(src/lib.rs:305:42-305:56)
  3: StorageDead(_13)
    SourceInfo(src/lib.rs:305:55-305:56)
  Terminator {
      source_info: SourceInfo(src/lib.rs:305:42-305:66)
      kind: _11 = <std::ops::Range<usize> as std::iter::Iterator>::collect::<std::vec::Vec<usize>>(move _12) -> [return: bb6, unwind: bb71]
  }
  preds [bb4]
  succs [bb6, bb71]

bb6
  0: StorageDead(_12)
    SourceInfo(src/lib.rs:305:65-305:66)
  1: FakeRead(ForLet(None), _11)
    SourceInfo(src/lib.rs:305:9-305:27)
  2: AscribeUserType(_11, o, UserTypeProjection { base: UserType(3), projs: [] })
    SourceInfo(src/lib.rs:305:29-305:39)
  3: StorageLive(_16)
    SourceInfo(src/lib.rs:306:9-306:27)
  4: StorageLive(_17)
    SourceInfo(src/lib.rs:306:50-306:59)
  5: StorageLive(_18)
    SourceInfo(src/lib.rs:306:50-306:55)
  6: _18 = _3
    SourceInfo(src/lib.rs:306:50-306:55)
  7: _19 = AddWithOverflow(_18, const 1_usize)
    SourceInfo(src/lib.rs:306:50-306:59)
  Terminator {
      source_info: SourceInfo(src/lib.rs:306:50-306:59)
      kind: assert(!move (_19.1: bool), "attempt to compute `{} + {}`, which would overflow", move _18, const 1_usize) -> [success: bb7, unwind: bb70]
  }
  preds [bb5]
  succs [bb7, bb70]

bb7
  0: _17 = move (_19.0: usize)
    SourceInfo(src/lib.rs:306:50-306:59)
  1: StorageDead(_18)
    SourceInfo(src/lib.rs:306:58-306:59)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:47:9-47:42)
      kind: _16 = std::vec::from_elem::<usize>(const 0_usize, move _17) -> [return: bb8, unwind: bb70]
  }
  preds [bb6]
  succs [bb8, bb70]

bb8
  0: StorageDead(_17)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:47:41-47:42)
  1: FakeRead(ForLet(None), _16)
    SourceInfo(src/lib.rs:306:9-306:27)
  2: AscribeUserType(_16, o, UserTypeProjection { base: UserType(5), projs: [] })
    SourceInfo(src/lib.rs:306:29-306:39)
  3: StorageLive(_20)
    SourceInfo(src/lib.rs:308:9-308:24)
  4: _20 = const std::char::MAX
    SourceInfo(src/lib.rs:308:27-308:36)
  5: FakeRead(ForLet(None), _20)
    SourceInfo(src/lib.rs:308:9-308:24)
  6: StorageLive(_21)
    SourceInfo(src/lib.rs:309:9-309:24)
  7: _21 = const std::char::MAX
    SourceInfo(src/lib.rs:309:27-309:36)
  8: FakeRead(ForLet(None), _21)
    SourceInfo(src/lib.rs:309:9-309:24)
  9: StorageLive(_22)
    SourceInfo(src/lib.rs:311:5-331:6)
  10: StorageLive(_23)
    SourceInfo(src/lib.rs:311:24-311:45)
  11: StorageLive(_24)
    SourceInfo(src/lib.rs:311:24-311:45)
  12: StorageLive(_25)
    SourceInfo(src/lib.rs:311:24-311:33)
  13: StorageLive(_26)
    SourceInfo(src/lib.rs:311:24-311:25)
  14: _26 = &(*_1)
    SourceInfo(src/lib.rs:311:24-311:25)
  Terminator {
      source_info: SourceInfo(src/lib.rs:311:24-311:33)
      kind: _25 = core::str::<impl str>::chars(move _26) -> [return: bb9, unwind: bb69]
  }
  preds [bb7]
  succs [bb9, bb69]

bb9
  0: StorageDead(_26)
    SourceInfo(src/lib.rs:311:32-311:33)
  Terminator {
      source_info: SourceInfo(src/lib.rs:311:24-311:45)
      kind: _24 = <std::str::Chars<'_> as std::iter::Iterator>::enumerate(move _25) -> [return: bb10, unwind: bb69]
  }
  preds [bb8]
  succs [bb10, bb69]

bb10
  0: StorageDead(_25)
    SourceInfo(src/lib.rs:311:44-311:45)
  Terminator {
      source_info: SourceInfo(src/lib.rs:311:24-311:45)
      kind: _23 = <std::iter::Enumerate<std::str::Chars<'_>> as std::iter::IntoIterator>::into_iter(move _24) -> [return: bb11, unwind: bb69]
  }
  preds [bb9]
  succs [bb11, bb69]

bb11
  0: StorageDead(_24)
    SourceInfo(src/lib.rs:311:44-311:45)
  1: PlaceMention(_23)
    SourceInfo(src/lib.rs:311:24-311:45)
  2: StorageLive(_27)
    SourceInfo(src/lib.rs:311:24-311:45)
  3: _27 = move _23
    SourceInfo(src/lib.rs:311:24-311:45)
  Terminator {
      source_info: SourceInfo(src/lib.rs:311:5-331:6)
      kind: goto -> bb12
  }
  preds [bb10]
  succs [bb12]

bb12
  Terminator {
      source_info: SourceInfo(src/lib.rs:311:5-331:6)
      kind: falseUnwind -> [real: bb13, unwind: bb69]
  }
  preds [bb11, bb64]
  succs [bb13, bb69]

bb13
  0: StorageLive(_29)
    SourceInfo(src/lib.rs:311:24-311:45)
  1: StorageLive(_30)
    SourceInfo(src/lib.rs:311:24-311:45)
  2: StorageLive(_31)
    SourceInfo(src/lib.rs:311:24-311:45)
  3: StorageLive(_32)
    SourceInfo(src/lib.rs:311:24-311:45)
  4: _32 = &mut _27
    SourceInfo(src/lib.rs:311:24-311:45)
  5: _31 = &mut (*_32)
    SourceInfo(src/lib.rs:311:24-311:45)
  Terminator {
      source_info: SourceInfo(src/lib.rs:311:24-311:45)
      kind: _30 = <std::iter::Enumerate<std::str::Chars<'_>> as std::iter::Iterator>::next(move _31) -> [return: bb14, unwind: bb69]
  }
  preds [bb12]
  succs [bb14, bb69]

bb14
  0: StorageDead(_31)
    SourceInfo(src/lib.rs:311:44-311:45)
  1: PlaceMention(_30)
    SourceInfo(src/lib.rs:311:24-311:45)
  2: _33 = discriminant(_30)
    SourceInfo(src/lib.rs:311:24-311:45)
  Terminator {
      source_info: SourceInfo(src/lib.rs:311:24-311:45)
      kind: switchInt(move _33) -> [0: bb16, 1: bb17, otherwise: bb15]
  }
  preds [bb13]
  succs [bb15, bb16, bb17]

bb15
  0: FakeRead(ForMatchedPlace(None), _30)
    SourceInfo(src/lib.rs:311:24-311:45)
  Terminator {
      source_info: SourceInfo(src/lib.rs:311:24-311:45)
      kind: unreachable
  }
  preds [bb14]
  succs []

bb16
  Terminator {
      source_info: SourceInfo(src/lib.rs:311:5-331:6)
      kind: falseEdge -> [real: bb18, imaginary: bb17]
  }
  preds [bb14]
  succs [bb17, bb18]

bb17
  0: StorageLive(_35)
    SourceInfo(src/lib.rs:311:10-311:11)
  1: _35 = (((_30 as Some).0: (usize, char)).0: usize)
    SourceInfo(src/lib.rs:311:10-311:11)
  2: StorageLive(_36)
    SourceInfo(src/lib.rs:311:13-311:19)
  3: _36 = (((_30 as Some).0: (usize, char)).1: char)
    SourceInfo(src/lib.rs:311:13-311:19)
  4: StorageLive(_37)
    SourceInfo(src/lib.rs:312:29-312:30)
  5: _37 = _35
    SourceInfo(src/lib.rs:312:29-312:30)
  6: _38 = AddWithOverflow(_37, const 1_usize)
    SourceInfo(src/lib.rs:312:29-312:34)
  Terminator {
      source_info: SourceInfo(src/lib.rs:312:29-312:34)
      kind: assert(!move (_38.1: bool), "attempt to compute `{} + {}`, which would overflow", move _37, const 1_usize) -> [success: bb19, unwind: bb69]
  }
  preds [bb14, bb16]
  succs [bb19, bb69]

bb18
  0: _22 = const ()
    SourceInfo(src/lib.rs:311:5-331:6)
  1: StorageDead(_32)
    SourceInfo(src/lib.rs:331:5-331:6)
  2: StorageDead(_30)
    SourceInfo(src/lib.rs:331:5-331:6)
  3: StorageDead(_29)
    SourceInfo(src/lib.rs:331:5-331:6)
  4: StorageDead(_27)
    SourceInfo(src/lib.rs:331:5-331:6)
  5: StorageDead(_23)
    SourceInfo(src/lib.rs:331:5-331:6)
  6: StorageDead(_22)
    SourceInfo(src/lib.rs:331:5-331:6)
  7: StorageLive(_133)
    SourceInfo(src/lib.rs:336:19-336:26)
  8: StorageLive(_134)
    SourceInfo(src/lib.rs:336:5-336:19)
  9: _134 = &_11
    SourceInfo(src/lib.rs:336:5-336:19)
  10: StorageLive(_135)
    SourceInfo(src/lib.rs:336:20-336:25)
  11: _135 = _3
    SourceInfo(src/lib.rs:336:20-336:25)
  Terminator {
      source_info: SourceInfo(src/lib.rs:336:19-336:26)
      kind: _133 = <std::vec::Vec<usize> as std::ops::Index<usize>>::index(move _134, move _135) -> [return: bb65, unwind: bb69]
  }
  preds [bb16]
  succs [bb65, bb69]

bb19
  0: StorageLive(_39)
    SourceInfo(src/lib.rs:312:23-312:26)
  1: StorageLive(_40)
    SourceInfo(src/lib.rs:312:9-312:23)
  2: _40 = &mut _16
    SourceInfo(src/lib.rs:312:9-312:23)
  Terminator {
      source_info: SourceInfo(src/lib.rs:312:23-312:26)
      kind: _39 = <std::vec::Vec<usize> as std::ops::IndexMut<usize>>::index_mut(move _40, const 0_usize) -> [return: bb20, unwind: bb69]
  }
  preds [bb17]
  succs [bb20, bb69]

bb20
  0: StorageDead(_40)
    SourceInfo(src/lib.rs:312:25-312:26)
  1: (*_39) = move (_38.0: usize)
    SourceInfo(src/lib.rs:312:9-312:34)
  2: StorageDead(_37)
    SourceInfo(src/lib.rs:312:33-312:34)
  3: StorageDead(_39)
    SourceInfo(src/lib.rs:312:34-312:35)
  4: StorageLive(_41)
    SourceInfo(src/lib.rs:314:9-326:10)
  5: StorageLive(_42)
    SourceInfo(src/lib.rs:314:28-314:49)
  6: StorageLive(_43)
    SourceInfo(src/lib.rs:314:28-314:49)
  7: StorageLive(_44)
    SourceInfo(src/lib.rs:314:28-314:37)
  8: StorageLive(_45)
    SourceInfo(src/lib.rs:314:28-314:29)
  9: _45 = &(*_2)
    SourceInfo(src/lib.rs:314:28-314:29)
  Terminator {
      source_info: SourceInfo(src/lib.rs:314:28-314:37)
      kind: _44 = core::str::<impl str>::chars(move _45) -> [return: bb21, unwind: bb69]
  }
  preds [bb19]
  succs [bb21, bb69]

bb21
  0: StorageDead(_45)
    SourceInfo(src/lib.rs:314:36-314:37)
  Terminator {
      source_info: SourceInfo(src/lib.rs:314:28-314:49)
      kind: _43 = <std::str::Chars<'_> as std::iter::Iterator>::enumerate(move _44) -> [return: bb22, unwind: bb69]
  }
  preds [bb20]
  succs [bb22, bb69]

bb22
  0: StorageDead(_44)
    SourceInfo(src/lib.rs:314:48-314:49)
  Terminator {
      source_info: SourceInfo(src/lib.rs:314:28-314:49)
      kind: _42 = <std::iter::Enumerate<std::str::Chars<'_>> as std::iter::IntoIterator>::into_iter(move _43) -> [return: bb23, unwind: bb69]
  }
  preds [bb21]
  succs [bb23, bb69]

bb23
  0: StorageDead(_43)
    SourceInfo(src/lib.rs:314:48-314:49)
  1: PlaceMention(_42)
    SourceInfo(src/lib.rs:314:28-314:49)
  2: StorageLive(_46)
    SourceInfo(src/lib.rs:314:28-314:49)
  3: _46 = move _42
    SourceInfo(src/lib.rs:314:28-314:49)
  Terminator {
      source_info: SourceInfo(src/lib.rs:314:9-326:10)
      kind: goto -> bb24
  }
  preds [bb22]
  succs [bb24]

bb24
  Terminator {
      source_info: SourceInfo(src/lib.rs:314:9-326:10)
      kind: falseUnwind -> [real: bb25, unwind: bb69]
  }
  preds [bb23, bb62]
  succs [bb25, bb69]

bb25
  0: StorageLive(_47)
    SourceInfo(src/lib.rs:314:28-314:49)
  1: StorageLive(_48)
    SourceInfo(src/lib.rs:314:28-314:49)
  2: StorageLive(_49)
    SourceInfo(src/lib.rs:314:28-314:49)
  3: StorageLive(_50)
    SourceInfo(src/lib.rs:314:28-314:49)
  4: _50 = &mut _46
    SourceInfo(src/lib.rs:314:28-314:49)
  5: _49 = &mut (*_50)
    SourceInfo(src/lib.rs:314:28-314:49)
  Terminator {
      source_info: SourceInfo(src/lib.rs:314:28-314:49)
      kind: _48 = <std::iter::Enumerate<std::str::Chars<'_>> as std::iter::Iterator>::next(move _49) -> [return: bb26, unwind: bb69]
  }
  preds [bb24]
  succs [bb26, bb69]

bb26
  0: StorageDead(_49)
    SourceInfo(src/lib.rs:314:48-314:49)
  1: PlaceMention(_48)
    SourceInfo(src/lib.rs:314:28-314:49)
  2: _51 = discriminant(_48)
    SourceInfo(src/lib.rs:314:28-314:49)
  Terminator {
      source_info: SourceInfo(src/lib.rs:314:28-314:49)
      kind: switchInt(move _51) -> [0: bb28, 1: bb29, otherwise: bb27]
  }
  preds [bb25]
  succs [bb27, bb28, bb29]

bb27
  0: FakeRead(ForMatchedPlace(None), _48)
    SourceInfo(src/lib.rs:314:28-314:49)
  Terminator {
      source_info: SourceInfo(src/lib.rs:314:28-314:49)
      kind: unreachable
  }
  preds [bb26]
  succs []

bb28
  Terminator {
      source_info: SourceInfo(src/lib.rs:314:9-326:10)
      kind: falseEdge -> [real: bb30, imaginary: bb29]
  }
  preds [bb26]
  succs [bb29, bb30]

bb29
  0: StorageLive(_53)
    SourceInfo(src/lib.rs:314:14-314:15)
  1: _53 = (((_48 as Some).0: (usize, char)).0: usize)
    SourceInfo(src/lib.rs:314:14-314:15)
  2: StorageLive(_54)
    SourceInfo(src/lib.rs:314:17-314:23)
  3: _54 = (((_48 as Some).0: (usize, char)).1: char)
    SourceInfo(src/lib.rs:314:17-314:23)
  4: StorageLive(_55)
    SourceInfo(src/lib.rs:315:17-315:21)
  5: StorageLive(_56)
    SourceInfo(src/lib.rs:315:36-315:52)
  6: StorageLive(_57)
    SourceInfo(src/lib.rs:315:36-315:42)
  7: _57 = _36
    SourceInfo(src/lib.rs:315:36-315:42)
  8: StorageLive(_58)
    SourceInfo(src/lib.rs:315:46-315:52)
  9: _58 = _54
    SourceInfo(src/lib.rs:315:46-315:52)
  10: _56 = Ne(move _57, move _58)
    SourceInfo(src/lib.rs:315:36-315:52)
  11: StorageDead(_58)
    SourceInfo(src/lib.rs:315:51-315:52)
  12: StorageDead(_57)
    SourceInfo(src/lib.rs:315:51-315:52)
  Terminator {
      source_info: SourceInfo(src/lib.rs:315:24-315:53)
      kind: _55 = <usize as std::convert::From<bool>>::from(move _56) -> [return: bb31, unwind: bb69]
  }
  preds [bb26, bb28]
  succs [bb31, bb69]

bb30
  0: _41 = const ()
    SourceInfo(src/lib.rs:314:9-326:10)
  1: StorageDead(_50)
    SourceInfo(src/lib.rs:326:9-326:10)
  2: StorageDead(_48)
    SourceInfo(src/lib.rs:326:9-326:10)
  3: StorageDead(_47)
    SourceInfo(src/lib.rs:326:9-326:10)
  4: StorageDead(_46)
    SourceInfo(src/lib.rs:326:9-326:10)
  5: StorageDead(_42)
    SourceInfo(src/lib.rs:326:9-326:10)
  6: StorageDead(_41)
    SourceInfo(src/lib.rs:326:9-326:10)
  7: StorageLive(_122)
    SourceInfo(src/lib.rs:328:9-328:64)
  8: StorageLive(_123)
    SourceInfo(src/lib.rs:328:19-328:42)
  9: StorageLive(_124)
    SourceInfo(src/lib.rs:328:19-328:42)
  10: _124 = &mut _6
    SourceInfo(src/lib.rs:328:19-328:42)
  11: _123 = &mut (*_124)
    SourceInfo(src/lib.rs:328:19-328:42)
  12: StorageLive(_125)
    SourceInfo(src/lib.rs:328:44-328:63)
  13: StorageLive(_126)
    SourceInfo(src/lib.rs:328:44-328:63)
  14: _126 = &mut _11
    SourceInfo(src/lib.rs:328:44-328:63)
  15: _125 = &mut (*_126)
    SourceInfo(src/lib.rs:328:44-328:63)
  Terminator {
      source_info: SourceInfo(src/lib.rs:328:9-328:64)
      kind: _122 = std::mem::swap::<std::vec::Vec<usize>>(move _123, move _125) -> [return: bb63, unwind: bb69]
  }
  preds [bb28]
  succs [bb63, bb69]

bb31
  0: StorageDead(_56)
    SourceInfo(src/lib.rs:315:52-315:53)
  1: FakeRead(ForLet(None), _55)
    SourceInfo(src/lib.rs:315:17-315:21)
  2: StorageLive(_59)
    SourceInfo(src/lib.rs:316:37-319:14)
  3: StorageLive(_60)
    SourceInfo(src/lib.rs:317:17-317:38)
  4: StorageLive(_61)
    SourceInfo(src/lib.rs:317:17-317:34)
  5: StorageLive(_62)
    SourceInfo(src/lib.rs:317:31-317:34)
  6: StorageLive(_63)
    SourceInfo(src/lib.rs:317:17-317:31)
  7: _63 = &_16
    SourceInfo(src/lib.rs:317:17-317:31)
  8: StorageLive(_64)
    SourceInfo(src/lib.rs:317:32-317:33)
  9: _64 = _53
    SourceInfo(src/lib.rs:317:32-317:33)
  Terminator {
      source_info: SourceInfo(src/lib.rs:317:31-317:34)
      kind: _62 = <std::vec::Vec<usize> as std::ops::Index<usize>>::index(move _63, move _64) -> [return: bb32, unwind: bb69]
  }
  preds [bb29]
  succs [bb32, bb69]

bb32
  0: _61 = (*_62)
    SourceInfo(src/lib.rs:317:17-317:34)
  1: StorageDead(_64)
    SourceInfo(src/lib.rs:317:33-317:34)
  2: StorageDead(_63)
    SourceInfo(src/lib.rs:317:33-317:34)
  3: _65 = AddWithOverflow(_61, const 1_usize)
    SourceInfo(src/lib.rs:317:17-317:38)
  Terminator {
      source_info: SourceInfo(src/lib.rs:317:17-317:38)
      kind: assert(!move (_65.1: bool), "attempt to compute `{} + {}`, which would overflow", move _61, const 1_usize) -> [success: bb33, unwind: bb69]
  }
  preds [bb31]
  succs [bb33, bb69]

bb33
  0: _60 = move (_65.0: usize)
    SourceInfo(src/lib.rs:317:17-317:38)
  1: StorageDead(_61)
    SourceInfo(src/lib.rs:317:37-317:38)
  2: StorageLive(_66)
    SourceInfo(src/lib.rs:318:17-318:73)
  3: StorageLive(_67)
    SourceInfo(src/lib.rs:318:21-318:46)
  4: StorageLive(_68)
    SourceInfo(src/lib.rs:318:21-318:42)
  5: StorageLive(_69)
    SourceInfo(src/lib.rs:318:35-318:42)
  6: StorageLive(_70)
    SourceInfo(src/lib.rs:318:21-318:35)
  7: _70 = &_11
    SourceInfo(src/lib.rs:318:21-318:35)
  8: StorageLive(_71)
    SourceInfo(src/lib.rs:318:36-318:41)
  9: StorageLive(_72)
    SourceInfo(src/lib.rs:318:36-318:37)
  10: _72 = _53
    SourceInfo(src/lib.rs:318:36-318:37)
  11: _73 = AddWithOverflow(_72, const 1_usize)
    SourceInfo(src/lib.rs:318:36-318:41)
  Terminator {
      source_info: SourceInfo(src/lib.rs:318:36-318:41)
      kind: assert(!move (_73.1: bool), "attempt to compute `{} + {}`, which would overflow", move _72, const 1_usize) -> [success: bb34, unwind: bb69]
  }
  preds [bb32]
  succs [bb34, bb69]

bb34
  0: _71 = move (_73.0: usize)
    SourceInfo(src/lib.rs:318:36-318:41)
  1: StorageDead(_72)
    SourceInfo(src/lib.rs:318:40-318:41)
  Terminator {
      source_info: SourceInfo(src/lib.rs:318:35-318:42)
      kind: _69 = <std::vec::Vec<usize> as std::ops::Index<usize>>::index(move _70, move _71) -> [return: bb35, unwind: bb69]
  }
  preds [bb33]
  succs [bb35, bb69]

bb35
  0: _68 = (*_69)
    SourceInfo(src/lib.rs:318:21-318:42)
  1: StorageDead(_71)
    SourceInfo(src/lib.rs:318:41-318:42)
  2: StorageDead(_70)
    SourceInfo(src/lib.rs:318:41-318:42)
  3: _74 = AddWithOverflow(_68, const 1_usize)
    SourceInfo(src/lib.rs:318:21-318:46)
  Terminator {
      source_info: SourceInfo(src/lib.rs:318:21-318:46)
      kind: assert(!move (_74.1: bool), "attempt to compute `{} + {}`, which would overflow", move _68, const 1_usize) -> [success: bb36, unwind: bb69]
  }
  preds [bb34]
  succs [bb36, bb69]

bb36
  0: _67 = move (_74.0: usize)
    SourceInfo(src/lib.rs:318:21-318:46)
  1: StorageDead(_68)
    SourceInfo(src/lib.rs:318:45-318:46)
  2: StorageLive(_75)
    SourceInfo(src/lib.rs:318:48-318:72)
  3: StorageLive(_76)
    SourceInfo(src/lib.rs:318:48-318:65)
  4: StorageLive(_77)
    SourceInfo(src/lib.rs:318:62-318:65)
  5: StorageLive(_78)
    SourceInfo(src/lib.rs:318:48-318:62)
  6: _78 = &_11
    SourceInfo(src/lib.rs:318:48-318:62)
  7: StorageLive(_79)
    SourceInfo(src/lib.rs:318:63-318:64)
  8: _79 = _53
    SourceInfo(src/lib.rs:318:63-318:64)
  Terminator {
      source_info: SourceInfo(src/lib.rs:318:62-318:65)
      kind: _77 = <std::vec::Vec<usize> as std::ops::Index<usize>>::index(move _78, move _79) -> [return: bb37, unwind: bb69]
  }
  preds [bb35]
  succs [bb37, bb69]

bb37
  0: _76 = (*_77)
    SourceInfo(src/lib.rs:318:48-318:65)
  1: StorageDead(_79)
    SourceInfo(src/lib.rs:318:64-318:65)
  2: StorageDead(_78)
    SourceInfo(src/lib.rs:318:64-318:65)
  3: StorageLive(_80)
    SourceInfo(src/lib.rs:318:68-318:72)
  4: _80 = _55
    SourceInfo(src/lib.rs:318:68-318:72)
  5: _81 = AddWithOverflow(_76, _80)
    SourceInfo(src/lib.rs:318:48-318:72)
  Terminator {
      source_info: SourceInfo(src/lib.rs:318:48-318:72)
      kind: assert(!move (_81.1: bool), "attempt to compute `{} + {}`, which would overflow", move _76, move _80) -> [success: bb38, unwind: bb69]
  }
  preds [bb36]
  succs [bb38, bb69]

bb38
  0: _75 = move (_81.0: usize)
    SourceInfo(src/lib.rs:318:48-318:72)
  1: StorageDead(_80)
    SourceInfo(src/lib.rs:318:71-318:72)
  2: StorageDead(_76)
    SourceInfo(src/lib.rs:318:71-318:72)
  Terminator {
      source_info: SourceInfo(src/lib.rs:318:17-318:73)
      kind: _66 = std::cmp::min::<usize>(move _67, move _75) -> [return: bb39, unwind: bb69]
  }
  preds [bb37]
  succs [bb39, bb69]

bb39
  0: StorageDead(_75)
    SourceInfo(src/lib.rs:318:72-318:73)
  1: StorageDead(_67)
    SourceInfo(src/lib.rs:318:72-318:73)
  Terminator {
      source_info: SourceInfo(src/lib.rs:316:37-319:14)
      kind: _59 = std::cmp::min::<usize>(move _60, move _66) -> [return: bb40, unwind: bb69]
  }
  preds [bb38]
  succs [bb40, bb69]

bb40
  0: StorageDead(_66)
    SourceInfo(src/lib.rs:319:13-319:14)
  1: StorageDead(_60)
    SourceInfo(src/lib.rs:319:13-319:14)
  2: StorageLive(_82)
    SourceInfo(src/lib.rs:316:27-316:34)
  3: StorageLive(_83)
    SourceInfo(src/lib.rs:316:13-316:27)
  4: _83 = &mut _16
    SourceInfo(src/lib.rs:316:13-316:27)
  5: StorageLive(_84)
    SourceInfo(src/lib.rs:316:28-316:33)
  6: StorageLive(_85)
    SourceInfo(src/lib.rs:316:28-316:29)
  7: _85 = _53
    SourceInfo(src/lib.rs:316:28-316:29)
  8: _86 = AddWithOverflow(_85, const 1_usize)
    SourceInfo(src/lib.rs:316:28-316:33)
  Terminator {
      source_info: SourceInfo(src/lib.rs:316:28-316:33)
      kind: assert(!move (_86.1: bool), "attempt to compute `{} + {}`, which would overflow", move _85, const 1_usize) -> [success: bb41, unwind: bb69]
  }
  preds [bb39]
  succs [bb41, bb69]

bb41
  0: _84 = move (_86.0: usize)
    SourceInfo(src/lib.rs:316:28-316:33)
  1: StorageDead(_85)
    SourceInfo(src/lib.rs:316:32-316:33)
  Terminator {
      source_info: SourceInfo(src/lib.rs:316:27-316:34)
      kind: _82 = <std::vec::Vec<usize> as std::ops::IndexMut<usize>>::index_mut(move _83, move _84) -> [return: bb42, unwind: bb69]
  }
  preds [bb40]
  succs [bb42, bb69]

bb42
  0: StorageDead(_84)
    SourceInfo(src/lib.rs:316:33-316:34)
  1: StorageDead(_83)
    SourceInfo(src/lib.rs:316:33-316:34)
  2: (*_82) = move _59
    SourceInfo(src/lib.rs:316:13-319:14)
  3: StorageDead(_59)
    SourceInfo(src/lib.rs:319:13-319:14)
  4: StorageDead(_82)
    SourceInfo(src/lib.rs:319:14-319:15)
  5: StorageDead(_77)
    SourceInfo(src/lib.rs:319:14-319:15)
  6: StorageDead(_69)
    SourceInfo(src/lib.rs:319:14-319:15)
  7: StorageDead(_62)
    SourceInfo(src/lib.rs:319:14-319:15)
  8: StorageLive(_87)
    SourceInfo(src/lib.rs:320:13-323:14)
  9: StorageLive(_88)
    SourceInfo(src/lib.rs:320:16-320:21)
  10: StorageLive(_89)
    SourceInfo(src/lib.rs:320:16-320:17)
  11: _89 = _35
    SourceInfo(src/lib.rs:320:16-320:17)
  12: _88 = Gt(move _89, const 0_usize)
    SourceInfo(src/lib.rs:320:16-320:21)
  Terminator {
      source_info: SourceInfo(src/lib.rs:320:16-320:21)
      kind: switchInt(move _88) -> [0: bb60, otherwise: bb43]
  }
  preds [bb41]
  succs [bb43, bb60]

bb43
  0: StorageDead(_89)
    SourceInfo(src/lib.rs:320:20-320:21)
  1: StorageLive(_90)
    SourceInfo(src/lib.rs:320:25-320:30)
  2: StorageLive(_91)
    SourceInfo(src/lib.rs:320:25-320:26)
  3: _91 = _53
    SourceInfo(src/lib.rs:320:25-320:26)
  4: _90 = Gt(move _91, const 0_usize)
    SourceInfo(src/lib.rs:320:25-320:30)
  Terminator {
      source_info: SourceInfo(src/lib.rs:320:25-320:30)
      kind: switchInt(move _90) -> [0: bb59, otherwise: bb44]
  }
  preds [bb42]
  succs [bb44, bb59]

bb44
  0: StorageDead(_91)
    SourceInfo(src/lib.rs:320:29-320:30)
  1: StorageLive(_92)
    SourceInfo(src/lib.rs:320:34-320:50)
  2: StorageLive(_93)
    SourceInfo(src/lib.rs:320:34-320:40)
  3: _93 = _36
    SourceInfo(src/lib.rs:320:34-320:40)
  4: StorageLive(_94)
    SourceInfo(src/lib.rs:320:44-320:50)
  5: _94 = _54
    SourceInfo(src/lib.rs:320:44-320:50)
  6: _92 = Ne(move _93, move _94)
    SourceInfo(src/lib.rs:320:34-320:50)
  Terminator {
      source_info: SourceInfo(src/lib.rs:320:34-320:50)
      kind: switchInt(move _92) -> [0: bb58, otherwise: bb45]
  }
  preds [bb43]
  succs [bb45, bb58]

bb45
  0: StorageDead(_94)
    SourceInfo(src/lib.rs:320:49-320:50)
  1: StorageDead(_93)
    SourceInfo(src/lib.rs:320:49-320:50)
  2: StorageLive(_95)
    SourceInfo(src/lib.rs:320:54-320:75)
  3: StorageLive(_96)
    SourceInfo(src/lib.rs:320:54-320:60)
  4: _96 = _36
    SourceInfo(src/lib.rs:320:54-320:60)
  5: StorageLive(_97)
    SourceInfo(src/lib.rs:320:64-320:75)
  6: _97 = _21
    SourceInfo(src/lib.rs:320:64-320:75)
  7: _95 = Eq(move _96, move _97)
    SourceInfo(src/lib.rs:320:54-320:75)
  Terminator {
      source_info: SourceInfo(src/lib.rs:320:54-320:75)
      kind: switchInt(move _95) -> [0: bb57, otherwise: bb46]
  }
  preds [bb44]
  succs [bb46, bb57]

bb46
  0: StorageDead(_97)
    SourceInfo(src/lib.rs:320:74-320:75)
  1: StorageDead(_96)
    SourceInfo(src/lib.rs:320:74-320:75)
  2: StorageLive(_98)
    SourceInfo(src/lib.rs:320:79-320:100)
  3: StorageLive(_99)
    SourceInfo(src/lib.rs:320:79-320:85)
  4: _99 = _54
    SourceInfo(src/lib.rs:320:79-320:85)
  5: StorageLive(_100)
    SourceInfo(src/lib.rs:320:89-320:100)
  6: _100 = _20
    SourceInfo(src/lib.rs:320:89-320:100)
  7: _98 = Eq(move _99, move _100)
    SourceInfo(src/lib.rs:320:79-320:100)
  Terminator {
      source_info: SourceInfo(src/lib.rs:320:79-320:100)
      kind: switchInt(move _98) -> [0: bb56, otherwise: bb47]
  }
  preds [bb45]
  succs [bb47, bb56]

bb47
  0: StorageDead(_100)
    SourceInfo(src/lib.rs:320:99-320:100)
  1: StorageDead(_99)
    SourceInfo(src/lib.rs:320:99-320:100)
  2: StorageLive(_101)
    SourceInfo(src/lib.rs:322:41-322:98)
  3: StorageLive(_102)
    SourceInfo(src/lib.rs:322:45-322:66)
  4: StorageLive(_103)
    SourceInfo(src/lib.rs:322:59-322:66)
  5: StorageLive(_104)
    SourceInfo(src/lib.rs:322:45-322:59)
  6: _104 = &_16
    SourceInfo(src/lib.rs:322:45-322:59)
  7: StorageLive(_105)
    SourceInfo(src/lib.rs:322:60-322:65)
  8: StorageLive(_106)
    SourceInfo(src/lib.rs:322:60-322:61)
  9: _106 = _53
    SourceInfo(src/lib.rs:322:60-322:61)
  10: _107 = AddWithOverflow(_106, const 1_usize)
    SourceInfo(src/lib.rs:322:60-322:65)
  Terminator {
      source_info: SourceInfo(src/lib.rs:322:60-322:65)
      kind: assert(!move (_107.1: bool), "attempt to compute `{} + {}`, which would overflow", move _106, const 1_usize) -> [success: bb48, unwind: bb69]
  }
  preds [bb46]
  succs [bb48, bb69]

bb48
  0: _105 = move (_107.0: usize)
    SourceInfo(src/lib.rs:322:60-322:65)
  1: StorageDead(_106)
    SourceInfo(src/lib.rs:322:64-322:65)
  Terminator {
      source_info: SourceInfo(src/lib.rs:322:59-322:66)
      kind: _103 = <std::vec::Vec<usize> as std::ops::Index<usize>>::index(move _104, move _105) -> [return: bb49, unwind: bb69]
  }
  preds [bb47]
  succs [bb49, bb69]

bb49
  0: _102 = (*_103)
    SourceInfo(src/lib.rs:322:45-322:66)
  1: StorageDead(_105)
    SourceInfo(src/lib.rs:322:65-322:66)
  2: StorageDead(_104)
    SourceInfo(src/lib.rs:322:65-322:66)
  3: StorageLive(_108)
    SourceInfo(src/lib.rs:322:68-322:97)
  4: StorageLive(_109)
    SourceInfo(src/lib.rs:322:68-322:93)
  5: StorageLive(_110)
    SourceInfo(src/lib.rs:322:86-322:93)
  6: StorageLive(_111)
    SourceInfo(src/lib.rs:322:68-322:86)
  7: _111 = &_6
    SourceInfo(src/lib.rs:322:68-322:86)
  8: StorageLive(_112)
    SourceInfo(src/lib.rs:322:87-322:92)
  9: StorageLive(_113)
    SourceInfo(src/lib.rs:322:87-322:88)
  10: _113 = _53
    SourceInfo(src/lib.rs:322:87-322:88)
  11: _114 = SubWithOverflow(_113, const 1_usize)
    SourceInfo(src/lib.rs:322:87-322:92)
  Terminator {
      source_info: SourceInfo(src/lib.rs:322:87-322:92)
      kind: assert(!move (_114.1: bool), "attempt to compute `{} - {}`, which would overflow", move _113, const 1_usize) -> [success: bb50, unwind: bb69]
  }
  preds [bb48]
  succs [bb50, bb69]

bb50
  0: _112 = move (_114.0: usize)
    SourceInfo(src/lib.rs:322:87-322:92)
  1: StorageDead(_113)
    SourceInfo(src/lib.rs:322:91-322:92)
  Terminator {
      source_info: SourceInfo(src/lib.rs:322:86-322:93)
      kind: _110 = <std::vec::Vec<usize> as std::ops::Index<usize>>::index(move _111, move _112) -> [return: bb51, unwind: bb69]
  }
  preds [bb49]
  succs [bb51, bb69]

bb51
  0: _109 = (*_110)
    SourceInfo(src/lib.rs:322:68-322:93)
  1: StorageDead(_112)
    SourceInfo(src/lib.rs:322:92-322:93)
  2: StorageDead(_111)
    SourceInfo(src/lib.rs:322:92-322:93)
  3: _115 = AddWithOverflow(_109, const 1_usize)
    SourceInfo(src/lib.rs:322:68-322:97)
  Terminator {
      source_info: SourceInfo(src/lib.rs:322:68-322:97)
      kind: assert(!move (_115.1: bool), "attempt to compute `{} + {}`, which would overflow", move _109, const 1_usize) -> [success: bb52, unwind: bb69]
  }
  preds [bb50]
  succs [bb52, bb69]

bb52
  0: _108 = move (_115.0: usize)
    SourceInfo(src/lib.rs:322:68-322:97)
  1: StorageDead(_109)
    SourceInfo(src/lib.rs:322:96-322:97)
  Terminator {
      source_info: SourceInfo(src/lib.rs:322:41-322:98)
      kind: _101 = std::cmp::min::<usize>(move _102, move _108) -> [return: bb53, unwind: bb69]
  }
  preds [bb51]
  succs [bb53, bb69]

bb53
  0: StorageDead(_108)
    SourceInfo(src/lib.rs:322:97-322:98)
  1: StorageDead(_102)
    SourceInfo(src/lib.rs:322:97-322:98)
  2: StorageLive(_116)
    SourceInfo(src/lib.rs:322:31-322:38)
  3: StorageLive(_117)
    SourceInfo(src/lib.rs:322:17-322:31)
  4: _117 = &mut _16
    SourceInfo(src/lib.rs:322:17-322:31)
  5: StorageLive(_118)
    SourceInfo(src/lib.rs:322:32-322:37)
  6: StorageLive(_119)
    SourceInfo(src/lib.rs:322:32-322:33)
  7: _119 = _53
    SourceInfo(src/lib.rs:322:32-322:33)
  8: _120 = AddWithOverflow(_119, const 1_usize)
    SourceInfo(src/lib.rs:322:32-322:37)
  Terminator {
      source_info: SourceInfo(src/lib.rs:322:32-322:37)
      kind: assert(!move (_120.1: bool), "attempt to compute `{} + {}`, which would overflow", move _119, const 1_usize) -> [success: bb54, unwind: bb69]
  }
  preds [bb52]
  succs [bb54, bb69]

bb54
  0: _118 = move (_120.0: usize)
    SourceInfo(src/lib.rs:322:32-322:37)
  1: StorageDead(_119)
    SourceInfo(src/lib.rs:322:36-322:37)
  Terminator {
      source_info: SourceInfo(src/lib.rs:322:31-322:38)
      kind: _116 = <std::vec::Vec<usize> as std::ops::IndexMut<usize>>::index_mut(move _117, move _118) -> [return: bb55, unwind: bb69]
  }
  preds [bb53]
  succs [bb55, bb69]

bb55
  0: StorageDead(_118)
    SourceInfo(src/lib.rs:322:37-322:38)
  1: StorageDead(_117)
    SourceInfo(src/lib.rs:322:37-322:38)
  2: (*_116) = move _101
    SourceInfo(src/lib.rs:322:17-322:98)
  3: StorageDead(_101)
    SourceInfo(src/lib.rs:322:97-322:98)
  4: StorageDead(_116)
    SourceInfo(src/lib.rs:322:98-322:99)
  5: StorageDead(_110)
    SourceInfo(src/lib.rs:322:98-322:99)
  6: StorageDead(_103)
    SourceInfo(src/lib.rs:322:98-322:99)
  7: _87 = const ()
    SourceInfo(src/lib.rs:321:13-323:14)
  Terminator {
      source_info: SourceInfo(src/lib.rs:320:13-323:14)
      kind: goto -> bb62
  }
  preds [bb54]
  succs [bb62]

bb56
  0: StorageDead(_100)
    SourceInfo(src/lib.rs:320:99-320:100)
  1: StorageDead(_99)
    SourceInfo(src/lib.rs:320:99-320:100)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb61
  }
  preds [bb46]
  succs [bb61]

bb57
  0: StorageDead(_97)
    SourceInfo(src/lib.rs:320:74-320:75)
  1: StorageDead(_96)
    SourceInfo(src/lib.rs:320:74-320:75)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb61
  }
  preds [bb45]
  succs [bb61]

bb58
  0: StorageDead(_94)
    SourceInfo(src/lib.rs:320:49-320:50)
  1: StorageDead(_93)
    SourceInfo(src/lib.rs:320:49-320:50)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb61
  }
  preds [bb44]
  succs [bb61]

bb59
  0: StorageDead(_91)
    SourceInfo(src/lib.rs:320:29-320:30)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb61
  }
  preds [bb43]
  succs [bb61]

bb60
  0: StorageDead(_89)
    SourceInfo(src/lib.rs:320:20-320:21)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb61
  }
  preds [bb42]
  succs [bb61]

bb61
  0: _87 = const ()
    SourceInfo(src/lib.rs:323:14-323:14)
  Terminator {
      source_info: SourceInfo(src/lib.rs:320:13-323:14)
      kind: goto -> bb62
  }
  preds [bb56, bb57, bb58, bb59, bb60]
  succs [bb62]

bb62
  0: StorageDead(_98)
    SourceInfo(src/lib.rs:323:13-323:14)
  1: StorageDead(_95)
    SourceInfo(src/lib.rs:323:13-323:14)
  2: StorageDead(_92)
    SourceInfo(src/lib.rs:323:13-323:14)
  3: StorageDead(_90)
    SourceInfo(src/lib.rs:323:13-323:14)
  4: StorageDead(_88)
    SourceInfo(src/lib.rs:323:13-323:14)
  5: StorageDead(_87)
    SourceInfo(src/lib.rs:323:13-323:14)
  6: StorageLive(_121)
    SourceInfo(src/lib.rs:325:27-325:33)
  7: _121 = _54
    SourceInfo(src/lib.rs:325:27-325:33)
  8: _21 = move _121
    SourceInfo(src/lib.rs:325:13-325:33)
  9: StorageDead(_121)
    SourceInfo(src/lib.rs:325:32-325:33)
  10: _47 = const ()
    SourceInfo(src/lib.rs:314:50-326:10)
  11: StorageDead(_55)
    SourceInfo(src/lib.rs:326:9-326:10)
  12: StorageDead(_54)
    SourceInfo(src/lib.rs:326:9-326:10)
  13: StorageDead(_53)
    SourceInfo(src/lib.rs:326:9-326:10)
  14: StorageDead(_50)
    SourceInfo(src/lib.rs:326:9-326:10)
  15: StorageDead(_48)
    SourceInfo(src/lib.rs:326:9-326:10)
  16: StorageDead(_47)
    SourceInfo(src/lib.rs:326:9-326:10)
  17: _28 = const ()
    SourceInfo(src/lib.rs:314:9-326:10)
  Terminator {
      source_info: SourceInfo(src/lib.rs:314:9-326:10)
      kind: goto -> bb24
  }
  preds [bb55, bb61]
  succs [bb24]

bb63
  0: StorageDead(_125)
    SourceInfo(src/lib.rs:328:63-328:64)
  1: StorageDead(_123)
    SourceInfo(src/lib.rs:328:63-328:64)
  2: StorageDead(_126)
    SourceInfo(src/lib.rs:328:64-328:65)
  3: StorageDead(_124)
    SourceInfo(src/lib.rs:328:64-328:65)
  4: StorageDead(_122)
    SourceInfo(src/lib.rs:328:64-328:65)
  5: StorageLive(_127)
    SourceInfo(src/lib.rs:329:9-329:60)
  6: StorageLive(_128)
    SourceInfo(src/lib.rs:329:19-329:38)
  7: StorageLive(_129)
    SourceInfo(src/lib.rs:329:19-329:38)
  8: _129 = &mut _11
    SourceInfo(src/lib.rs:329:19-329:38)
  9: _128 = &mut (*_129)
    SourceInfo(src/lib.rs:329:19-329:38)
  10: StorageLive(_130)
    SourceInfo(src/lib.rs:329:40-329:59)
  11: StorageLive(_131)
    SourceInfo(src/lib.rs:329:40-329:59)
  12: _131 = &mut _16
    SourceInfo(src/lib.rs:329:40-329:59)
  13: _130 = &mut (*_131)
    SourceInfo(src/lib.rs:329:40-329:59)
  Terminator {
      source_info: SourceInfo(src/lib.rs:329:9-329:60)
      kind: _127 = std::mem::swap::<std::vec::Vec<usize>>(move _128, move _130) -> [return: bb64, unwind: bb69]
  }
  preds [bb30]
  succs [bb64, bb69]

bb64
  0: StorageDead(_130)
    SourceInfo(src/lib.rs:329:59-329:60)
  1: StorageDead(_128)
    SourceInfo(src/lib.rs:329:59-329:60)
  2: StorageDead(_131)
    SourceInfo(src/lib.rs:329:60-329:61)
  3: StorageDead(_129)
    SourceInfo(src/lib.rs:329:60-329:61)
  4: StorageDead(_127)
    SourceInfo(src/lib.rs:329:60-329:61)
  5: StorageLive(_132)
    SourceInfo(src/lib.rs:330:23-330:29)
  6: _132 = _36
    SourceInfo(src/lib.rs:330:23-330:29)
  7: _20 = move _132
    SourceInfo(src/lib.rs:330:9-330:29)
  8: StorageDead(_132)
    SourceInfo(src/lib.rs:330:28-330:29)
  9: _29 = const ()
    SourceInfo(src/lib.rs:311:46-331:6)
  10: StorageDead(_36)
    SourceInfo(src/lib.rs:331:5-331:6)
  11: StorageDead(_35)
    SourceInfo(src/lib.rs:331:5-331:6)
  12: StorageDead(_32)
    SourceInfo(src/lib.rs:331:5-331:6)
  13: StorageDead(_30)
    SourceInfo(src/lib.rs:331:5-331:6)
  14: StorageDead(_29)
    SourceInfo(src/lib.rs:331:5-331:6)
  15: _28 = const ()
    SourceInfo(src/lib.rs:311:5-331:6)
  Terminator {
      source_info: SourceInfo(src/lib.rs:311:5-331:6)
      kind: goto -> bb12
  }
  preds [bb63]
  succs [bb12]

bb65
  0: _0 = (*_133)
    SourceInfo(src/lib.rs:336:5-336:26)
  1: StorageDead(_135)
    SourceInfo(src/lib.rs:336:25-336:26)
  2: StorageDead(_134)
    SourceInfo(src/lib.rs:336:25-336:26)
  3: StorageDead(_21)
    SourceInfo(src/lib.rs:337:1-337:2)
  4: StorageDead(_20)
    SourceInfo(src/lib.rs:337:1-337:2)
  Terminator {
      source_info: SourceInfo(src/lib.rs:337:1-337:2)
      kind: drop(_16) -> [return: bb66, unwind: bb70]
  }
  preds [bb18]
  succs [bb66, bb70]

bb66
  0: StorageDead(_16)
    SourceInfo(src/lib.rs:337:1-337:2)
  Terminator {
      source_info: SourceInfo(src/lib.rs:337:1-337:2)
      kind: drop(_11) -> [return: bb67, unwind: bb71]
  }
  preds [bb65]
  succs [bb67, bb71]

bb67
  0: StorageDead(_11)
    SourceInfo(src/lib.rs:337:1-337:2)
  Terminator {
      source_info: SourceInfo(src/lib.rs:337:1-337:2)
      kind: drop(_6) -> [return: bb68, unwind: bb72]
  }
  preds [bb66]
  succs [bb68, bb72]

bb68
  0: StorageDead(_6)
    SourceInfo(src/lib.rs:337:1-337:2)
  1: StorageDead(_3)
    SourceInfo(src/lib.rs:337:1-337:2)
  2: StorageDead(_133)
    SourceInfo(src/lib.rs:337:1-337:2)
  Terminator {
      source_info: SourceInfo(src/lib.rs:337:2-337:2)
      kind: return
  }
  preds [bb67]
  succs []

bb69
  Terminator {
      source_info: SourceInfo(src/lib.rs:337:1-337:2)
      kind: drop(_16) -> [return: bb70, unwind terminate(cleanup)]
  }
  preds [bb8, bb9, bb10, bb12, bb13, bb17, bb18, bb19, bb20, bb21, bb22, bb24, bb25, bb29, bb30, bb31, bb32, bb33, bb34, bb35, bb36, bb37, bb38, bb39, bb40, bb41, bb47, bb48, bb49, bb50, bb51, bb52, bb53, bb54, bb63]
  succs [bb70]

bb70
  Terminator {
      source_info: SourceInfo(src/lib.rs:337:1-337:2)
      kind: drop(_11) -> [return: bb71, unwind terminate(cleanup)]
  }
  preds [bb6, bb7, bb65, bb69]
  succs [bb71]

bb71
  Terminator {
      source_info: SourceInfo(src/lib.rs:337:1-337:2)
      kind: drop(_6) -> [return: bb72, unwind terminate(cleanup)]
  }
  preds [bb4, bb5, bb66, bb70]
  succs [bb72]

bb72
  Terminator {
      source_info: SourceInfo(src/lib.rs:300:1-337:2)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3, bb67, bb71]
  succs []

