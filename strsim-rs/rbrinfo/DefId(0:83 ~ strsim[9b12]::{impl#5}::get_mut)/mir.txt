bb0
  0: StorageLive(_3)
    SourceInfo(src/lib.rs:499:9-499:24)
  1: StorageLive(_4)
    SourceInfo(src/lib.rs:472:9-474:10)
  2: StorageLive(_5)
    SourceInfo(src/lib.rs:472:12-472:30)
  3: StorageLive(_6)
    SourceInfo(src/lib.rs:472:12-472:20)
  4: _6 = &((*_1).3: std::option::Option<std::vec::Vec<GrowingHashmapMapElemChar<ValueType>>>)
    SourceInfo(src/lib.rs:472:12-472:20)
  Terminator {
      source_info: SourceInfo(src/lib.rs:472:12-472:30)
      kind: _5 = std::option::Option::<std::vec::Vec<GrowingHashmapMapElemChar<ValueType>>>::is_none(move _6) -> [return: bb1, unwind: bb30]
  }
  preds []
  succs [bb1, bb30]

bb1
  Terminator {
      source_info: SourceInfo(src/lib.rs:472:12-472:30)
      kind: switchInt(move _5) -> [0: bb4, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb4]

bb2
  0: StorageDead(_6)
    SourceInfo(src/lib.rs:472:29-472:30)
  1: StorageLive(_7)
    SourceInfo(src/lib.rs:473:13-473:28)
  2: StorageLive(_8)
    SourceInfo(src/lib.rs:473:13-473:17)
  3: _8 = &mut (*_1)
    SourceInfo(src/lib.rs:473:13-473:17)
  Terminator {
      source_info: SourceInfo(src/lib.rs:473:13-473:28)
      kind: _7 = GrowingHashmapChar::<ValueType>::allocate(move _8) -> [return: bb3, unwind: bb30]
  }
  preds [bb1]
  succs [bb3, bb30]

bb3
  0: StorageDead(_8)
    SourceInfo(src/lib.rs:473:27-473:28)
  1: StorageDead(_7)
    SourceInfo(src/lib.rs:473:28-473:29)
  2: _4 = const ()
    SourceInfo(src/lib.rs:472:31-474:10)
  Terminator {
      source_info: SourceInfo(src/lib.rs:472:9-474:10)
      kind: goto -> bb5
  }
  preds [bb2]
  succs [bb5]

bb4
  0: StorageDead(_6)
    SourceInfo(src/lib.rs:472:29-472:30)
  1: _4 = const ()
    SourceInfo(src/lib.rs:474:10-474:10)
  Terminator {
      source_info: SourceInfo(src/lib.rs:472:9-474:10)
      kind: goto -> bb5
  }
  preds [bb1]
  succs [bb5]

bb5
  0: StorageDead(_5)
    SourceInfo(src/lib.rs:474:9-474:10)
  1: StorageDead(_4)
    SourceInfo(src/lib.rs:474:9-474:10)
  2: StorageLive(_9)
    SourceInfo(src/lib.rs:476:13-476:18)
  3: StorageLive(_10)
    SourceInfo(src/lib.rs:476:21-476:25)
  4: _10 = &(*_1)
    SourceInfo(src/lib.rs:476:21-476:25)
  5: StorageLive(_11)
    SourceInfo(src/lib.rs:476:33-476:36)
  6: _11 = _2
    SourceInfo(src/lib.rs:476:33-476:36)
  Terminator {
      source_info: SourceInfo(src/lib.rs:476:21-476:37)
      kind: _9 = GrowingHashmapChar::<ValueType>::lookup(move _10, move _11) -> [return: bb6, unwind: bb30]
  }
  preds [bb3, bb4]
  succs [bb6, bb30]

bb6
  0: StorageDead(_11)
    SourceInfo(src/lib.rs:476:36-476:37)
  1: StorageDead(_10)
    SourceInfo(src/lib.rs:476:36-476:37)
  2: FakeRead(ForLet(None), _9)
    SourceInfo(src/lib.rs:476:13-476:18)
  3: StorageLive(_12)
    SourceInfo(src/lib.rs:477:9-492:10)
  4: StorageLive(_13)
    SourceInfo(src/lib.rs:477:12-482:34)
  5: StorageLive(_14)
    SourceInfo(src/lib.rs:477:12-481:19)
  6: StorageLive(_15)
    SourceInfo(src/lib.rs:480:58-480:61)
  7: StorageLive(_16)
    SourceInfo(src/lib.rs:477:12-480:58)
  8: StorageLive(_17)
    SourceInfo(src/lib.rs:477:12-480:58)
  9: StorageLive(_18)
    SourceInfo(src/lib.rs:477:12-479:22)
  10: StorageLive(_19)
    SourceInfo(src/lib.rs:477:12-478:17)
  11: _19 = &((*_1).3: std::option::Option<std::vec::Vec<GrowingHashmapMapElemChar<ValueType>>>)
    SourceInfo(src/lib.rs:477:12-478:17)
  Terminator {
      source_info: SourceInfo(src/lib.rs:477:12-479:22)
      kind: _18 = std::option::Option::<std::vec::Vec<GrowingHashmapMapElemChar<ValueType>>>::as_ref(move _19) -> [return: bb7, unwind: bb30]
  }
  preds [bb5]
  succs [bb7, bb30]

bb7
  0: StorageDead(_19)
    SourceInfo(src/lib.rs:479:21-479:22)
  1: StorageLive(_20)
    SourceInfo(src/lib.rs:480:21-480:57)
  2: StorageLive(_21)
    SourceInfo(src/lib.rs:480:21-480:57)
  3: _21 = const "map should have been created above"
    SourceInfo(src/lib.rs:480:21-480:57)
  4: _20 = &(*_21)
    SourceInfo(src/lib.rs:480:21-480:57)
  Terminator {
      source_info: SourceInfo(src/lib.rs:477:12-480:58)
      kind: _17 = std::option::Option::<&std::vec::Vec<GrowingHashmapMapElemChar<ValueType>>>::expect(move _18, move _20) -> [return: bb8, unwind: bb30]
  }
  preds [bb6]
  succs [bb8, bb30]

bb8
  0: _16 = &(*_17)
    SourceInfo(src/lib.rs:477:12-480:58)
  1: StorageDead(_20)
    SourceInfo(src/lib.rs:480:57-480:58)
  2: StorageDead(_18)
    SourceInfo(src/lib.rs:480:57-480:58)
  3: StorageLive(_22)
    SourceInfo(src/lib.rs:480:59-480:60)
  4: _22 = _9
    SourceInfo(src/lib.rs:480:59-480:60)
  Terminator {
      source_info: SourceInfo(src/lib.rs:480:58-480:61)
      kind: _15 = <std::vec::Vec<GrowingHashmapMapElemChar<ValueType>> as std::ops::Index<usize>>::index(move _16, move _22) -> [return: bb9, unwind: bb30]
  }
  preds [bb7]
  succs [bb9, bb30]

bb9
  0: StorageDead(_22)
    SourceInfo(src/lib.rs:480:60-480:61)
  1: StorageDead(_16)
    SourceInfo(src/lib.rs:480:60-480:61)
  2: _14 = &((*_15).1: ValueType)
    SourceInfo(src/lib.rs:477:12-481:19)
  3: StorageLive(_23)
    SourceInfo(src/lib.rs:482:16-482:34)
  4: StorageLive(_24)
    SourceInfo(src/lib.rs:482:16-482:34)
  Terminator {
      source_info: SourceInfo(src/lib.rs:482:16-482:34)
      kind: _24 = <ValueType as std::default::Default>::default() -> [return: bb10, unwind: bb30]
  }
  preds [bb8]
  succs [bb10, bb30]

bb10
  0: _23 = &_24
    SourceInfo(src/lib.rs:482:16-482:34)
  Terminator {
      source_info: SourceInfo(src/lib.rs:477:12-482:34)
      kind: _13 = <ValueType as std::cmp::PartialEq>::eq(move _14, move _23) -> [return: bb11, unwind: bb30]
  }
  preds [bb9]
  succs [bb11, bb30]

bb11
  Terminator {
      source_info: SourceInfo(src/lib.rs:477:12-482:34)
      kind: switchInt(move _13) -> [0: bb25, otherwise: bb12]
  }
  preds [bb10]
  succs [bb12, bb25]

bb12
  0: StorageDead(_24)
    SourceInfo(src/lib.rs:482:33-482:34)
  1: StorageDead(_23)
    SourceInfo(src/lib.rs:482:33-482:34)
  2: StorageDead(_21)
    SourceInfo(src/lib.rs:482:33-482:34)
  3: StorageDead(_17)
    SourceInfo(src/lib.rs:482:33-482:34)
  4: StorageDead(_15)
    SourceInfo(src/lib.rs:482:33-482:34)
  5: StorageDead(_14)
    SourceInfo(src/lib.rs:482:33-482:34)
  6: _25 = AddWithOverflow(((*_1).1: i32), const 1_i32)
    SourceInfo(src/lib.rs:484:13-484:27)
  Terminator {
      source_info: SourceInfo(src/lib.rs:484:13-484:27)
      kind: assert(!move (_25.1: bool), "attempt to compute `{} + {}`, which would overflow", ((*_1).1: i32), const 1_i32) -> [success: bb13, unwind: bb30]
  }
  preds [bb11]
  succs [bb13, bb30]

bb13
  0: ((*_1).1: i32) = move (_25.0: i32)
    SourceInfo(src/lib.rs:484:13-484:27)
  1: StorageLive(_26)
    SourceInfo(src/lib.rs:486:13-489:14)
  2: StorageLive(_27)
    SourceInfo(src/lib.rs:486:16-486:52)
  3: StorageLive(_28)
    SourceInfo(src/lib.rs:486:16-486:29)
  4: StorageLive(_29)
    SourceInfo(src/lib.rs:486:16-486:25)
  5: _29 = ((*_1).1: i32)
    SourceInfo(src/lib.rs:486:16-486:25)
  6: _30 = MulWithOverflow(_29, const 3_i32)
    SourceInfo(src/lib.rs:486:16-486:29)
  Terminator {
      source_info: SourceInfo(src/lib.rs:486:16-486:29)
      kind: assert(!move (_30.1: bool), "attempt to compute `{} * {}`, which would overflow", move _29, const 3_i32) -> [success: bb14, unwind: bb30]
  }
  preds [bb12]
  succs [bb14, bb30]

bb14
  0: _28 = move (_30.0: i32)
    SourceInfo(src/lib.rs:486:16-486:29)
  1: StorageDead(_29)
    SourceInfo(src/lib.rs:486:28-486:29)
  2: StorageLive(_31)
    SourceInfo(src/lib.rs:486:33-486:52)
  3: StorageLive(_32)
    SourceInfo(src/lib.rs:486:33-486:48)
  4: StorageLive(_33)
    SourceInfo(src/lib.rs:486:34-486:43)
  5: _33 = ((*_1).2: i32)
    SourceInfo(src/lib.rs:486:34-486:43)
  6: _34 = AddWithOverflow(_33, const 1_i32)
    SourceInfo(src/lib.rs:486:33-486:48)
  Terminator {
      source_info: SourceInfo(src/lib.rs:486:33-486:48)
      kind: assert(!move (_34.1: bool), "attempt to compute `{} + {}`, which would overflow", move _33, const 1_i32) -> [success: bb15, unwind: bb30]
  }
  preds [bb13]
  succs [bb15, bb30]

bb15
  0: _32 = move (_34.0: i32)
    SourceInfo(src/lib.rs:486:33-486:48)
  1: StorageDead(_33)
    SourceInfo(src/lib.rs:486:47-486:48)
  2: _35 = MulWithOverflow(_32, const 2_i32)
    SourceInfo(src/lib.rs:486:33-486:52)
  Terminator {
      source_info: SourceInfo(src/lib.rs:486:33-486:52)
      kind: assert(!move (_35.1: bool), "attempt to compute `{} * {}`, which would overflow", move _32, const 2_i32) -> [success: bb16, unwind: bb30]
  }
  preds [bb14]
  succs [bb16, bb30]

bb16
  0: _31 = move (_35.0: i32)
    SourceInfo(src/lib.rs:486:33-486:52)
  1: StorageDead(_32)
    SourceInfo(src/lib.rs:486:51-486:52)
  2: _27 = Ge(move _28, move _31)
    SourceInfo(src/lib.rs:486:16-486:52)
  Terminator {
      source_info: SourceInfo(src/lib.rs:486:16-486:52)
      kind: switchInt(move _27) -> [0: bb22, otherwise: bb17]
  }
  preds [bb15]
  succs [bb17, bb22]

bb17
  0: StorageDead(_31)
    SourceInfo(src/lib.rs:486:51-486:52)
  1: StorageDead(_28)
    SourceInfo(src/lib.rs:486:51-486:52)
  2: StorageLive(_36)
    SourceInfo(src/lib.rs:487:17-487:47)
  3: StorageLive(_37)
    SourceInfo(src/lib.rs:487:17-487:21)
  4: _37 = &mut (*_1)
    SourceInfo(src/lib.rs:487:17-487:21)
  5: StorageLive(_38)
    SourceInfo(src/lib.rs:487:27-487:46)
  6: StorageLive(_39)
    SourceInfo(src/lib.rs:487:27-487:42)
  7: StorageLive(_40)
    SourceInfo(src/lib.rs:487:28-487:37)
  8: _40 = ((*_1).0: i32)
    SourceInfo(src/lib.rs:487:28-487:37)
  9: _41 = AddWithOverflow(_40, const 1_i32)
    SourceInfo(src/lib.rs:487:27-487:42)
  Terminator {
      source_info: SourceInfo(src/lib.rs:487:27-487:42)
      kind: assert(!move (_41.1: bool), "attempt to compute `{} + {}`, which would overflow", move _40, const 1_i32) -> [success: bb18, unwind: bb30]
  }
  preds [bb16]
  succs [bb18, bb30]

bb18
  0: _39 = move (_41.0: i32)
    SourceInfo(src/lib.rs:487:27-487:42)
  1: StorageDead(_40)
    SourceInfo(src/lib.rs:487:41-487:42)
  2: _42 = MulWithOverflow(_39, const 2_i32)
    SourceInfo(src/lib.rs:487:27-487:46)
  Terminator {
      source_info: SourceInfo(src/lib.rs:487:27-487:46)
      kind: assert(!move (_42.1: bool), "attempt to compute `{} * {}`, which would overflow", move _39, const 2_i32) -> [success: bb19, unwind: bb30]
  }
  preds [bb17]
  succs [bb19, bb30]

bb19
  0: _38 = move (_42.0: i32)
    SourceInfo(src/lib.rs:487:27-487:46)
  1: StorageDead(_39)
    SourceInfo(src/lib.rs:487:45-487:46)
  Terminator {
      source_info: SourceInfo(src/lib.rs:487:17-487:47)
      kind: _36 = GrowingHashmapChar::<ValueType>::grow(move _37, move _38) -> [return: bb20, unwind: bb30]
  }
  preds [bb18]
  succs [bb20, bb30]

bb20
  0: StorageDead(_38)
    SourceInfo(src/lib.rs:487:46-487:47)
  1: StorageDead(_37)
    SourceInfo(src/lib.rs:487:46-487:47)
  2: StorageDead(_36)
    SourceInfo(src/lib.rs:487:47-487:48)
  3: StorageLive(_43)
    SourceInfo(src/lib.rs:488:21-488:37)
  4: StorageLive(_44)
    SourceInfo(src/lib.rs:488:21-488:25)
  5: _44 = &(*_1)
    SourceInfo(src/lib.rs:488:21-488:25)
  6: StorageLive(_45)
    SourceInfo(src/lib.rs:488:33-488:36)
  7: _45 = _2
    SourceInfo(src/lib.rs:488:33-488:36)
  Terminator {
      source_info: SourceInfo(src/lib.rs:488:21-488:37)
      kind: _43 = GrowingHashmapChar::<ValueType>::lookup(move _44, move _45) -> [return: bb21, unwind: bb30]
  }
  preds [bb19]
  succs [bb21, bb30]

bb21
  0: StorageDead(_45)
    SourceInfo(src/lib.rs:488:36-488:37)
  1: StorageDead(_44)
    SourceInfo(src/lib.rs:488:36-488:37)
  2: _9 = move _43
    SourceInfo(src/lib.rs:488:17-488:37)
  3: StorageDead(_43)
    SourceInfo(src/lib.rs:488:36-488:37)
  4: _26 = const ()
    SourceInfo(src/lib.rs:486:53-489:14)
  Terminator {
      source_info: SourceInfo(src/lib.rs:486:13-489:14)
      kind: goto -> bb23
  }
  preds [bb20]
  succs [bb23]

bb22
  0: StorageDead(_31)
    SourceInfo(src/lib.rs:486:51-486:52)
  1: StorageDead(_28)
    SourceInfo(src/lib.rs:486:51-486:52)
  2: _26 = const ()
    SourceInfo(src/lib.rs:489:14-489:14)
  Terminator {
      source_info: SourceInfo(src/lib.rs:486:13-489:14)
      kind: goto -> bb23
  }
  preds [bb16]
  succs [bb23]

bb23
  0: StorageDead(_27)
    SourceInfo(src/lib.rs:489:13-489:14)
  1: StorageDead(_26)
    SourceInfo(src/lib.rs:489:13-489:14)
  2: _46 = AddWithOverflow(((*_1).0: i32), const 1_i32)
    SourceInfo(src/lib.rs:491:13-491:27)
  Terminator {
      source_info: SourceInfo(src/lib.rs:491:13-491:27)
      kind: assert(!move (_46.1: bool), "attempt to compute `{} + {}`, which would overflow", ((*_1).0: i32), const 1_i32) -> [success: bb24, unwind: bb30]
  }
  preds [bb21, bb22]
  succs [bb24, bb30]

bb24
  0: ((*_1).0: i32) = move (_46.0: i32)
    SourceInfo(src/lib.rs:491:13-491:27)
  1: _12 = const ()
    SourceInfo(src/lib.rs:483:9-492:10)
  Terminator {
      source_info: SourceInfo(src/lib.rs:477:9-492:10)
      kind: goto -> bb26
  }
  preds [bb23]
  succs [bb26]

bb25
  0: StorageDead(_24)
    SourceInfo(src/lib.rs:482:33-482:34)
  1: StorageDead(_23)
    SourceInfo(src/lib.rs:482:33-482:34)
  2: StorageDead(_21)
    SourceInfo(src/lib.rs:482:33-482:34)
  3: StorageDead(_17)
    SourceInfo(src/lib.rs:482:33-482:34)
  4: StorageDead(_15)
    SourceInfo(src/lib.rs:482:33-482:34)
  5: StorageDead(_14)
    SourceInfo(src/lib.rs:482:33-482:34)
  6: _12 = const ()
    SourceInfo(src/lib.rs:492:10-492:10)
  Terminator {
      source_info: SourceInfo(src/lib.rs:477:9-492:10)
      kind: goto -> bb26
  }
  preds [bb11]
  succs [bb26]

bb26
  0: StorageDead(_13)
    SourceInfo(src/lib.rs:492:9-492:10)
  1: StorageDead(_12)
    SourceInfo(src/lib.rs:492:9-492:10)
  2: StorageLive(_47)
    SourceInfo(src/lib.rs:494:13-494:17)
  3: StorageLive(_48)
    SourceInfo(src/lib.rs:497:58-497:61)
  4: StorageLive(_49)
    SourceInfo(src/lib.rs:494:25-497:58)
  5: StorageLive(_50)
    SourceInfo(src/lib.rs:494:25-497:58)
  6: StorageLive(_51)
    SourceInfo(src/lib.rs:494:25-496:22)
  7: StorageLive(_52)
    SourceInfo(src/lib.rs:494:25-495:17)
  8: _52 = &mut ((*_1).3: std::option::Option<std::vec::Vec<GrowingHashmapMapElemChar<ValueType>>>)
    SourceInfo(src/lib.rs:494:25-495:17)
  Terminator {
      source_info: SourceInfo(src/lib.rs:494:25-496:22)
      kind: _51 = std::option::Option::<std::vec::Vec<GrowingHashmapMapElemChar<ValueType>>>::as_mut(move _52) -> [return: bb27, unwind: bb30]
  }
  preds [bb24, bb25]
  succs [bb27, bb30]

bb27
  0: StorageDead(_52)
    SourceInfo(src/lib.rs:496:21-496:22)
  1: StorageLive(_53)
    SourceInfo(src/lib.rs:497:21-497:57)
  2: StorageLive(_54)
    SourceInfo(src/lib.rs:497:21-497:57)
  3: _54 = const "map should have been created above"
    SourceInfo(src/lib.rs:497:21-497:57)
  4: _53 = &(*_54)
    SourceInfo(src/lib.rs:497:21-497:57)
  Terminator {
      source_info: SourceInfo(src/lib.rs:494:25-497:58)
      kind: _50 = std::option::Option::<&mut std::vec::Vec<GrowingHashmapMapElemChar<ValueType>>>::expect(move _51, move _53) -> [return: bb28, unwind: bb30]
  }
  preds [bb26]
  succs [bb28, bb30]

bb28
  0: _49 = &mut (*_50)
    SourceInfo(src/lib.rs:494:25-497:58)
  1: StorageDead(_53)
    SourceInfo(src/lib.rs:497:57-497:58)
  2: StorageDead(_51)
    SourceInfo(src/lib.rs:497:57-497:58)
  3: StorageLive(_55)
    SourceInfo(src/lib.rs:497:59-497:60)
  4: _55 = _9
    SourceInfo(src/lib.rs:497:59-497:60)
  Terminator {
      source_info: SourceInfo(src/lib.rs:497:58-497:61)
      kind: _48 = <std::vec::Vec<GrowingHashmapMapElemChar<ValueType>> as std::ops::IndexMut<usize>>::index_mut(move _49, move _55) -> [return: bb29, unwind: bb30]
  }
  preds [bb27]
  succs [bb29, bb30]

bb29
  0: StorageDead(_55)
    SourceInfo(src/lib.rs:497:60-497:61)
  1: StorageDead(_49)
    SourceInfo(src/lib.rs:497:60-497:61)
  2: _47 = &mut (*_48)
    SourceInfo(src/lib.rs:494:20-497:61)
  3: FakeRead(ForLet(None), _47)
    SourceInfo(src/lib.rs:494:13-494:17)
  4: StorageDead(_54)
    SourceInfo(src/lib.rs:497:61-497:62)
  5: StorageLive(_56)
    SourceInfo(src/lib.rs:498:20-498:23)
  6: _56 = _2
    SourceInfo(src/lib.rs:498:20-498:23)
  7: ((*_47).0: u32) = move _56
    SourceInfo(src/lib.rs:498:9-498:23)
  8: StorageDead(_56)
    SourceInfo(src/lib.rs:498:22-498:23)
  9: StorageLive(_57)
    SourceInfo(src/lib.rs:499:9-499:24)
  10: _57 = &mut ((*_47).1: ValueType)
    SourceInfo(src/lib.rs:499:9-499:24)
  11: _3 = &mut (*_57)
    SourceInfo(src/lib.rs:499:9-499:24)
  12: StorageDead(_50)
    SourceInfo(src/lib.rs:500:5-500:6)
  13: StorageDead(_48)
    SourceInfo(src/lib.rs:500:5-500:6)
  14: StorageDead(_47)
    SourceInfo(src/lib.rs:500:5-500:6)
  15: StorageDead(_9)
    SourceInfo(src/lib.rs:500:5-500:6)
  16: _0 = &mut (*_3)
    SourceInfo(src/lib.rs:499:9-499:24)
  17: StorageDead(_57)
    SourceInfo(src/lib.rs:500:5-500:6)
  18: StorageDead(_3)
    SourceInfo(src/lib.rs:500:5-500:6)
  Terminator {
      source_info: SourceInfo(src/lib.rs:500:6-500:6)
      kind: return
  }
  preds [bb28]
  succs []

bb30
  Terminator {
      source_info: SourceInfo(src/lib.rs:471:5-500:6)
      kind: resume
  }
  preds [bb0, bb2, bb5, bb6, bb7, bb8, bb9, bb10, bb12, bb13, bb14, bb15, bb17, bb18, bb19, bb20, bb23, bb26, bb27, bb28]
  succs []

