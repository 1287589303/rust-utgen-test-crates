{
  "name": "strsim::{impl#0}::fmt",
  "mod_info": {
    "name": "",
    "loc": "src/lib.rs:1:1:1307:2"
  },
  "visible": true,
  "loc": "src/lib.rs:38:5:44:6",
  "fn_tests": [
    {
      "chain_id": 0,
      "prompt_conds": [],
      "input_infer": "",
      "answers": [
        {
          "uses": [
            "use std::fmt;",
            "use std::fmt::Formatter;"
          ],
          "has_test_mod": false,
          "common": [
            "#[derive(Debug)]",
            "enum StrSimError {",
            "    DifferentLengthArgs,",
            "}",
            "",
            "",
            "impl fmt::Display for StrSimError {",
            "    fn fmt(&self, fmt: &mut Formatter<'_>) -> Result<(), fmt::Error> {",
            "        let text = match self {",
            "            StrSimError::DifferentLengthArgs => \"Differing length arguments provided\",",
            "        };",
            "",
            "        write!(fmt, \"{}\", text)",
            "    }",
            "}"
          ],
          "chain_tests": [
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let error = StrSimError::DifferentLengthArgs;",
                "    let result = format!(\"{}\", error);",
                "    assert_eq!(result, \"Differing length arguments provided\");",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            }
          ]
        }
      ]
    }
  ]
}