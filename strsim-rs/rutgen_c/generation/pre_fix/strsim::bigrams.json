{
  "name": "strsim::bigrams",
  "mod_info": {
    "name": "",
    "loc": "src/lib.rs:1:1:1307:2"
  },
  "visible": true,
  "loc": "src/lib.rs:705:1:707:2",
  "fn_tests": [
    {
      "chain_id": 0,
      "prompt_conds": [],
      "input_infer": "",
      "answers": [
        {
          "uses": [],
          "has_test_mod": false,
          "common": [],
          "chain_tests": [
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let result: Vec<(char, char)> = bigrams(\"\").collect();",
                "    assert_eq!(result, Vec::<(char, char)>::new());",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let result: Vec<(char, char)> = bigrams(\"a\").collect();",
                "    assert_eq!(result, Vec::<(char, char)>::new());",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let result: Vec<(char, char)> = bigrams(\"ab\").collect();",
                "    assert_eq!(result, vec![('a', 'b')]);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let result: Vec<(char, char)> = bigrams(\"abc\").collect();",
                "    assert_eq!(result, vec![('a', 'b'), ('b', 'c')]);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let result: Vec<(char, char)> = bigrams(\"hello\").collect();",
                "    assert_eq!(result, vec![('h', 'e'), ('e', 'l'), ('l', 'l'), ('l', 'o')]);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            }
          ]
        }
      ]
    }
  ]
}