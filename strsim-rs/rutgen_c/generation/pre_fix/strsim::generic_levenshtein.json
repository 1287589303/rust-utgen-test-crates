{
  "name": "strsim::generic_levenshtein",
  "mod_info": {
    "name": "",
    "loc": "src/lib.rs:1:1:1307:2"
  },
  "visible": true,
  "loc": "src/lib.rs:233:1:259:2",
  "fn_tests": [
    {
      "chain_id": 0,
      "prompt_conds": [],
      "input_infer": "",
      "answers": [
        {
          "uses": [],
          "has_test_mod": false,
          "common": [],
          "chain_tests": [
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let a = &[1, 2, 3];",
                "    let b = &[1, 2, 3, 4, 5, 6];",
                "    assert_eq!(3, generic_levenshtein(a, b));",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let a: &[i32] = &[];",
                "    let b: &[i32] = &[];",
                "    assert_eq!(0, generic_levenshtein(a, b));",
                "}"
              ],
              "can_compile": false,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let a = &[1, 2, 3];",
                "    let b: &[i32] = &[];",
                "    assert_eq!(3, generic_levenshtein(a, b));",
                "",
                "    let a: &[i32] = &[];",
                "    let b = &[1, 2, 3];",
                "    assert_eq!(3, generic_levenshtein(a, b));",
                "}"
              ],
              "can_compile": false,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let a = &[1, 2, 3];",
                "    let b = &[1, 2, 3];",
                "    assert_eq!(0, generic_levenshtein(a, b));",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let a = &[1, 2, 3];",
                "    let b = &[3, 2, 1];",
                "    assert_eq!(3, generic_levenshtein(a, b));",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let a = &[1, 2];",
                "    let b = &[1, 2, 3, 4];",
                "    assert_eq!(2, generic_levenshtein(a, b));",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let a = &[1, 2, 3, 4, 5];",
                "    let b = &[1, 3, 2, 5, 6];",
                "    assert_eq!(3, generic_levenshtein(a, b));",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            }
          ]
        }
      ]
    }
  ]
}