{"mod_name":"","calls":["HybridGrowingHashmapChar::<RowId>::get_mut","<std::iter::Chain<std::ops::Range<isize>, std::ops::Range<isize>> as std::iter::Iterator>::collect::<std::vec::Vec<isize>>","<std::vec::Vec<isize> as std::ops::IndexMut<usize>>::index_mut","<std::iter::Enumerate<Iter2> as std::iter::Iterator>::map::<","<std::vec::Vec<isize> as std::ops::Index<usize>>::index","HybridGrowingHashmapChar::<RowId>::get","<Iter2 as std::clone::Clone>::clone","<std::iter::Map<std::iter::Enumerate<Iter1>, {closure@src/lib.rs:630:40: 630:50}> as std::iter::Iterator>::next","<isize as std::convert::From<bool>>::from","<std::iter::Enumerate<Iter1> as std::iter::Iterator>::map::<","<std::iter::Map<std::iter::Enumerate<Iter2>, {closure@src/lib.rs:637:52: 637:62}> as std::iter::Iterator>::next","<std::ops::Range<isize> as std::iter::Iterator>::chain::<std::ops::Range<isize>>","std::cmp::min::<isize>","<std::iter::Map<std::iter::Enumerate<Iter2>, {closure@src/lib.rs:637:52: 637:62}> as std::iter::IntoIterator>::into_iter","<std::iter::Map<std::iter::Enumerate<Iter1>, {closure@src/lib.rs:630:40: 630:50}> as std::iter::IntoIterator>::into_iter","std::mem::swap::<std::vec::Vec<isize>>","<HybridGrowingHashmapChar<RowId> as std::default::Default>::default","<Iter1 as std::iter::Iterator>::enumerate","std::vec::from_elem::<isize>","std::cmp::max::<usize>","<Iter2 as std::iter::Iterator>::enumerate","strsim::damerau_levenshtein_impl","<  as strsim::std::clone::Clone>::clone","<strsim::tests::isize as >>::from","<strsim::tests::Iter2 as >::clone","<Iter2 as >::enumerate","<strsim::Iter2 as >::clone","<  as strsim::std::convert::From<bool>>::from","<Iter1 as strsim::std::iter::Iterator>::enumerate","<strsim::isize as std::convert::From<bool>>::from","<strsim::Iter2 as std::iter::Iterator>::enumerate","<  as strsim::tests::std::clone::Clone>::clone","<strsim::Iter2 as std::clone::Clone>::clone","<Iter2 as >::clone","<strsim::Iter2 as >::enumerate","<strsim::tests::Iter1 as >::enumerate","<isize as strsim::std::convert::From<bool>>::from","HybridGrowingHashmapChar::get","<  as std::convert::From<bool>>::from","<  as std::clone::Clone>::clone","<Iter2 as strsim::std::iter::Iterator>::enumerate","<strsim::tests::Iter2 as std::clone::Clone>::clone","std::vec::from_elem","<strsim::tests::Iter2 as std::iter::Iterator>::enumerate","<strsim::tests::Iter2 as >::enumerate","<Iter2 as strsim::tests::std::iter::Iterator>::enumerate","<strsim::tests::Iter1 as std::iter::Iterator>::enumerate","<Iter1 as strsim::tests::std::iter::Iterator>::enumerate","<isize as >>::from","<  as strsim::std::iter::Iterator>::enumerate","<isize as strsim::tests::std::convert::From<bool>>::from","<  as strsim::tests::std::convert::From<bool>>::from","<std::ops::Range<isize> as std::iter::Iterator>::chain>","HybridGrowingHashmapChar::get_mut","<strsim::tests::isize as std::convert::From<bool>>::from","<Iter2 as strsim::tests::std::clone::Clone>::clone","<std::iter::Chain<std::ops::Range<isize>, std::ops::Range<isize>> as std::iter::Iterator>::collect>","<strsim::isize as >>::from","<strsim::Iter1 as std::iter::Iterator>::enumerate","std::mem::swap>","<strsim::Iter1 as >::enumerate","<Iter1 as >::enumerate","<  as std::iter::Iterator>::enumerate","<Iter2 as strsim::std::clone::Clone>::clone","<  as strsim::tests::std::iter::Iterator>::enumerate","std::cmp::min","std::cmp::max","strsim::<strsim::tests::Iter1 as std::iter::Iterator>::enumerate","strsim::<  as std::convert::From<bool>>::from","strsim::tests::<isize as strsim::tests::std::convert::From<bool>>::from","strsim::tests::<  as strsim::tests::std::convert::From<bool>>::from","strsim::<Iter2 as strsim::tests::std::iter::Iterator>::enumerate","strsim::tests::std::cmp::min::<isize>","strsim::<Iter1 as std::iter::Iterator>::enumerate","strsim::std::mem::swap::<std::vec::Vec<isize>>","strsim::tests::std::vec::from_elem","strsim::<isize as strsim::tests::std::convert::From<bool>>::from","strsim::<std::iter::Chain<std::ops::Range<isize>, std::ops::Range<isize>> as std::iter::Iterator>::collect>","strsim::<strsim::isize as std::convert::From<bool>>::from","strsim::<std::iter::Map<std::iter::Enumerate<Iter2>, {closure@src/lib.rs:637:52: 637:62}> as std::iter::Iterator>::next","strsim::tests::<  as std::iter::Iterator>::enumerate","strsim::<strsim::Iter2 as std::iter::Iterator>::enumerate","strsim::HybridGrowingHashmapChar::<RowId>::get_mut","strsim::<std::ops::Range<isize> as std::iter::Iterator>::chain>","strsim::<strsim::Iter2 as >::clone","strsim::tests::<  as strsim::tests::std::clone::Clone>::clone","strsim::tests::<Iter2 as std::clone::Clone>::clone","strsim::<isize as std::convert::From<bool>>::from","strsim::tests::<std::iter::Map<std::iter::Enumerate<Iter1>, {closure@src/lib.rs:630:40: 630:50}> as std::iter::IntoIterator>::into_iter","strsim::<strsim::Iter2 as >::enumerate","strsim::<std::vec::Vec<isize> as std::ops::IndexMut<usize>>::index_mut","strsim::strsim::damerau_levenshtein_impl","strsim::<strsim::Iter2 as std::clone::Clone>::clone","strsim::<  as strsim::std::iter::Iterator>::enumerate","strsim::tests::<  as strsim::std::clone::Clone>::clone","strsim::<strsim::tests::isize as >>::from","strsim::<std::iter::Enumerate<Iter2> as std::iter::Iterator>::map::<","strsim::tests::<strsim::Iter2 as std::iter::Iterator>::enumerate","strsim::tests::<Iter1 as strsim::tests::std::iter::Iterator>::enumerate","strsim::tests::<strsim::tests::Iter2 as std::iter::Iterator>::enumerate","strsim::<std::iter::Map<std::iter::Enumerate<Iter1>, {closure@src/lib.rs:630:40: 630:50}> as std::iter::Iterator>::next","strsim::<std::iter::Enumerate<Iter1> as std::iter::Iterator>::map::<","strsim::<Iter2 as std::iter::Iterator>::enumerate","strsim::std::cmp::min","strsim::tests::<strsim::tests::Iter2 as >::enumerate","strsim::<Iter1 as strsim::std::iter::Iterator>::enumerate","strsim::tests::HybridGrowingHashmapChar::<RowId>::get","strsim::tests::<strsim::tests::Iter2 as >::clone","strsim::<strsim::tests::Iter2 as >::clone","strsim::<HybridGrowingHashmapChar<RowId> as std::default::Default>::default","strsim::tests::<strsim::tests::isize as >>::from","strsim::<strsim::tests::Iter2 as std::iter::Iterator>::enumerate","strsim::tests::<std::ops::Range<isize> as std::iter::Iterator>::chain>","strsim::tests::<strsim::isize as std::convert::From<bool>>::from","strsim::<isize as strsim::std::convert::From<bool>>::from","strsim::tests::std::mem::swap>","strsim::tests::<  as strsim::std::convert::From<bool>>::from","strsim::tests::<std::vec::Vec<isize> as std::ops::Index<usize>>::index","strsim::<std::ops::Range<isize> as std::iter::Iterator>::chain::<std::ops::Range<isize>>","strsim::tests::<  as strsim::tests::std::iter::Iterator>::enumerate","strsim::tests::HybridGrowingHashmapChar::get_mut","strsim::tests::<Iter2 as >::enumerate","strsim::tests::<Iter2 as strsim::tests::std::clone::Clone>::clone","strsim::tests::<std::iter::Enumerate<Iter1> as std::iter::Iterator>::map::<","strsim::std::cmp::min::<isize>","strsim::tests::<strsim::Iter2 as >::clone","strsim::<Iter1 as >::enumerate","strsim::HybridGrowingHashmapChar::<RowId>::get","strsim::std::cmp::max","strsim::tests::<  as std::convert::From<bool>>::from","strsim::tests::<std::ops::Range<isize> as std::iter::Iterator>::chain::<std::ops::Range<isize>>","strsim::tests::<std::iter::Map<std::iter::Enumerate<Iter1>, {closure@src/lib.rs:630:40: 630:50}> as std::iter::Iterator>::next","strsim::std::vec::from_elem::<isize>","strsim::tests::<  as std::clone::Clone>::clone","strsim::tests::std::mem::swap::<std::vec::Vec<isize>>","strsim::tests::<Iter2 as >::clone","strsim::<Iter1 as strsim::tests::std::iter::Iterator>::enumerate","strsim::std::cmp::max::<usize>","strsim::tests::HybridGrowingHashmapChar::<RowId>::get_mut","strsim::tests::<HybridGrowingHashmapChar<RowId> as std::default::Default>::default","strsim::tests::<isize as std::convert::From<bool>>::from","strsim::tests::<strsim::Iter2 as std::clone::Clone>::clone","strsim::tests::HybridGrowingHashmapChar::get","strsim::tests::<Iter1 as >::enumerate","strsim::<  as std::clone::Clone>::clone","strsim::<  as strsim::tests::std::convert::From<bool>>::from","strsim::std::mem::swap>","strsim::<std::iter::Map<std::iter::Enumerate<Iter1>, {closure@src/lib.rs:630:40: 630:50}> as std::iter::IntoIterator>::into_iter","strsim::tests::<strsim::tests::Iter1 as std::iter::Iterator>::enumerate","strsim::<Iter2 as strsim::tests::std::clone::Clone>::clone","strsim::<std::iter::Map<std::iter::Enumerate<Iter2>, {closure@src/lib.rs:637:52: 637:62}> as std::iter::IntoIterator>::into_iter","strsim::<  as strsim::std::convert::From<bool>>::from","strsim::<strsim::tests::Iter2 as std::clone::Clone>::clone","strsim::tests::<Iter2 as strsim::std::clone::Clone>::clone","strsim::tests::<  as strsim::std::iter::Iterator>::enumerate","strsim::tests::std::cmp::min","strsim::HybridGrowingHashmapChar::get_mut","strsim::<strsim::tests::Iter1 as >::enumerate","strsim::std::vec::from_elem","strsim::tests::<isize as >>::from","strsim::<strsim::tests::Iter2 as >::enumerate","strsim::<  as strsim::tests::std::clone::Clone>::clone","strsim::<std::iter::Chain<std::ops::Range<isize>, std::ops::Range<isize>> as std::iter::Iterator>::collect::<std::vec::Vec<isize>>","strsim::tests::<strsim::Iter1 as >::enumerate","strsim::tests::std::cmp::max::<usize>","strsim::<strsim::tests::isize as std::convert::From<bool>>::from","strsim::<strsim::Iter1 as >::enumerate","strsim::<  as strsim::tests::std::iter::Iterator>::enumerate","strsim::tests::<strsim::Iter1 as std::iter::Iterator>::enumerate","strsim::<  as strsim::std::clone::Clone>::clone","strsim::tests::<Iter1 as strsim::std::iter::Iterator>::enumerate","strsim::<Iter2 as strsim::std::clone::Clone>::clone","strsim::tests::<std::iter::Chain<std::ops::Range<isize>, std::ops::Range<isize>> as std::iter::Iterator>::collect::<std::vec::Vec<isize>>","strsim::<strsim::Iter1 as std::iter::Iterator>::enumerate","strsim::tests::<isize as strsim::std::convert::From<bool>>::from","strsim::<Iter2 as std::clone::Clone>::clone","strsim::tests::<Iter2 as std::iter::Iterator>::enumerate","strsim::<Iter2 as strsim::std::iter::Iterator>::enumerate","strsim::<isize as >>::from","strsim::tests::<std::vec::Vec<isize> as std::ops::IndexMut<usize>>::index_mut","strsim::tests::<std::iter::Chain<std::ops::Range<isize>, std::ops::Range<isize>> as std::iter::Iterator>::collect>","strsim::<  as std::iter::Iterator>::enumerate","strsim::tests::std::vec::from_elem::<isize>","strsim::tests::<Iter1 as std::iter::Iterator>::enumerate","strsim::tests::<strsim::tests::Iter1 as >::enumerate","strsim::<Iter2 as >::enumerate","strsim::tests::<strsim::isize as >>::from","strsim::tests::std::cmp::max","strsim::tests::<strsim::tests::isize as std::convert::From<bool>>::from","strsim::tests::<strsim::Iter2 as >::enumerate","strsim::<std::vec::Vec<isize> as std::ops::Index<usize>>::index","strsim::<Iter2 as >::clone","strsim::tests::<Iter2 as strsim::tests::std::iter::Iterator>::enumerate","strsim::HybridGrowingHashmapChar::get","strsim::tests::<std::iter::Enumerate<Iter2> as std::iter::Iterator>::map::<","strsim::<strsim::isize as >>::from","strsim::tests::<std::iter::Map<std::iter::Enumerate<Iter2>, {closure@src/lib.rs:637:52: 637:62}> as std::iter::IntoIterator>::into_iter","strsim::tests::strsim::damerau_levenshtein_impl","strsim::tests::<strsim::tests::Iter2 as std::clone::Clone>::clone","strsim::tests::<Iter2 as strsim::std::iter::Iterator>::enumerate","strsim::tests::<std::iter::Map<std::iter::Enumerate<Iter2>, {closure@src/lib.rs:637:52: 637:62}> as std::iter::Iterator>::next"],"types":["std::iter::Map<std::iter::Enumerate<Iter1>, {closure@src/lib.rs:630:40: 630:50}>","isize","bool","std::alloc::Global","RowId","std::vec::Vec<isize>","Iter2","{closure@src/lib.rs:630:40: 630:50}","std::option::Option<(usize, char)>","{closure@src/lib.rs:637:52: 637:62}","std::iter::Map<std::iter::Enumerate<Iter2>, {closure@src/lib.rs:637:52: 637:62}>","!","()","HybridGrowingHashmapChar<RowId>","Iter1","char","std::iter::Chain<std::ops::Range<isize>, std::ops::Range<isize>>","(usize, bool)","usize","std::ops::Range<isize>","std::iter::Enumerate<Iter1>","std::iter::Enumerate<Iter2>","(usize, char)","(isize, bool)","std::iter::Chain, std::ops::Range<isize>>","std::iter::Enumerate","std::iter::Map, {closure@src/lib.rs:630:40: 630:50}>","std::ops::Range","std::iter::Chain<std::ops::Range, std::ops::Range>","std::iter::Map, {closure@src/lib.rs:637:52: 637:62}>","std::option::Option","HybridGrowingHashmapChar","std::vec::Vec","strsim::bool","strsim::tests::std::option::Option<(usize, char)>","strsim::std::iter::Map, {closure@src/lib.rs:637:52: 637:62}>","strsim::tests::std::iter::Map<std::iter::Enumerate<Iter1>, {closure@src/lib.rs:630:40: 630:50}>","strsim::{closure@src/lib.rs:637:52: 637:62}","strsim::char","strsim::std::iter::Enumerate","strsim::std::iter::Chain, std::ops::Range<isize>>","strsim::std::alloc::Global","strsim::usize","strsim::{closure@src/lib.rs:630:40: 630:50}","strsim::(isize, bool)","strsim::tests::isize","strsim::tests::std::iter::Map, {closure@src/lib.rs:637:52: 637:62}>","strsim::tests::(isize, bool)","strsim::tests::char","strsim::std::ops::Range","strsim::HybridGrowingHashmapChar","strsim::tests::std::ops::Range<isize>","strsim::tests::{closure@src/lib.rs:637:52: 637:62}","strsim::HybridGrowingHashmapChar<RowId>","strsim::tests::std::alloc::Global","strsim::tests::std::iter::Enumerate","strsim::()","strsim::std::vec::Vec","strsim::tests::(usize, char)","strsim::tests::std::vec::Vec","strsim::(usize, char)","strsim::std::iter::Map, {closure@src/lib.rs:630:40: 630:50}>","strsim::std::iter::Chain<std::ops::Range, std::ops::Range>","strsim::std::iter::Chain<std::ops::Range<isize>, std::ops::Range<isize>>","strsim::tests::std::ops::Range","strsim::!","strsim::tests::std::iter::Chain, std::ops::Range<isize>>","strsim::std::iter::Enumerate<Iter2>","strsim::tests::std::iter::Enumerate<Iter2>","strsim::tests::std::iter::Map<std::iter::Enumerate<Iter2>, {closure@src/lib.rs:637:52: 637:62}>","strsim::tests::HybridGrowingHashmapChar<RowId>","strsim::tests::!","strsim::tests::std::iter::Chain<std::ops::Range<isize>, std::ops::Range<isize>>","strsim::std::iter::Map<std::iter::Enumerate<Iter2>, {closure@src/lib.rs:637:52: 637:62}>","strsim::RowId","strsim::std::option::Option<(usize, char)>","strsim::tests::Iter1","strsim::std::ops::Range<isize>","strsim::isize","strsim::tests::usize","strsim::tests::std::iter::Enumerate<Iter1>","strsim::std::option::Option","strsim::tests::RowId","strsim::tests::Iter2","strsim::Iter1","strsim::Iter2","strsim::tests::()","strsim::tests::bool","strsim::tests::{closure@src/lib.rs:630:40: 630:50}","strsim::tests::std::vec::Vec<isize>","strsim::tests::(usize, bool)","strsim::std::iter::Map<std::iter::Enumerate<Iter1>, {closure@src/lib.rs:630:40: 630:50}>","strsim::std::vec::Vec<isize>","strsim::(usize, bool)","strsim::std::iter::Enumerate<Iter1>","strsim::tests::std::iter::Map, {closure@src/lib.rs:630:40: 630:50}>","strsim::tests::std::option::Option","strsim::tests::HybridGrowingHashmapChar","strsim::tests::std::iter::Chain<std::ops::Range, std::ops::Range>"]}