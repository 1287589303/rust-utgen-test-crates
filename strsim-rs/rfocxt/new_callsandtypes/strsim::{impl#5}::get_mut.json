{"mod_name":"","calls":["<std::vec::Vec<GrowingHashmapMapElemChar<ValueType>> as std::ops::IndexMut<usize>>::index_mut","std::option::Option::<std::vec::Vec<GrowingHashmapMapElemChar<ValueType>>>::is_none","std::option::Option::<&std::vec::Vec<GrowingHashmapMapElemChar<ValueType>>>::expect","GrowingHashmapChar::<ValueType>::grow","GrowingHashmapChar::<ValueType>::allocate","std::option::Option::<std::vec::Vec<GrowingHashmapMapElemChar<ValueType>>>::as_mut","<std::vec::Vec<GrowingHashmapMapElemChar<ValueType>> as std::ops::Index<usize>>::index","std::option::Option::<std::vec::Vec<GrowingHashmapMapElemChar<ValueType>>>::as_ref","<ValueType as std::cmp::PartialEq>::eq","<ValueType as std::default::Default>::default","std::option::Option::<&mut std::vec::Vec<GrowingHashmapMapElemChar<ValueType>>>::expect","GrowingHashmapChar::<ValueType>::lookup","strsim::GrowingHashmapChar::get_mut","<  as strsim::tests::std::cmp::PartialEq>::eq","GrowingHashmapChar::grow","std::option::Option>>::expect","<ValueType as strsim::std::cmp::PartialEq>::eq","std::option::Option>>::is_none","<  as std::cmp::PartialEq>::eq","<strsim::ValueType as std::default::Default>::default","<  as strsim::tests::std::default::Default>::default","<strsim::tests::ValueType as >::eq","std::option::Option>>::as_ref","<ValueType as >::eq","<ValueType as strsim::tests::std::default::Default>::default","<  as strsim::std::cmp::PartialEq>::eq","GrowingHashmapChar::allocate","<ValueType as strsim::std::default::Default>::default","<  as strsim::std::default::Default>::default","<  as std::default::Default>::default","<ValueType as strsim::tests::std::cmp::PartialEq>::eq","<ValueType as >::default","<strsim::tests::ValueType as std::default::Default>::default","GrowingHashmapChar::lookup","<strsim::ValueType as std::cmp::PartialEq>::eq","std::option::Option>>::as_mut","<strsim::tests::ValueType as std::cmp::PartialEq>::eq","<strsim::ValueType as >::eq","<strsim::tests::ValueType as >::default","<strsim::ValueType as >::default","strsim::<  as strsim::std::cmp::PartialEq>::eq","strsim::tests::strsim::GrowingHashmapChar::get_mut","strsim::GrowingHashmapChar::<ValueType>::grow","strsim::<ValueType as std::cmp::PartialEq>::eq","strsim::<ValueType as std::default::Default>::default","strsim::tests::<  as std::cmp::PartialEq>::eq","strsim::tests::<ValueType as strsim::std::default::Default>::default","strsim::<  as strsim::std::default::Default>::default","strsim::<ValueType as strsim::tests::std::default::Default>::default","strsim::tests::<  as std::default::Default>::default","strsim::<strsim::ValueType as std::cmp::PartialEq>::eq","strsim::<ValueType as >::eq","strsim::std::option::Option::<std::vec::Vec<GrowingHashmapMapElemChar<ValueType>>>::as_mut","strsim::tests::std::option::Option>>::is_none","strsim::GrowingHashmapChar::lookup","strsim::tests::<strsim::ValueType as std::cmp::PartialEq>::eq","strsim::tests::<strsim::tests::ValueType as std::default::Default>::default","strsim::<strsim::ValueType as >::eq","strsim::<  as strsim::tests::std::cmp::PartialEq>::eq","strsim::tests::<ValueType as strsim::std::cmp::PartialEq>::eq","strsim::std::option::Option::<std::vec::Vec<GrowingHashmapMapElemChar<ValueType>>>::as_ref","strsim::tests::<std::vec::Vec<GrowingHashmapMapElemChar<ValueType>> as std::ops::Index<usize>>::index","strsim::tests::std::option::Option>>::as_ref","strsim::<ValueType as strsim::std::default::Default>::default","strsim::GrowingHashmapChar::allocate","strsim::std::option::Option::<std::vec::Vec<GrowingHashmapMapElemChar<ValueType>>>::is_none","strsim::GrowingHashmapChar::grow","strsim::tests::<ValueType as >::eq","strsim::tests::<std::vec::Vec<GrowingHashmapMapElemChar<ValueType>> as std::ops::IndexMut<usize>>::index_mut","strsim::tests::<ValueType as std::default::Default>::default","strsim::tests::<ValueType as std::cmp::PartialEq>::eq","strsim::<ValueType as strsim::std::cmp::PartialEq>::eq","strsim::<std::vec::Vec<GrowingHashmapMapElemChar<ValueType>> as std::ops::IndexMut<usize>>::index_mut","strsim::<strsim::tests::ValueType as >::eq","strsim::<strsim::tests::ValueType as >::default","strsim::tests::<  as strsim::tests::std::cmp::PartialEq>::eq","strsim::<  as std::cmp::PartialEq>::eq","strsim::tests::GrowingHashmapChar::grow","strsim::strsim::GrowingHashmapChar::get_mut","strsim::<strsim::tests::ValueType as std::cmp::PartialEq>::eq","strsim::tests::<strsim::ValueType as >::default","strsim::<  as strsim::tests::std::default::Default>::default","strsim::tests::GrowingHashmapChar::<ValueType>::allocate","strsim::GrowingHashmapChar::<ValueType>::allocate","strsim::<ValueType as >::default","strsim::<strsim::tests::ValueType as std::default::Default>::default","strsim::tests::<strsim::tests::ValueType as >::default","strsim::std::option::Option>>::expect","strsim::tests::<  as strsim::tests::std::default::Default>::default","strsim::GrowingHashmapChar::<ValueType>::lookup","strsim::<strsim::ValueType as std::default::Default>::default","strsim::tests::GrowingHashmapChar::<ValueType>::lookup","strsim::tests::std::option::Option>>::expect","strsim::tests::<strsim::ValueType as std::default::Default>::default","strsim::<  as std::default::Default>::default","strsim::<std::vec::Vec<GrowingHashmapMapElemChar<ValueType>> as std::ops::Index<usize>>::index","strsim::<strsim::ValueType as >::default","strsim::tests::<ValueType as >::default","strsim::tests::std::option::Option>>::as_mut","strsim::tests::std::option::Option::<std::vec::Vec<GrowingHashmapMapElemChar<ValueType>>>::as_ref","strsim::tests::<strsim::ValueType as >::eq","strsim::tests::<strsim::tests::ValueType as std::cmp::PartialEq>::eq","strsim::std::option::Option::<&mut std::vec::Vec<GrowingHashmapMapElemChar<ValueType>>>::expect","strsim::tests::<strsim::tests::ValueType as >::eq","strsim::tests::std::option::Option::<&mut std::vec::Vec<GrowingHashmapMapElemChar<ValueType>>>::expect","strsim::tests::GrowingHashmapChar::<ValueType>::grow","strsim::tests::std::option::Option::<std::vec::Vec<GrowingHashmapMapElemChar<ValueType>>>::is_none","strsim::std::option::Option>>::is_none","strsim::tests::GrowingHashmapChar::allocate","strsim::tests::<ValueType as strsim::tests::std::cmp::PartialEq>::eq","strsim::tests::GrowingHashmapChar::lookup","strsim::std::option::Option::<&std::vec::Vec<GrowingHashmapMapElemChar<ValueType>>>::expect","strsim::std::option::Option>>::as_mut","strsim::<ValueType as strsim::tests::std::cmp::PartialEq>::eq","strsim::tests::std::option::Option::<&std::vec::Vec<GrowingHashmapMapElemChar<ValueType>>>::expect","strsim::tests::<ValueType as strsim::tests::std::default::Default>::default","strsim::tests::<  as strsim::std::default::Default>::default","strsim::tests::<  as strsim::std::cmp::PartialEq>::eq","strsim::std::option::Option>>::as_ref","strsim::tests::std::option::Option::<std::vec::Vec<GrowingHashmapMapElemChar<ValueType>>>::as_mut"],"types":["u32","GrowingHashmapChar<ValueType>","GrowingHashmapMapElemChar<ValueType>","()","str","std::vec::Vec<GrowingHashmapMapElemChar<ValueType>>","(i32, bool)","std::alloc::Global","usize","bool","std::option::Option<std::vec::Vec<GrowingHashmapMapElemChar<ValueType>>>","std::option::Option<&mut std::vec::Vec<GrowingHashmapMapElemChar<ValueType>>>","i32","ValueType","std::option::Option<&std::vec::Vec<GrowingHashmapMapElemChar<ValueType>>>","strsim::GrowingHashmapChar","","GrowingHashmapMapElemChar","Option","ValueType","Vec","i32","std::option::Option>>","GrowingHashmapChar","std::vec::Vec>","strsim::std::alloc::Global","strsim::std::option::Option<&std::vec::Vec<GrowingHashmapMapElemChar<ValueType>>>","strsim::tests::GrowingHashmapMapElemChar","strsim::tests::Option","strsim::tests::bool","strsim::","strsim::Vec","strsim::tests::std::option::Option>>","strsim::tests::GrowingHashmapChar","strsim::ValueType","strsim::std::vec::Vec<GrowingHashmapMapElemChar<ValueType>>","strsim::GrowingHashmapChar<ValueType>","strsim::std::option::Option<&mut std::vec::Vec<GrowingHashmapMapElemChar<ValueType>>>","strsim::tests::std::vec::Vec<GrowingHashmapMapElemChar<ValueType>>","strsim::tests::std::option::Option<&mut std::vec::Vec<GrowingHashmapMapElemChar<ValueType>>>","strsim::tests::ValueType","strsim::tests::","strsim::(i32, bool)","strsim::Option","strsim::tests::std::vec::Vec>","strsim::tests::strsim::GrowingHashmapChar","strsim::tests::usize","strsim::i32","strsim::GrowingHashmapMapElemChar<ValueType>","strsim::str","strsim::tests::GrowingHashmapChar<ValueType>","strsim::tests::Vec","strsim::tests::GrowingHashmapMapElemChar<ValueType>","strsim::tests::std::option::Option<&std::vec::Vec<GrowingHashmapMapElemChar<ValueType>>>","strsim::strsim::GrowingHashmapChar","strsim::std::vec::Vec>","strsim::tests::std::alloc::Global","strsim::tests::i32","strsim::GrowingHashmapMapElemChar","strsim::tests::std::option::Option<std::vec::Vec<GrowingHashmapMapElemChar<ValueType>>>","strsim::std::option::Option>>","strsim::bool","strsim::tests::()","strsim::tests::u32","strsim::u32","strsim::tests::(i32, bool)","strsim::tests::str","strsim::()","strsim::usize","strsim::std::option::Option<std::vec::Vec<GrowingHashmapMapElemChar<ValueType>>>"]}