{"mod_name":"","calls":["flat_index","std::collections::HashMap::<Elem, usize>::get::<Elem>","<Elem as std::cmp::PartialEq>::eq","<std::vec::Vec<usize> as std::ops::IndexMut<usize>>::index_mut","<Elem as std::clone::Clone>::clone","std::cmp::min::<usize>","std::collections::HashMap::<Elem, usize>::insert","<std::ops::Range<usize> as std::iter::Iterator>::next","<std::vec::Vec<usize> as std::ops::Index<usize>>::index","std::collections::HashMap::<Elem, usize>::with_capacity","std::vec::from_elem::<usize>","core::slice::<impl [Elem]>::len","<std::ops::Range<usize> as std::iter::IntoIterator>::into_iter","strsim::generic_damerau_levenshtein","<strsim::Elem as std::clone::Clone>::clone","std::collections::HashMap::<Elem, usize>::get","<  as strsim::std::clone::Clone>::clone","std::vec::from_elem","<Elem as strsim::std::clone::Clone>::clone","std::cmp::min","<Elem as >::eq","<strsim::Elem as >::clone","<  as strsim::std::cmp::PartialEq>::eq","<  as strsim::tests::std::clone::Clone>::clone","<Elem as strsim::std::cmp::PartialEq>::eq","<strsim::tests::Elem as >::clone","<strsim::Elem as >::eq","std::collections::HashMap::with_capacity","<strsim::tests::Elem as >::eq","<strsim::Elem as std::cmp::PartialEq>::eq","<strsim::tests::Elem as std::cmp::PartialEq>::eq","<Elem as strsim::tests::std::clone::Clone>::clone","std::collections::HashMap::get::<Elem>","core::slice::len","<  as std::cmp::PartialEq>::eq","<  as strsim::tests::std::cmp::PartialEq>::eq","core::slice::<impl strsim::[Elem]>::len","<strsim::tests::Elem as std::clone::Clone>::clone","<  as std::clone::Clone>::clone","<Elem as >::clone","std::collections::HashMap::insert","core::slice::<impl strsim::tests::[Elem]>::len","<Elem as strsim::tests::std::cmp::PartialEq>::eq","strsim::tests::std::collections::HashMap::with_capacity","strsim::<  as strsim::std::clone::Clone>::clone","strsim::tests::<Elem as std::cmp::PartialEq>::eq","strsim::tests::core::slice::<impl strsim::[Elem]>::len","strsim::std::vec::from_elem::<usize>","strsim::tests::<std::vec::Vec<usize> as std::ops::Index<usize>>::index","strsim::tests::core::slice::<impl [Elem]>::len","strsim::tests::<std::ops::Range<usize> as std::iter::Iterator>::next","strsim::std::collections::HashMap::<Elem, usize>::with_capacity","strsim::core::slice::<impl [Elem]>::len","strsim::tests::std::cmp::min","strsim::std::cmp::min","strsim::<Elem as std::cmp::PartialEq>::eq","strsim::tests::<Elem as >::eq","strsim::<std::vec::Vec<usize> as std::ops::Index<usize>>::index","strsim::tests::<strsim::Elem as >::clone","strsim::<strsim::tests::Elem as >::clone","strsim::<strsim::tests::Elem as std::cmp::PartialEq>::eq","strsim::std::collections::HashMap::with_capacity","strsim::tests::<  as strsim::tests::std::clone::Clone>::clone","strsim::tests::std::collections::HashMap::<Elem, usize>::get::<Elem>","strsim::tests::<strsim::Elem as std::cmp::PartialEq>::eq","strsim::<Elem as strsim::tests::std::cmp::PartialEq>::eq","strsim::tests::<  as std::cmp::PartialEq>::eq","strsim::tests::<strsim::Elem as std::clone::Clone>::clone","strsim::std::collections::HashMap::<Elem, usize>::get","strsim::tests::<Elem as strsim::std::cmp::PartialEq>::eq","strsim::std::collections::HashMap::<Elem, usize>::get::<Elem>","strsim::<strsim::Elem as >::clone","strsim::tests::std::collections::HashMap::get::<Elem>","strsim::<  as strsim::tests::std::clone::Clone>::clone","strsim::<  as std::clone::Clone>::clone","strsim::tests::<  as strsim::std::cmp::PartialEq>::eq","strsim::<Elem as strsim::std::clone::Clone>::clone","strsim::<  as strsim::tests::std::cmp::PartialEq>::eq","strsim::tests::<  as std::clone::Clone>::clone","strsim::<Elem as std::clone::Clone>::clone","strsim::flat_index","strsim::core::slice::<impl strsim::[Elem]>::len","strsim::<std::vec::Vec<usize> as std::ops::IndexMut<usize>>::index_mut","strsim::<std::ops::Range<usize> as std::iter::Iterator>::next","strsim::tests::strsim::generic_damerau_levenshtein","strsim::tests::core::slice::<impl strsim::tests::[Elem]>::len","strsim::<strsim::Elem as std::cmp::PartialEq>::eq","strsim::tests::<  as strsim::std::clone::Clone>::clone","strsim::tests::<strsim::tests::Elem as std::cmp::PartialEq>::eq","strsim::tests::<Elem as strsim::std::clone::Clone>::clone","strsim::<Elem as strsim::std::cmp::PartialEq>::eq","strsim::tests::<strsim::tests::Elem as std::clone::Clone>::clone","strsim::tests::<Elem as >::clone","strsim::std::cmp::min::<usize>","strsim::std::collections::HashMap::get::<Elem>","strsim::tests::<  as strsim::tests::std::cmp::PartialEq>::eq","strsim::tests::<std::vec::Vec<usize> as std::ops::IndexMut<usize>>::index_mut","strsim::tests::flat_index","strsim::tests::<Elem as strsim::tests::std::clone::Clone>::clone","strsim::tests::<strsim::tests::Elem as >::eq","strsim::strsim::generic_damerau_levenshtein","strsim::tests::std::collections::HashMap::<Elem, usize>::insert","strsim::tests::std::collections::HashMap::<Elem, usize>::get","strsim::core::slice::<impl strsim::tests::[Elem]>::len","strsim::tests::<std::ops::Range<usize> as std::iter::IntoIterator>::into_iter","strsim::<strsim::Elem as std::clone::Clone>::clone","strsim::tests::std::collections::HashMap::insert","strsim::tests::<Elem as std::clone::Clone>::clone","strsim::std::collections::HashMap::<Elem, usize>::insert","strsim::tests::std::collections::HashMap::<Elem, usize>::with_capacity","strsim::<strsim::tests::Elem as >::eq","strsim::<strsim::tests::Elem as std::clone::Clone>::clone","strsim::<Elem as strsim::tests::std::clone::Clone>::clone","strsim::tests::<strsim::Elem as >::eq","strsim::<Elem as >::clone","strsim::tests::std::cmp::min::<usize>","strsim::tests::<strsim::tests::Elem as >::clone","strsim::std::collections::HashMap::insert","strsim::<  as std::cmp::PartialEq>::eq","strsim::<Elem as >::eq","strsim::tests::<Elem as strsim::tests::std::cmp::PartialEq>::eq","strsim::tests::core::slice::len","strsim::tests::std::vec::from_elem","strsim::tests::std::vec::from_elem::<usize>","strsim::std::vec::from_elem","strsim::<strsim::Elem as >::eq","strsim::core::slice::len","strsim::<std::ops::Range<usize> as std::iter::IntoIterator>::into_iter","strsim::<  as strsim::std::cmp::PartialEq>::eq"],"types":["bool","std::hash::RandomState","isize","Elem","[Elem]","std::ops::Range<usize>","std::collections::HashMap<Elem, usize>","std::option::Option<&usize>","std::alloc::Global","(usize, bool)","!","std::vec::Vec<usize>","usize","()","std::option::Option<usize>","std::vec::Vec","std::ops::Range","std::option::Option","std::collections::HashMap","strsim::[Elem]","strsim::std::alloc::Global","strsim::tests::std::ops::Range<usize>","strsim::std::vec::Vec<usize>","strsim::tests::std::alloc::Global","strsim::std::ops::Range","strsim::tests::std::collections::HashMap<Elem, usize>","strsim::tests::Elem","strsim::tests::std::option::Option<&usize>","strsim::tests::()","strsim::()","strsim::std::option::Option","strsim::tests::isize","strsim::std::ops::Range<usize>","strsim::std::option::Option<&usize>","strsim::std::vec::Vec","strsim::std::collections::HashMap","strsim::tests::bool","strsim::std::collections::HashMap<Elem, usize>","strsim::!","strsim::tests::std::vec::Vec<usize>","strsim::tests::std::hash::RandomState","strsim::tests::std::collections::HashMap","strsim::std::option::Option<usize>","strsim::tests::usize","strsim::tests::(usize, bool)","strsim::tests::[Elem]","strsim::tests::std::option::Option<usize>","strsim::std::hash::RandomState","strsim::usize","strsim::tests::!","strsim::tests::std::option::Option","strsim::isize","strsim::bool","strsim::tests::std::vec::Vec","strsim::Elem","strsim::(usize, bool)","strsim::tests::std::ops::Range"]}