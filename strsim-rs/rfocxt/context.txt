CrateContext {
    crate_name: "strsim",
    crate_path: "/home/abezbm/rust-utgen-test-crates/strsim-rs",
    entry_file_paths: [
        "/home/abezbm/rust-utgen-test-crates/strsim-rs/src/lib.rs",
    ],
    main_mod_contexts: [
        RefCell {
            value: ModContext {
             mod_info: Mod(
                ModModInfo {
                    mod_name: "strsim",
                    mod_tree: MyPath {
                        name: "strsim",
                        next: None,
                    },
                    file_path: "/home/abezbm/rust-utgen-test-crates/strsim-rs/src/lib.rs",
                    parent_directory_path: "/home/abezbm/rust-utgen-test-crates/strsim-rs/src",
                    mod_file_directory_path: None,
                    visibility: PubT,
                },
            ),
             syntax_context: SyntaxContext {
                consts: [],
                trait_aliases: [],
                uses: [
                    UseItem {
                        item: Some(
                            ItemUse {
                                attrs: [],
                                vis: Visibility::Inherited,
                                use_token: Use,
                                leading_colon: None,
                                tree: UseTree::Path(
                                    UsePath {
                                        ident: Ident {
                                            sym: std,
                                            span: bytes(651..654),
                                        },
                                        colon2_token: PathSep,
                                        tree: UseTree::Name(
                                            UseName {
                                                ident: Ident {
                                                    sym: char,
                                                    span: bytes(656..660),
                                                },
                                            },
                                        ),
                                    },
                                ),
                                semi_token: Semi,
                            },
                        ),
                        visibility: Pri,
                    },
                    UseItem {
                        item: Some(
                            ItemUse {
                                attrs: [],
                                vis: Visibility::Inherited,
                                use_token: Use,
                                leading_colon: None,
                                tree: UseTree::Path(
                                    UsePath {
                                        ident: Ident {
                                            sym: std,
                                            span: bytes(666..669),
                                        },
                                        colon2_token: PathSep,
                                        tree: UseTree::Path(
                                            UsePath {
                                                ident: Ident {
                                                    sym: cmp,
                                                    span: bytes(671..674),
                                                },
                                                colon2_token: PathSep,
                                                tree: UseTree::Group(
                                                    UseGroup {
                                                        brace_token: Brace,
                                                        items: [
                                                            UseTree::Name(
                                                                UseName {
                                                                    ident: Ident {
                                                                        sym: max,
                                                                        span: bytes(677..680),
                                                                    },
                                                                },
                                                            ),
                                                            Comma,
                                                            UseTree::Name(
                                                                UseName {
                                                                    ident: Ident {
                                                                        sym: min,
                                                                        span: bytes(682..685),
                                                                    },
                                                                },
                                                            ),
                                                        ],
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                                semi_token: Semi,
                            },
                        ),
                        visibility: Pri,
                    },
                    UseItem {
                        item: Some(
                            ItemUse {
                                attrs: [],
                                vis: Visibility::Inherited,
                                use_token: Use,
                                leading_colon: None,
                                tree: UseTree::Path(
                                    UsePath {
                                        ident: Ident {
                                            sym: std,
                                            span: bytes(692..695),
                                        },
                                        colon2_token: PathSep,
                                        tree: UseTree::Path(
                                            UsePath {
                                                ident: Ident {
                                                    sym: collections,
                                                    span: bytes(697..708),
                                                },
                                                colon2_token: PathSep,
                                                tree: UseTree::Name(
                                                    UseName {
                                                        ident: Ident {
                                                            sym: HashMap,
                                                            span: bytes(710..717),
                                                        },
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                                semi_token: Semi,
                            },
                        ),
                        visibility: Pri,
                    },
                    UseItem {
                        item: Some(
                            ItemUse {
                                attrs: [],
                                vis: Visibility::Inherited,
                                use_token: Use,
                                leading_colon: None,
                                tree: UseTree::Path(
                                    UsePath {
                                        ident: Ident {
                                            sym: std,
                                            span: bytes(723..726),
                                        },
                                        colon2_token: PathSep,
                                        tree: UseTree::Path(
                                            UsePath {
                                                ident: Ident {
                                                    sym: convert,
                                                    span: bytes(728..735),
                                                },
                                                colon2_token: PathSep,
                                                tree: UseTree::Name(
                                                    UseName {
                                                        ident: Ident {
                                                            sym: TryFrom,
                                                            span: bytes(737..744),
                                                        },
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                                semi_token: Semi,
                            },
                        ),
                        visibility: Pri,
                    },
                    UseItem {
                        item: Some(
                            ItemUse {
                                attrs: [],
                                vis: Visibility::Inherited,
                                use_token: Use,
                                leading_colon: None,
                                tree: UseTree::Path(
                                    UsePath {
                                        ident: Ident {
                                            sym: std,
                                            span: bytes(750..753),
                                        },
                                        colon2_token: PathSep,
                                        tree: UseTree::Path(
                                            UsePath {
                                                ident: Ident {
                                                    sym: error,
                                                    span: bytes(755..760),
                                                },
                                                colon2_token: PathSep,
                                                tree: UseTree::Name(
                                                    UseName {
                                                        ident: Ident {
                                                            sym: Error,
                                                            span: bytes(762..767),
                                                        },
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                                semi_token: Semi,
                            },
                        ),
                        visibility: Pri,
                    },
                    UseItem {
                        item: Some(
                            ItemUse {
                                attrs: [],
                                vis: Visibility::Inherited,
                                use_token: Use,
                                leading_colon: None,
                                tree: UseTree::Path(
                                    UsePath {
                                        ident: Ident {
                                            sym: std,
                                            span: bytes(773..776),
                                        },
                                        colon2_token: PathSep,
                                        tree: UseTree::Path(
                                            UsePath {
                                                ident: Ident {
                                                    sym: fmt,
                                                    span: bytes(778..781),
                                                },
                                                colon2_token: PathSep,
                                                tree: UseTree::Group(
                                                    UseGroup {
                                                        brace_token: Brace,
                                                        items: [
                                                            UseTree::Name(
                                                                UseName {
                                                                    ident: Ident {
                                                                        sym: self,
                                                                        span: bytes(784..788),
                                                                    },
                                                                },
                                                            ),
                                                            Comma,
                                                            UseTree::Name(
                                                                UseName {
                                                                    ident: Ident {
                                                                        sym: Display,
                                                                        span: bytes(790..797),
                                                                    },
                                                                },
                                                            ),
                                                            Comma,
                                                            UseTree::Name(
                                                                UseName {
                                                                    ident: Ident {
                                                                        sym: Formatter,
                                                                        span: bytes(799..808),
                                                                    },
                                                                },
                                                            ),
                                                        ],
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                                semi_token: Semi,
                            },
                        ),
                        visibility: Pri,
                    },
                    UseItem {
                        item: Some(
                            ItemUse {
                                attrs: [],
                                vis: Visibility::Inherited,
                                use_token: Use,
                                leading_colon: None,
                                tree: UseTree::Path(
                                    UsePath {
                                        ident: Ident {
                                            sym: std,
                                            span: bytes(815..818),
                                        },
                                        colon2_token: PathSep,
                                        tree: UseTree::Path(
                                            UsePath {
                                                ident: Ident {
                                                    sym: hash,
                                                    span: bytes(820..824),
                                                },
                                                colon2_token: PathSep,
                                                tree: UseTree::Name(
                                                    UseName {
                                                        ident: Ident {
                                                            sym: Hash,
                                                            span: bytes(826..830),
                                                        },
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                                semi_token: Semi,
                            },
                        ),
                        visibility: Pri,
                    },
                    UseItem {
                        item: Some(
                            ItemUse {
                                attrs: [],
                                vis: Visibility::Inherited,
                                use_token: Use,
                                leading_colon: None,
                                tree: UseTree::Path(
                                    UsePath {
                                        ident: Ident {
                                            sym: std,
                                            span: bytes(836..839),
                                        },
                                        colon2_token: PathSep,
                                        tree: UseTree::Name(
                                            UseName {
                                                ident: Ident {
                                                    sym: mem,
                                                    span: bytes(841..844),
                                                },
                                            },
                                        ),
                                    },
                                ),
                                semi_token: Semi,
                            },
                        ),
                        visibility: Pri,
                    },
                    UseItem {
                        item: Some(
                            ItemUse {
                                attrs: [],
                                vis: Visibility::Inherited,
                                use_token: Use,
                                leading_colon: None,
                                tree: UseTree::Path(
                                    UsePath {
                                        ident: Ident {
                                            sym: std,
                                            span: bytes(850..853),
                                        },
                                        colon2_token: PathSep,
                                        tree: UseTree::Path(
                                            UsePath {
                                                ident: Ident {
                                                    sym: str,
                                                    span: bytes(855..858),
                                                },
                                                colon2_token: PathSep,
                                                tree: UseTree::Name(
                                                    UseName {
                                                        ident: Ident {
                                                            sym: Chars,
                                                            span: bytes(860..865),
                                                        },
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                                semi_token: Semi,
                            },
                        ),
                        visibility: Pri,
                    },
                ],
                mods: [
                    ModItem {
                        mod_name: "tests",
                        file_name: None,
                        item: Some(
                            ItemMod {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::List {
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: cfg,
                                                            span: bytes(22752..22755),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                            delimiter: MacroDelimiter::Paren(
                                                Paren,
                                            ),
                                            tokens: TokenStream [
                                                Ident {
                                                    sym: test,
                                                    span: bytes(22756..22760),
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                unsafety: None,
                                mod_token: Mod,
                                ident: Ident {
                                    sym: tests,
                                    span: bytes(22767..22772),
                                },
                                content: Some(
                                    (
                                        Brace,
                                        [],
                                    ),
                                ),
                                semi: None,
                            },
                        ),
                        inside_items: [
                            Item::Use {
                                attrs: [],
                                vis: Visibility::Inherited,
                                use_token: Use,
                                leading_colon: None,
                                tree: UseTree::Path(
                                    UsePath {
                                        ident: Ident {
                                            sym: super,
                                            span: bytes(22783..22788),
                                        },
                                        colon2_token: PathSep,
                                        tree: UseTree::Glob(
                                            UseGlob {
                                                star_token: Star,
                                            },
                                        ),
                                    },
                                ),
                                semi_token: Semi,
                            },
                            Item::Macro {
                                attrs: [],
                                ident: Some(
                                    Ident {
                                        sym: assert_delta,
                                        span: bytes(22811..22823),
                                    },
                                ),
                                mac: Macro {
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: macro_rules,
                                                    span: bytes(22798..22809),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                    bang_token: Not,
                                    delimiter: MacroDelimiter::Brace(
                                        Brace,
                                    ),
                                    tokens: TokenStream [
                                        Group {
                                            delimiter: Parenthesis,
                                            stream: TokenStream [
                                                Punct {
                                                    char: '$',
                                                    spacing: Alone,
                                                    span: bytes(22835..22836),
                                                },
                                                Ident {
                                                    sym: x,
                                                    span: bytes(22836..22837),
                                                },
                                                Punct {
                                                    char: ':',
                                                    spacing: Alone,
                                                    span: bytes(22837..22838),
                                                },
                                                Ident {
                                                    sym: expr,
                                                    span: bytes(22838..22842),
                                                },
                                                Punct {
                                                    char: ',',
                                                    spacing: Alone,
                                                    span: bytes(22842..22843),
                                                },
                                                Punct {
                                                    char: '$',
                                                    spacing: Alone,
                                                    span: bytes(22844..22845),
                                                },
                                                Ident {
                                                    sym: y,
                                                    span: bytes(22845..22846),
                                                },
                                                Punct {
                                                    char: ':',
                                                    spacing: Alone,
                                                    span: bytes(22846..22847),
                                                },
                                                Ident {
                                                    sym: expr,
                                                    span: bytes(22847..22851),
                                                },
                                            ],
                                            span: bytes(22834..22852),
                                        },
                                        Punct {
                                            char: '=',
                                            spacing: Joint,
                                            span: bytes(22853..22854),
                                        },
                                        Punct {
                                            char: '>',
                                            spacing: Alone,
                                            span: bytes(22854..22855),
                                        },
                                        Group {
                                            delimiter: Brace,
                                            stream: TokenStream [
                                                Ident {
                                                    sym: assert_delta,
                                                    span: bytes(22870..22882),
                                                },
                                                Punct {
                                                    char: '!',
                                                    spacing: Alone,
                                                    span: bytes(22882..22883),
                                                },
                                                Group {
                                                    delimiter: Parenthesis,
                                                    stream: TokenStream [
                                                        Punct {
                                                            char: '$',
                                                            spacing: Alone,
                                                            span: bytes(22884..22885),
                                                        },
                                                        Ident {
                                                            sym: x,
                                                            span: bytes(22885..22886),
                                                        },
                                                        Punct {
                                                            char: ',',
                                                            spacing: Alone,
                                                            span: bytes(22886..22887),
                                                        },
                                                        Punct {
                                                            char: '$',
                                                            spacing: Alone,
                                                            span: bytes(22888..22889),
                                                        },
                                                        Ident {
                                                            sym: y,
                                                            span: bytes(22889..22890),
                                                        },
                                                        Punct {
                                                            char: ',',
                                                            spacing: Alone,
                                                            span: bytes(22890..22891),
                                                        },
                                                        Literal {
                                                            lit: 1e-5,
                                                            span: bytes(22892..22896),
                                                        },
                                                    ],
                                                    span: bytes(22883..22897),
                                                },
                                                Punct {
                                                    char: ';',
                                                    spacing: Alone,
                                                    span: bytes(22897..22898),
                                                },
                                            ],
                                            span: bytes(22856..22908),
                                        },
                                        Punct {
                                            char: ';',
                                            spacing: Alone,
                                            span: bytes(22908..22909),
                                        },
                                        Group {
                                            delimiter: Parenthesis,
                                            stream: TokenStream [
                                                Punct {
                                                    char: '$',
                                                    spacing: Alone,
                                                    span: bytes(22919..22920),
                                                },
                                                Ident {
                                                    sym: x,
                                                    span: bytes(22920..22921),
                                                },
                                                Punct {
                                                    char: ':',
                                                    spacing: Alone,
                                                    span: bytes(22921..22922),
                                                },
                                                Ident {
                                                    sym: expr,
                                                    span: bytes(22922..22926),
                                                },
                                                Punct {
                                                    char: ',',
                                                    spacing: Alone,
                                                    span: bytes(22926..22927),
                                                },
                                                Punct {
                                                    char: '$',
                                                    spacing: Alone,
                                                    span: bytes(22928..22929),
                                                },
                                                Ident {
                                                    sym: y,
                                                    span: bytes(22929..22930),
                                                },
                                                Punct {
                                                    char: ':',
                                                    spacing: Alone,
                                                    span: bytes(22930..22931),
                                                },
                                                Ident {
                                                    sym: expr,
                                                    span: bytes(22931..22935),
                                                },
                                                Punct {
                                                    char: ',',
                                                    spacing: Alone,
                                                    span: bytes(22935..22936),
                                                },
                                                Punct {
                                                    char: '$',
                                                    spacing: Alone,
                                                    span: bytes(22937..22938),
                                                },
                                                Ident {
                                                    sym: d,
                                                    span: bytes(22938..22939),
                                                },
                                                Punct {
                                                    char: ':',
                                                    spacing: Alone,
                                                    span: bytes(22939..22940),
                                                },
                                                Ident {
                                                    sym: expr,
                                                    span: bytes(22940..22944),
                                                },
                                            ],
                                            span: bytes(22918..22945),
                                        },
                                        Punct {
                                            char: '=',
                                            spacing: Joint,
                                            span: bytes(22946..22947),
                                        },
                                        Punct {
                                            char: '>',
                                            spacing: Alone,
                                            span: bytes(22947..22948),
                                        },
                                        Group {
                                            delimiter: Brace,
                                            stream: TokenStream [
                                                Ident {
                                                    sym: if,
                                                    span: bytes(22963..22965),
                                                },
                                                Group {
                                                    delimiter: Parenthesis,
                                                    stream: TokenStream [
                                                        Punct {
                                                            char: '$',
                                                            spacing: Alone,
                                                            span: bytes(22967..22968),
                                                        },
                                                        Ident {
                                                            sym: x,
                                                            span: bytes(22968..22969),
                                                        },
                                                        Punct {
                                                            char: '-',
                                                            spacing: Alone,
                                                            span: bytes(22970..22971),
                                                        },
                                                        Punct {
                                                            char: '$',
                                                            spacing: Alone,
                                                            span: bytes(22972..22973),
                                                        },
                                                        Ident {
                                                            sym: y,
                                                            span: bytes(22973..22974),
                                                        },
                                                    ],
                                                    span: bytes(22966..22975),
                                                },
                                                Punct {
                                                    char: '.',
                                                    spacing: Alone,
                                                    span: bytes(22975..22976),
                                                },
                                                Ident {
                                                    sym: abs,
                                                    span: bytes(22976..22979),
                                                },
                                                Group {
                                                    delimiter: Parenthesis,
                                                    stream: TokenStream [],
                                                    span: bytes(22979..22981),
                                                },
                                                Punct {
                                                    char: '>',
                                                    spacing: Alone,
                                                    span: bytes(22982..22983),
                                                },
                                                Punct {
                                                    char: '$',
                                                    spacing: Alone,
                                                    span: bytes(22984..22985),
                                                },
                                                Ident {
                                                    sym: d,
                                                    span: bytes(22985..22986),
                                                },
                                                Group {
                                                    delimiter: Brace,
                                                    stream: TokenStream [
                                                        Ident {
                                                            sym: panic,
                                                            span: bytes(23005..23010),
                                                        },
                                                        Punct {
                                                            char: '!',
                                                            spacing: Alone,
                                                            span: bytes(23010..23011),
                                                        },
                                                        Group {
                                                            delimiter: Parenthesis,
                                                            stream: TokenStream [
                                                                Literal {
                                                                    lit: "assertion failed: actual: `{}`, expected: `{}`: \
                                                                                        actual not within < {} of expected",
                                                                    span: bytes(23033..23139),
                                                                },
                                                                Punct {
                                                                    char: ',',
                                                                    spacing: Alone,
                                                                    span: bytes(23139..23140),
                                                                },
                                                                Punct {
                                                                    char: '$',
                                                                    spacing: Alone,
                                                                    span: bytes(23161..23162),
                                                                },
                                                                Ident {
                                                                    sym: x,
                                                                    span: bytes(23162..23163),
                                                                },
                                                                Punct {
                                                                    char: ',',
                                                                    spacing: Alone,
                                                                    span: bytes(23163..23164),
                                                                },
                                                                Punct {
                                                                    char: '$',
                                                                    spacing: Alone,
                                                                    span: bytes(23165..23166),
                                                                },
                                                                Ident {
                                                                    sym: y,
                                                                    span: bytes(23166..23167),
                                                                },
                                                                Punct {
                                                                    char: ',',
                                                                    spacing: Alone,
                                                                    span: bytes(23167..23168),
                                                                },
                                                                Punct {
                                                                    char: '$',
                                                                    spacing: Alone,
                                                                    span: bytes(23169..23170),
                                                                },
                                                                Ident {
                                                                    sym: d,
                                                                    span: bytes(23170..23171),
                                                                },
                                                            ],
                                                            span: bytes(23011..23189),
                                                        },
                                                        Punct {
                                                            char: ';',
                                                            spacing: Alone,
                                                            span: bytes(23189..23190),
                                                        },
                                                    ],
                                                    span: bytes(22987..23204),
                                                },
                                            ],
                                            span: bytes(22949..23214),
                                        },
                                        Punct {
                                            char: ';',
                                            spacing: Alone,
                                            span: bytes(23214..23215),
                                        },
                                    ],
                                },
                                semi_token: None,
                            },
                            Item::Fn {
                                attrs: [],
                                vis: Visibility::Inherited,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: assert_hamming_dist,
                                        span: bytes(23577..23596),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: dist,
                                                        span: bytes(23597..23601),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: usize,
                                                                    span: bytes(23603..23608),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: str1,
                                                        span: bytes(23610..23614),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: None,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: str,
                                                                        span: bytes(23617..23620),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: str2,
                                                        span: bytes(23622..23626),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: None,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: str,
                                                                        span: bytes(23629..23632),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Default,
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Macro {
                                            attrs: [],
                                            mac: Macro {
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: assert_eq,
                                                                span: bytes(23644..23653),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                bang_token: Not,
                                                delimiter: MacroDelimiter::Paren(
                                                    Paren,
                                                ),
                                                tokens: TokenStream [
                                                    Ident {
                                                        sym: Ok,
                                                        span: bytes(23655..23657),
                                                    },
                                                    Group {
                                                        delimiter: Parenthesis,
                                                        stream: TokenStream [
                                                            Ident {
                                                                sym: dist,
                                                                span: bytes(23658..23662),
                                                            },
                                                        ],
                                                        span: bytes(23657..23663),
                                                    },
                                                    Punct {
                                                        char: ',',
                                                        spacing: Alone,
                                                        span: bytes(23663..23664),
                                                    },
                                                    Ident {
                                                        sym: hamming,
                                                        span: bytes(23665..23672),
                                                    },
                                                    Group {
                                                        delimiter: Parenthesis,
                                                        stream: TokenStream [
                                                            Ident {
                                                                sym: str1,
                                                                span: bytes(23673..23677),
                                                            },
                                                            Punct {
                                                                char: ',',
                                                                spacing: Alone,
                                                                span: bytes(23677..23678),
                                                            },
                                                            Ident {
                                                                sym: str2,
                                                                span: bytes(23679..23683),
                                                            },
                                                        ],
                                                        span: bytes(23672..23684),
                                                    },
                                                ],
                                            },
                                            semi_token: Some(
                                                Semi,
                                            ),
                                        },
                                    ],
                                },
                            },
                        ],
                        visibility: Pri,
                    },
                ],
                statics: [],
                types: [
                    TypeItem {
                        item: Some(
                            ItemType {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                type_token: Type,
                                ident: Ident {
                                    sym: HammingResult,
                                    span: bytes(1261..1274),
                                },
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                eq_token: Eq,
                                ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: Result,
                                                    span: bytes(1277..1283),
                                                },
                                                arguments: PathArguments::AngleBracketed {
                                                    colon2_token: None,
                                                    lt_token: Lt,
                                                    args: [
                                                        GenericArgument::Type(
                                                            Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: usize,
                                                                                span: bytes(1284..1289),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        GenericArgument::Type(
                                                            Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: StrSimError,
                                                                                span: bytes(1291..1302),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    gt_token: Gt,
                                                },
                                            },
                                        ],
                                    },
                                },
                                semi_token: Semi,
                            },
                        ),
                        visibility: PubT,
                    },
                ],
                structs: [
                    StructItem {
                        struct_name: Name {
                            name: "StringWrapper",
                            complete_name: "strsim::StringWrapper",
                            import_name: MyPath {
                                name: "strsim",
                                next: Some(
                                    MyPath {
                                        name: "StringWrapper",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        item: Some(
                            ItemStruct {
                                attrs: [],
                                vis: Visibility::Inherited,
                                struct_token: Struct,
                                ident: Ident {
                                    sym: StringWrapper,
                                    span: bytes(4776..4789),
                                },
                                generics: Generics {
                                    lt_token: Some(
                                        Lt,
                                    ),
                                    params: [
                                        GenericParam::Lifetime(
                                            LifetimeParam {
                                                attrs: [],
                                                lifetime: Lifetime {
                                                    apostrophe: bytes(4790..4791),
                                                    ident: Ident {
                                                        sym: a,
                                                        span: bytes(4791..4792),
                                                    },
                                                },
                                                colon_token: None,
                                                bounds: [],
                                            },
                                        ),
                                    ],
                                    gt_token: Some(
                                        Gt,
                                    ),
                                    where_clause: None,
                                },
                                fields: Fields::Unnamed {
                                    paren_token: Paren,
                                    unnamed: [
                                        Field {
                                            attrs: [],
                                            vis: Visibility::Inherited,
                                            mutability: FieldMutability::None,
                                            ident: None,
                                            colon_token: None,
                                            ty: Type::Reference {
                                                and_token: And,
                                                lifetime: Some(
                                                    Lifetime {
                                                        apostrophe: bytes(4795..4796),
                                                        ident: Ident {
                                                            sym: a,
                                                            span: bytes(4796..4797),
                                                        },
                                                    },
                                                ),
                                                mutability: None,
                                                elem: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: str,
                                                                    span: bytes(4798..4801),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        },
                                    ],
                                },
                                semi_token: Some(
                                    Semi,
                                ),
                            },
                        ),
                        visibility: Pri,
                        relative_types: [
                            "str",
                        ],
                    },
                    StructItem {
                        struct_name: Name {
                            name: "RowId",
                            complete_name: "strsim::RowId",
                            import_name: MyPath {
                                name: "strsim",
                                next: Some(
                                    MyPath {
                                        name: "RowId",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        item: Some(
                            ItemStruct {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::List {
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: derive,
                                                            span: bytes(12538..12544),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                            delimiter: MacroDelimiter::Paren(
                                                Paren,
                                            ),
                                            tokens: TokenStream [
                                                Ident {
                                                    sym: Clone,
                                                    span: bytes(12545..12550),
                                                },
                                                Punct {
                                                    char: ',',
                                                    spacing: Alone,
                                                    span: bytes(12550..12551),
                                                },
                                                Ident {
                                                    sym: Copy,
                                                    span: bytes(12552..12556),
                                                },
                                                Punct {
                                                    char: ',',
                                                    spacing: Alone,
                                                    span: bytes(12556..12557),
                                                },
                                                Ident {
                                                    sym: PartialEq,
                                                    span: bytes(12558..12567),
                                                },
                                                Punct {
                                                    char: ',',
                                                    spacing: Alone,
                                                    span: bytes(12567..12568),
                                                },
                                                Ident {
                                                    sym: Eq,
                                                    span: bytes(12569..12571),
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                struct_token: Struct,
                                ident: Ident {
                                    sym: RowId,
                                    span: bytes(12581..12586),
                                },
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                fields: Fields::Named {
                                    brace_token: Brace,
                                    named: [
                                        Field {
                                            attrs: [],
                                            vis: Visibility::Inherited,
                                            mutability: FieldMutability::None,
                                            ident: Some(
                                                Ident {
                                                    sym: val,
                                                    span: bytes(12593..12596),
                                                },
                                            ),
                                            colon_token: Some(
                                                Colon,
                                            ),
                                            ty: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: isize,
                                                                span: bytes(12598..12603),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                        Comma,
                                    ],
                                },
                                semi_token: None,
                            },
                        ),
                        visibility: Pri,
                        relative_types: [
                            "isize",
                        ],
                    },
                    StructItem {
                        struct_name: Name {
                            name: "GrowingHashmapMapElemChar",
                            complete_name: "strsim::GrowingHashmapMapElemChar",
                            import_name: MyPath {
                                name: "strsim",
                                next: Some(
                                    MyPath {
                                        name: "GrowingHashmapMapElemChar",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        item: Some(
                            ItemStruct {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::List {
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: derive,
                                                            span: bytes(12696..12702),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                            delimiter: MacroDelimiter::Paren(
                                                Paren,
                                            ),
                                            tokens: TokenStream [
                                                Ident {
                                                    sym: Default,
                                                    span: bytes(12703..12710),
                                                },
                                                Punct {
                                                    char: ',',
                                                    spacing: Alone,
                                                    span: bytes(12710..12711),
                                                },
                                                Ident {
                                                    sym: Clone,
                                                    span: bytes(12712..12717),
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                struct_token: Struct,
                                ident: Ident {
                                    sym: GrowingHashmapMapElemChar,
                                    span: bytes(12727..12752),
                                },
                                generics: Generics {
                                    lt_token: Some(
                                        Lt,
                                    ),
                                    params: [
                                        GenericParam::Type(
                                            TypeParam {
                                                attrs: [],
                                                ident: Ident {
                                                    sym: ValueType,
                                                    span: bytes(12753..12762),
                                                },
                                                colon_token: None,
                                                bounds: [],
                                                eq_token: None,
                                                default: None,
                                            },
                                        ),
                                    ],
                                    gt_token: Some(
                                        Gt,
                                    ),
                                    where_clause: None,
                                },
                                fields: Fields::Named {
                                    brace_token: Brace,
                                    named: [
                                        Field {
                                            attrs: [],
                                            vis: Visibility::Inherited,
                                            mutability: FieldMutability::None,
                                            ident: Some(
                                                Ident {
                                                    sym: key,
                                                    span: bytes(12770..12773),
                                                },
                                            ),
                                            colon_token: Some(
                                                Colon,
                                            ),
                                            ty: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: u32,
                                                                span: bytes(12775..12778),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                        Comma,
                                        Field {
                                            attrs: [],
                                            vis: Visibility::Inherited,
                                            mutability: FieldMutability::None,
                                            ident: Some(
                                                Ident {
                                                    sym: value,
                                                    span: bytes(12784..12789),
                                                },
                                            ),
                                            colon_token: Some(
                                                Colon,
                                            ),
                                            ty: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: ValueType,
                                                                span: bytes(12791..12800),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                        Comma,
                                    ],
                                },
                                semi_token: None,
                            },
                        ),
                        visibility: Pri,
                        relative_types: [
                            "ValueType",
                            "u32",
                        ],
                    },
                    StructItem {
                        struct_name: Name {
                            name: "GrowingHashmapChar",
                            complete_name: "strsim::GrowingHashmapChar",
                            import_name: MyPath {
                                name: "strsim",
                                next: Some(
                                    MyPath {
                                        name: "GrowingHashmapChar",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        item: Some(
                            ItemStruct {
                                attrs: [],
                                vis: Visibility::Inherited,
                                struct_token: Struct,
                                ident: Ident {
                                    sym: GrowingHashmapChar,
                                    span: bytes(13286..13304),
                                },
                                generics: Generics {
                                    lt_token: Some(
                                        Lt,
                                    ),
                                    params: [
                                        GenericParam::Type(
                                            TypeParam {
                                                attrs: [],
                                                ident: Ident {
                                                    sym: ValueType,
                                                    span: bytes(13305..13314),
                                                },
                                                colon_token: None,
                                                bounds: [],
                                                eq_token: None,
                                                default: None,
                                            },
                                        ),
                                    ],
                                    gt_token: Some(
                                        Gt,
                                    ),
                                    where_clause: None,
                                },
                                fields: Fields::Named {
                                    brace_token: Brace,
                                    named: [
                                        Field {
                                            attrs: [],
                                            vis: Visibility::Inherited,
                                            mutability: FieldMutability::None,
                                            ident: Some(
                                                Ident {
                                                    sym: used,
                                                    span: bytes(13322..13326),
                                                },
                                            ),
                                            colon_token: Some(
                                                Colon,
                                            ),
                                            ty: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: i32,
                                                                span: bytes(13328..13331),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                        Comma,
                                        Field {
                                            attrs: [],
                                            vis: Visibility::Inherited,
                                            mutability: FieldMutability::None,
                                            ident: Some(
                                                Ident {
                                                    sym: fill,
                                                    span: bytes(13337..13341),
                                                },
                                            ),
                                            colon_token: Some(
                                                Colon,
                                            ),
                                            ty: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: i32,
                                                                span: bytes(13343..13346),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                        Comma,
                                        Field {
                                            attrs: [],
                                            vis: Visibility::Inherited,
                                            mutability: FieldMutability::None,
                                            ident: Some(
                                                Ident {
                                                    sym: mask,
                                                    span: bytes(13352..13356),
                                                },
                                            ),
                                            colon_token: Some(
                                                Colon,
                                            ),
                                            ty: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: i32,
                                                                span: bytes(13358..13361),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                        Comma,
                                        Field {
                                            attrs: [],
                                            vis: Visibility::Inherited,
                                            mutability: FieldMutability::None,
                                            ident: Some(
                                                Ident {
                                                    sym: map,
                                                    span: bytes(13367..13370),
                                                },
                                            ),
                                            colon_token: Some(
                                                Colon,
                                            ),
                                            ty: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Option,
                                                                span: bytes(13372..13378),
                                                            },
                                                            arguments: PathArguments::AngleBracketed {
                                                                colon2_token: None,
                                                                lt_token: Lt,
                                                                args: [
                                                                    GenericArgument::Type(
                                                                        Type::Path {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: Vec,
                                                                                            span: bytes(13379..13382),
                                                                                        },
                                                                                        arguments: PathArguments::AngleBracketed {
                                                                                            colon2_token: None,
                                                                                            lt_token: Lt,
                                                                                            args: [
                                                                                                GenericArgument::Type(
                                                                                                    Type::Path {
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: GrowingHashmapMapElemChar,
                                                                                                                        span: bytes(13383..13408),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::AngleBracketed {
                                                                                                                        colon2_token: None,
                                                                                                                        lt_token: Lt,
                                                                                                                        args: [
                                                                                                                            GenericArgument::Type(
                                                                                                                                Type::Path {
                                                                                                                                    qself: None,
                                                                                                                                    path: Path {
                                                                                                                                        leading_colon: None,
                                                                                                                                        segments: [
                                                                                                                                            PathSegment {
                                                                                                                                                ident: Ident {
                                                                                                                                                    sym: ValueType,
                                                                                                                                                    span: bytes(13409..13418),
                                                                                                                                                },
                                                                                                                                                arguments: PathArguments::None,
                                                                                                                                            },
                                                                                                                                        ],
                                                                                                                                    },
                                                                                                                                },
                                                                                                                            ),
                                                                                                                        ],
                                                                                                                        gt_token: Gt,
                                                                                                                    },
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                ),
                                                                                            ],
                                                                                            gt_token: Gt,
                                                                                        },
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ),
                                                                ],
                                                                gt_token: Gt,
                                                            },
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                        Comma,
                                    ],
                                },
                                semi_token: None,
                            },
                        ),
                        visibility: Pri,
                        relative_types: [
                            "GrowingHashmapMapElemChar",
                            "Option",
                            "ValueType",
                            "Vec",
                            "i32",
                        ],
                    },
                    StructItem {
                        struct_name: Name {
                            name: "HybridGrowingHashmapChar",
                            complete_name: "strsim::HybridGrowingHashmapChar",
                            import_name: MyPath {
                                name: "strsim",
                                next: Some(
                                    MyPath {
                                        name: "HybridGrowingHashmapChar",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        item: Some(
                            ItemStruct {
                                attrs: [],
                                vis: Visibility::Inherited,
                                struct_token: Struct,
                                ident: Ident {
                                    sym: HybridGrowingHashmapChar,
                                    span: bytes(16576..16600),
                                },
                                generics: Generics {
                                    lt_token: Some(
                                        Lt,
                                    ),
                                    params: [
                                        GenericParam::Type(
                                            TypeParam {
                                                attrs: [],
                                                ident: Ident {
                                                    sym: ValueType,
                                                    span: bytes(16601..16610),
                                                },
                                                colon_token: None,
                                                bounds: [],
                                                eq_token: None,
                                                default: None,
                                            },
                                        ),
                                    ],
                                    gt_token: Some(
                                        Gt,
                                    ),
                                    where_clause: None,
                                },
                                fields: Fields::Named {
                                    brace_token: Brace,
                                    named: [
                                        Field {
                                            attrs: [],
                                            vis: Visibility::Inherited,
                                            mutability: FieldMutability::None,
                                            ident: Some(
                                                Ident {
                                                    sym: map,
                                                    span: bytes(16618..16621),
                                                },
                                            ),
                                            colon_token: Some(
                                                Colon,
                                            ),
                                            ty: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: GrowingHashmapChar,
                                                                span: bytes(16623..16641),
                                                            },
                                                            arguments: PathArguments::AngleBracketed {
                                                                colon2_token: None,
                                                                lt_token: Lt,
                                                                args: [
                                                                    GenericArgument::Type(
                                                                        Type::Path {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: ValueType,
                                                                                            span: bytes(16642..16651),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ),
                                                                ],
                                                                gt_token: Gt,
                                                            },
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                        Comma,
                                        Field {
                                            attrs: [],
                                            vis: Visibility::Inherited,
                                            mutability: FieldMutability::None,
                                            ident: Some(
                                                Ident {
                                                    sym: extended_ascii,
                                                    span: bytes(16658..16672),
                                                },
                                            ),
                                            colon_token: Some(
                                                Colon,
                                            ),
                                            ty: Type::Array {
                                                bracket_token: Bracket,
                                                elem: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: ValueType,
                                                                    span: bytes(16675..16684),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                semi_token: Semi,
                                                len: Expr::Lit {
                                                    attrs: [],
                                                    lit: Lit::Int {
                                                        token: 256,
                                                    },
                                                },
                                            },
                                        },
                                        Comma,
                                    ],
                                },
                                semi_token: None,
                            },
                        ),
                        visibility: Pri,
                        relative_types: [
                            "GrowingHashmapChar",
                            "ValueType",
                        ],
                    },
                ],
                enums: [
                    EnumItem {
                        enum_name: Name {
                            name: "StrSimError",
                            complete_name: "strsim::StrSimError",
                            import_name: MyPath {
                                name: "strsim",
                                next: Some(
                                    MyPath {
                                        name: "StrSimError",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        item: Some(
                            ItemEnum {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::List {
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: derive,
                                                            span: bytes(870..876),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                            delimiter: MacroDelimiter::Paren(
                                                Paren,
                                            ),
                                            tokens: TokenStream [
                                                Ident {
                                                    sym: Debug,
                                                    span: bytes(877..882),
                                                },
                                                Punct {
                                                    char: ',',
                                                    spacing: Alone,
                                                    span: bytes(882..883),
                                                },
                                                Ident {
                                                    sym: PartialEq,
                                                    span: bytes(884..893),
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                enum_token: Enum,
                                ident: Ident {
                                    sym: StrSimError,
                                    span: bytes(905..916),
                                },
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                brace_token: Brace,
                                variants: [
                                    Variant {
                                        attrs: [],
                                        ident: Ident {
                                            sym: DifferentLengthArgs,
                                            span: bytes(923..942),
                                        },
                                        fields: Fields::Unit,
                                        discriminant: None,
                                    },
                                    Comma,
                                ],
                            },
                        ),
                        visibility: PubT,
                        relative_types: [],
                    },
                ],
                unions: [],
                impls: [
                    ImplItem {
                        impl_num: 0,
                        struct_name: Name {
                            name: "StrSimError",
                            complete_name: "strsim::StrSimError",
                            import_name: MyPath {
                                name: "strsim",
                                next: Some(
                                    MyPath {
                                        name: "StrSimError",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        trait_name: Some(
                            Name {
                                name: "Display",
                                complete_name: "",
                                import_name: MyPath {
                                    name: "std",
                                    next: Some(
                                        MyPath {
                                            name: "fmt",
                                            next: Some(
                                                MyPath {
                                                    name: "Display",
                                                    next: None,
                                                },
                                            ),
                                        },
                                    ),
                                },
                            },
                        ),
                        item: Some(
                            ItemImpl {
                                attrs: [],
                                defaultness: None,
                                unsafety: None,
                                impl_token: Impl,
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                trait_: Some(
                                    (
                                        None,
                                        Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: Display,
                                                        span: bytes(952..959),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                        For,
                                    ),
                                ),
                                self_ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: StrSimError,
                                                    span: bytes(964..975),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                                brace_token: Brace,
                                items: [],
                            },
                        ),
                        types: [],
                        consts: [],
                        functions: [
                            ImplFnItem {
                                fn_name: Name {
                                    name: "fmt",
                                    complete_name: "<strsim::StrSimError as std::fmt::Display>::fmt",
                                    import_name: MyPath {
                                        name: "<strsim",
                                        next: Some(
                                            MyPath {
                                                name: "StrSimError as std",
                                                next: Some(
                                                    MyPath {
                                                        name: "fmt",
                                                        next: Some(
                                                            MyPath {
                                                                name: "Display>",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "fmt",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "{impl#0}::fmt",
                                item: Some(
                                    ImplItemFn {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        defaultness: None,
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: fmt,
                                                span: bytes(985..988),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Receiver(
                                                    Receiver {
                                                        attrs: [],
                                                        reference: Some(
                                                            (
                                                                And,
                                                                None,
                                                            ),
                                                        ),
                                                        mutability: None,
                                                        self_token: SelfValue,
                                                        colon_token: None,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: None,
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Self,
                                                                                span: bytes(990..994),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                                Comma,
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: fmt,
                                                                span: bytes(996..999),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Formatter,
                                                                                span: bytes(1006..1015),
                                                                            },
                                                                            arguments: PathArguments::AngleBracketed {
                                                                                colon2_token: None,
                                                                                lt_token: Lt,
                                                                                args: [
                                                                                    GenericArgument::Lifetime(
                                                                                        Lifetime {
                                                                                            apostrophe: bytes(1016..1017),
                                                                                            ident: Ident {
                                                                                                sym: _,
                                                                                                span: bytes(1017..1018),
                                                                                            },
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                                gt_token: Gt,
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Result,
                                                                    span: bytes(1024..1030),
                                                                },
                                                                arguments: PathArguments::AngleBracketed {
                                                                    colon2_token: None,
                                                                    lt_token: Lt,
                                                                    args: [
                                                                        GenericArgument::Type(
                                                                            Type::Tuple {
                                                                                paren_token: Paren,
                                                                                elems: [],
                                                                            },
                                                                        ),
                                                                        Comma,
                                                                        GenericArgument::Type(
                                                                            Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: fmt,
                                                                                                span: bytes(1035..1038),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                        PathSep,
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Error,
                                                                                                span: bytes(1040..1045),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                    gt_token: Gt,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: text,
                                                            span: bytes(1061..1065),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::Match {
                                                                attrs: [],
                                                                match_token: Match,
                                                                expr: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: self,
                                                                                    span: bytes(1074..1078),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                brace_token: Brace,
                                                                arms: [
                                                                    Arm {
                                                                        attrs: [],
                                                                        pat: Pat::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: StrSimError,
                                                                                            span: bytes(1093..1104),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                    PathSep,
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: DifferentLengthArgs,
                                                                                            span: bytes(1106..1125),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        guard: None,
                                                                        fat_arrow_token: FatArrow,
                                                                        body: Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Str {
                                                                                token: "Differing length arguments provided",
                                                                            },
                                                                        },
                                                                        comma: Some(
                                                                            Comma,
                                                                        ),
                                                                    },
                                                                ],
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Expr(
                                                    Expr::Macro {
                                                        attrs: [],
                                                        mac: Macro {
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: write,
                                                                            span: bytes(1188..1193),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                            bang_token: Not,
                                                            delimiter: MacroDelimiter::Paren(
                                                                Paren,
                                                            ),
                                                            tokens: TokenStream [
                                                                Ident {
                                                                    sym: fmt,
                                                                    span: bytes(1195..1198),
                                                                },
                                                                Punct {
                                                                    char: ',',
                                                                    spacing: Alone,
                                                                    span: bytes(1198..1199),
                                                                },
                                                                Literal {
                                                                    lit: "{}",
                                                                    span: bytes(1200..1204),
                                                                },
                                                                Punct {
                                                                    char: ',',
                                                                    spacing: Alone,
                                                                    span: bytes(1204..1205),
                                                                },
                                                                Ident {
                                                                    sym: text,
                                                                    span: bytes(1206..1210),
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: Pri,
                                is_constructor: true,
                            },
                        ],
                        relative_types: [],
                    },
                    ImplItem {
                        impl_num: 1,
                        struct_name: Name {
                            name: "StrSimError",
                            complete_name: "strsim::StrSimError",
                            import_name: MyPath {
                                name: "strsim",
                                next: Some(
                                    MyPath {
                                        name: "StrSimError",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        trait_name: Some(
                            Name {
                                name: "Error",
                                complete_name: "",
                                import_name: MyPath {
                                    name: "std",
                                    next: Some(
                                        MyPath {
                                            name: "error",
                                            next: Some(
                                                MyPath {
                                                    name: "Error",
                                                    next: None,
                                                },
                                            ),
                                        },
                                    ),
                                },
                            },
                        ),
                        item: Some(
                            ItemImpl {
                                attrs: [],
                                defaultness: None,
                                unsafety: None,
                                impl_token: Impl,
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                trait_: Some(
                                    (
                                        None,
                                        Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: Error,
                                                        span: bytes(1226..1231),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                        For,
                                    ),
                                ),
                                self_ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: StrSimError,
                                                    span: bytes(1236..1247),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                                brace_token: Brace,
                                items: [],
                            },
                        ),
                        types: [],
                        consts: [],
                        functions: [],
                        relative_types: [],
                    },
                    ImplItem {
                        impl_num: 2,
                        struct_name: Name {
                            name: "",
                            complete_name: "",
                            import_name: MyPath {
                                name: "",
                                next: None,
                            },
                        },
                        trait_name: Some(
                            Name {
                                name: "",
                                complete_name: "",
                                import_name: MyPath {
                                    name: "",
                                    next: None,
                                },
                            },
                        ),
                        item: Some(
                            ItemImpl {
                                attrs: [],
                                defaultness: None,
                                unsafety: None,
                                impl_token: Impl,
                                generics: Generics {
                                    lt_token: Some(
                                        Lt,
                                    ),
                                    params: [
                                        GenericParam::Lifetime(
                                            LifetimeParam {
                                                attrs: [],
                                                lifetime: Lifetime {
                                                    apostrophe: bytes(4810..4811),
                                                    ident: Ident {
                                                        sym: a,
                                                        span: bytes(4811..4812),
                                                    },
                                                },
                                                colon_token: None,
                                                bounds: [],
                                            },
                                        ),
                                        Comma,
                                        GenericParam::Lifetime(
                                            LifetimeParam {
                                                attrs: [],
                                                lifetime: Lifetime {
                                                    apostrophe: bytes(4814..4815),
                                                    ident: Ident {
                                                        sym: b,
                                                        span: bytes(4815..4816),
                                                    },
                                                },
                                                colon_token: None,
                                                bounds: [],
                                            },
                                        ),
                                    ],
                                    gt_token: Some(
                                        Gt,
                                    ),
                                    where_clause: None,
                                },
                                trait_: Some(
                                    (
                                        None,
                                        Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: IntoIterator,
                                                        span: bytes(4818..4830),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                        For,
                                    ),
                                ),
                                self_ty: Type::Reference {
                                    and_token: And,
                                    lifetime: Some(
                                        Lifetime {
                                            apostrophe: bytes(4836..4837),
                                            ident: Ident {
                                                sym: a,
                                                span: bytes(4837..4838),
                                            },
                                        },
                                    ),
                                    mutability: None,
                                    elem: Type::Path {
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: StringWrapper,
                                                        span: bytes(4839..4852),
                                                    },
                                                    arguments: PathArguments::AngleBracketed {
                                                        colon2_token: None,
                                                        lt_token: Lt,
                                                        args: [
                                                            GenericArgument::Lifetime(
                                                                Lifetime {
                                                                    apostrophe: bytes(4853..4854),
                                                                    ident: Ident {
                                                                        sym: b,
                                                                        span: bytes(4854..4855),
                                                                    },
                                                                },
                                                            ),
                                                        ],
                                                        gt_token: Gt,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                },
                                brace_token: Brace,
                                items: [],
                            },
                        ),
                        types: [
                            ImplTypeItem {
                                item: Some(
                                    ImplItemType {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        defaultness: None,
                                        type_token: Type,
                                        ident: Ident {
                                            sym: Item,
                                            span: bytes(4868..4872),
                                        },
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        eq_token: Eq,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: char,
                                                            span: bytes(4875..4879),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        semi_token: Semi,
                                    },
                                ),
                                visibility: Pri,
                            },
                            ImplTypeItem {
                                item: Some(
                                    ImplItemType {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        defaultness: None,
                                        type_token: Type,
                                        ident: Ident {
                                            sym: IntoIter,
                                            span: bytes(4890..4898),
                                        },
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        eq_token: Eq,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Chars,
                                                            span: bytes(4901..4906),
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: None,
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Lifetime(
                                                                    Lifetime {
                                                                        apostrophe: bytes(4907..4908),
                                                                        ident: Ident {
                                                                            sym: b,
                                                                            span: bytes(4908..4909),
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        semi_token: Semi,
                                    },
                                ),
                                visibility: Pri,
                            },
                        ],
                        consts: [],
                        functions: [
                            ImplFnItem {
                                fn_name: Name {
                                    name: "into_iter",
                                    complete_name: "< as >::into_iter",
                                    import_name: MyPath {
                                        name: "< as >",
                                        next: Some(
                                            MyPath {
                                                name: "into_iter",
                                                next: None,
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "{impl#2}::into_iter",
                                item: Some(
                                    ImplItemFn {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        defaultness: None,
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: into_iter,
                                                span: bytes(4920..4929),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Receiver(
                                                    Receiver {
                                                        attrs: [],
                                                        reference: None,
                                                        mutability: None,
                                                        self_token: SelfValue,
                                                        colon_token: None,
                                                        ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Self,
                                                                            span: bytes(4930..4934),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Self,
                                                                    span: bytes(4939..4943),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: IntoIter,
                                                                    span: bytes(4945..4953),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::Field {
                                                            attrs: [],
                                                            base: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: self,
                                                                                span: bytes(4964..4968),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            dot_token: Dot,
                                                            member: Member::Unnamed(
                                                                Index {
                                                                    index: 0,
                                                                    span: bytes(4969..4970),
                                                                },
                                                            ),
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: chars,
                                                            span: bytes(4971..4976),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [],
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: Pri,
                                is_constructor: true,
                            },
                        ],
                        relative_types: [
                            "char",
                            "Chars",
                        ],
                    },
                    ImplItem {
                        impl_num: 3,
                        struct_name: Name {
                            name: "RowId",
                            complete_name: "strsim::RowId",
                            import_name: MyPath {
                                name: "strsim",
                                next: Some(
                                    MyPath {
                                        name: "RowId",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        trait_name: Some(
                            Name {
                                name: "",
                                complete_name: "",
                                import_name: MyPath {
                                    name: "",
                                    next: None,
                                },
                            },
                        ),
                        item: Some(
                            ItemImpl {
                                attrs: [],
                                defaultness: None,
                                unsafety: None,
                                impl_token: Impl,
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                trait_: Some(
                                    (
                                        None,
                                        Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: Default,
                                                        span: bytes(12613..12620),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                        For,
                                    ),
                                ),
                                self_ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: RowId,
                                                    span: bytes(12625..12630),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                                brace_token: Brace,
                                items: [],
                            },
                        ),
                        types: [],
                        consts: [],
                        functions: [
                            ImplFnItem {
                                fn_name: Name {
                                    name: "default",
                                    complete_name: "<strsim::RowId as >::default",
                                    import_name: MyPath {
                                        name: "<strsim",
                                        next: Some(
                                            MyPath {
                                                name: "RowId as >",
                                                next: Some(
                                                    MyPath {
                                                        name: "default",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "{impl#3}::default",
                                item: Some(
                                    ImplItemFn {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        defaultness: None,
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: default,
                                                span: bytes(12640..12647),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Self,
                                                                    span: bytes(12653..12657),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::Struct {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(12668..12672),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                        brace_token: Brace,
                                                        fields: [
                                                            FieldValue {
                                                                attrs: [],
                                                                member: Member::Named(
                                                                    Ident {
                                                                        sym: val,
                                                                        span: bytes(12675..12678),
                                                                    },
                                                                ),
                                                                colon_token: Some(
                                                                    Colon,
                                                                ),
                                                                expr: Expr::Unary {
                                                                    attrs: [],
                                                                    op: UnOp::Neg(
                                                                        Minus,
                                                                    ),
                                                                    expr: Expr::Lit {
                                                                        attrs: [],
                                                                        lit: Lit::Int {
                                                                            token: 1,
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ],
                                                        dot2_token: None,
                                                        rest: None,
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: Pri,
                                is_constructor: true,
                            },
                        ],
                        relative_types: [],
                    },
                    ImplItem {
                        impl_num: 4,
                        struct_name: Name {
                            name: "GrowingHashmapChar",
                            complete_name: "strsim::GrowingHashmapChar",
                            import_name: MyPath {
                                name: "strsim",
                                next: Some(
                                    MyPath {
                                        name: "GrowingHashmapChar",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        trait_name: Some(
                            Name {
                                name: "",
                                complete_name: "",
                                import_name: MyPath {
                                    name: "",
                                    next: None,
                                },
                            },
                        ),
                        item: Some(
                            ItemImpl {
                                attrs: [],
                                defaultness: None,
                                unsafety: None,
                                impl_token: Impl,
                                generics: Generics {
                                    lt_token: Some(
                                        Lt,
                                    ),
                                    params: [
                                        GenericParam::Type(
                                            TypeParam {
                                                attrs: [],
                                                ident: Ident {
                                                    sym: ValueType,
                                                    span: bytes(13431..13440),
                                                },
                                                colon_token: None,
                                                bounds: [],
                                                eq_token: None,
                                                default: None,
                                            },
                                        ),
                                    ],
                                    gt_token: Some(
                                        Gt,
                                    ),
                                    where_clause: Some(
                                        WhereClause {
                                            where_token: Where,
                                            predicates: [
                                                WherePredicate::Type(
                                                    PredicateType {
                                                        lifetimes: None,
                                                        bounded_ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: ValueType,
                                                                            span: bytes(13494..13503),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        colon_token: Colon,
                                                        bounds: [
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::None,
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Default,
                                                                                    span: bytes(13505..13512),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                            Plus,
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::None,
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Clone,
                                                                                    span: bytes(13515..13520),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                            Plus,
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::None,
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Eq,
                                                                                    span: bytes(13523..13525),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                        ],
                                                    },
                                                ),
                                                Comma,
                                            ],
                                        },
                                    ),
                                },
                                trait_: Some(
                                    (
                                        None,
                                        Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: Default,
                                                        span: bytes(13442..13449),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                        For,
                                    ),
                                ),
                                self_ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: GrowingHashmapChar,
                                                    span: bytes(13454..13472),
                                                },
                                                arguments: PathArguments::AngleBracketed {
                                                    colon2_token: None,
                                                    lt_token: Lt,
                                                    args: [
                                                        GenericArgument::Type(
                                                            Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: ValueType,
                                                                                span: bytes(13473..13482),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    gt_token: Gt,
                                                },
                                            },
                                        ],
                                    },
                                },
                                brace_token: Brace,
                                items: [],
                            },
                        ),
                        types: [],
                        consts: [],
                        functions: [
                            ImplFnItem {
                                fn_name: Name {
                                    name: "default",
                                    complete_name: "<strsim::GrowingHashmapChar as >::default",
                                    import_name: MyPath {
                                        name: "<strsim",
                                        next: Some(
                                            MyPath {
                                                name: "GrowingHashmapChar as >",
                                                next: Some(
                                                    MyPath {
                                                        name: "default",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "{impl#4}::default",
                                item: Some(
                                    ImplItemFn {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        defaultness: None,
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: default,
                                                span: bytes(13536..13543),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Self,
                                                                    span: bytes(13549..13553),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::Struct {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(13564..13568),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                        brace_token: Brace,
                                                        fields: [
                                                            FieldValue {
                                                                attrs: [],
                                                                member: Member::Named(
                                                                    Ident {
                                                                        sym: used,
                                                                        span: bytes(13583..13587),
                                                                    },
                                                                ),
                                                                colon_token: Some(
                                                                    Colon,
                                                                ),
                                                                expr: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 0,
                                                                    },
                                                                },
                                                            },
                                                            Comma,
                                                            FieldValue {
                                                                attrs: [],
                                                                member: Member::Named(
                                                                    Ident {
                                                                        sym: fill,
                                                                        span: bytes(13604..13608),
                                                                    },
                                                                ),
                                                                colon_token: Some(
                                                                    Colon,
                                                                ),
                                                                expr: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 0,
                                                                    },
                                                                },
                                                            },
                                                            Comma,
                                                            FieldValue {
                                                                attrs: [],
                                                                member: Member::Named(
                                                                    Ident {
                                                                        sym: mask,
                                                                        span: bytes(13625..13629),
                                                                    },
                                                                ),
                                                                colon_token: Some(
                                                                    Colon,
                                                                ),
                                                                expr: Expr::Unary {
                                                                    attrs: [],
                                                                    op: UnOp::Neg(
                                                                        Minus,
                                                                    ),
                                                                    expr: Expr::Lit {
                                                                        attrs: [],
                                                                        lit: Lit::Int {
                                                                            token: 1,
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                            Comma,
                                                            FieldValue {
                                                                attrs: [],
                                                                member: Member::Named(
                                                                    Ident {
                                                                        sym: map,
                                                                        span: bytes(13647..13650),
                                                                    },
                                                                ),
                                                                colon_token: Some(
                                                                    Colon,
                                                                ),
                                                                expr: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: None,
                                                                                    span: bytes(13652..13656),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                            Comma,
                                                        ],
                                                        dot2_token: None,
                                                        rest: None,
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: Pri,
                                is_constructor: true,
                            },
                        ],
                        relative_types: [],
                    },
                    ImplItem {
                        impl_num: 5,
                        struct_name: Name {
                            name: "GrowingHashmapChar",
                            complete_name: "strsim::GrowingHashmapChar",
                            import_name: MyPath {
                                name: "strsim",
                                next: Some(
                                    MyPath {
                                        name: "GrowingHashmapChar",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        trait_name: None,
                        item: Some(
                            ItemImpl {
                                attrs: [],
                                defaultness: None,
                                unsafety: None,
                                impl_token: Impl,
                                generics: Generics {
                                    lt_token: Some(
                                        Lt,
                                    ),
                                    params: [
                                        GenericParam::Type(
                                            TypeParam {
                                                attrs: [],
                                                ident: Ident {
                                                    sym: ValueType,
                                                    span: bytes(13682..13691),
                                                },
                                                colon_token: None,
                                                bounds: [],
                                                eq_token: None,
                                                default: None,
                                            },
                                        ),
                                    ],
                                    gt_token: Some(
                                        Gt,
                                    ),
                                    where_clause: Some(
                                        WhereClause {
                                            where_token: Where,
                                            predicates: [
                                                WherePredicate::Type(
                                                    PredicateType {
                                                        lifetimes: None,
                                                        bounded_ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: ValueType,
                                                                            span: bytes(13733..13742),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        colon_token: Colon,
                                                        bounds: [
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::None,
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Default,
                                                                                    span: bytes(13744..13751),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                            Plus,
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::None,
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Clone,
                                                                                    span: bytes(13754..13759),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                            Plus,
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::None,
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Eq,
                                                                                    span: bytes(13762..13764),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                            Plus,
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::None,
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Copy,
                                                                                    span: bytes(13767..13771),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                        ],
                                                    },
                                                ),
                                                Comma,
                                            ],
                                        },
                                    ),
                                },
                                trait_: None,
                                self_ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: GrowingHashmapChar,
                                                    span: bytes(13693..13711),
                                                },
                                                arguments: PathArguments::AngleBracketed {
                                                    colon2_token: None,
                                                    lt_token: Lt,
                                                    args: [
                                                        GenericArgument::Type(
                                                            Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: ValueType,
                                                                                span: bytes(13712..13721),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    gt_token: Gt,
                                                },
                                            },
                                        ],
                                    },
                                },
                                brace_token: Brace,
                                items: [],
                            },
                        ),
                        types: [],
                        consts: [],
                        functions: [
                            ImplFnItem {
                                fn_name: Name {
                                    name: "get",
                                    complete_name: "strsim::GrowingHashmapChar::get",
                                    import_name: MyPath {
                                        name: "strsim",
                                        next: Some(
                                            MyPath {
                                                name: "GrowingHashmapChar",
                                                next: Some(
                                                    MyPath {
                                                        name: "get",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "{impl#5}::get",
                                item: Some(
                                    ImplItemFn {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        defaultness: None,
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: get,
                                                span: bytes(13782..13785),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Receiver(
                                                    Receiver {
                                                        attrs: [],
                                                        reference: Some(
                                                            (
                                                                And,
                                                                None,
                                                            ),
                                                        ),
                                                        mutability: None,
                                                        self_token: SelfValue,
                                                        colon_token: None,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: None,
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Self,
                                                                                span: bytes(13787..13791),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                                Comma,
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: key,
                                                                span: bytes(13793..13796),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: u32,
                                                                            span: bytes(13798..13801),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: ValueType,
                                                                    span: bytes(13806..13815),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::Field {
                                                                attrs: [],
                                                                base: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: self,
                                                                                    span: bytes(13826..13830),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                member: Member::Named(
                                                                    Ident {
                                                                        sym: map,
                                                                        span: bytes(13831..13834),
                                                                    },
                                                                ),
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: as_ref,
                                                                span: bytes(13848..13854),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [],
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: map_or_else,
                                                            span: bytes(13870..13881),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [
                                                            Expr::Closure {
                                                                attrs: [],
                                                                lifetimes: None,
                                                                constness: None,
                                                                movability: None,
                                                                asyncness: None,
                                                                capture: None,
                                                                or1_token: Or,
                                                                inputs: [],
                                                                or2_token: Or,
                                                                output: ReturnType::Default,
                                                                body: Expr::Call {
                                                                    attrs: [],
                                                                    func: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Default,
                                                                                        span: bytes(13885..13892),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                                PathSep,
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: default,
                                                                                        span: bytes(13894..13901),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    paren_token: Paren,
                                                                    args: [],
                                                                },
                                                            },
                                                            Comma,
                                                            Expr::Closure {
                                                                attrs: [],
                                                                lifetimes: None,
                                                                constness: None,
                                                                movability: None,
                                                                asyncness: None,
                                                                capture: None,
                                                                or1_token: Or,
                                                                inputs: [
                                                                    Pat::Ident {
                                                                        attrs: [],
                                                                        by_ref: None,
                                                                        mutability: None,
                                                                        ident: Ident {
                                                                            sym: map,
                                                                            span: bytes(13906..13909),
                                                                        },
                                                                        subpat: None,
                                                                    },
                                                                ],
                                                                or2_token: Or,
                                                                output: ReturnType::Default,
                                                                body: Expr::Field {
                                                                    attrs: [],
                                                                    base: Expr::Index {
                                                                        attrs: [],
                                                                        expr: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: map,
                                                                                            span: bytes(13911..13914),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        bracket_token: Bracket,
                                                                        index: Expr::MethodCall {
                                                                            attrs: [],
                                                                            receiver: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: self,
                                                                                                span: bytes(13915..13919),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            dot_token: Dot,
                                                                            method: Ident {
                                                                                sym: lookup,
                                                                                span: bytes(13920..13926),
                                                                            },
                                                                            turbofish: None,
                                                                            paren_token: Paren,
                                                                            args: [
                                                                                Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: key,
                                                                                                    span: bytes(13927..13930),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    member: Member::Named(
                                                                        Ident {
                                                                            sym: value,
                                                                            span: bytes(13933..13938),
                                                                        },
                                                                    ),
                                                                },
                                                            },
                                                        ],
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: Pri,
                                is_constructor: false,
                            },
                            ImplFnItem {
                                fn_name: Name {
                                    name: "get_mut",
                                    complete_name: "strsim::GrowingHashmapChar::get_mut",
                                    import_name: MyPath {
                                        name: "strsim",
                                        next: Some(
                                            MyPath {
                                                name: "GrowingHashmapChar",
                                                next: Some(
                                                    MyPath {
                                                        name: "get_mut",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "{impl#5}::get_mut",
                                item: Some(
                                    ImplItemFn {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        defaultness: None,
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: get_mut,
                                                span: bytes(13954..13961),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Receiver(
                                                    Receiver {
                                                        attrs: [],
                                                        reference: Some(
                                                            (
                                                                And,
                                                                None,
                                                            ),
                                                        ),
                                                        mutability: Some(
                                                            Mut,
                                                        ),
                                                        self_token: SelfValue,
                                                        colon_token: None,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Self,
                                                                                span: bytes(13967..13971),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                                Comma,
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: key,
                                                                span: bytes(13973..13976),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: u32,
                                                                            span: bytes(13978..13981),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: ValueType,
                                                                        span: bytes(13991..14000),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            ),
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::If {
                                                        attrs: [],
                                                        if_token: If,
                                                        cond: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::Field {
                                                                attrs: [],
                                                                base: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: self,
                                                                                    span: bytes(14014..14018),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                member: Member::Named(
                                                                    Ident {
                                                                        sym: map,
                                                                        span: bytes(14019..14022),
                                                                    },
                                                                ),
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: is_none,
                                                                span: bytes(14023..14030),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [],
                                                        },
                                                        then_branch: Block {
                                                            brace_token: Brace,
                                                            stmts: [
                                                                Stmt::Expr(
                                                                    Expr::MethodCall {
                                                                        attrs: [],
                                                                        receiver: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: self,
                                                                                            span: bytes(14047..14051),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        dot_token: Dot,
                                                                        method: Ident {
                                                                            sym: allocate,
                                                                            span: bytes(14052..14060),
                                                                        },
                                                                        turbofish: None,
                                                                        paren_token: Paren,
                                                                        args: [],
                                                                    },
                                                                    Some(
                                                                        Semi,
                                                                    ),
                                                                ),
                                                            ],
                                                        },
                                                        else_branch: None,
                                                    },
                                                    None,
                                                ),
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: Some(
                                                            Mut,
                                                        ),
                                                        ident: Ident {
                                                            sym: i,
                                                            span: bytes(14091..14092),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: self,
                                                                                    span: bytes(14095..14099),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: lookup,
                                                                    span: bytes(14100..14106),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: key,
                                                                                        span: bytes(14107..14110),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Expr(
                                                    Expr::If {
                                                        attrs: [],
                                                        if_token: If,
                                                        cond: Expr::Binary {
                                                            attrs: [],
                                                            left: Expr::Field {
                                                                attrs: [],
                                                                base: Expr::Index {
                                                                    attrs: [],
                                                                    expr: Expr::MethodCall {
                                                                        attrs: [],
                                                                        receiver: Expr::MethodCall {
                                                                            attrs: [],
                                                                            receiver: Expr::Field {
                                                                                attrs: [],
                                                                                base: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: self,
                                                                                                    span: bytes(14124..14128),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                dot_token: Dot,
                                                                                member: Member::Named(
                                                                                    Ident {
                                                                                        sym: map,
                                                                                        span: bytes(14142..14145),
                                                                                    },
                                                                                ),
                                                                            },
                                                                            dot_token: Dot,
                                                                            method: Ident {
                                                                                sym: as_ref,
                                                                                span: bytes(14159..14165),
                                                                            },
                                                                            turbofish: None,
                                                                            paren_token: Paren,
                                                                            args: [],
                                                                        },
                                                                        dot_token: Dot,
                                                                        method: Ident {
                                                                            sym: expect,
                                                                            span: bytes(14181..14187),
                                                                        },
                                                                        turbofish: None,
                                                                        paren_token: Paren,
                                                                        args: [
                                                                            Expr::Lit {
                                                                                attrs: [],
                                                                                lit: Lit::Str {
                                                                                    token: "map should have been created above",
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                    bracket_token: Bracket,
                                                                    index: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: i,
                                                                                        span: bytes(14226..14227),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                member: Member::Named(
                                                                    Ident {
                                                                        sym: value,
                                                                        span: bytes(14242..14247),
                                                                    },
                                                                ),
                                                            },
                                                            op: BinOp::Eq(
                                                                EqEq,
                                                            ),
                                                            right: Expr::Call {
                                                                attrs: [],
                                                                func: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Default,
                                                                                    span: bytes(14263..14270),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: default,
                                                                                    span: bytes(14272..14279),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                paren_token: Paren,
                                                                args: [],
                                                            },
                                                        },
                                                        then_branch: Block {
                                                            brace_token: Brace,
                                                            stmts: [
                                                                Stmt::Expr(
                                                                    Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Field {
                                                                            attrs: [],
                                                                            base: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: self,
                                                                                                span: bytes(14304..14308),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            dot_token: Dot,
                                                                            member: Member::Named(
                                                                                Ident {
                                                                                    sym: fill,
                                                                                    span: bytes(14309..14313),
                                                                                },
                                                                            ),
                                                                        },
                                                                        op: BinOp::AddAssign(
                                                                            PlusEq,
                                                                        ),
                                                                        right: Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Int {
                                                                                token: 1,
                                                                            },
                                                                        },
                                                                    },
                                                                    Some(
                                                                        Semi,
                                                                    ),
                                                                ),
                                                                Stmt::Expr(
                                                                    Expr::If {
                                                                        attrs: [],
                                                                        if_token: If,
                                                                        cond: Expr::Binary {
                                                                            attrs: [],
                                                                            left: Expr::Binary {
                                                                                attrs: [],
                                                                                left: Expr::Field {
                                                                                    attrs: [],
                                                                                    base: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: self,
                                                                                                        span: bytes(14371..14375),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    dot_token: Dot,
                                                                                    member: Member::Named(
                                                                                        Ident {
                                                                                            sym: fill,
                                                                                            span: bytes(14376..14380),
                                                                                        },
                                                                                    ),
                                                                                },
                                                                                op: BinOp::Mul(
                                                                                    Star,
                                                                                ),
                                                                                right: Expr::Lit {
                                                                                    attrs: [],
                                                                                    lit: Lit::Int {
                                                                                        token: 3,
                                                                                    },
                                                                                },
                                                                            },
                                                                            op: BinOp::Ge(
                                                                                Ge,
                                                                            ),
                                                                            right: Expr::Binary {
                                                                                attrs: [],
                                                                                left: Expr::Paren {
                                                                                    attrs: [],
                                                                                    paren_token: Paren,
                                                                                    expr: Expr::Binary {
                                                                                        attrs: [],
                                                                                        left: Expr::Field {
                                                                                            attrs: [],
                                                                                            base: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: self,
                                                                                                                span: bytes(14389..14393),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            dot_token: Dot,
                                                                                            member: Member::Named(
                                                                                                Ident {
                                                                                                    sym: mask,
                                                                                                    span: bytes(14394..14398),
                                                                                                },
                                                                                            ),
                                                                                        },
                                                                                        op: BinOp::Add(
                                                                                            Plus,
                                                                                        ),
                                                                                        right: Expr::Lit {
                                                                                            attrs: [],
                                                                                            lit: Lit::Int {
                                                                                                token: 1,
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                },
                                                                                op: BinOp::Mul(
                                                                                    Star,
                                                                                ),
                                                                                right: Expr::Lit {
                                                                                    attrs: [],
                                                                                    lit: Lit::Int {
                                                                                        token: 2,
                                                                                    },
                                                                                },
                                                                            },
                                                                        },
                                                                        then_branch: Block {
                                                                            brace_token: Brace,
                                                                            stmts: [
                                                                                Stmt::Expr(
                                                                                    Expr::MethodCall {
                                                                                        attrs: [],
                                                                                        receiver: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: self,
                                                                                                            span: bytes(14426..14430),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        dot_token: Dot,
                                                                                        method: Ident {
                                                                                            sym: grow,
                                                                                            span: bytes(14431..14435),
                                                                                        },
                                                                                        turbofish: None,
                                                                                        paren_token: Paren,
                                                                                        args: [
                                                                                            Expr::Binary {
                                                                                                attrs: [],
                                                                                                left: Expr::Paren {
                                                                                                    attrs: [],
                                                                                                    paren_token: Paren,
                                                                                                    expr: Expr::Binary {
                                                                                                        attrs: [],
                                                                                                        left: Expr::Field {
                                                                                                            attrs: [],
                                                                                                            base: Expr::Path {
                                                                                                                attrs: [],
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: self,
                                                                                                                                span: bytes(14437..14441),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                            dot_token: Dot,
                                                                                                            member: Member::Named(
                                                                                                                Ident {
                                                                                                                    sym: used,
                                                                                                                    span: bytes(14442..14446),
                                                                                                                },
                                                                                                            ),
                                                                                                        },
                                                                                                        op: BinOp::Add(
                                                                                                            Plus,
                                                                                                        ),
                                                                                                        right: Expr::Lit {
                                                                                                            attrs: [],
                                                                                                            lit: Lit::Int {
                                                                                                                token: 1,
                                                                                                            },
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                                op: BinOp::Mul(
                                                                                                    Star,
                                                                                                ),
                                                                                                right: Expr::Lit {
                                                                                                    attrs: [],
                                                                                                    lit: Lit::Int {
                                                                                                        token: 2,
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                    Some(
                                                                                        Semi,
                                                                                    ),
                                                                                ),
                                                                                Stmt::Expr(
                                                                                    Expr::Assign {
                                                                                        attrs: [],
                                                                                        left: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: i,
                                                                                                            span: bytes(14474..14475),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        eq_token: Eq,
                                                                                        right: Expr::MethodCall {
                                                                                            attrs: [],
                                                                                            receiver: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: self,
                                                                                                                span: bytes(14478..14482),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            dot_token: Dot,
                                                                                            method: Ident {
                                                                                                sym: lookup,
                                                                                                span: bytes(14483..14489),
                                                                                            },
                                                                                            turbofish: None,
                                                                                            paren_token: Paren,
                                                                                            args: [
                                                                                                Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: key,
                                                                                                                    span: bytes(14490..14493),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    Some(
                                                                                        Semi,
                                                                                    ),
                                                                                ),
                                                                            ],
                                                                        },
                                                                        else_branch: None,
                                                                    },
                                                                    None,
                                                                ),
                                                                Stmt::Expr(
                                                                    Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Field {
                                                                            attrs: [],
                                                                            base: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: self,
                                                                                                span: bytes(14523..14527),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            dot_token: Dot,
                                                                            member: Member::Named(
                                                                                Ident {
                                                                                    sym: used,
                                                                                    span: bytes(14528..14532),
                                                                                },
                                                                            ),
                                                                        },
                                                                        op: BinOp::AddAssign(
                                                                            PlusEq,
                                                                        ),
                                                                        right: Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Int {
                                                                                token: 1,
                                                                            },
                                                                        },
                                                                    },
                                                                    Some(
                                                                        Semi,
                                                                    ),
                                                                ),
                                                            ],
                                                        },
                                                        else_branch: None,
                                                    },
                                                    None,
                                                ),
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: elem,
                                                            span: bytes(14562..14566),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::Reference {
                                                                attrs: [],
                                                                and_token: And,
                                                                mutability: Some(
                                                                    Mut,
                                                                ),
                                                                expr: Expr::Index {
                                                                    attrs: [],
                                                                    expr: Expr::MethodCall {
                                                                        attrs: [],
                                                                        receiver: Expr::MethodCall {
                                                                            attrs: [],
                                                                            receiver: Expr::Field {
                                                                                attrs: [],
                                                                                base: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: self,
                                                                                                    span: bytes(14574..14578),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                dot_token: Dot,
                                                                                member: Member::Named(
                                                                                    Ident {
                                                                                        sym: map,
                                                                                        span: bytes(14592..14595),
                                                                                    },
                                                                                ),
                                                                            },
                                                                            dot_token: Dot,
                                                                            method: Ident {
                                                                                sym: as_mut,
                                                                                span: bytes(14609..14615),
                                                                            },
                                                                            turbofish: None,
                                                                            paren_token: Paren,
                                                                            args: [],
                                                                        },
                                                                        dot_token: Dot,
                                                                        method: Ident {
                                                                            sym: expect,
                                                                            span: bytes(14631..14637),
                                                                        },
                                                                        turbofish: None,
                                                                        paren_token: Paren,
                                                                        args: [
                                                                            Expr::Lit {
                                                                                attrs: [],
                                                                                lit: Lit::Str {
                                                                                    token: "map should have been created above",
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                    bracket_token: Bracket,
                                                                    index: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: i,
                                                                                        span: bytes(14676..14677),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Expr(
                                                    Expr::Assign {
                                                        attrs: [],
                                                        left: Expr::Field {
                                                            attrs: [],
                                                            base: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: elem,
                                                                                span: bytes(14688..14692),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            dot_token: Dot,
                                                            member: Member::Named(
                                                                Ident {
                                                                    sym: key,
                                                                    span: bytes(14693..14696),
                                                                },
                                                            ),
                                                        },
                                                        eq_token: Eq,
                                                        right: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: key,
                                                                            span: bytes(14699..14702),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                                Stmt::Expr(
                                                    Expr::Reference {
                                                        attrs: [],
                                                        and_token: And,
                                                        mutability: Some(
                                                            Mut,
                                                        ),
                                                        expr: Expr::Field {
                                                            attrs: [],
                                                            base: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: elem,
                                                                                span: bytes(14717..14721),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            dot_token: Dot,
                                                            member: Member::Named(
                                                                Ident {
                                                                    sym: value,
                                                                    span: bytes(14722..14727),
                                                                },
                                                            ),
                                                        },
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: Pri,
                                is_constructor: false,
                            },
                            ImplFnItem {
                                fn_name: Name {
                                    name: "allocate",
                                    complete_name: "strsim::GrowingHashmapChar::allocate",
                                    import_name: MyPath {
                                        name: "strsim",
                                        next: Some(
                                            MyPath {
                                                name: "GrowingHashmapChar",
                                                next: Some(
                                                    MyPath {
                                                        name: "allocate",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "{impl#5}::allocate",
                                item: Some(
                                    ImplItemFn {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        defaultness: None,
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: allocate,
                                                span: bytes(14742..14750),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Receiver(
                                                    Receiver {
                                                        attrs: [],
                                                        reference: Some(
                                                            (
                                                                And,
                                                                None,
                                                            ),
                                                        ),
                                                        mutability: Some(
                                                            Mut,
                                                        ),
                                                        self_token: SelfValue,
                                                        colon_token: None,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Self,
                                                                                span: bytes(14756..14760),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Default,
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::Assign {
                                                        attrs: [],
                                                        left: Expr::Field {
                                                            attrs: [],
                                                            base: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: self,
                                                                                span: bytes(14772..14776),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            dot_token: Dot,
                                                            member: Member::Named(
                                                                Ident {
                                                                    sym: mask,
                                                                    span: bytes(14777..14781),
                                                                },
                                                            ),
                                                        },
                                                        eq_token: Eq,
                                                        right: Expr::Binary {
                                                            attrs: [],
                                                            left: Expr::Lit {
                                                                attrs: [],
                                                                lit: Lit::Int {
                                                                    token: 8,
                                                                },
                                                            },
                                                            op: BinOp::Sub(
                                                                Minus,
                                                            ),
                                                            right: Expr::Lit {
                                                                attrs: [],
                                                                lit: Lit::Int {
                                                                    token: 1,
                                                                },
                                                            },
                                                        },
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                                Stmt::Expr(
                                                    Expr::Assign {
                                                        attrs: [],
                                                        left: Expr::Field {
                                                            attrs: [],
                                                            base: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: self,
                                                                                span: bytes(14799..14803),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            dot_token: Dot,
                                                            member: Member::Named(
                                                                Ident {
                                                                    sym: map,
                                                                    span: bytes(14804..14807),
                                                                },
                                                            ),
                                                        },
                                                        eq_token: Eq,
                                                        right: Expr::Call {
                                                            attrs: [],
                                                            func: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Some,
                                                                                span: bytes(14810..14814),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Macro {
                                                                    attrs: [],
                                                                    mac: Macro {
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: vec,
                                                                                        span: bytes(14815..14818),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                        bang_token: Not,
                                                                        delimiter: MacroDelimiter::Bracket(
                                                                            Bracket,
                                                                        ),
                                                                        tokens: TokenStream [
                                                                            Ident {
                                                                                sym: GrowingHashmapMapElemChar,
                                                                                span: bytes(14820..14845),
                                                                            },
                                                                            Punct {
                                                                                char: ':',
                                                                                spacing: Joint,
                                                                                span: bytes(14845..14846),
                                                                            },
                                                                            Punct {
                                                                                char: ':',
                                                                                spacing: Alone,
                                                                                span: bytes(14846..14847),
                                                                            },
                                                                            Ident {
                                                                                sym: default,
                                                                                span: bytes(14847..14854),
                                                                            },
                                                                            Group {
                                                                                delimiter: Parenthesis,
                                                                                stream: TokenStream [],
                                                                                span: bytes(14854..14856),
                                                                            },
                                                                            Punct {
                                                                                char: ';',
                                                                                spacing: Alone,
                                                                                span: bytes(14856..14857),
                                                                            },
                                                                            Literal {
                                                                                lit: 8,
                                                                                span: bytes(14858..14859),
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: Pri,
                                is_constructor: false,
                            },
                            ImplFnItem {
                                fn_name: Name {
                                    name: "lookup",
                                    complete_name: "strsim::GrowingHashmapChar::lookup",
                                    import_name: MyPath {
                                        name: "strsim",
                                        next: Some(
                                            MyPath {
                                                name: "GrowingHashmapChar",
                                                next: Some(
                                                    MyPath {
                                                        name: "lookup",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "{impl#5}::lookup",
                                item: Some(
                                    ImplItemFn {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        defaultness: None,
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: lookup,
                                                span: bytes(14993..14999),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Receiver(
                                                    Receiver {
                                                        attrs: [],
                                                        reference: Some(
                                                            (
                                                                And,
                                                                None,
                                                            ),
                                                        ),
                                                        mutability: None,
                                                        self_token: SelfValue,
                                                        colon_token: None,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: None,
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Self,
                                                                                span: bytes(15001..15005),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                                Comma,
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: key,
                                                                span: bytes(15007..15010),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: u32,
                                                                            span: bytes(15012..15015),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: usize,
                                                                    span: bytes(15020..15025),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: hash,
                                                            span: bytes(15040..15044),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: key,
                                                                                span: bytes(15047..15050),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: Some(
                                                            Mut,
                                                        ),
                                                        ident: Ident {
                                                            sym: i,
                                                            span: bytes(15068..15069),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Cast {
                                                                    attrs: [],
                                                                    expr: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: hash,
                                                                                        span: bytes(15072..15076),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    as_token: As,
                                                                    ty: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: usize,
                                                                                        span: bytes(15080..15085),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                                op: BinOp::BitAnd(
                                                                    And,
                                                                ),
                                                                right: Expr::Cast {
                                                                    attrs: [],
                                                                    expr: Expr::Field {
                                                                        attrs: [],
                                                                        base: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: self,
                                                                                            span: bytes(15088..15092),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        dot_token: Dot,
                                                                        member: Member::Named(
                                                                            Ident {
                                                                                sym: mask,
                                                                                span: bytes(15093..15097),
                                                                            },
                                                                        ),
                                                                    },
                                                                    as_token: As,
                                                                    ty: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: usize,
                                                                                        span: bytes(15101..15106),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: map,
                                                            span: bytes(15121..15124),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::MethodCall {
                                                                    attrs: [],
                                                                    receiver: Expr::Field {
                                                                        attrs: [],
                                                                        base: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: self,
                                                                                            span: bytes(15127..15131),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        dot_token: Dot,
                                                                        member: Member::Named(
                                                                            Ident {
                                                                                sym: map,
                                                                                span: bytes(15145..15148),
                                                                            },
                                                                        ),
                                                                    },
                                                                    dot_token: Dot,
                                                                    method: Ident {
                                                                        sym: as_ref,
                                                                        span: bytes(15162..15168),
                                                                    },
                                                                    turbofish: None,
                                                                    paren_token: Paren,
                                                                    args: [],
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: expect,
                                                                    span: bytes(15184..15190),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Lit {
                                                                        attrs: [],
                                                                        lit: Lit::Str {
                                                                            token: "callers have to ensure map is allocated",
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Expr(
                                                    Expr::If {
                                                        attrs: [],
                                                        if_token: If,
                                                        cond: Expr::Binary {
                                                            attrs: [],
                                                            left: Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Field {
                                                                    attrs: [],
                                                                    base: Expr::Index {
                                                                        attrs: [],
                                                                        expr: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: map,
                                                                                            span: bytes(15247..15250),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        bracket_token: Bracket,
                                                                        index: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: i,
                                                                                            span: bytes(15251..15252),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    member: Member::Named(
                                                                        Ident {
                                                                            sym: value,
                                                                            span: bytes(15254..15259),
                                                                        },
                                                                    ),
                                                                },
                                                                op: BinOp::Eq(
                                                                    EqEq,
                                                                ),
                                                                right: Expr::Call {
                                                                    attrs: [],
                                                                    func: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Default,
                                                                                        span: bytes(15263..15270),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                                PathSep,
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: default,
                                                                                        span: bytes(15272..15279),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    paren_token: Paren,
                                                                    args: [],
                                                                },
                                                            },
                                                            op: BinOp::Or(
                                                                OrOr,
                                                            ),
                                                            right: Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Field {
                                                                    attrs: [],
                                                                    base: Expr::Index {
                                                                        attrs: [],
                                                                        expr: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: map,
                                                                                            span: bytes(15285..15288),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        bracket_token: Bracket,
                                                                        index: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: i,
                                                                                            span: bytes(15289..15290),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    member: Member::Named(
                                                                        Ident {
                                                                            sym: key,
                                                                            span: bytes(15292..15295),
                                                                        },
                                                                    ),
                                                                },
                                                                op: BinOp::Eq(
                                                                    EqEq,
                                                                ),
                                                                right: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: key,
                                                                                    span: bytes(15299..15302),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        },
                                                        then_branch: Block {
                                                            brace_token: Brace,
                                                            stmts: [
                                                                Stmt::Expr(
                                                                    Expr::Return {
                                                                        attrs: [],
                                                                        return_token: Return,
                                                                        expr: Some(
                                                                            Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: i,
                                                                                                span: bytes(15324..15325),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                    },
                                                                    Some(
                                                                        Semi,
                                                                    ),
                                                                ),
                                                            ],
                                                        },
                                                        else_branch: None,
                                                    },
                                                    None,
                                                ),
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: Some(
                                                            Mut,
                                                        ),
                                                        ident: Ident {
                                                            sym: perturb,
                                                            span: bytes(15354..15361),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: key,
                                                                                span: bytes(15364..15367),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Expr(
                                                    Expr::Loop {
                                                        attrs: [],
                                                        label: None,
                                                        loop_token: Loop,
                                                        body: Block {
                                                            brace_token: Brace,
                                                            stmts: [
                                                                Stmt::Expr(
                                                                    Expr::Assign {
                                                                        attrs: [],
                                                                        left: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: i,
                                                                                            span: bytes(15396..15397),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        eq_token: Eq,
                                                                        right: Expr::Binary {
                                                                            attrs: [],
                                                                            left: Expr::Paren {
                                                                                attrs: [],
                                                                                paren_token: Paren,
                                                                                expr: Expr::Binary {
                                                                                    attrs: [],
                                                                                    left: Expr::Binary {
                                                                                        attrs: [],
                                                                                        left: Expr::Binary {
                                                                                            attrs: [],
                                                                                            left: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: i,
                                                                                                                span: bytes(15401..15402),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            op: BinOp::Mul(
                                                                                                Star,
                                                                                            ),
                                                                                            right: Expr::Lit {
                                                                                                attrs: [],
                                                                                                lit: Lit::Int {
                                                                                                    token: 5,
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                        op: BinOp::Add(
                                                                                            Plus,
                                                                                        ),
                                                                                        right: Expr::Cast {
                                                                                            attrs: [],
                                                                                            expr: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: perturb,
                                                                                                                span: bytes(15409..15416),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            as_token: As,
                                                                                            ty: Type::Path {
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: usize,
                                                                                                                span: bytes(15420..15425),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                    op: BinOp::Add(
                                                                                        Plus,
                                                                                    ),
                                                                                    right: Expr::Lit {
                                                                                        attrs: [],
                                                                                        lit: Lit::Int {
                                                                                            token: 1,
                                                                                        },
                                                                                    },
                                                                                },
                                                                            },
                                                                            op: BinOp::BitAnd(
                                                                                And,
                                                                            ),
                                                                            right: Expr::Cast {
                                                                                attrs: [],
                                                                                expr: Expr::Field {
                                                                                    attrs: [],
                                                                                    base: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: self,
                                                                                                        span: bytes(15433..15437),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    dot_token: Dot,
                                                                                    member: Member::Named(
                                                                                        Ident {
                                                                                            sym: mask,
                                                                                            span: bytes(15438..15442),
                                                                                        },
                                                                                    ),
                                                                                },
                                                                                as_token: As,
                                                                                ty: Type::Path {
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: usize,
                                                                                                    span: bytes(15446..15451),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            },
                                                                        },
                                                                    },
                                                                    Some(
                                                                        Semi,
                                                                    ),
                                                                ),
                                                                Stmt::Expr(
                                                                    Expr::If {
                                                                        attrs: [],
                                                                        if_token: If,
                                                                        cond: Expr::Binary {
                                                                            attrs: [],
                                                                            left: Expr::Binary {
                                                                                attrs: [],
                                                                                left: Expr::Field {
                                                                                    attrs: [],
                                                                                    base: Expr::Index {
                                                                                        attrs: [],
                                                                                        expr: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: map,
                                                                                                            span: bytes(15469..15472),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        bracket_token: Bracket,
                                                                                        index: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: i,
                                                                                                            span: bytes(15473..15474),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                    dot_token: Dot,
                                                                                    member: Member::Named(
                                                                                        Ident {
                                                                                            sym: value,
                                                                                            span: bytes(15476..15481),
                                                                                        },
                                                                                    ),
                                                                                },
                                                                                op: BinOp::Eq(
                                                                                    EqEq,
                                                                                ),
                                                                                right: Expr::Call {
                                                                                    attrs: [],
                                                                                    func: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: Default,
                                                                                                        span: bytes(15485..15492),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                                PathSep,
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: default,
                                                                                                        span: bytes(15494..15501),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    paren_token: Paren,
                                                                                    args: [],
                                                                                },
                                                                            },
                                                                            op: BinOp::Or(
                                                                                OrOr,
                                                                            ),
                                                                            right: Expr::Binary {
                                                                                attrs: [],
                                                                                left: Expr::Field {
                                                                                    attrs: [],
                                                                                    base: Expr::Index {
                                                                                        attrs: [],
                                                                                        expr: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: map,
                                                                                                            span: bytes(15507..15510),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        bracket_token: Bracket,
                                                                                        index: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: i,
                                                                                                            span: bytes(15511..15512),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                    dot_token: Dot,
                                                                                    member: Member::Named(
                                                                                        Ident {
                                                                                            sym: key,
                                                                                            span: bytes(15514..15517),
                                                                                        },
                                                                                    ),
                                                                                },
                                                                                op: BinOp::Eq(
                                                                                    EqEq,
                                                                                ),
                                                                                right: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: key,
                                                                                                    span: bytes(15521..15524),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            },
                                                                        },
                                                                        then_branch: Block {
                                                                            brace_token: Brace,
                                                                            stmts: [
                                                                                Stmt::Expr(
                                                                                    Expr::Return {
                                                                                        attrs: [],
                                                                                        return_token: Return,
                                                                                        expr: Some(
                                                                                            Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: i,
                                                                                                                span: bytes(15550..15551),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                        ),
                                                                                    },
                                                                                    Some(
                                                                                        Semi,
                                                                                    ),
                                                                                ),
                                                                            ],
                                                                        },
                                                                        else_branch: None,
                                                                    },
                                                                    None,
                                                                ),
                                                                Stmt::Expr(
                                                                    Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: perturb,
                                                                                            span: bytes(15580..15587),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        op: BinOp::ShrAssign(
                                                                            ShrEq,
                                                                        ),
                                                                        right: Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Int {
                                                                                token: 5,
                                                                            },
                                                                        },
                                                                    },
                                                                    Some(
                                                                        Semi,
                                                                    ),
                                                                ),
                                                            ],
                                                        },
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: Pri,
                                is_constructor: false,
                            },
                            ImplFnItem {
                                fn_name: Name {
                                    name: "grow",
                                    complete_name: "strsim::GrowingHashmapChar::grow",
                                    import_name: MyPath {
                                        name: "strsim",
                                        next: Some(
                                            MyPath {
                                                name: "GrowingHashmapChar",
                                                next: Some(
                                                    MyPath {
                                                        name: "grow",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "{impl#5}::grow",
                                item: Some(
                                    ImplItemFn {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        defaultness: None,
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: grow,
                                                span: bytes(15619..15623),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Receiver(
                                                    Receiver {
                                                        attrs: [],
                                                        reference: Some(
                                                            (
                                                                And,
                                                                None,
                                                            ),
                                                        ),
                                                        mutability: Some(
                                                            Mut,
                                                        ),
                                                        self_token: SelfValue,
                                                        colon_token: None,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Self,
                                                                                span: bytes(15629..15633),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                                Comma,
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: min_used,
                                                                span: bytes(15635..15643),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: i32,
                                                                            span: bytes(15645..15648),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Default,
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: Some(
                                                            Mut,
                                                        ),
                                                        ident: Ident {
                                                            sym: new_size,
                                                            span: bytes(15668..15676),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Field {
                                                                    attrs: [],
                                                                    base: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: self,
                                                                                        span: bytes(15679..15683),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    member: Member::Named(
                                                                        Ident {
                                                                            sym: mask,
                                                                            span: bytes(15684..15688),
                                                                        },
                                                                    ),
                                                                },
                                                                op: BinOp::Add(
                                                                    Plus,
                                                                ),
                                                                right: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 1,
                                                                    },
                                                                },
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Expr(
                                                    Expr::While {
                                                        attrs: [],
                                                        label: None,
                                                        while_token: While,
                                                        cond: Expr::Binary {
                                                            attrs: [],
                                                            left: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: new_size,
                                                                                span: bytes(15708..15716),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            op: BinOp::Le(
                                                                Le,
                                                            ),
                                                            right: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: min_used,
                                                                                span: bytes(15720..15728),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                        body: Block {
                                                            brace_token: Brace,
                                                            stmts: [
                                                                Stmt::Expr(
                                                                    Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: new_size,
                                                                                            span: bytes(15743..15751),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        op: BinOp::ShlAssign(
                                                                            ShlEq,
                                                                        ),
                                                                        right: Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Int {
                                                                                token: 1,
                                                                            },
                                                                        },
                                                                    },
                                                                    Some(
                                                                        Semi,
                                                                    ),
                                                                ),
                                                            ],
                                                        },
                                                    },
                                                    None,
                                                ),
                                                Stmt::Expr(
                                                    Expr::Assign {
                                                        attrs: [],
                                                        left: Expr::Field {
                                                            attrs: [],
                                                            base: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: self,
                                                                                span: bytes(15778..15782),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            dot_token: Dot,
                                                            member: Member::Named(
                                                                Ident {
                                                                    sym: fill,
                                                                    span: bytes(15783..15787),
                                                                },
                                                            ),
                                                        },
                                                        eq_token: Eq,
                                                        right: Expr::Field {
                                                            attrs: [],
                                                            base: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: self,
                                                                                span: bytes(15790..15794),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            dot_token: Dot,
                                                            member: Member::Named(
                                                                Ident {
                                                                    sym: used,
                                                                    span: bytes(15795..15799),
                                                                },
                                                            ),
                                                        },
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                                Stmt::Expr(
                                                    Expr::Assign {
                                                        attrs: [],
                                                        left: Expr::Field {
                                                            attrs: [],
                                                            base: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: self,
                                                                                span: bytes(15809..15813),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            dot_token: Dot,
                                                            member: Member::Named(
                                                                Ident {
                                                                    sym: mask,
                                                                    span: bytes(15814..15818),
                                                                },
                                                            ),
                                                        },
                                                        eq_token: Eq,
                                                        right: Expr::Binary {
                                                            attrs: [],
                                                            left: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: new_size,
                                                                                span: bytes(15821..15829),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            op: BinOp::Sub(
                                                                Minus,
                                                            ),
                                                            right: Expr::Lit {
                                                                attrs: [],
                                                                lit: Lit::Int {
                                                                    token: 1,
                                                                },
                                                            },
                                                        },
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: old_map,
                                                            span: bytes(15848..15855),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::Call {
                                                                attrs: [],
                                                                func: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: std,
                                                                                    span: bytes(15858..15861),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: mem,
                                                                                    span: bytes(15863..15866),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: replace,
                                                                                    span: bytes(15868..15875),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::MethodCall {
                                                                        attrs: [],
                                                                        receiver: Expr::MethodCall {
                                                                            attrs: [],
                                                                            receiver: Expr::Field {
                                                                                attrs: [],
                                                                                base: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: self,
                                                                                                    span: bytes(15889..15893),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                dot_token: Dot,
                                                                                member: Member::Named(
                                                                                    Ident {
                                                                                        sym: map,
                                                                                        span: bytes(15894..15897),
                                                                                    },
                                                                                ),
                                                                            },
                                                                            dot_token: Dot,
                                                                            method: Ident {
                                                                                sym: as_mut,
                                                                                span: bytes(15915..15921),
                                                                            },
                                                                            turbofish: None,
                                                                            paren_token: Paren,
                                                                            args: [],
                                                                        },
                                                                        dot_token: Dot,
                                                                        method: Ident {
                                                                            sym: expect,
                                                                            span: bytes(15941..15947),
                                                                        },
                                                                        turbofish: None,
                                                                        paren_token: Paren,
                                                                        args: [
                                                                            Expr::Lit {
                                                                                attrs: [],
                                                                                lit: Lit::Str {
                                                                                    token: "callers have to ensure map is allocated",
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                    Comma,
                                                                    Expr::Macro {
                                                                        attrs: [],
                                                                        mac: Macro {
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: vec,
                                                                                            span: bytes(16004..16007),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                            bang_token: Not,
                                                                            delimiter: MacroDelimiter::Bracket(
                                                                                Bracket,
                                                                            ),
                                                                            tokens: TokenStream [
                                                                                Ident {
                                                                                    sym: GrowingHashmapMapElemChar,
                                                                                    span: bytes(16009..16034),
                                                                                },
                                                                                Punct {
                                                                                    char: ':',
                                                                                    spacing: Joint,
                                                                                    span: bytes(16034..16035),
                                                                                },
                                                                                Punct {
                                                                                    char: ':',
                                                                                    spacing: Joint,
                                                                                    span: bytes(16035..16036),
                                                                                },
                                                                                Punct {
                                                                                    char: '<',
                                                                                    spacing: Alone,
                                                                                    span: bytes(16036..16037),
                                                                                },
                                                                                Ident {
                                                                                    sym: ValueType,
                                                                                    span: bytes(16037..16046),
                                                                                },
                                                                                Punct {
                                                                                    char: '>',
                                                                                    spacing: Joint,
                                                                                    span: bytes(16046..16047),
                                                                                },
                                                                                Punct {
                                                                                    char: ':',
                                                                                    spacing: Joint,
                                                                                    span: bytes(16047..16048),
                                                                                },
                                                                                Punct {
                                                                                    char: ':',
                                                                                    spacing: Alone,
                                                                                    span: bytes(16048..16049),
                                                                                },
                                                                                Ident {
                                                                                    sym: default,
                                                                                    span: bytes(16049..16056),
                                                                                },
                                                                                Group {
                                                                                    delimiter: Parenthesis,
                                                                                    stream: TokenStream [],
                                                                                    span: bytes(16056..16058),
                                                                                },
                                                                                Punct {
                                                                                    char: ';',
                                                                                    spacing: Alone,
                                                                                    span: bytes(16058..16059),
                                                                                },
                                                                                Ident {
                                                                                    sym: new_size,
                                                                                    span: bytes(16060..16068),
                                                                                },
                                                                                Ident {
                                                                                    sym: as,
                                                                                    span: bytes(16069..16071),
                                                                                },
                                                                                Ident {
                                                                                    sym: usize,
                                                                                    span: bytes(16072..16077),
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    Comma,
                                                                ],
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Expr(
                                                    Expr::ForLoop {
                                                        attrs: [],
                                                        label: None,
                                                        for_token: For,
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: elem,
                                                                span: bytes(16104..16108),
                                                            },
                                                            subpat: None,
                                                        },
                                                        in_token: In,
                                                        expr: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: old_map,
                                                                            span: bytes(16112..16119),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        body: Block {
                                                            brace_token: Brace,
                                                            stmts: [
                                                                Stmt::Expr(
                                                                    Expr::If {
                                                                        attrs: [],
                                                                        if_token: If,
                                                                        cond: Expr::Binary {
                                                                            attrs: [],
                                                                            left: Expr::Field {
                                                                                attrs: [],
                                                                                base: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: elem,
                                                                                                    span: bytes(16137..16141),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                dot_token: Dot,
                                                                                member: Member::Named(
                                                                                    Ident {
                                                                                        sym: value,
                                                                                        span: bytes(16142..16147),
                                                                                    },
                                                                                ),
                                                                            },
                                                                            op: BinOp::Ne(
                                                                                Ne,
                                                                            ),
                                                                            right: Expr::Call {
                                                                                attrs: [],
                                                                                func: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: Default,
                                                                                                    span: bytes(16151..16158),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                            PathSep,
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: default,
                                                                                                    span: bytes(16160..16167),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                paren_token: Paren,
                                                                                args: [],
                                                                            },
                                                                        },
                                                                        then_branch: Block {
                                                                            brace_token: Brace,
                                                                            stmts: [
                                                                                Stmt::Local {
                                                                                    attrs: [],
                                                                                    let_token: Let,
                                                                                    pat: Pat::Ident {
                                                                                        attrs: [],
                                                                                        by_ref: None,
                                                                                        mutability: None,
                                                                                        ident: Ident {
                                                                                            sym: j,
                                                                                            span: bytes(16192..16193),
                                                                                        },
                                                                                        subpat: None,
                                                                                    },
                                                                                    init: Some(
                                                                                        LocalInit {
                                                                                            eq_token: Eq,
                                                                                            expr: Expr::MethodCall {
                                                                                                attrs: [],
                                                                                                receiver: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: self,
                                                                                                                    span: bytes(16196..16200),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                dot_token: Dot,
                                                                                                method: Ident {
                                                                                                    sym: lookup,
                                                                                                    span: bytes(16201..16207),
                                                                                                },
                                                                                                turbofish: None,
                                                                                                paren_token: Paren,
                                                                                                args: [
                                                                                                    Expr::Field {
                                                                                                        attrs: [],
                                                                                                        base: Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: elem,
                                                                                                                            span: bytes(16208..16212),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                        dot_token: Dot,
                                                                                                        member: Member::Named(
                                                                                                            Ident {
                                                                                                                sym: key,
                                                                                                                span: bytes(16213..16216),
                                                                                                            },
                                                                                                        ),
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                            diverge: None,
                                                                                        },
                                                                                    ),
                                                                                    semi_token: Semi,
                                                                                },
                                                                                Stmt::Local {
                                                                                    attrs: [],
                                                                                    let_token: Let,
                                                                                    pat: Pat::Ident {
                                                                                        attrs: [],
                                                                                        by_ref: None,
                                                                                        mutability: None,
                                                                                        ident: Ident {
                                                                                            sym: new_elem,
                                                                                            span: bytes(16239..16247),
                                                                                        },
                                                                                        subpat: None,
                                                                                    },
                                                                                    init: Some(
                                                                                        LocalInit {
                                                                                            eq_token: Eq,
                                                                                            expr: Expr::Reference {
                                                                                                attrs: [],
                                                                                                and_token: And,
                                                                                                mutability: Some(
                                                                                                    Mut,
                                                                                                ),
                                                                                                expr: Expr::Index {
                                                                                                    attrs: [],
                                                                                                    expr: Expr::MethodCall {
                                                                                                        attrs: [],
                                                                                                        receiver: Expr::MethodCall {
                                                                                                            attrs: [],
                                                                                                            receiver: Expr::Field {
                                                                                                                attrs: [],
                                                                                                                base: Expr::Path {
                                                                                                                    attrs: [],
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: self,
                                                                                                                                    span: bytes(16255..16259),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                                dot_token: Dot,
                                                                                                                member: Member::Named(
                                                                                                                    Ident {
                                                                                                                        sym: map,
                                                                                                                        span: bytes(16260..16263),
                                                                                                                    },
                                                                                                                ),
                                                                                                            },
                                                                                                            dot_token: Dot,
                                                                                                            method: Ident {
                                                                                                                sym: as_mut,
                                                                                                                span: bytes(16264..16270),
                                                                                                            },
                                                                                                            turbofish: None,
                                                                                                            paren_token: Paren,
                                                                                                            args: [],
                                                                                                        },
                                                                                                        dot_token: Dot,
                                                                                                        method: Ident {
                                                                                                            sym: expect,
                                                                                                            span: bytes(16273..16279),
                                                                                                        },
                                                                                                        turbofish: None,
                                                                                                        paren_token: Paren,
                                                                                                        args: [
                                                                                                            Expr::Lit {
                                                                                                                attrs: [],
                                                                                                                lit: Lit::Str {
                                                                                                                    token: "map created above",
                                                                                                                },
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                    bracket_token: Bracket,
                                                                                                    index: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: j,
                                                                                                                        span: bytes(16301..16302),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                            diverge: None,
                                                                                        },
                                                                                    ),
                                                                                    semi_token: Semi,
                                                                                },
                                                                                Stmt::Expr(
                                                                                    Expr::Assign {
                                                                                        attrs: [],
                                                                                        left: Expr::Field {
                                                                                            attrs: [],
                                                                                            base: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: new_elem,
                                                                                                                span: bytes(16321..16329),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            dot_token: Dot,
                                                                                            member: Member::Named(
                                                                                                Ident {
                                                                                                    sym: key,
                                                                                                    span: bytes(16330..16333),
                                                                                                },
                                                                                            ),
                                                                                        },
                                                                                        eq_token: Eq,
                                                                                        right: Expr::Field {
                                                                                            attrs: [],
                                                                                            base: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: elem,
                                                                                                                span: bytes(16336..16340),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            dot_token: Dot,
                                                                                            member: Member::Named(
                                                                                                Ident {
                                                                                                    sym: key,
                                                                                                    span: bytes(16341..16344),
                                                                                                },
                                                                                            ),
                                                                                        },
                                                                                    },
                                                                                    Some(
                                                                                        Semi,
                                                                                    ),
                                                                                ),
                                                                                Stmt::Expr(
                                                                                    Expr::Assign {
                                                                                        attrs: [],
                                                                                        left: Expr::Field {
                                                                                            attrs: [],
                                                                                            base: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: new_elem,
                                                                                                                span: bytes(16362..16370),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            dot_token: Dot,
                                                                                            member: Member::Named(
                                                                                                Ident {
                                                                                                    sym: value,
                                                                                                    span: bytes(16371..16376),
                                                                                                },
                                                                                            ),
                                                                                        },
                                                                                        eq_token: Eq,
                                                                                        right: Expr::Field {
                                                                                            attrs: [],
                                                                                            base: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: elem,
                                                                                                                span: bytes(16379..16383),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            dot_token: Dot,
                                                                                            member: Member::Named(
                                                                                                Ident {
                                                                                                    sym: value,
                                                                                                    span: bytes(16384..16389),
                                                                                                },
                                                                                            ),
                                                                                        },
                                                                                    },
                                                                                    Some(
                                                                                        Semi,
                                                                                    ),
                                                                                ),
                                                                                Stmt::Expr(
                                                                                    Expr::Binary {
                                                                                        attrs: [],
                                                                                        left: Expr::Field {
                                                                                            attrs: [],
                                                                                            base: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: self,
                                                                                                                span: bytes(16407..16411),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            dot_token: Dot,
                                                                                            member: Member::Named(
                                                                                                Ident {
                                                                                                    sym: used,
                                                                                                    span: bytes(16412..16416),
                                                                                                },
                                                                                            ),
                                                                                        },
                                                                                        op: BinOp::SubAssign(
                                                                                            MinusEq,
                                                                                        ),
                                                                                        right: Expr::Lit {
                                                                                            attrs: [],
                                                                                            lit: Lit::Int {
                                                                                                token: 1,
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                    Some(
                                                                                        Semi,
                                                                                    ),
                                                                                ),
                                                                                Stmt::Expr(
                                                                                    Expr::If {
                                                                                        attrs: [],
                                                                                        if_token: If,
                                                                                        cond: Expr::Binary {
                                                                                            attrs: [],
                                                                                            left: Expr::Field {
                                                                                                attrs: [],
                                                                                                base: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: self,
                                                                                                                    span: bytes(16442..16446),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                dot_token: Dot,
                                                                                                member: Member::Named(
                                                                                                    Ident {
                                                                                                        sym: used,
                                                                                                        span: bytes(16447..16451),
                                                                                                    },
                                                                                                ),
                                                                                            },
                                                                                            op: BinOp::Eq(
                                                                                                EqEq,
                                                                                            ),
                                                                                            right: Expr::Lit {
                                                                                                attrs: [],
                                                                                                lit: Lit::Int {
                                                                                                    token: 0,
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                        then_branch: Block {
                                                                                            brace_token: Brace,
                                                                                            stmts: [
                                                                                                Stmt::Expr(
                                                                                                    Expr::Break {
                                                                                                        attrs: [],
                                                                                                        break_token: Break,
                                                                                                        label: None,
                                                                                                        expr: None,
                                                                                                    },
                                                                                                    Some(
                                                                                                        Semi,
                                                                                                    ),
                                                                                                ),
                                                                                            ],
                                                                                        },
                                                                                        else_branch: None,
                                                                                    },
                                                                                    None,
                                                                                ),
                                                                            ],
                                                                        },
                                                                        else_branch: None,
                                                                    },
                                                                    None,
                                                                ),
                                                            ],
                                                        },
                                                    },
                                                    None,
                                                ),
                                                Stmt::Expr(
                                                    Expr::Assign {
                                                        attrs: [],
                                                        left: Expr::Field {
                                                            attrs: [],
                                                            base: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: self,
                                                                                span: bytes(16537..16541),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            dot_token: Dot,
                                                            member: Member::Named(
                                                                Ident {
                                                                    sym: used,
                                                                    span: bytes(16542..16546),
                                                                },
                                                            ),
                                                        },
                                                        eq_token: Eq,
                                                        right: Expr::Field {
                                                            attrs: [],
                                                            base: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: self,
                                                                                span: bytes(16549..16553),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            dot_token: Dot,
                                                            member: Member::Named(
                                                                Ident {
                                                                    sym: fill,
                                                                    span: bytes(16554..16558),
                                                                },
                                                            ),
                                                        },
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: Pri,
                                is_constructor: false,
                            },
                        ],
                        relative_types: [],
                    },
                    ImplItem {
                        impl_num: 6,
                        struct_name: Name {
                            name: "HybridGrowingHashmapChar",
                            complete_name: "strsim::HybridGrowingHashmapChar",
                            import_name: MyPath {
                                name: "strsim",
                                next: Some(
                                    MyPath {
                                        name: "HybridGrowingHashmapChar",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        trait_name: None,
                        item: Some(
                            ItemImpl {
                                attrs: [],
                                defaultness: None,
                                unsafety: None,
                                impl_token: Impl,
                                generics: Generics {
                                    lt_token: Some(
                                        Lt,
                                    ),
                                    params: [
                                        GenericParam::Type(
                                            TypeParam {
                                                attrs: [],
                                                ident: Ident {
                                                    sym: ValueType,
                                                    span: bytes(16700..16709),
                                                },
                                                colon_token: None,
                                                bounds: [],
                                                eq_token: None,
                                                default: None,
                                            },
                                        ),
                                    ],
                                    gt_token: Some(
                                        Gt,
                                    ),
                                    where_clause: Some(
                                        WhereClause {
                                            where_token: Where,
                                            predicates: [
                                                WherePredicate::Type(
                                                    PredicateType {
                                                        lifetimes: None,
                                                        bounded_ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: ValueType,
                                                                            span: bytes(16757..16766),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        colon_token: Colon,
                                                        bounds: [
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::None,
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Default,
                                                                                    span: bytes(16768..16775),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                            Plus,
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::None,
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Clone,
                                                                                    span: bytes(16778..16783),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                            Plus,
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::None,
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Copy,
                                                                                    span: bytes(16786..16790),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                            Plus,
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::None,
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Eq,
                                                                                    span: bytes(16793..16795),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                        ],
                                                    },
                                                ),
                                                Comma,
                                            ],
                                        },
                                    ),
                                },
                                trait_: None,
                                self_ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: HybridGrowingHashmapChar,
                                                    span: bytes(16711..16735),
                                                },
                                                arguments: PathArguments::AngleBracketed {
                                                    colon2_token: None,
                                                    lt_token: Lt,
                                                    args: [
                                                        GenericArgument::Type(
                                                            Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: ValueType,
                                                                                span: bytes(16736..16745),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    gt_token: Gt,
                                                },
                                            },
                                        ],
                                    },
                                },
                                brace_token: Brace,
                                items: [],
                            },
                        ),
                        types: [],
                        consts: [],
                        functions: [
                            ImplFnItem {
                                fn_name: Name {
                                    name: "get",
                                    complete_name: "strsim::HybridGrowingHashmapChar::get",
                                    import_name: MyPath {
                                        name: "strsim",
                                        next: Some(
                                            MyPath {
                                                name: "HybridGrowingHashmapChar",
                                                next: Some(
                                                    MyPath {
                                                        name: "get",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "{impl#6}::get",
                                item: Some(
                                    ImplItemFn {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        defaultness: None,
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: get,
                                                span: bytes(16806..16809),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Receiver(
                                                    Receiver {
                                                        attrs: [],
                                                        reference: Some(
                                                            (
                                                                And,
                                                                None,
                                                            ),
                                                        ),
                                                        mutability: None,
                                                        self_token: SelfValue,
                                                        colon_token: None,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: None,
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Self,
                                                                                span: bytes(16811..16815),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                                Comma,
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: key,
                                                                span: bytes(16817..16820),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: char,
                                                                            span: bytes(16822..16826),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: ValueType,
                                                                    span: bytes(16831..16840),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: value,
                                                            span: bytes(16855..16860),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::Cast {
                                                                attrs: [],
                                                                expr: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: key,
                                                                                    span: bytes(16863..16866),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                as_token: As,
                                                                ty: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: u32,
                                                                                    span: bytes(16870..16873),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Expr(
                                                    Expr::If {
                                                        attrs: [],
                                                        if_token: If,
                                                        cond: Expr::Binary {
                                                            attrs: [],
                                                            left: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: value,
                                                                                span: bytes(16886..16891),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            op: BinOp::Le(
                                                                Le,
                                                            ),
                                                            right: Expr::Lit {
                                                                attrs: [],
                                                                lit: Lit::Int {
                                                                    token: 255,
                                                                },
                                                            },
                                                        },
                                                        then_branch: Block {
                                                            brace_token: Brace,
                                                            stmts: [
                                                                Stmt::Local {
                                                                    attrs: [],
                                                                    let_token: Let,
                                                                    pat: Pat::Ident {
                                                                        attrs: [],
                                                                        by_ref: None,
                                                                        mutability: None,
                                                                        ident: Ident {
                                                                            sym: val_u8,
                                                                            span: bytes(16917..16923),
                                                                        },
                                                                        subpat: None,
                                                                    },
                                                                    init: Some(
                                                                        LocalInit {
                                                                            eq_token: Eq,
                                                                            expr: Expr::MethodCall {
                                                                                attrs: [],
                                                                                receiver: Expr::Call {
                                                                                    attrs: [],
                                                                                    func: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: u8,
                                                                                                        span: bytes(16926..16928),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                                PathSep,
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: try_from,
                                                                                                        span: bytes(16930..16938),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    paren_token: Paren,
                                                                                    args: [
                                                                                        Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: value,
                                                                                                            span: bytes(16939..16944),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    ],
                                                                                },
                                                                                dot_token: Dot,
                                                                                method: Ident {
                                                                                    sym: expect,
                                                                                    span: bytes(16946..16952),
                                                                                },
                                                                                turbofish: None,
                                                                                paren_token: Paren,
                                                                                args: [
                                                                                    Expr::Lit {
                                                                                        attrs: [],
                                                                                        lit: Lit::Str {
                                                                                            token: "we check the bounds above",
                                                                                        },
                                                                                    },
                                                                                ],
                                                                            },
                                                                            diverge: None,
                                                                        },
                                                                    ),
                                                                    semi_token: Semi,
                                                                },
                                                                Stmt::Expr(
                                                                    Expr::Index {
                                                                        attrs: [],
                                                                        expr: Expr::Field {
                                                                            attrs: [],
                                                                            base: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: self,
                                                                                                span: bytes(16995..16999),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            dot_token: Dot,
                                                                            member: Member::Named(
                                                                                Ident {
                                                                                    sym: extended_ascii,
                                                                                    span: bytes(17000..17014),
                                                                                },
                                                                            ),
                                                                        },
                                                                        bracket_token: Bracket,
                                                                        index: Expr::Call {
                                                                            attrs: [],
                                                                            func: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: usize,
                                                                                                span: bytes(17015..17020),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                        PathSep,
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: from,
                                                                                                span: bytes(17022..17026),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            paren_token: Paren,
                                                                            args: [
                                                                                Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: val_u8,
                                                                                                    span: bytes(17027..17033),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    None,
                                                                ),
                                                            ],
                                                        },
                                                        else_branch: Some(
                                                            (
                                                                Else,
                                                                Expr::Block {
                                                                    attrs: [],
                                                                    label: None,
                                                                    block: Block {
                                                                        brace_token: Brace,
                                                                        stmts: [
                                                                            Stmt::Expr(
                                                                                Expr::MethodCall {
                                                                                    attrs: [],
                                                                                    receiver: Expr::Field {
                                                                                        attrs: [],
                                                                                        base: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: self,
                                                                                                            span: bytes(17065..17069),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        dot_token: Dot,
                                                                                        member: Member::Named(
                                                                                            Ident {
                                                                                                sym: map,
                                                                                                span: bytes(17070..17073),
                                                                                            },
                                                                                        ),
                                                                                    },
                                                                                    dot_token: Dot,
                                                                                    method: Ident {
                                                                                        sym: get,
                                                                                        span: bytes(17074..17077),
                                                                                    },
                                                                                    turbofish: None,
                                                                                    paren_token: Paren,
                                                                                    args: [
                                                                                        Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: value,
                                                                                                            span: bytes(17078..17083),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    ],
                                                                                },
                                                                                None,
                                                                            ),
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                        ),
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: Pri,
                                is_constructor: false,
                            },
                            ImplFnItem {
                                fn_name: Name {
                                    name: "get_mut",
                                    complete_name: "strsim::HybridGrowingHashmapChar::get_mut",
                                    import_name: MyPath {
                                        name: "strsim",
                                        next: Some(
                                            MyPath {
                                                name: "HybridGrowingHashmapChar",
                                                next: Some(
                                                    MyPath {
                                                        name: "get_mut",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "{impl#6}::get_mut",
                                item: Some(
                                    ImplItemFn {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        defaultness: None,
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: get_mut,
                                                span: bytes(17109..17116),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Receiver(
                                                    Receiver {
                                                        attrs: [],
                                                        reference: Some(
                                                            (
                                                                And,
                                                                None,
                                                            ),
                                                        ),
                                                        mutability: Some(
                                                            Mut,
                                                        ),
                                                        self_token: SelfValue,
                                                        colon_token: None,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Self,
                                                                                span: bytes(17122..17126),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                                Comma,
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: key,
                                                                span: bytes(17128..17131),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: char,
                                                                            span: bytes(17133..17137),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: ValueType,
                                                                        span: bytes(17147..17156),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            ),
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: value,
                                                            span: bytes(17171..17176),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::Cast {
                                                                attrs: [],
                                                                expr: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: key,
                                                                                    span: bytes(17179..17182),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                as_token: As,
                                                                ty: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: u32,
                                                                                    span: bytes(17186..17189),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Expr(
                                                    Expr::If {
                                                        attrs: [],
                                                        if_token: If,
                                                        cond: Expr::Binary {
                                                            attrs: [],
                                                            left: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: value,
                                                                                span: bytes(17202..17207),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            op: BinOp::Le(
                                                                Le,
                                                            ),
                                                            right: Expr::Lit {
                                                                attrs: [],
                                                                lit: Lit::Int {
                                                                    token: 255,
                                                                },
                                                            },
                                                        },
                                                        then_branch: Block {
                                                            brace_token: Brace,
                                                            stmts: [
                                                                Stmt::Local {
                                                                    attrs: [],
                                                                    let_token: Let,
                                                                    pat: Pat::Ident {
                                                                        attrs: [],
                                                                        by_ref: None,
                                                                        mutability: None,
                                                                        ident: Ident {
                                                                            sym: val_u8,
                                                                            span: bytes(17233..17239),
                                                                        },
                                                                        subpat: None,
                                                                    },
                                                                    init: Some(
                                                                        LocalInit {
                                                                            eq_token: Eq,
                                                                            expr: Expr::MethodCall {
                                                                                attrs: [],
                                                                                receiver: Expr::Call {
                                                                                    attrs: [],
                                                                                    func: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: u8,
                                                                                                        span: bytes(17242..17244),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                                PathSep,
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: try_from,
                                                                                                        span: bytes(17246..17254),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    paren_token: Paren,
                                                                                    args: [
                                                                                        Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: value,
                                                                                                            span: bytes(17255..17260),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    ],
                                                                                },
                                                                                dot_token: Dot,
                                                                                method: Ident {
                                                                                    sym: expect,
                                                                                    span: bytes(17262..17268),
                                                                                },
                                                                                turbofish: None,
                                                                                paren_token: Paren,
                                                                                args: [
                                                                                    Expr::Lit {
                                                                                        attrs: [],
                                                                                        lit: Lit::Str {
                                                                                            token: "we check the bounds above",
                                                                                        },
                                                                                    },
                                                                                ],
                                                                            },
                                                                            diverge: None,
                                                                        },
                                                                    ),
                                                                    semi_token: Semi,
                                                                },
                                                                Stmt::Expr(
                                                                    Expr::Reference {
                                                                        attrs: [],
                                                                        and_token: And,
                                                                        mutability: Some(
                                                                            Mut,
                                                                        ),
                                                                        expr: Expr::Index {
                                                                            attrs: [],
                                                                            expr: Expr::Field {
                                                                                attrs: [],
                                                                                base: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: self,
                                                                                                    span: bytes(17316..17320),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                dot_token: Dot,
                                                                                member: Member::Named(
                                                                                    Ident {
                                                                                        sym: extended_ascii,
                                                                                        span: bytes(17321..17335),
                                                                                    },
                                                                                ),
                                                                            },
                                                                            bracket_token: Bracket,
                                                                            index: Expr::Call {
                                                                                attrs: [],
                                                                                func: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: usize,
                                                                                                    span: bytes(17336..17341),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                            PathSep,
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: from,
                                                                                                    span: bytes(17343..17347),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                paren_token: Paren,
                                                                                args: [
                                                                                    Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: val_u8,
                                                                                                        span: bytes(17348..17354),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                    None,
                                                                ),
                                                            ],
                                                        },
                                                        else_branch: Some(
                                                            (
                                                                Else,
                                                                Expr::Block {
                                                                    attrs: [],
                                                                    label: None,
                                                                    block: Block {
                                                                        brace_token: Brace,
                                                                        stmts: [
                                                                            Stmt::Expr(
                                                                                Expr::MethodCall {
                                                                                    attrs: [],
                                                                                    receiver: Expr::Field {
                                                                                        attrs: [],
                                                                                        base: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: self,
                                                                                                            span: bytes(17386..17390),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        dot_token: Dot,
                                                                                        member: Member::Named(
                                                                                            Ident {
                                                                                                sym: map,
                                                                                                span: bytes(17391..17394),
                                                                                            },
                                                                                        ),
                                                                                    },
                                                                                    dot_token: Dot,
                                                                                    method: Ident {
                                                                                        sym: get_mut,
                                                                                        span: bytes(17395..17402),
                                                                                    },
                                                                                    turbofish: None,
                                                                                    paren_token: Paren,
                                                                                    args: [
                                                                                        Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: value,
                                                                                                            span: bytes(17403..17408),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    ],
                                                                                },
                                                                                None,
                                                                            ),
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                        ),
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: Pri,
                                is_constructor: false,
                            },
                        ],
                        relative_types: [],
                    },
                    ImplItem {
                        impl_num: 7,
                        struct_name: Name {
                            name: "HybridGrowingHashmapChar",
                            complete_name: "strsim::HybridGrowingHashmapChar",
                            import_name: MyPath {
                                name: "strsim",
                                next: Some(
                                    MyPath {
                                        name: "HybridGrowingHashmapChar",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        trait_name: Some(
                            Name {
                                name: "",
                                complete_name: "",
                                import_name: MyPath {
                                    name: "",
                                    next: None,
                                },
                            },
                        ),
                        item: Some(
                            ItemImpl {
                                attrs: [],
                                defaultness: None,
                                unsafety: None,
                                impl_token: Impl,
                                generics: Generics {
                                    lt_token: Some(
                                        Lt,
                                    ),
                                    params: [
                                        GenericParam::Type(
                                            TypeParam {
                                                attrs: [],
                                                ident: Ident {
                                                    sym: ValueType,
                                                    span: bytes(17434..17443),
                                                },
                                                colon_token: None,
                                                bounds: [],
                                                eq_token: None,
                                                default: None,
                                            },
                                        ),
                                    ],
                                    gt_token: Some(
                                        Gt,
                                    ),
                                    where_clause: Some(
                                        WhereClause {
                                            where_token: Where,
                                            predicates: [
                                                WherePredicate::Type(
                                                    PredicateType {
                                                        lifetimes: None,
                                                        bounded_ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: ValueType,
                                                                            span: bytes(17503..17512),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        colon_token: Colon,
                                                        bounds: [
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::None,
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Default,
                                                                                    span: bytes(17514..17521),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                            Plus,
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::None,
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Clone,
                                                                                    span: bytes(17524..17529),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                            Plus,
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::None,
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Copy,
                                                                                    span: bytes(17532..17536),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                            Plus,
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::None,
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Eq,
                                                                                    span: bytes(17539..17541),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                        ],
                                                    },
                                                ),
                                                Comma,
                                            ],
                                        },
                                    ),
                                },
                                trait_: Some(
                                    (
                                        None,
                                        Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: Default,
                                                        span: bytes(17445..17452),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                        For,
                                    ),
                                ),
                                self_ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: HybridGrowingHashmapChar,
                                                    span: bytes(17457..17481),
                                                },
                                                arguments: PathArguments::AngleBracketed {
                                                    colon2_token: None,
                                                    lt_token: Lt,
                                                    args: [
                                                        GenericArgument::Type(
                                                            Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: ValueType,
                                                                                span: bytes(17482..17491),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    gt_token: Gt,
                                                },
                                            },
                                        ],
                                    },
                                },
                                brace_token: Brace,
                                items: [],
                            },
                        ),
                        types: [],
                        consts: [],
                        functions: [
                            ImplFnItem {
                                fn_name: Name {
                                    name: "default",
                                    complete_name: "<strsim::HybridGrowingHashmapChar as >::default",
                                    import_name: MyPath {
                                        name: "<strsim",
                                        next: Some(
                                            MyPath {
                                                name: "HybridGrowingHashmapChar as >",
                                                next: Some(
                                                    MyPath {
                                                        name: "default",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "{impl#7}::default",
                                item: Some(
                                    ImplItemFn {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        defaultness: None,
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: default,
                                                span: bytes(17552..17559),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Self,
                                                                    span: bytes(17565..17569),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::Struct {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: HybridGrowingHashmapChar,
                                                                        span: bytes(17580..17604),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                        brace_token: Brace,
                                                        fields: [
                                                            FieldValue {
                                                                attrs: [],
                                                                member: Member::Named(
                                                                    Ident {
                                                                        sym: map,
                                                                        span: bytes(17619..17622),
                                                                    },
                                                                ),
                                                                colon_token: Some(
                                                                    Colon,
                                                                ),
                                                                expr: Expr::Call {
                                                                    attrs: [],
                                                                    func: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: GrowingHashmapChar,
                                                                                        span: bytes(17624..17642),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                                PathSep,
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: default,
                                                                                        span: bytes(17644..17651),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    paren_token: Paren,
                                                                    args: [],
                                                                },
                                                            },
                                                            Comma,
                                                            FieldValue {
                                                                attrs: [],
                                                                member: Member::Named(
                                                                    Ident {
                                                                        sym: extended_ascii,
                                                                        span: bytes(17667..17681),
                                                                    },
                                                                ),
                                                                colon_token: Some(
                                                                    Colon,
                                                                ),
                                                                expr: Expr::Repeat {
                                                                    attrs: [],
                                                                    bracket_token: Bracket,
                                                                    expr: Expr::Call {
                                                                        attrs: [],
                                                                        func: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: Default,
                                                                                            span: bytes(17684..17691),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                    PathSep,
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: default,
                                                                                            span: bytes(17693..17700),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        paren_token: Paren,
                                                                        args: [],
                                                                    },
                                                                    semi_token: Semi,
                                                                    len: Expr::Lit {
                                                                        attrs: [],
                                                                        lit: Lit::Int {
                                                                            token: 256,
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                            Comma,
                                                        ],
                                                        dot2_token: None,
                                                        rest: None,
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: Pri,
                                is_constructor: true,
                            },
                        ],
                        relative_types: [],
                    },
                ],
                functions: [
                    FnItem {
                        fn_name: Name {
                            name: "generic_hamming",
                            complete_name: "strsim::generic_hamming",
                            import_name: MyPath {
                                name: "strsim",
                                next: Some(
                                    MyPath {
                                        name: "generic_hamming",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "generic_hamming",
                        item: Some(
                            ItemFn {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: generic_hamming,
                                        span: bytes(1462..1477),
                                    },
                                    generics: Generics {
                                        lt_token: Some(
                                            Lt,
                                        ),
                                        params: [
                                            GenericParam::Type(
                                                TypeParam {
                                                    attrs: [],
                                                    ident: Ident {
                                                        sym: Iter1,
                                                        span: bytes(1478..1483),
                                                    },
                                                    colon_token: None,
                                                    bounds: [],
                                                    eq_token: None,
                                                    default: None,
                                                },
                                            ),
                                            Comma,
                                            GenericParam::Type(
                                                TypeParam {
                                                    attrs: [],
                                                    ident: Ident {
                                                        sym: Iter2,
                                                        span: bytes(1485..1490),
                                                    },
                                                    colon_token: None,
                                                    bounds: [],
                                                    eq_token: None,
                                                    default: None,
                                                },
                                            ),
                                            Comma,
                                            GenericParam::Type(
                                                TypeParam {
                                                    attrs: [],
                                                    ident: Ident {
                                                        sym: Elem1,
                                                        span: bytes(1492..1497),
                                                    },
                                                    colon_token: None,
                                                    bounds: [],
                                                    eq_token: None,
                                                    default: None,
                                                },
                                            ),
                                            Comma,
                                            GenericParam::Type(
                                                TypeParam {
                                                    attrs: [],
                                                    ident: Ident {
                                                        sym: Elem2,
                                                        span: bytes(1499..1504),
                                                    },
                                                    colon_token: None,
                                                    bounds: [],
                                                    eq_token: None,
                                                    default: None,
                                                },
                                            ),
                                        ],
                                        gt_token: Some(
                                            Gt,
                                        ),
                                        where_clause: Some(
                                            WhereClause {
                                                where_token: Where,
                                                predicates: [
                                                    WherePredicate::Type(
                                                        PredicateType {
                                                            lifetimes: None,
                                                            bounded_ty: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Iter1,
                                                                                span: bytes(1553..1558),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            colon_token: Colon,
                                                            bounds: [
                                                                TypeParamBound::Trait(
                                                                    TraitBound {
                                                                        paren_token: None,
                                                                        modifier: TraitBoundModifier::None,
                                                                        lifetimes: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: IntoIterator,
                                                                                        span: bytes(1560..1572),
                                                                                    },
                                                                                    arguments: PathArguments::AngleBracketed {
                                                                                        colon2_token: None,
                                                                                        lt_token: Lt,
                                                                                        args: [
                                                                                            GenericArgument::AssocType(
                                                                                                AssocType {
                                                                                                    ident: Ident {
                                                                                                        sym: Item,
                                                                                                        span: bytes(1573..1577),
                                                                                                    },
                                                                                                    generics: None,
                                                                                                    eq_token: Eq,
                                                                                                    ty: Type::Path {
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: Elem1,
                                                                                                                        span: bytes(1580..1585),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                            ),
                                                                                        ],
                                                                                        gt_token: Gt,
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                    Comma,
                                                    WherePredicate::Type(
                                                        PredicateType {
                                                            lifetimes: None,
                                                            bounded_ty: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Iter2,
                                                                                span: bytes(1592..1597),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            colon_token: Colon,
                                                            bounds: [
                                                                TypeParamBound::Trait(
                                                                    TraitBound {
                                                                        paren_token: None,
                                                                        modifier: TraitBoundModifier::None,
                                                                        lifetimes: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: IntoIterator,
                                                                                        span: bytes(1599..1611),
                                                                                    },
                                                                                    arguments: PathArguments::AngleBracketed {
                                                                                        colon2_token: None,
                                                                                        lt_token: Lt,
                                                                                        args: [
                                                                                            GenericArgument::AssocType(
                                                                                                AssocType {
                                                                                                    ident: Ident {
                                                                                                        sym: Item,
                                                                                                        span: bytes(1612..1616),
                                                                                                    },
                                                                                                    generics: None,
                                                                                                    eq_token: Eq,
                                                                                                    ty: Type::Path {
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: Elem2,
                                                                                                                        span: bytes(1619..1624),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                            ),
                                                                                        ],
                                                                                        gt_token: Gt,
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                    Comma,
                                                    WherePredicate::Type(
                                                        PredicateType {
                                                            lifetimes: None,
                                                            bounded_ty: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Elem1,
                                                                                span: bytes(1631..1636),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            colon_token: Colon,
                                                            bounds: [
                                                                TypeParamBound::Trait(
                                                                    TraitBound {
                                                                        paren_token: None,
                                                                        modifier: TraitBoundModifier::None,
                                                                        lifetimes: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: PartialEq,
                                                                                        span: bytes(1638..1647),
                                                                                    },
                                                                                    arguments: PathArguments::AngleBracketed {
                                                                                        colon2_token: None,
                                                                                        lt_token: Lt,
                                                                                        args: [
                                                                                            GenericArgument::Type(
                                                                                                Type::Path {
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: Elem2,
                                                                                                                    span: bytes(1648..1653),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                            ),
                                                                                        ],
                                                                                        gt_token: Gt,
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                    Comma,
                                                ],
                                            },
                                        ),
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: a,
                                                        span: bytes(1506..1507),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Iter1,
                                                                    span: bytes(1509..1514),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: b,
                                                        span: bytes(1516..1517),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Iter2,
                                                                    span: bytes(1519..1524),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: HammingResult,
                                                            span: bytes(1529..1542),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Tuple {
                                                attrs: [],
                                                paren_token: Paren,
                                                elems: [
                                                    Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: Some(
                                                            Mut,
                                                        ),
                                                        ident: Ident {
                                                            sym: ita,
                                                            span: bytes(1671..1674),
                                                        },
                                                        subpat: None,
                                                    },
                                                    Comma,
                                                    Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: Some(
                                                            Mut,
                                                        ),
                                                        ident: Ident {
                                                            sym: itb,
                                                            span: bytes(1680..1683),
                                                        },
                                                        subpat: None,
                                                    },
                                                ],
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Tuple {
                                                        attrs: [],
                                                        paren_token: Paren,
                                                        elems: [
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: a,
                                                                                    span: bytes(1688..1689),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: into_iter,
                                                                    span: bytes(1690..1699),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [],
                                                            },
                                                            Comma,
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: b,
                                                                                    span: bytes(1703..1704),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: into_iter,
                                                                    span: bytes(1705..1714),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [],
                                                            },
                                                        ],
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                ident: Ident {
                                                    sym: count,
                                                    span: bytes(1731..1736),
                                                },
                                                subpat: None,
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Lit {
                                                        attrs: [],
                                                        lit: Lit::Int {
                                                            token: 0,
                                                        },
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Expr(
                                            Expr::Loop {
                                                attrs: [],
                                                label: None,
                                                loop_token: Loop,
                                                body: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::Match {
                                                                attrs: [],
                                                                match_token: Match,
                                                                expr: Expr::Tuple {
                                                                    attrs: [],
                                                                    paren_token: Paren,
                                                                    elems: [
                                                                        Expr::MethodCall {
                                                                            attrs: [],
                                                                            receiver: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: ita,
                                                                                                span: bytes(1768..1771),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            dot_token: Dot,
                                                                            method: Ident {
                                                                                sym: next,
                                                                                span: bytes(1772..1776),
                                                                            },
                                                                            turbofish: None,
                                                                            paren_token: Paren,
                                                                            args: [],
                                                                        },
                                                                        Comma,
                                                                        Expr::MethodCall {
                                                                            attrs: [],
                                                                            receiver: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: itb,
                                                                                                span: bytes(1780..1783),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            dot_token: Dot,
                                                                            method: Ident {
                                                                                sym: next,
                                                                                span: bytes(1784..1788),
                                                                            },
                                                                            turbofish: None,
                                                                            paren_token: Paren,
                                                                            args: [],
                                                                        },
                                                                    ],
                                                                },
                                                                brace_token: Brace,
                                                                arms: [
                                                                    Arm {
                                                                        attrs: [],
                                                                        pat: Pat::Tuple {
                                                                            attrs: [],
                                                                            paren_token: Paren,
                                                                            elems: [
                                                                                Pat::TupleStruct {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: Some,
                                                                                                    span: bytes(1807..1811),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                    paren_token: Paren,
                                                                                    elems: [
                                                                                        Pat::Ident {
                                                                                            attrs: [],
                                                                                            by_ref: None,
                                                                                            mutability: None,
                                                                                            ident: Ident {
                                                                                                sym: x,
                                                                                                span: bytes(1812..1813),
                                                                                            },
                                                                                            subpat: None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                                Comma,
                                                                                Pat::TupleStruct {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: Some,
                                                                                                    span: bytes(1816..1820),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                    paren_token: Paren,
                                                                                    elems: [
                                                                                        Pat::Ident {
                                                                                            attrs: [],
                                                                                            by_ref: None,
                                                                                            mutability: None,
                                                                                            ident: Ident {
                                                                                                sym: y,
                                                                                                span: bytes(1821..1822),
                                                                                            },
                                                                                            subpat: None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            ],
                                                                        },
                                                                        guard: None,
                                                                        fat_arrow_token: FatArrow,
                                                                        body: Expr::Block {
                                                                            attrs: [],
                                                                            label: None,
                                                                            block: Block {
                                                                                brace_token: Brace,
                                                                                stmts: [
                                                                                    Stmt::Expr(
                                                                                        Expr::If {
                                                                                            attrs: [],
                                                                                            if_token: If,
                                                                                            cond: Expr::Binary {
                                                                                                attrs: [],
                                                                                                left: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: x,
                                                                                                                    span: bytes(1849..1850),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                op: BinOp::Ne(
                                                                                                    Ne,
                                                                                                ),
                                                                                                right: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: y,
                                                                                                                    span: bytes(1854..1855),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                            then_branch: Block {
                                                                                                brace_token: Brace,
                                                                                                stmts: [
                                                                                                    Stmt::Expr(
                                                                                                        Expr::Binary {
                                                                                                            attrs: [],
                                                                                                            left: Expr::Path {
                                                                                                                attrs: [],
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: count,
                                                                                                                                span: bytes(1878..1883),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                            op: BinOp::AddAssign(
                                                                                                                PlusEq,
                                                                                                            ),
                                                                                                            right: Expr::Lit {
                                                                                                                attrs: [],
                                                                                                                lit: Lit::Int {
                                                                                                                    token: 1,
                                                                                                                },
                                                                                                            },
                                                                                                        },
                                                                                                        Some(
                                                                                                            Semi,
                                                                                                        ),
                                                                                                    ),
                                                                                                ],
                                                                                            },
                                                                                            else_branch: None,
                                                                                        },
                                                                                        None,
                                                                                    ),
                                                                                ],
                                                                            },
                                                                        },
                                                                        comma: None,
                                                                    },
                                                                    Arm {
                                                                        attrs: [],
                                                                        pat: Pat::Tuple {
                                                                            attrs: [],
                                                                            paren_token: Paren,
                                                                            elems: [
                                                                                Pat::Ident {
                                                                                    attrs: [],
                                                                                    by_ref: None,
                                                                                    mutability: None,
                                                                                    ident: Ident {
                                                                                        sym: None,
                                                                                        span: bytes(1935..1939),
                                                                                    },
                                                                                    subpat: None,
                                                                                },
                                                                                Comma,
                                                                                Pat::Ident {
                                                                                    attrs: [],
                                                                                    by_ref: None,
                                                                                    mutability: None,
                                                                                    ident: Ident {
                                                                                        sym: None,
                                                                                        span: bytes(1941..1945),
                                                                                    },
                                                                                    subpat: None,
                                                                                },
                                                                            ],
                                                                        },
                                                                        guard: None,
                                                                        fat_arrow_token: FatArrow,
                                                                        body: Expr::Return {
                                                                            attrs: [],
                                                                            return_token: Return,
                                                                            expr: Some(
                                                                                Expr::Call {
                                                                                    attrs: [],
                                                                                    func: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: Ok,
                                                                                                        span: bytes(1957..1959),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    paren_token: Paren,
                                                                                    args: [
                                                                                        Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: count,
                                                                                                            span: bytes(1960..1965),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            ),
                                                                        },
                                                                        comma: Some(
                                                                            Comma,
                                                                        ),
                                                                    },
                                                                    Arm {
                                                                        attrs: [],
                                                                        pat: Pat::Wild {
                                                                            attrs: [],
                                                                            underscore_token: Underscore,
                                                                        },
                                                                        guard: None,
                                                                        fat_arrow_token: FatArrow,
                                                                        body: Expr::Return {
                                                                            attrs: [],
                                                                            return_token: Return,
                                                                            expr: Some(
                                                                                Expr::Call {
                                                                                    attrs: [],
                                                                                    func: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: Err,
                                                                                                        span: bytes(1992..1995),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    paren_token: Paren,
                                                                                    args: [
                                                                                        Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: StrSimError,
                                                                                                            span: bytes(1996..2007),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                    PathSep,
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: DifferentLengthArgs,
                                                                                                            span: bytes(2009..2028),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            ),
                                                                        },
                                                                        comma: Some(
                                                                            Comma,
                                                                        ),
                                                                    },
                                                                ],
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                    },
                    FnItem {
                        fn_name: Name {
                            name: "hamming",
                            complete_name: "strsim::hamming",
                            import_name: MyPath {
                                name: "strsim",
                                next: Some(
                                    MyPath {
                                        name: "hamming",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "hamming",
                        item: Some(
                            ItemFn {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: hamming,
                                        span: bytes(2416..2423),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: a,
                                                        span: bytes(2424..2425),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: None,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: str,
                                                                        span: bytes(2428..2431),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: b,
                                                        span: bytes(2433..2434),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: None,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: str,
                                                                        span: bytes(2437..2440),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: HammingResult,
                                                            span: bytes(2445..2458),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Expr(
                                            Expr::Call {
                                                attrs: [],
                                                func: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: generic_hamming,
                                                                    span: bytes(2465..2480),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                paren_token: Paren,
                                                args: [
                                                    Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: a,
                                                                            span: bytes(2481..2482),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: chars,
                                                            span: bytes(2483..2488),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [],
                                                    },
                                                    Comma,
                                                    Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: b,
                                                                            span: bytes(2492..2493),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: chars,
                                                            span: bytes(2494..2499),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [],
                                                    },
                                                ],
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                    },
                    FnItem {
                        fn_name: Name {
                            name: "generic_jaro",
                            complete_name: "strsim::generic_jaro",
                            import_name: MyPath {
                                name: "strsim",
                                next: Some(
                                    MyPath {
                                        name: "generic_jaro",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "generic_jaro",
                        item: Some(
                            ItemFn {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: generic_jaro,
                                        span: bytes(2652..2664),
                                    },
                                    generics: Generics {
                                        lt_token: Some(
                                            Lt,
                                        ),
                                        params: [
                                            GenericParam::Lifetime(
                                                LifetimeParam {
                                                    attrs: [],
                                                    lifetime: Lifetime {
                                                        apostrophe: bytes(2665..2666),
                                                        ident: Ident {
                                                            sym: a,
                                                            span: bytes(2666..2667),
                                                        },
                                                    },
                                                    colon_token: None,
                                                    bounds: [],
                                                },
                                            ),
                                            Comma,
                                            GenericParam::Lifetime(
                                                LifetimeParam {
                                                    attrs: [],
                                                    lifetime: Lifetime {
                                                        apostrophe: bytes(2669..2670),
                                                        ident: Ident {
                                                            sym: b,
                                                            span: bytes(2670..2671),
                                                        },
                                                    },
                                                    colon_token: None,
                                                    bounds: [],
                                                },
                                            ),
                                            Comma,
                                            GenericParam::Type(
                                                TypeParam {
                                                    attrs: [],
                                                    ident: Ident {
                                                        sym: Iter1,
                                                        span: bytes(2673..2678),
                                                    },
                                                    colon_token: None,
                                                    bounds: [],
                                                    eq_token: None,
                                                    default: None,
                                                },
                                            ),
                                            Comma,
                                            GenericParam::Type(
                                                TypeParam {
                                                    attrs: [],
                                                    ident: Ident {
                                                        sym: Iter2,
                                                        span: bytes(2680..2685),
                                                    },
                                                    colon_token: None,
                                                    bounds: [],
                                                    eq_token: None,
                                                    default: None,
                                                },
                                            ),
                                            Comma,
                                            GenericParam::Type(
                                                TypeParam {
                                                    attrs: [],
                                                    ident: Ident {
                                                        sym: Elem1,
                                                        span: bytes(2687..2692),
                                                    },
                                                    colon_token: None,
                                                    bounds: [],
                                                    eq_token: None,
                                                    default: None,
                                                },
                                            ),
                                            Comma,
                                            GenericParam::Type(
                                                TypeParam {
                                                    attrs: [],
                                                    ident: Ident {
                                                        sym: Elem2,
                                                        span: bytes(2694..2699),
                                                    },
                                                    colon_token: None,
                                                    bounds: [],
                                                    eq_token: None,
                                                    default: None,
                                                },
                                            ),
                                        ],
                                        gt_token: Some(
                                            Gt,
                                        ),
                                        where_clause: Some(
                                            WhereClause {
                                                where_token: Where,
                                                predicates: [
                                                    WherePredicate::Type(
                                                        PredicateType {
                                                            lifetimes: None,
                                                            bounded_ty: Type::Reference {
                                                                and_token: And,
                                                                lifetime: Some(
                                                                    Lifetime {
                                                                        apostrophe: bytes(2747..2748),
                                                                        ident: Ident {
                                                                            sym: a,
                                                                            span: bytes(2748..2749),
                                                                        },
                                                                    },
                                                                ),
                                                                mutability: None,
                                                                elem: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Iter1,
                                                                                    span: bytes(2750..2755),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                            colon_token: Colon,
                                                            bounds: [
                                                                TypeParamBound::Trait(
                                                                    TraitBound {
                                                                        paren_token: None,
                                                                        modifier: TraitBoundModifier::None,
                                                                        lifetimes: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: IntoIterator,
                                                                                        span: bytes(2757..2769),
                                                                                    },
                                                                                    arguments: PathArguments::AngleBracketed {
                                                                                        colon2_token: None,
                                                                                        lt_token: Lt,
                                                                                        args: [
                                                                                            GenericArgument::AssocType(
                                                                                                AssocType {
                                                                                                    ident: Ident {
                                                                                                        sym: Item,
                                                                                                        span: bytes(2770..2774),
                                                                                                    },
                                                                                                    generics: None,
                                                                                                    eq_token: Eq,
                                                                                                    ty: Type::Path {
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: Elem1,
                                                                                                                        span: bytes(2777..2782),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                            ),
                                                                                        ],
                                                                                        gt_token: Gt,
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                    Comma,
                                                    WherePredicate::Type(
                                                        PredicateType {
                                                            lifetimes: None,
                                                            bounded_ty: Type::Reference {
                                                                and_token: And,
                                                                lifetime: Some(
                                                                    Lifetime {
                                                                        apostrophe: bytes(2790..2791),
                                                                        ident: Ident {
                                                                            sym: b,
                                                                            span: bytes(2791..2792),
                                                                        },
                                                                    },
                                                                ),
                                                                mutability: None,
                                                                elem: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Iter2,
                                                                                    span: bytes(2793..2798),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                            colon_token: Colon,
                                                            bounds: [
                                                                TypeParamBound::Trait(
                                                                    TraitBound {
                                                                        paren_token: None,
                                                                        modifier: TraitBoundModifier::None,
                                                                        lifetimes: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: IntoIterator,
                                                                                        span: bytes(2800..2812),
                                                                                    },
                                                                                    arguments: PathArguments::AngleBracketed {
                                                                                        colon2_token: None,
                                                                                        lt_token: Lt,
                                                                                        args: [
                                                                                            GenericArgument::AssocType(
                                                                                                AssocType {
                                                                                                    ident: Ident {
                                                                                                        sym: Item,
                                                                                                        span: bytes(2813..2817),
                                                                                                    },
                                                                                                    generics: None,
                                                                                                    eq_token: Eq,
                                                                                                    ty: Type::Path {
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: Elem2,
                                                                                                                        span: bytes(2820..2825),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                            ),
                                                                                        ],
                                                                                        gt_token: Gt,
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                    Comma,
                                                    WherePredicate::Type(
                                                        PredicateType {
                                                            lifetimes: None,
                                                            bounded_ty: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Elem1,
                                                                                span: bytes(2832..2837),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            colon_token: Colon,
                                                            bounds: [
                                                                TypeParamBound::Trait(
                                                                    TraitBound {
                                                                        paren_token: None,
                                                                        modifier: TraitBoundModifier::None,
                                                                        lifetimes: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: PartialEq,
                                                                                        span: bytes(2839..2848),
                                                                                    },
                                                                                    arguments: PathArguments::AngleBracketed {
                                                                                        colon2_token: None,
                                                                                        lt_token: Lt,
                                                                                        args: [
                                                                                            GenericArgument::Type(
                                                                                                Type::Path {
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: Elem2,
                                                                                                                    span: bytes(2849..2854),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                            ),
                                                                                        ],
                                                                                        gt_token: Gt,
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                    Comma,
                                                ],
                                            },
                                        ),
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: a,
                                                        span: bytes(2701..2702),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: Some(
                                                        Lifetime {
                                                            apostrophe: bytes(2705..2706),
                                                            ident: Ident {
                                                                sym: a,
                                                                span: bytes(2706..2707),
                                                            },
                                                        },
                                                    ),
                                                    mutability: None,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Iter1,
                                                                        span: bytes(2708..2713),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: b,
                                                        span: bytes(2715..2716),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: Some(
                                                        Lifetime {
                                                            apostrophe: bytes(2719..2720),
                                                            ident: Ident {
                                                                sym: b,
                                                                span: bytes(2720..2721),
                                                            },
                                                        },
                                                    ),
                                                    mutability: None,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Iter2,
                                                                        span: bytes(2722..2727),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: f64,
                                                            span: bytes(2732..2735),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: None,
                                                ident: Ident {
                                                    sym: a_len,
                                                    span: bytes(2867..2872),
                                                },
                                                subpat: None,
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: a,
                                                                                span: bytes(2875..2876),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: into_iter,
                                                                span: bytes(2877..2886),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [],
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: count,
                                                            span: bytes(2889..2894),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [],
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: None,
                                                ident: Ident {
                                                    sym: b_len,
                                                    span: bytes(2906..2911),
                                                },
                                                subpat: None,
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: b,
                                                                                span: bytes(2914..2915),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: into_iter,
                                                                span: bytes(2916..2925),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [],
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: count,
                                                            span: bytes(2928..2933),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [],
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Expr(
                                            Expr::If {
                                                attrs: [],
                                                if_token: If,
                                                cond: Expr::Binary {
                                                    attrs: [],
                                                    left: Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: a_len,
                                                                            span: bytes(2945..2950),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        op: BinOp::Eq(
                                                            EqEq,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 0,
                                                            },
                                                        },
                                                    },
                                                    op: BinOp::And(
                                                        AndAnd,
                                                    ),
                                                    right: Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: b_len,
                                                                            span: bytes(2959..2964),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        op: BinOp::Eq(
                                                            EqEq,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 0,
                                                            },
                                                        },
                                                    },
                                                },
                                                then_branch: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::Return {
                                                                attrs: [],
                                                                return_token: Return,
                                                                expr: Some(
                                                                    Expr::Lit {
                                                                        attrs: [],
                                                                        lit: Lit::Float {
                                                                            token: 1.0,
                                                                        },
                                                                    },
                                                                ),
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                    ],
                                                },
                                                else_branch: Some(
                                                    (
                                                        Else,
                                                        Expr::If {
                                                            attrs: [],
                                                            if_token: If,
                                                            cond: Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Binary {
                                                                    attrs: [],
                                                                    left: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: a_len,
                                                                                        span: bytes(3006..3011),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    op: BinOp::Eq(
                                                                        EqEq,
                                                                    ),
                                                                    right: Expr::Lit {
                                                                        attrs: [],
                                                                        lit: Lit::Int {
                                                                            token: 0,
                                                                        },
                                                                    },
                                                                },
                                                                op: BinOp::Or(
                                                                    OrOr,
                                                                ),
                                                                right: Expr::Binary {
                                                                    attrs: [],
                                                                    left: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: b_len,
                                                                                        span: bytes(3020..3025),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    op: BinOp::Eq(
                                                                        EqEq,
                                                                    ),
                                                                    right: Expr::Lit {
                                                                        attrs: [],
                                                                        lit: Lit::Int {
                                                                            token: 0,
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                            then_branch: Block {
                                                                brace_token: Brace,
                                                                stmts: [
                                                                    Stmt::Expr(
                                                                        Expr::Return {
                                                                            attrs: [],
                                                                            return_token: Return,
                                                                            expr: Some(
                                                                                Expr::Lit {
                                                                                    attrs: [],
                                                                                    lit: Lit::Float {
                                                                                        token: 0.0,
                                                                                    },
                                                                                },
                                                                            ),
                                                                        },
                                                                        Some(
                                                                            Semi,
                                                                        ),
                                                                    ),
                                                                ],
                                                            },
                                                            else_branch: None,
                                                        },
                                                    ),
                                                ),
                                            },
                                            None,
                                        ),
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                ident: Ident {
                                                    sym: search_range,
                                                    span: bytes(3072..3084),
                                                },
                                                subpat: None,
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Call {
                                                            attrs: [],
                                                            func: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: max,
                                                                                span: bytes(3087..3090),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: a_len,
                                                                                    span: bytes(3091..3096),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                Comma,
                                                                Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: b_len,
                                                                                    span: bytes(3098..3103),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                        op: BinOp::Div(
                                                            Slash,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 2,
                                                            },
                                                        },
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Expr(
                                            Expr::Assign {
                                                attrs: [],
                                                left: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: search_range,
                                                                    span: bytes(3114..3126),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                eq_token: Eq,
                                                right: Expr::MethodCall {
                                                    attrs: [],
                                                    receiver: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: search_range,
                                                                        span: bytes(3129..3141),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    dot_token: Dot,
                                                    method: Ident {
                                                        sym: saturating_sub,
                                                        span: bytes(3142..3156),
                                                    },
                                                    turbofish: None,
                                                    paren_token: Paren,
                                                    args: [
                                                        Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 1,
                                                            },
                                                        },
                                                    ],
                                                },
                                            },
                                            Some(
                                                Semi,
                                            ),
                                        ),
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                ident: Ident {
                                                    sym: flags_memory,
                                                    span: bytes(3226..3238),
                                                },
                                                subpat: None,
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Macro {
                                                        attrs: [],
                                                        mac: Macro {
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: vec,
                                                                            span: bytes(3241..3244),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                            bang_token: Not,
                                                            delimiter: MacroDelimiter::Bracket(
                                                                Bracket,
                                                            ),
                                                            tokens: TokenStream [
                                                                Ident {
                                                                    sym: false,
                                                                    span: bytes(3246..3251),
                                                                },
                                                                Punct {
                                                                    char: ';',
                                                                    spacing: Alone,
                                                                    span: bytes(3251..3252),
                                                                },
                                                                Ident {
                                                                    sym: a_len,
                                                                    span: bytes(3253..3258),
                                                                },
                                                                Punct {
                                                                    char: '+',
                                                                    spacing: Alone,
                                                                    span: bytes(3259..3260),
                                                                },
                                                                Ident {
                                                                    sym: b_len,
                                                                    span: bytes(3261..3266),
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Tuple {
                                                attrs: [],
                                                paren_token: Paren,
                                                elems: [
                                                    Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: a_flags,
                                                            span: bytes(3278..3285),
                                                        },
                                                        subpat: None,
                                                    },
                                                    Comma,
                                                    Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: b_flags,
                                                            span: bytes(3287..3294),
                                                        },
                                                        subpat: None,
                                                    },
                                                ],
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: flags_memory,
                                                                            span: bytes(3298..3310),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: split_at_mut,
                                                            span: bytes(3311..3323),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [
                                                            Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: a_len,
                                                                                span: bytes(3324..3329),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                ident: Ident {
                                                    sym: matches,
                                                    span: bytes(3345..3352),
                                                },
                                                subpat: None,
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Lit {
                                                        attrs: [],
                                                        lit: Lit::Int {
                                                            token: 0_usize,
                                                        },
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Expr(
                                            Expr::ForLoop {
                                                attrs: [],
                                                label: None,
                                                for_token: For,
                                                pat: Pat::Tuple {
                                                    attrs: [],
                                                    paren_token: Paren,
                                                    elems: [
                                                        Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: i,
                                                                span: bytes(3374..3375),
                                                            },
                                                            subpat: None,
                                                        },
                                                        Comma,
                                                        Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: a_elem,
                                                                span: bytes(3377..3383),
                                                            },
                                                            subpat: None,
                                                        },
                                                    ],
                                                },
                                                in_token: In,
                                                expr: Expr::MethodCall {
                                                    attrs: [],
                                                    receiver: Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: a,
                                                                            span: bytes(3388..3389),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: into_iter,
                                                            span: bytes(3390..3399),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [],
                                                    },
                                                    dot_token: Dot,
                                                    method: Ident {
                                                        sym: enumerate,
                                                        span: bytes(3402..3411),
                                                    },
                                                    turbofish: None,
                                                    paren_token: Paren,
                                                    args: [],
                                                },
                                                body: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Local {
                                                            attrs: [],
                                                            let_token: Let,
                                                            pat: Pat::Ident {
                                                                attrs: [],
                                                                by_ref: None,
                                                                mutability: None,
                                                                ident: Ident {
                                                                    sym: min_bound,
                                                                    span: bytes(3464..3473),
                                                                },
                                                                subpat: None,
                                                            },
                                                            init: Some(
                                                                LocalInit {
                                                                    eq_token: Eq,
                                                                    expr: Expr::If {
                                                                        attrs: [],
                                                                        if_token: If,
                                                                        cond: Expr::Binary {
                                                                            attrs: [],
                                                                            left: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: i,
                                                                                                span: bytes(3479..3480),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            op: BinOp::Gt(
                                                                                Gt,
                                                                            ),
                                                                            right: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: search_range,
                                                                                                span: bytes(3483..3495),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        },
                                                                        then_branch: Block {
                                                                            brace_token: Brace,
                                                                            stmts: [
                                                                                Stmt::Expr(
                                                                                    Expr::Binary {
                                                                                        attrs: [],
                                                                                        left: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: i,
                                                                                                            span: bytes(3510..3511),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        op: BinOp::Sub(
                                                                                            Minus,
                                                                                        ),
                                                                                        right: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: search_range,
                                                                                                            span: bytes(3514..3526),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                    None,
                                                                                ),
                                                                            ],
                                                                        },
                                                                        else_branch: Some(
                                                                            (
                                                                                Else,
                                                                                Expr::Block {
                                                                                    attrs: [],
                                                                                    label: None,
                                                                                    block: Block {
                                                                                        brace_token: Brace,
                                                                                        stmts: [
                                                                                            Stmt::Expr(
                                                                                                Expr::Lit {
                                                                                                    attrs: [],
                                                                                                    lit: Lit::Int {
                                                                                                        token: 0,
                                                                                                    },
                                                                                                },
                                                                                                None,
                                                                                            ),
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            ),
                                                                        ),
                                                                    },
                                                                    diverge: None,
                                                                },
                                                            ),
                                                            semi_token: Semi,
                                                        },
                                                        Stmt::Local {
                                                            attrs: [],
                                                            let_token: Let,
                                                            pat: Pat::Ident {
                                                                attrs: [],
                                                                by_ref: None,
                                                                mutability: None,
                                                                ident: Ident {
                                                                    sym: max_bound,
                                                                    span: bytes(3582..3591),
                                                                },
                                                                subpat: None,
                                                            },
                                                            init: Some(
                                                                LocalInit {
                                                                    eq_token: Eq,
                                                                    expr: Expr::Call {
                                                                        attrs: [],
                                                                        func: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: min,
                                                                                            span: bytes(3594..3597),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        paren_token: Paren,
                                                                        args: [
                                                                            Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: b_len,
                                                                                                span: bytes(3598..3603),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            Comma,
                                                                            Expr::Binary {
                                                                                attrs: [],
                                                                                left: Expr::Binary {
                                                                                    attrs: [],
                                                                                    left: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: i,
                                                                                                        span: bytes(3605..3606),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    op: BinOp::Add(
                                                                                        Plus,
                                                                                    ),
                                                                                    right: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: search_range,
                                                                                                        span: bytes(3609..3621),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                },
                                                                                op: BinOp::Add(
                                                                                    Plus,
                                                                                ),
                                                                                right: Expr::Lit {
                                                                                    attrs: [],
                                                                                    lit: Lit::Int {
                                                                                        token: 1,
                                                                                    },
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                    diverge: None,
                                                                },
                                                            ),
                                                            semi_token: Semi,
                                                        },
                                                        Stmt::Expr(
                                                            Expr::ForLoop {
                                                                attrs: [],
                                                                label: None,
                                                                for_token: For,
                                                                pat: Pat::Tuple {
                                                                    attrs: [],
                                                                    paren_token: Paren,
                                                                    elems: [
                                                                        Pat::Ident {
                                                                            attrs: [],
                                                                            by_ref: None,
                                                                            mutability: None,
                                                                            ident: Ident {
                                                                                sym: j,
                                                                                span: bytes(3642..3643),
                                                                            },
                                                                            subpat: None,
                                                                        },
                                                                        Comma,
                                                                        Pat::Ident {
                                                                            attrs: [],
                                                                            by_ref: None,
                                                                            mutability: None,
                                                                            ident: Ident {
                                                                                sym: b_elem,
                                                                                span: bytes(3645..3651),
                                                                            },
                                                                            subpat: None,
                                                                        },
                                                                    ],
                                                                },
                                                                in_token: In,
                                                                expr: Expr::MethodCall {
                                                                    attrs: [],
                                                                    receiver: Expr::MethodCall {
                                                                        attrs: [],
                                                                        receiver: Expr::MethodCall {
                                                                            attrs: [],
                                                                            receiver: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: b,
                                                                                                span: bytes(3656..3657),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            dot_token: Dot,
                                                                            method: Ident {
                                                                                sym: into_iter,
                                                                                span: bytes(3658..3667),
                                                                            },
                                                                            turbofish: None,
                                                                            paren_token: Paren,
                                                                            args: [],
                                                                        },
                                                                        dot_token: Dot,
                                                                        method: Ident {
                                                                            sym: enumerate,
                                                                            span: bytes(3670..3679),
                                                                        },
                                                                        turbofish: None,
                                                                        paren_token: Paren,
                                                                        args: [],
                                                                    },
                                                                    dot_token: Dot,
                                                                    method: Ident {
                                                                        sym: take,
                                                                        span: bytes(3682..3686),
                                                                    },
                                                                    turbofish: None,
                                                                    paren_token: Paren,
                                                                    args: [
                                                                        Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: max_bound,
                                                                                            span: bytes(3687..3696),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                                body: Block {
                                                                    brace_token: Brace,
                                                                    stmts: [
                                                                        Stmt::Expr(
                                                                            Expr::If {
                                                                                attrs: [],
                                                                                if_token: If,
                                                                                cond: Expr::Binary {
                                                                                    attrs: [],
                                                                                    left: Expr::Binary {
                                                                                        attrs: [],
                                                                                        left: Expr::Binary {
                                                                                            attrs: [],
                                                                                            left: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: min_bound,
                                                                                                                span: bytes(3715..3724),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            op: BinOp::Le(
                                                                                                Le,
                                                                                            ),
                                                                                            right: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: j,
                                                                                                                span: bytes(3728..3729),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                        op: BinOp::And(
                                                                                            AndAnd,
                                                                                        ),
                                                                                        right: Expr::Binary {
                                                                                            attrs: [],
                                                                                            left: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: a_elem,
                                                                                                                span: bytes(3733..3739),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            op: BinOp::Eq(
                                                                                                EqEq,
                                                                                            ),
                                                                                            right: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: b_elem,
                                                                                                                span: bytes(3743..3749),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                    op: BinOp::And(
                                                                                        AndAnd,
                                                                                    ),
                                                                                    right: Expr::Unary {
                                                                                        attrs: [],
                                                                                        op: UnOp::Not(
                                                                                            Not,
                                                                                        ),
                                                                                        expr: Expr::Index {
                                                                                            attrs: [],
                                                                                            expr: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: b_flags,
                                                                                                                span: bytes(3754..3761),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            bracket_token: Bracket,
                                                                                            index: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: j,
                                                                                                                span: bytes(3762..3763),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                },
                                                                                then_branch: Block {
                                                                                    brace_token: Brace,
                                                                                    stmts: [
                                                                                        Stmt::Expr(
                                                                                            Expr::Assign {
                                                                                                attrs: [],
                                                                                                left: Expr::Index {
                                                                                                    attrs: [],
                                                                                                    expr: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: a_flags,
                                                                                                                        span: bytes(3783..3790),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    bracket_token: Bracket,
                                                                                                    index: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: i,
                                                                                                                        span: bytes(3791..3792),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                                eq_token: Eq,
                                                                                                right: Expr::Lit {
                                                                                                    attrs: [],
                                                                                                    lit: Lit::Bool {
                                                                                                        value: true,
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                            Some(
                                                                                                Semi,
                                                                                            ),
                                                                                        ),
                                                                                        Stmt::Expr(
                                                                                            Expr::Assign {
                                                                                                attrs: [],
                                                                                                left: Expr::Index {
                                                                                                    attrs: [],
                                                                                                    expr: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: b_flags,
                                                                                                                        span: bytes(3818..3825),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    bracket_token: Bracket,
                                                                                                    index: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: j,
                                                                                                                        span: bytes(3826..3827),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                                eq_token: Eq,
                                                                                                right: Expr::Lit {
                                                                                                    attrs: [],
                                                                                                    lit: Lit::Bool {
                                                                                                        value: true,
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                            Some(
                                                                                                Semi,
                                                                                            ),
                                                                                        ),
                                                                                        Stmt::Expr(
                                                                                            Expr::Binary {
                                                                                                attrs: [],
                                                                                                left: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: matches,
                                                                                                                    span: bytes(3853..3860),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                op: BinOp::AddAssign(
                                                                                                    PlusEq,
                                                                                                ),
                                                                                                right: Expr::Lit {
                                                                                                    attrs: [],
                                                                                                    lit: Lit::Int {
                                                                                                        token: 1,
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                            Some(
                                                                                                Semi,
                                                                                            ),
                                                                                        ),
                                                                                        Stmt::Expr(
                                                                                            Expr::Break {
                                                                                                attrs: [],
                                                                                                break_token: Break,
                                                                                                label: None,
                                                                                                expr: None,
                                                                                            },
                                                                                            Some(
                                                                                                Semi,
                                                                                            ),
                                                                                        ),
                                                                                    ],
                                                                                },
                                                                                else_branch: None,
                                                                            },
                                                                            None,
                                                                        ),
                                                                    ],
                                                                },
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                            None,
                                        ),
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                ident: Ident {
                                                    sym: transpositions,
                                                    span: bytes(3933..3947),
                                                },
                                                subpat: None,
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Lit {
                                                        attrs: [],
                                                        lit: Lit::Int {
                                                            token: 0_usize,
                                                        },
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Expr(
                                            Expr::If {
                                                attrs: [],
                                                if_token: If,
                                                cond: Expr::Binary {
                                                    attrs: [],
                                                    left: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: matches,
                                                                        span: bytes(3966..3973),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    op: BinOp::Ne(
                                                        Ne,
                                                    ),
                                                    right: Expr::Lit {
                                                        attrs: [],
                                                        lit: Lit::Int {
                                                            token: 0,
                                                        },
                                                    },
                                                },
                                                then_branch: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Local {
                                                            attrs: [],
                                                            let_token: Let,
                                                            pat: Pat::Ident {
                                                                attrs: [],
                                                                by_ref: None,
                                                                mutability: Some(
                                                                    Mut,
                                                                ),
                                                                ident: Ident {
                                                                    sym: b_iter,
                                                                    span: bytes(3997..4003),
                                                                },
                                                                subpat: None,
                                                            },
                                                            init: Some(
                                                                LocalInit {
                                                                    eq_token: Eq,
                                                                    expr: Expr::MethodCall {
                                                                        attrs: [],
                                                                        receiver: Expr::MethodCall {
                                                                            attrs: [],
                                                                            receiver: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: b_flags,
                                                                                                span: bytes(4006..4013),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            dot_token: Dot,
                                                                            method: Ident {
                                                                                sym: iter,
                                                                                span: bytes(4014..4018),
                                                                            },
                                                                            turbofish: None,
                                                                            paren_token: Paren,
                                                                            args: [],
                                                                        },
                                                                        dot_token: Dot,
                                                                        method: Ident {
                                                                            sym: zip,
                                                                            span: bytes(4021..4024),
                                                                        },
                                                                        turbofish: None,
                                                                        paren_token: Paren,
                                                                        args: [
                                                                            Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: b,
                                                                                                span: bytes(4025..4026),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                    diverge: None,
                                                                },
                                                            ),
                                                            semi_token: Semi,
                                                        },
                                                        Stmt::Expr(
                                                            Expr::ForLoop {
                                                                attrs: [],
                                                                label: None,
                                                                for_token: For,
                                                                pat: Pat::Tuple {
                                                                    attrs: [],
                                                                    paren_token: Paren,
                                                                    elems: [
                                                                        Pat::Ident {
                                                                            attrs: [],
                                                                            by_ref: None,
                                                                            mutability: None,
                                                                            ident: Ident {
                                                                                sym: a_flag,
                                                                                span: bytes(4042..4048),
                                                                            },
                                                                            subpat: None,
                                                                        },
                                                                        Comma,
                                                                        Pat::Ident {
                                                                            attrs: [],
                                                                            by_ref: None,
                                                                            mutability: None,
                                                                            ident: Ident {
                                                                                sym: ch1,
                                                                                span: bytes(4050..4053),
                                                                            },
                                                                            subpat: None,
                                                                        },
                                                                    ],
                                                                },
                                                                in_token: In,
                                                                expr: Expr::MethodCall {
                                                                    attrs: [],
                                                                    receiver: Expr::MethodCall {
                                                                        attrs: [],
                                                                        receiver: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: a_flags,
                                                                                            span: bytes(4058..4065),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        dot_token: Dot,
                                                                        method: Ident {
                                                                            sym: iter,
                                                                            span: bytes(4066..4070),
                                                                        },
                                                                        turbofish: None,
                                                                        paren_token: Paren,
                                                                        args: [],
                                                                    },
                                                                    dot_token: Dot,
                                                                    method: Ident {
                                                                        sym: zip,
                                                                        span: bytes(4073..4076),
                                                                    },
                                                                    turbofish: None,
                                                                    paren_token: Paren,
                                                                    args: [
                                                                        Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: a,
                                                                                            span: bytes(4077..4078),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                                body: Block {
                                                                    brace_token: Brace,
                                                                    stmts: [
                                                                        Stmt::Expr(
                                                                            Expr::If {
                                                                                attrs: [],
                                                                                if_token: If,
                                                                                cond: Expr::Unary {
                                                                                    attrs: [],
                                                                                    op: UnOp::Deref(
                                                                                        Star,
                                                                                    ),
                                                                                    expr: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: a_flag,
                                                                                                        span: bytes(4098..4104),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                },
                                                                                then_branch: Block {
                                                                                    brace_token: Brace,
                                                                                    stmts: [
                                                                                        Stmt::Expr(
                                                                                            Expr::Loop {
                                                                                                attrs: [],
                                                                                                label: None,
                                                                                                loop_token: Loop,
                                                                                                body: Block {
                                                                                                    brace_token: Brace,
                                                                                                    stmts: [
                                                                                                        Stmt::Expr(
                                                                                                            Expr::If {
                                                                                                                attrs: [],
                                                                                                                if_token: If,
                                                                                                                cond: Expr::Let {
                                                                                                                    attrs: [],
                                                                                                                    let_token: Let,
                                                                                                                    pat: Pat::TupleStruct {
                                                                                                                        attrs: [],
                                                                                                                        qself: None,
                                                                                                                        path: Path {
                                                                                                                            leading_colon: None,
                                                                                                                            segments: [
                                                                                                                                PathSegment {
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: Some,
                                                                                                                                        span: bytes(4157..4161),
                                                                                                                                    },
                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                },
                                                                                                                            ],
                                                                                                                        },
                                                                                                                        paren_token: Paren,
                                                                                                                        elems: [
                                                                                                                            Pat::Tuple {
                                                                                                                                attrs: [],
                                                                                                                                paren_token: Paren,
                                                                                                                                elems: [
                                                                                                                                    Pat::Ident {
                                                                                                                                        attrs: [],
                                                                                                                                        by_ref: None,
                                                                                                                                        mutability: None,
                                                                                                                                        ident: Ident {
                                                                                                                                            sym: b_flag,
                                                                                                                                            span: bytes(4163..4169),
                                                                                                                                        },
                                                                                                                                        subpat: None,
                                                                                                                                    },
                                                                                                                                    Comma,
                                                                                                                                    Pat::Ident {
                                                                                                                                        attrs: [],
                                                                                                                                        by_ref: None,
                                                                                                                                        mutability: None,
                                                                                                                                        ident: Ident {
                                                                                                                                            sym: ch2,
                                                                                                                                            span: bytes(4171..4174),
                                                                                                                                        },
                                                                                                                                        subpat: None,
                                                                                                                                    },
                                                                                                                                ],
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                    eq_token: Eq,
                                                                                                                    expr: Expr::MethodCall {
                                                                                                                        attrs: [],
                                                                                                                        receiver: Expr::Path {
                                                                                                                            attrs: [],
                                                                                                                            qself: None,
                                                                                                                            path: Path {
                                                                                                                                leading_colon: None,
                                                                                                                                segments: [
                                                                                                                                    PathSegment {
                                                                                                                                        ident: Ident {
                                                                                                                                            sym: b_iter,
                                                                                                                                            span: bytes(4179..4185),
                                                                                                                                        },
                                                                                                                                        arguments: PathArguments::None,
                                                                                                                                    },
                                                                                                                                ],
                                                                                                                            },
                                                                                                                        },
                                                                                                                        dot_token: Dot,
                                                                                                                        method: Ident {
                                                                                                                            sym: next,
                                                                                                                            span: bytes(4186..4190),
                                                                                                                        },
                                                                                                                        turbofish: None,
                                                                                                                        paren_token: Paren,
                                                                                                                        args: [],
                                                                                                                    },
                                                                                                                },
                                                                                                                then_branch: Block {
                                                                                                                    brace_token: Brace,
                                                                                                                    stmts: [
                                                                                                                        Stmt::Expr(
                                                                                                                            Expr::If {
                                                                                                                                attrs: [],
                                                                                                                                if_token: If,
                                                                                                                                cond: Expr::Unary {
                                                                                                                                    attrs: [],
                                                                                                                                    op: UnOp::Not(
                                                                                                                                        Not,
                                                                                                                                    ),
                                                                                                                                    expr: Expr::Unary {
                                                                                                                                        attrs: [],
                                                                                                                                        op: UnOp::Deref(
                                                                                                                                            Star,
                                                                                                                                        ),
                                                                                                                                        expr: Expr::Path {
                                                                                                                                            attrs: [],
                                                                                                                                            qself: None,
                                                                                                                                            path: Path {
                                                                                                                                                leading_colon: None,
                                                                                                                                                segments: [
                                                                                                                                                    PathSegment {
                                                                                                                                                        ident: Ident {
                                                                                                                                                            sym: b_flag,
                                                                                                                                                            span: bytes(4224..4230),
                                                                                                                                                        },
                                                                                                                                                        arguments: PathArguments::None,
                                                                                                                                                    },
                                                                                                                                                ],
                                                                                                                                            },
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                },
                                                                                                                                then_branch: Block {
                                                                                                                                    brace_token: Brace,
                                                                                                                                    stmts: [
                                                                                                                                        Stmt::Expr(
                                                                                                                                            Expr::Continue {
                                                                                                                                                attrs: [],
                                                                                                                                                continue_token: Continue,
                                                                                                                                                label: None,
                                                                                                                                            },
                                                                                                                                            Some(
                                                                                                                                                Semi,
                                                                                                                                            ),
                                                                                                                                        ),
                                                                                                                                    ],
                                                                                                                                },
                                                                                                                                else_branch: None,
                                                                                                                            },
                                                                                                                            None,
                                                                                                                        ),
                                                                                                                        Stmt::Expr(
                                                                                                                            Expr::If {
                                                                                                                                attrs: [],
                                                                                                                                if_token: If,
                                                                                                                                cond: Expr::Binary {
                                                                                                                                    attrs: [],
                                                                                                                                    left: Expr::Path {
                                                                                                                                        attrs: [],
                                                                                                                                        qself: None,
                                                                                                                                        path: Path {
                                                                                                                                            leading_colon: None,
                                                                                                                                            segments: [
                                                                                                                                                PathSegment {
                                                                                                                                                    ident: Ident {
                                                                                                                                                        sym: ch1,
                                                                                                                                                        span: bytes(4325..4328),
                                                                                                                                                    },
                                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                                },
                                                                                                                                            ],
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                    op: BinOp::Ne(
                                                                                                                                        Ne,
                                                                                                                                    ),
                                                                                                                                    right: Expr::Path {
                                                                                                                                        attrs: [],
                                                                                                                                        qself: None,
                                                                                                                                        path: Path {
                                                                                                                                            leading_colon: None,
                                                                                                                                            segments: [
                                                                                                                                                PathSegment {
                                                                                                                                                    ident: Ident {
                                                                                                                                                        sym: ch2,
                                                                                                                                                        span: bytes(4332..4335),
                                                                                                                                                    },
                                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                                },
                                                                                                                                            ],
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                },
                                                                                                                                then_branch: Block {
                                                                                                                                    brace_token: Brace,
                                                                                                                                    stmts: [
                                                                                                                                        Stmt::Expr(
                                                                                                                                            Expr::Binary {
                                                                                                                                                attrs: [],
                                                                                                                                                left: Expr::Path {
                                                                                                                                                    attrs: [],
                                                                                                                                                    qself: None,
                                                                                                                                                    path: Path {
                                                                                                                                                        leading_colon: None,
                                                                                                                                                        segments: [
                                                                                                                                                            PathSegment {
                                                                                                                                                                ident: Ident {
                                                                                                                                                                    sym: transpositions,
                                                                                                                                                                    span: bytes(4366..4380),
                                                                                                                                                                },
                                                                                                                                                                arguments: PathArguments::None,
                                                                                                                                                            },
                                                                                                                                                        ],
                                                                                                                                                    },
                                                                                                                                                },
                                                                                                                                                op: BinOp::AddAssign(
                                                                                                                                                    PlusEq,
                                                                                                                                                ),
                                                                                                                                                right: Expr::Lit {
                                                                                                                                                    attrs: [],
                                                                                                                                                    lit: Lit::Int {
                                                                                                                                                        token: 1,
                                                                                                                                                    },
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            Some(
                                                                                                                                                Semi,
                                                                                                                                            ),
                                                                                                                                        ),
                                                                                                                                    ],
                                                                                                                                },
                                                                                                                                else_branch: None,
                                                                                                                            },
                                                                                                                            None,
                                                                                                                        ),
                                                                                                                        Stmt::Expr(
                                                                                                                            Expr::Break {
                                                                                                                                attrs: [],
                                                                                                                                break_token: Break,
                                                                                                                                label: None,
                                                                                                                                expr: None,
                                                                                                                            },
                                                                                                                            Some(
                                                                                                                                Semi,
                                                                                                                            ),
                                                                                                                        ),
                                                                                                                    ],
                                                                                                                },
                                                                                                                else_branch: None,
                                                                                                            },
                                                                                                            None,
                                                                                                        ),
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            None,
                                                                                        ),
                                                                                    ],
                                                                                },
                                                                                else_branch: None,
                                                                            },
                                                                            None,
                                                                        ),
                                                                    ],
                                                                },
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                                else_branch: None,
                                            },
                                            None,
                                        ),
                                        Stmt::Expr(
                                            Expr::Binary {
                                                attrs: [],
                                                left: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: transpositions,
                                                                    span: bytes(4518..4532),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                op: BinOp::DivAssign(
                                                    SlashEq,
                                                ),
                                                right: Expr::Lit {
                                                    attrs: [],
                                                    lit: Lit::Int {
                                                        token: 2,
                                                    },
                                                },
                                            },
                                            Some(
                                                Semi,
                                            ),
                                        ),
                                        Stmt::Expr(
                                            Expr::If {
                                                attrs: [],
                                                if_token: If,
                                                cond: Expr::Binary {
                                                    attrs: [],
                                                    left: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: matches,
                                                                        span: bytes(4547..4554),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    op: BinOp::Eq(
                                                        EqEq,
                                                    ),
                                                    right: Expr::Lit {
                                                        attrs: [],
                                                        lit: Lit::Int {
                                                            token: 0,
                                                        },
                                                    },
                                                },
                                                then_branch: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::Lit {
                                                                attrs: [],
                                                                lit: Lit::Float {
                                                                    token: 0.0,
                                                                },
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                                else_branch: Some(
                                                    (
                                                        Else,
                                                        Expr::Block {
                                                            attrs: [],
                                                            label: None,
                                                            block: Block {
                                                                brace_token: Brace,
                                                                stmts: [
                                                                    Stmt::Expr(
                                                                        Expr::Binary {
                                                                            attrs: [],
                                                                            left: Expr::Paren {
                                                                                attrs: [],
                                                                                paren_token: Paren,
                                                                                expr: Expr::Binary {
                                                                                    attrs: [],
                                                                                    left: Expr::Binary {
                                                                                        attrs: [],
                                                                                        left: Expr::Paren {
                                                                                            attrs: [],
                                                                                            paren_token: Paren,
                                                                                            expr: Expr::Binary {
                                                                                                attrs: [],
                                                                                                left: Expr::Cast {
                                                                                                    attrs: [],
                                                                                                    expr: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: matches,
                                                                                                                        span: bytes(4597..4604),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    as_token: As,
                                                                                                    ty: Type::Path {
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: f64,
                                                                                                                        span: bytes(4608..4611),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                                op: BinOp::Div(
                                                                                                    Slash,
                                                                                                ),
                                                                                                right: Expr::Cast {
                                                                                                    attrs: [],
                                                                                                    expr: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: a_len,
                                                                                                                        span: bytes(4614..4619),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    as_token: As,
                                                                                                    ty: Type::Path {
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: f64,
                                                                                                                        span: bytes(4623..4626),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                        op: BinOp::Add(
                                                                                            Plus,
                                                                                        ),
                                                                                        right: Expr::Paren {
                                                                                            attrs: [],
                                                                                            paren_token: Paren,
                                                                                            expr: Expr::Binary {
                                                                                                attrs: [],
                                                                                                left: Expr::Cast {
                                                                                                    attrs: [],
                                                                                                    expr: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: matches,
                                                                                                                        span: bytes(4643..4650),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    as_token: As,
                                                                                                    ty: Type::Path {
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: f64,
                                                                                                                        span: bytes(4654..4657),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                                op: BinOp::Div(
                                                                                                    Slash,
                                                                                                ),
                                                                                                right: Expr::Cast {
                                                                                                    attrs: [],
                                                                                                    expr: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: b_len,
                                                                                                                        span: bytes(4660..4665),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    as_token: As,
                                                                                                    ty: Type::Path {
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: f64,
                                                                                                                        span: bytes(4669..4672),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                    op: BinOp::Add(
                                                                                        Plus,
                                                                                    ),
                                                                                    right: Expr::Paren {
                                                                                        attrs: [],
                                                                                        paren_token: Paren,
                                                                                        expr: Expr::Binary {
                                                                                            attrs: [],
                                                                                            left: Expr::Cast {
                                                                                                attrs: [],
                                                                                                expr: Expr::Paren {
                                                                                                    attrs: [],
                                                                                                    paren_token: Paren,
                                                                                                    expr: Expr::Binary {
                                                                                                        attrs: [],
                                                                                                        left: Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: matches,
                                                                                                                            span: bytes(4690..4697),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                        op: BinOp::Sub(
                                                                                                            Minus,
                                                                                                        ),
                                                                                                        right: Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: transpositions,
                                                                                                                            span: bytes(4700..4714),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                                as_token: As,
                                                                                                ty: Type::Path {
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: f64,
                                                                                                                    span: bytes(4719..4722),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                            op: BinOp::Div(
                                                                                                Slash,
                                                                                            ),
                                                                                            right: Expr::Cast {
                                                                                                attrs: [],
                                                                                                expr: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: matches,
                                                                                                                    span: bytes(4725..4732),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                as_token: As,
                                                                                                ty: Type::Path {
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: f64,
                                                                                                                    span: bytes(4736..4739),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                },
                                                                            },
                                                                            op: BinOp::Div(
                                                                                Slash,
                                                                            ),
                                                                            right: Expr::Lit {
                                                                                attrs: [],
                                                                                lit: Lit::Float {
                                                                                    token: 3.0,
                                                                                },
                                                                            },
                                                                        },
                                                                        None,
                                                                    ),
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                ),
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                    },
                    FnItem {
                        fn_name: Name {
                            name: "jaro",
                            complete_name: "strsim::jaro",
                            import_name: MyPath {
                                name: "strsim",
                                next: Some(
                                    MyPath {
                                        name: "jaro",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "jaro",
                        item: Some(
                            ItemFn {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: jaro,
                                        span: bytes(5276..5280),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: a,
                                                        span: bytes(5281..5282),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: None,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: str,
                                                                        span: bytes(5285..5288),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: b,
                                                        span: bytes(5290..5291),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: None,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: str,
                                                                        span: bytes(5294..5297),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: f64,
                                                            span: bytes(5302..5305),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Expr(
                                            Expr::Call {
                                                attrs: [],
                                                func: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: generic_jaro,
                                                                    span: bytes(5312..5324),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                paren_token: Paren,
                                                args: [
                                                    Expr::Reference {
                                                        attrs: [],
                                                        and_token: And,
                                                        mutability: None,
                                                        expr: Expr::Call {
                                                            attrs: [],
                                                            func: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: StringWrapper,
                                                                                span: bytes(5326..5339),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: a,
                                                                                    span: bytes(5340..5341),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    Comma,
                                                    Expr::Reference {
                                                        attrs: [],
                                                        and_token: And,
                                                        mutability: None,
                                                        expr: Expr::Call {
                                                            attrs: [],
                                                            func: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: StringWrapper,
                                                                                span: bytes(5345..5358),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: b,
                                                                                    span: bytes(5359..5360),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                    },
                    FnItem {
                        fn_name: Name {
                            name: "generic_jaro_winkler",
                            complete_name: "strsim::generic_jaro_winkler",
                            import_name: MyPath {
                                name: "strsim",
                                next: Some(
                                    MyPath {
                                        name: "generic_jaro_winkler",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "generic_jaro_winkler",
                        item: Some(
                            ItemFn {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: generic_jaro_winkler,
                                        span: bytes(5445..5465),
                                    },
                                    generics: Generics {
                                        lt_token: Some(
                                            Lt,
                                        ),
                                        params: [
                                            GenericParam::Lifetime(
                                                LifetimeParam {
                                                    attrs: [],
                                                    lifetime: Lifetime {
                                                        apostrophe: bytes(5466..5467),
                                                        ident: Ident {
                                                            sym: a,
                                                            span: bytes(5467..5468),
                                                        },
                                                    },
                                                    colon_token: None,
                                                    bounds: [],
                                                },
                                            ),
                                            Comma,
                                            GenericParam::Lifetime(
                                                LifetimeParam {
                                                    attrs: [],
                                                    lifetime: Lifetime {
                                                        apostrophe: bytes(5470..5471),
                                                        ident: Ident {
                                                            sym: b,
                                                            span: bytes(5471..5472),
                                                        },
                                                    },
                                                    colon_token: None,
                                                    bounds: [],
                                                },
                                            ),
                                            Comma,
                                            GenericParam::Type(
                                                TypeParam {
                                                    attrs: [],
                                                    ident: Ident {
                                                        sym: Iter1,
                                                        span: bytes(5474..5479),
                                                    },
                                                    colon_token: None,
                                                    bounds: [],
                                                    eq_token: None,
                                                    default: None,
                                                },
                                            ),
                                            Comma,
                                            GenericParam::Type(
                                                TypeParam {
                                                    attrs: [],
                                                    ident: Ident {
                                                        sym: Iter2,
                                                        span: bytes(5481..5486),
                                                    },
                                                    colon_token: None,
                                                    bounds: [],
                                                    eq_token: None,
                                                    default: None,
                                                },
                                            ),
                                            Comma,
                                            GenericParam::Type(
                                                TypeParam {
                                                    attrs: [],
                                                    ident: Ident {
                                                        sym: Elem1,
                                                        span: bytes(5488..5493),
                                                    },
                                                    colon_token: None,
                                                    bounds: [],
                                                    eq_token: None,
                                                    default: None,
                                                },
                                            ),
                                            Comma,
                                            GenericParam::Type(
                                                TypeParam {
                                                    attrs: [],
                                                    ident: Ident {
                                                        sym: Elem2,
                                                        span: bytes(5495..5500),
                                                    },
                                                    colon_token: None,
                                                    bounds: [],
                                                    eq_token: None,
                                                    default: None,
                                                },
                                            ),
                                        ],
                                        gt_token: Some(
                                            Gt,
                                        ),
                                        where_clause: Some(
                                            WhereClause {
                                                where_token: Where,
                                                predicates: [
                                                    WherePredicate::Type(
                                                        PredicateType {
                                                            lifetimes: None,
                                                            bounded_ty: Type::Reference {
                                                                and_token: And,
                                                                lifetime: Some(
                                                                    Lifetime {
                                                                        apostrophe: bytes(5548..5549),
                                                                        ident: Ident {
                                                                            sym: a,
                                                                            span: bytes(5549..5550),
                                                                        },
                                                                    },
                                                                ),
                                                                mutability: None,
                                                                elem: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Iter1,
                                                                                    span: bytes(5551..5556),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                            colon_token: Colon,
                                                            bounds: [
                                                                TypeParamBound::Trait(
                                                                    TraitBound {
                                                                        paren_token: None,
                                                                        modifier: TraitBoundModifier::None,
                                                                        lifetimes: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: IntoIterator,
                                                                                        span: bytes(5558..5570),
                                                                                    },
                                                                                    arguments: PathArguments::AngleBracketed {
                                                                                        colon2_token: None,
                                                                                        lt_token: Lt,
                                                                                        args: [
                                                                                            GenericArgument::AssocType(
                                                                                                AssocType {
                                                                                                    ident: Ident {
                                                                                                        sym: Item,
                                                                                                        span: bytes(5571..5575),
                                                                                                    },
                                                                                                    generics: None,
                                                                                                    eq_token: Eq,
                                                                                                    ty: Type::Path {
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: Elem1,
                                                                                                                        span: bytes(5578..5583),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                            ),
                                                                                        ],
                                                                                        gt_token: Gt,
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                    Comma,
                                                    WherePredicate::Type(
                                                        PredicateType {
                                                            lifetimes: None,
                                                            bounded_ty: Type::Reference {
                                                                and_token: And,
                                                                lifetime: Some(
                                                                    Lifetime {
                                                                        apostrophe: bytes(5591..5592),
                                                                        ident: Ident {
                                                                            sym: b,
                                                                            span: bytes(5592..5593),
                                                                        },
                                                                    },
                                                                ),
                                                                mutability: None,
                                                                elem: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Iter2,
                                                                                    span: bytes(5594..5599),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                            colon_token: Colon,
                                                            bounds: [
                                                                TypeParamBound::Trait(
                                                                    TraitBound {
                                                                        paren_token: None,
                                                                        modifier: TraitBoundModifier::None,
                                                                        lifetimes: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: IntoIterator,
                                                                                        span: bytes(5601..5613),
                                                                                    },
                                                                                    arguments: PathArguments::AngleBracketed {
                                                                                        colon2_token: None,
                                                                                        lt_token: Lt,
                                                                                        args: [
                                                                                            GenericArgument::AssocType(
                                                                                                AssocType {
                                                                                                    ident: Ident {
                                                                                                        sym: Item,
                                                                                                        span: bytes(5614..5618),
                                                                                                    },
                                                                                                    generics: None,
                                                                                                    eq_token: Eq,
                                                                                                    ty: Type::Path {
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: Elem2,
                                                                                                                        span: bytes(5621..5626),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                            ),
                                                                                        ],
                                                                                        gt_token: Gt,
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                    Comma,
                                                    WherePredicate::Type(
                                                        PredicateType {
                                                            lifetimes: None,
                                                            bounded_ty: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Elem1,
                                                                                span: bytes(5633..5638),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            colon_token: Colon,
                                                            bounds: [
                                                                TypeParamBound::Trait(
                                                                    TraitBound {
                                                                        paren_token: None,
                                                                        modifier: TraitBoundModifier::None,
                                                                        lifetimes: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: PartialEq,
                                                                                        span: bytes(5640..5649),
                                                                                    },
                                                                                    arguments: PathArguments::AngleBracketed {
                                                                                        colon2_token: None,
                                                                                        lt_token: Lt,
                                                                                        args: [
                                                                                            GenericArgument::Type(
                                                                                                Type::Path {
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: Elem2,
                                                                                                                    span: bytes(5650..5655),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                            ),
                                                                                        ],
                                                                                        gt_token: Gt,
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                    Comma,
                                                ],
                                            },
                                        ),
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: a,
                                                        span: bytes(5502..5503),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: Some(
                                                        Lifetime {
                                                            apostrophe: bytes(5506..5507),
                                                            ident: Ident {
                                                                sym: a,
                                                                span: bytes(5507..5508),
                                                            },
                                                        },
                                                    ),
                                                    mutability: None,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Iter1,
                                                                        span: bytes(5509..5514),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: b,
                                                        span: bytes(5516..5517),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: Some(
                                                        Lifetime {
                                                            apostrophe: bytes(5520..5521),
                                                            ident: Ident {
                                                                sym: b,
                                                                span: bytes(5521..5522),
                                                            },
                                                        },
                                                    ),
                                                    mutability: None,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Iter2,
                                                                        span: bytes(5523..5528),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: f64,
                                                            span: bytes(5533..5536),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: None,
                                                ident: Ident {
                                                    sym: sim,
                                                    span: bytes(5668..5671),
                                                },
                                                subpat: None,
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Call {
                                                        attrs: [],
                                                        func: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: generic_jaro,
                                                                            span: bytes(5674..5686),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        paren_token: Paren,
                                                        args: [
                                                            Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: a,
                                                                                span: bytes(5687..5688),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            Comma,
                                                            Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: b,
                                                                                span: bytes(5690..5691),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Expr(
                                            Expr::If {
                                                attrs: [],
                                                if_token: If,
                                                cond: Expr::Binary {
                                                    attrs: [],
                                                    left: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: sim,
                                                                        span: bytes(5702..5705),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    op: BinOp::Gt(
                                                        Gt,
                                                    ),
                                                    right: Expr::Lit {
                                                        attrs: [],
                                                        lit: Lit::Float {
                                                            token: 0.7,
                                                        },
                                                    },
                                                },
                                                then_branch: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Local {
                                                            attrs: [],
                                                            let_token: Let,
                                                            pat: Pat::Ident {
                                                                attrs: [],
                                                                by_ref: None,
                                                                mutability: None,
                                                                ident: Ident {
                                                                    sym: prefix_length,
                                                                    span: bytes(5726..5739),
                                                                },
                                                                subpat: None,
                                                            },
                                                            init: Some(
                                                                LocalInit {
                                                                    eq_token: Eq,
                                                                    expr: Expr::MethodCall {
                                                                        attrs: [],
                                                                        receiver: Expr::MethodCall {
                                                                            attrs: [],
                                                                            receiver: Expr::MethodCall {
                                                                                attrs: [],
                                                                                receiver: Expr::MethodCall {
                                                                                    attrs: [],
                                                                                    receiver: Expr::MethodCall {
                                                                                        attrs: [],
                                                                                        receiver: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: a,
                                                                                                            span: bytes(5742..5743),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        dot_token: Dot,
                                                                                        method: Ident {
                                                                                            sym: into_iter,
                                                                                            span: bytes(5757..5766),
                                                                                        },
                                                                                        turbofish: None,
                                                                                        paren_token: Paren,
                                                                                        args: [],
                                                                                    },
                                                                                    dot_token: Dot,
                                                                                    method: Ident {
                                                                                        sym: take,
                                                                                        span: bytes(5782..5786),
                                                                                    },
                                                                                    turbofish: None,
                                                                                    paren_token: Paren,
                                                                                    args: [
                                                                                        Expr::Lit {
                                                                                            attrs: [],
                                                                                            lit: Lit::Int {
                                                                                                token: 4,
                                                                                            },
                                                                                        },
                                                                                    ],
                                                                                },
                                                                                dot_token: Dot,
                                                                                method: Ident {
                                                                                    sym: zip,
                                                                                    span: bytes(5803..5806),
                                                                                },
                                                                                turbofish: None,
                                                                                paren_token: Paren,
                                                                                args: [
                                                                                    Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: b,
                                                                                                        span: bytes(5807..5808),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ],
                                                                            },
                                                                            dot_token: Dot,
                                                                            method: Ident {
                                                                                sym: take_while,
                                                                                span: bytes(5823..5833),
                                                                            },
                                                                            turbofish: None,
                                                                            paren_token: Paren,
                                                                            args: [
                                                                                Expr::Closure {
                                                                                    attrs: [],
                                                                                    lifetimes: None,
                                                                                    constness: None,
                                                                                    movability: None,
                                                                                    asyncness: None,
                                                                                    capture: None,
                                                                                    or1_token: Or,
                                                                                    inputs: [
                                                                                        Pat::Tuple {
                                                                                            attrs: [],
                                                                                            paren_token: Paren,
                                                                                            elems: [
                                                                                                Pat::Ident {
                                                                                                    attrs: [],
                                                                                                    by_ref: None,
                                                                                                    mutability: None,
                                                                                                    ident: Ident {
                                                                                                        sym: a_elem,
                                                                                                        span: bytes(5836..5842),
                                                                                                    },
                                                                                                    subpat: None,
                                                                                                },
                                                                                                Comma,
                                                                                                Pat::Ident {
                                                                                                    attrs: [],
                                                                                                    by_ref: None,
                                                                                                    mutability: None,
                                                                                                    ident: Ident {
                                                                                                        sym: b_elem,
                                                                                                        span: bytes(5844..5850),
                                                                                                    },
                                                                                                    subpat: None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    ],
                                                                                    or2_token: Or,
                                                                                    output: ReturnType::Default,
                                                                                    body: Expr::Binary {
                                                                                        attrs: [],
                                                                                        left: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: a_elem,
                                                                                                            span: bytes(5853..5859),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        op: BinOp::Eq(
                                                                                            EqEq,
                                                                                        ),
                                                                                        right: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: b_elem,
                                                                                                            span: bytes(5863..5869),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                        dot_token: Dot,
                                                                        method: Ident {
                                                                            sym: count,
                                                                            span: bytes(5884..5889),
                                                                        },
                                                                        turbofish: None,
                                                                        paren_token: Paren,
                                                                        args: [],
                                                                    },
                                                                    diverge: None,
                                                                },
                                                            ),
                                                            semi_token: Semi,
                                                        },
                                                        Stmt::Expr(
                                                            Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: sim,
                                                                                    span: bytes(5902..5905),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                op: BinOp::Add(
                                                                    Plus,
                                                                ),
                                                                right: Expr::Binary {
                                                                    attrs: [],
                                                                    left: Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Float {
                                                                                token: 0.1,
                                                                            },
                                                                        },
                                                                        op: BinOp::Mul(
                                                                            Star,
                                                                        ),
                                                                        right: Expr::Cast {
                                                                            attrs: [],
                                                                            expr: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: prefix_length,
                                                                                                span: bytes(5914..5927),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            as_token: As,
                                                                            ty: Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: f64,
                                                                                                span: bytes(5931..5934),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        },
                                                                    },
                                                                    op: BinOp::Mul(
                                                                        Star,
                                                                    ),
                                                                    right: Expr::Paren {
                                                                        attrs: [],
                                                                        paren_token: Paren,
                                                                        expr: Expr::Binary {
                                                                            attrs: [],
                                                                            left: Expr::Lit {
                                                                                attrs: [],
                                                                                lit: Lit::Float {
                                                                                    token: 1.0,
                                                                                },
                                                                            },
                                                                            op: BinOp::Sub(
                                                                                Minus,
                                                                            ),
                                                                            right: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: sim,
                                                                                                span: bytes(5944..5947),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                                else_branch: Some(
                                                    (
                                                        Else,
                                                        Expr::Block {
                                                            attrs: [],
                                                            label: None,
                                                            block: Block {
                                                                brace_token: Brace,
                                                                stmts: [
                                                                    Stmt::Expr(
                                                                        Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: sim,
                                                                                            span: bytes(5970..5973),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        None,
                                                                    ),
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                ),
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                    },
                    FnItem {
                        fn_name: Name {
                            name: "jaro_winkler",
                            complete_name: "strsim::jaro_winkler",
                            import_name: MyPath {
                                name: "strsim",
                                next: Some(
                                    MyPath {
                                        name: "jaro_winkler",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "jaro_winkler",
                        item: Some(
                            ItemFn {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: jaro_winkler,
                                        span: bytes(6209..6221),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: a,
                                                        span: bytes(6222..6223),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: None,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: str,
                                                                        span: bytes(6226..6229),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: b,
                                                        span: bytes(6231..6232),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: None,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: str,
                                                                        span: bytes(6235..6238),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: f64,
                                                            span: bytes(6243..6246),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Expr(
                                            Expr::Call {
                                                attrs: [],
                                                func: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: generic_jaro_winkler,
                                                                    span: bytes(6253..6273),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                paren_token: Paren,
                                                args: [
                                                    Expr::Reference {
                                                        attrs: [],
                                                        and_token: And,
                                                        mutability: None,
                                                        expr: Expr::Call {
                                                            attrs: [],
                                                            func: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: StringWrapper,
                                                                                span: bytes(6275..6288),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: a,
                                                                                    span: bytes(6289..6290),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    Comma,
                                                    Expr::Reference {
                                                        attrs: [],
                                                        and_token: And,
                                                        mutability: None,
                                                        expr: Expr::Call {
                                                            attrs: [],
                                                            func: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: StringWrapper,
                                                                                span: bytes(6294..6307),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: b,
                                                                                    span: bytes(6308..6309),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                    },
                    FnItem {
                        fn_name: Name {
                            name: "generic_levenshtein",
                            complete_name: "strsim::generic_levenshtein",
                            import_name: MyPath {
                                name: "strsim",
                                next: Some(
                                    MyPath {
                                        name: "generic_levenshtein",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "generic_levenshtein",
                        item: Some(
                            ItemFn {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: generic_levenshtein,
                                        span: bytes(6579..6598),
                                    },
                                    generics: Generics {
                                        lt_token: Some(
                                            Lt,
                                        ),
                                        params: [
                                            GenericParam::Lifetime(
                                                LifetimeParam {
                                                    attrs: [],
                                                    lifetime: Lifetime {
                                                        apostrophe: bytes(6599..6600),
                                                        ident: Ident {
                                                            sym: a,
                                                            span: bytes(6600..6601),
                                                        },
                                                    },
                                                    colon_token: None,
                                                    bounds: [],
                                                },
                                            ),
                                            Comma,
                                            GenericParam::Lifetime(
                                                LifetimeParam {
                                                    attrs: [],
                                                    lifetime: Lifetime {
                                                        apostrophe: bytes(6603..6604),
                                                        ident: Ident {
                                                            sym: b,
                                                            span: bytes(6604..6605),
                                                        },
                                                    },
                                                    colon_token: None,
                                                    bounds: [],
                                                },
                                            ),
                                            Comma,
                                            GenericParam::Type(
                                                TypeParam {
                                                    attrs: [],
                                                    ident: Ident {
                                                        sym: Iter1,
                                                        span: bytes(6607..6612),
                                                    },
                                                    colon_token: None,
                                                    bounds: [],
                                                    eq_token: None,
                                                    default: None,
                                                },
                                            ),
                                            Comma,
                                            GenericParam::Type(
                                                TypeParam {
                                                    attrs: [],
                                                    ident: Ident {
                                                        sym: Iter2,
                                                        span: bytes(6614..6619),
                                                    },
                                                    colon_token: None,
                                                    bounds: [],
                                                    eq_token: None,
                                                    default: None,
                                                },
                                            ),
                                            Comma,
                                            GenericParam::Type(
                                                TypeParam {
                                                    attrs: [],
                                                    ident: Ident {
                                                        sym: Elem1,
                                                        span: bytes(6621..6626),
                                                    },
                                                    colon_token: None,
                                                    bounds: [],
                                                    eq_token: None,
                                                    default: None,
                                                },
                                            ),
                                            Comma,
                                            GenericParam::Type(
                                                TypeParam {
                                                    attrs: [],
                                                    ident: Ident {
                                                        sym: Elem2,
                                                        span: bytes(6628..6633),
                                                    },
                                                    colon_token: None,
                                                    bounds: [],
                                                    eq_token: None,
                                                    default: None,
                                                },
                                            ),
                                        ],
                                        gt_token: Some(
                                            Gt,
                                        ),
                                        where_clause: Some(
                                            WhereClause {
                                                where_token: Where,
                                                predicates: [
                                                    WherePredicate::Type(
                                                        PredicateType {
                                                            lifetimes: None,
                                                            bounded_ty: Type::Reference {
                                                                and_token: And,
                                                                lifetime: Some(
                                                                    Lifetime {
                                                                        apostrophe: bytes(6683..6684),
                                                                        ident: Ident {
                                                                            sym: a,
                                                                            span: bytes(6684..6685),
                                                                        },
                                                                    },
                                                                ),
                                                                mutability: None,
                                                                elem: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Iter1,
                                                                                    span: bytes(6686..6691),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                            colon_token: Colon,
                                                            bounds: [
                                                                TypeParamBound::Trait(
                                                                    TraitBound {
                                                                        paren_token: None,
                                                                        modifier: TraitBoundModifier::None,
                                                                        lifetimes: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: IntoIterator,
                                                                                        span: bytes(6693..6705),
                                                                                    },
                                                                                    arguments: PathArguments::AngleBracketed {
                                                                                        colon2_token: None,
                                                                                        lt_token: Lt,
                                                                                        args: [
                                                                                            GenericArgument::AssocType(
                                                                                                AssocType {
                                                                                                    ident: Ident {
                                                                                                        sym: Item,
                                                                                                        span: bytes(6706..6710),
                                                                                                    },
                                                                                                    generics: None,
                                                                                                    eq_token: Eq,
                                                                                                    ty: Type::Path {
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: Elem1,
                                                                                                                        span: bytes(6713..6718),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                            ),
                                                                                        ],
                                                                                        gt_token: Gt,
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                    Comma,
                                                    WherePredicate::Type(
                                                        PredicateType {
                                                            lifetimes: None,
                                                            bounded_ty: Type::Reference {
                                                                and_token: And,
                                                                lifetime: Some(
                                                                    Lifetime {
                                                                        apostrophe: bytes(6726..6727),
                                                                        ident: Ident {
                                                                            sym: b,
                                                                            span: bytes(6727..6728),
                                                                        },
                                                                    },
                                                                ),
                                                                mutability: None,
                                                                elem: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Iter2,
                                                                                    span: bytes(6729..6734),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                            colon_token: Colon,
                                                            bounds: [
                                                                TypeParamBound::Trait(
                                                                    TraitBound {
                                                                        paren_token: None,
                                                                        modifier: TraitBoundModifier::None,
                                                                        lifetimes: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: IntoIterator,
                                                                                        span: bytes(6736..6748),
                                                                                    },
                                                                                    arguments: PathArguments::AngleBracketed {
                                                                                        colon2_token: None,
                                                                                        lt_token: Lt,
                                                                                        args: [
                                                                                            GenericArgument::AssocType(
                                                                                                AssocType {
                                                                                                    ident: Ident {
                                                                                                        sym: Item,
                                                                                                        span: bytes(6749..6753),
                                                                                                    },
                                                                                                    generics: None,
                                                                                                    eq_token: Eq,
                                                                                                    ty: Type::Path {
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: Elem2,
                                                                                                                        span: bytes(6756..6761),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                            ),
                                                                                        ],
                                                                                        gt_token: Gt,
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                    Comma,
                                                    WherePredicate::Type(
                                                        PredicateType {
                                                            lifetimes: None,
                                                            bounded_ty: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Elem1,
                                                                                span: bytes(6768..6773),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            colon_token: Colon,
                                                            bounds: [
                                                                TypeParamBound::Trait(
                                                                    TraitBound {
                                                                        paren_token: None,
                                                                        modifier: TraitBoundModifier::None,
                                                                        lifetimes: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: PartialEq,
                                                                                        span: bytes(6775..6784),
                                                                                    },
                                                                                    arguments: PathArguments::AngleBracketed {
                                                                                        colon2_token: None,
                                                                                        lt_token: Lt,
                                                                                        args: [
                                                                                            GenericArgument::Type(
                                                                                                Type::Path {
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: Elem2,
                                                                                                                    span: bytes(6785..6790),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                            ),
                                                                                        ],
                                                                                        gt_token: Gt,
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                    Comma,
                                                ],
                                            },
                                        ),
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: a,
                                                        span: bytes(6635..6636),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: Some(
                                                        Lifetime {
                                                            apostrophe: bytes(6639..6640),
                                                            ident: Ident {
                                                                sym: a,
                                                                span: bytes(6640..6641),
                                                            },
                                                        },
                                                    ),
                                                    mutability: None,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Iter1,
                                                                        span: bytes(6642..6647),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: b,
                                                        span: bytes(6649..6650),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: Some(
                                                        Lifetime {
                                                            apostrophe: bytes(6653..6654),
                                                            ident: Ident {
                                                                sym: b,
                                                                span: bytes(6654..6655),
                                                            },
                                                        },
                                                    ),
                                                    mutability: None,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Iter2,
                                                                        span: bytes(6656..6661),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: usize,
                                                            span: bytes(6666..6671),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: None,
                                                ident: Ident {
                                                    sym: b_len,
                                                    span: bytes(6803..6808),
                                                },
                                                subpat: None,
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: b,
                                                                                span: bytes(6811..6812),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: into_iter,
                                                                span: bytes(6813..6822),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [],
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: count,
                                                            span: bytes(6825..6830),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [],
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Type {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    ident: Ident {
                                                        sym: cache,
                                                        span: bytes(6847..6852),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Vec,
                                                                    span: bytes(6854..6857),
                                                                },
                                                                arguments: PathArguments::AngleBracketed {
                                                                    colon2_token: None,
                                                                    lt_token: Lt,
                                                                    args: [
                                                                        GenericArgument::Type(
                                                                            Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: usize,
                                                                                                span: bytes(6858..6863),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                    gt_token: Gt,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::Paren {
                                                            attrs: [],
                                                            paren_token: Paren,
                                                            expr: Expr::Range {
                                                                attrs: [],
                                                                start: Some(
                                                                    Expr::Lit {
                                                                        attrs: [],
                                                                        lit: Lit::Int {
                                                                            token: 1,
                                                                        },
                                                                    },
                                                                ),
                                                                limits: RangeLimits::HalfOpen(
                                                                    DotDot,
                                                                ),
                                                                end: Some(
                                                                    Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: b_len,
                                                                                            span: bytes(6871..6876),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        op: BinOp::Add(
                                                                            Plus,
                                                                        ),
                                                                        right: Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Int {
                                                                                token: 1,
                                                                            },
                                                                        },
                                                                    },
                                                                ),
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: collect,
                                                            span: bytes(6882..6889),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [],
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                ident: Ident {
                                                    sym: result,
                                                    span: bytes(6906..6912),
                                                },
                                                subpat: None,
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: b_len,
                                                                        span: bytes(6915..6920),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Expr(
                                            Expr::ForLoop {
                                                attrs: [],
                                                label: None,
                                                for_token: For,
                                                pat: Pat::Tuple {
                                                    attrs: [],
                                                    paren_token: Paren,
                                                    elems: [
                                                        Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: i,
                                                                span: bytes(6932..6933),
                                                            },
                                                            subpat: None,
                                                        },
                                                        Comma,
                                                        Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: a_elem,
                                                                span: bytes(6935..6941),
                                                            },
                                                            subpat: None,
                                                        },
                                                    ],
                                                },
                                                in_token: In,
                                                expr: Expr::MethodCall {
                                                    attrs: [],
                                                    receiver: Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: a,
                                                                            span: bytes(6946..6947),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: into_iter,
                                                            span: bytes(6948..6957),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [],
                                                    },
                                                    dot_token: Dot,
                                                    method: Ident {
                                                        sym: enumerate,
                                                        span: bytes(6960..6969),
                                                    },
                                                    turbofish: None,
                                                    paren_token: Paren,
                                                    args: [],
                                                },
                                                body: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::Assign {
                                                                attrs: [],
                                                                left: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: result,
                                                                                    span: bytes(6982..6988),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                eq_token: Eq,
                                                                right: Expr::Binary {
                                                                    attrs: [],
                                                                    left: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: i,
                                                                                        span: bytes(6991..6992),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    op: BinOp::Add(
                                                                        Plus,
                                                                    ),
                                                                    right: Expr::Lit {
                                                                        attrs: [],
                                                                        lit: Lit::Int {
                                                                            token: 1,
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                        Stmt::Local {
                                                            attrs: [],
                                                            let_token: Let,
                                                            pat: Pat::Ident {
                                                                attrs: [],
                                                                by_ref: None,
                                                                mutability: Some(
                                                                    Mut,
                                                                ),
                                                                ident: Ident {
                                                                    sym: distance_b,
                                                                    span: bytes(7014..7024),
                                                                },
                                                                subpat: None,
                                                            },
                                                            init: Some(
                                                                LocalInit {
                                                                    eq_token: Eq,
                                                                    expr: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: i,
                                                                                        span: bytes(7027..7028),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    diverge: None,
                                                                },
                                                            ),
                                                            semi_token: Semi,
                                                        },
                                                        Stmt::Expr(
                                                            Expr::ForLoop {
                                                                attrs: [],
                                                                label: None,
                                                                for_token: For,
                                                                pat: Pat::Tuple {
                                                                    attrs: [],
                                                                    paren_token: Paren,
                                                                    elems: [
                                                                        Pat::Ident {
                                                                            attrs: [],
                                                                            by_ref: None,
                                                                            mutability: None,
                                                                            ident: Ident {
                                                                                sym: j,
                                                                                span: bytes(7044..7045),
                                                                            },
                                                                            subpat: None,
                                                                        },
                                                                        Comma,
                                                                        Pat::Ident {
                                                                            attrs: [],
                                                                            by_ref: None,
                                                                            mutability: None,
                                                                            ident: Ident {
                                                                                sym: b_elem,
                                                                                span: bytes(7047..7053),
                                                                            },
                                                                            subpat: None,
                                                                        },
                                                                    ],
                                                                },
                                                                in_token: In,
                                                                expr: Expr::MethodCall {
                                                                    attrs: [],
                                                                    receiver: Expr::MethodCall {
                                                                        attrs: [],
                                                                        receiver: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: b,
                                                                                            span: bytes(7058..7059),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        dot_token: Dot,
                                                                        method: Ident {
                                                                            sym: into_iter,
                                                                            span: bytes(7060..7069),
                                                                        },
                                                                        turbofish: None,
                                                                        paren_token: Paren,
                                                                        args: [],
                                                                    },
                                                                    dot_token: Dot,
                                                                    method: Ident {
                                                                        sym: enumerate,
                                                                        span: bytes(7072..7081),
                                                                    },
                                                                    turbofish: None,
                                                                    paren_token: Paren,
                                                                    args: [],
                                                                },
                                                                body: Block {
                                                                    brace_token: Brace,
                                                                    stmts: [
                                                                        Stmt::Local {
                                                                            attrs: [],
                                                                            let_token: Let,
                                                                            pat: Pat::Ident {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident {
                                                                                    sym: cost,
                                                                                    span: bytes(7102..7106),
                                                                                },
                                                                                subpat: None,
                                                                            },
                                                                            init: Some(
                                                                                LocalInit {
                                                                                    eq_token: Eq,
                                                                                    expr: Expr::Call {
                                                                                        attrs: [],
                                                                                        func: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: usize,
                                                                                                            span: bytes(7109..7114),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                    PathSep,
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: from,
                                                                                                            span: bytes(7116..7120),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        paren_token: Paren,
                                                                                        args: [
                                                                                            Expr::Binary {
                                                                                                attrs: [],
                                                                                                left: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: a_elem,
                                                                                                                    span: bytes(7121..7127),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                op: BinOp::Ne(
                                                                                                    Ne,
                                                                                                ),
                                                                                                right: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: b_elem,
                                                                                                                    span: bytes(7131..7137),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                    diverge: None,
                                                                                },
                                                                            ),
                                                                            semi_token: Semi,
                                                                        },
                                                                        Stmt::Local {
                                                                            attrs: [],
                                                                            let_token: Let,
                                                                            pat: Pat::Ident {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident {
                                                                                    sym: distance_a,
                                                                                    span: bytes(7156..7166),
                                                                                },
                                                                                subpat: None,
                                                                            },
                                                                            init: Some(
                                                                                LocalInit {
                                                                                    eq_token: Eq,
                                                                                    expr: Expr::Binary {
                                                                                        attrs: [],
                                                                                        left: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: distance_b,
                                                                                                            span: bytes(7169..7179),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        op: BinOp::Add(
                                                                                            Plus,
                                                                                        ),
                                                                                        right: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: cost,
                                                                                                            span: bytes(7182..7186),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                    diverge: None,
                                                                                },
                                                                            ),
                                                                            semi_token: Semi,
                                                                        },
                                                                        Stmt::Expr(
                                                                            Expr::Assign {
                                                                                attrs: [],
                                                                                left: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: distance_b,
                                                                                                    span: bytes(7200..7210),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                eq_token: Eq,
                                                                                right: Expr::Index {
                                                                                    attrs: [],
                                                                                    expr: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: cache,
                                                                                                        span: bytes(7213..7218),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    bracket_token: Bracket,
                                                                                    index: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: j,
                                                                                                        span: bytes(7219..7220),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                },
                                                                            },
                                                                            Some(
                                                                                Semi,
                                                                            ),
                                                                        ),
                                                                        Stmt::Expr(
                                                                            Expr::Assign {
                                                                                attrs: [],
                                                                                left: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: result,
                                                                                                    span: bytes(7235..7241),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                eq_token: Eq,
                                                                                right: Expr::Call {
                                                                                    attrs: [],
                                                                                    func: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: min,
                                                                                                        span: bytes(7244..7247),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    paren_token: Paren,
                                                                                    args: [
                                                                                        Expr::Binary {
                                                                                            attrs: [],
                                                                                            left: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: result,
                                                                                                                span: bytes(7248..7254),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            op: BinOp::Add(
                                                                                                Plus,
                                                                                            ),
                                                                                            right: Expr::Lit {
                                                                                                attrs: [],
                                                                                                lit: Lit::Int {
                                                                                                    token: 1,
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                        Comma,
                                                                                        Expr::Call {
                                                                                            attrs: [],
                                                                                            func: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: min,
                                                                                                                span: bytes(7260..7263),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            paren_token: Paren,
                                                                                            args: [
                                                                                                Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: distance_a,
                                                                                                                    span: bytes(7264..7274),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                Comma,
                                                                                                Expr::Binary {
                                                                                                    attrs: [],
                                                                                                    left: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: distance_b,
                                                                                                                        span: bytes(7276..7286),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    op: BinOp::Add(
                                                                                                        Plus,
                                                                                                    ),
                                                                                                    right: Expr::Lit {
                                                                                                        attrs: [],
                                                                                                        lit: Lit::Int {
                                                                                                            token: 1,
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            Some(
                                                                                Semi,
                                                                            ),
                                                                        ),
                                                                        Stmt::Expr(
                                                                            Expr::Assign {
                                                                                attrs: [],
                                                                                left: Expr::Index {
                                                                                    attrs: [],
                                                                                    expr: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: cache,
                                                                                                        span: bytes(7306..7311),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    bracket_token: Bracket,
                                                                                    index: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: j,
                                                                                                        span: bytes(7312..7313),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                },
                                                                                eq_token: Eq,
                                                                                right: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: result,
                                                                                                    span: bytes(7317..7323),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            },
                                                                            Some(
                                                                                Semi,
                                                                            ),
                                                                        ),
                                                                    ],
                                                                },
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                            None,
                                        ),
                                        Stmt::Expr(
                                            Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: result,
                                                                span: bytes(7346..7352),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                    },
                    FnItem {
                        fn_name: Name {
                            name: "levenshtein",
                            complete_name: "strsim::levenshtein",
                            import_name: MyPath {
                                name: "strsim",
                                next: Some(
                                    MyPath {
                                        name: "levenshtein",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "levenshtein",
                        item: Some(
                            ItemFn {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: levenshtein,
                                        span: bytes(7597..7608),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: a,
                                                        span: bytes(7609..7610),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: None,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: str,
                                                                        span: bytes(7613..7616),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: b,
                                                        span: bytes(7618..7619),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: None,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: str,
                                                                        span: bytes(7622..7625),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: usize,
                                                            span: bytes(7630..7635),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Expr(
                                            Expr::Call {
                                                attrs: [],
                                                func: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: generic_levenshtein,
                                                                    span: bytes(7642..7661),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                paren_token: Paren,
                                                args: [
                                                    Expr::Reference {
                                                        attrs: [],
                                                        and_token: And,
                                                        mutability: None,
                                                        expr: Expr::Call {
                                                            attrs: [],
                                                            func: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: StringWrapper,
                                                                                span: bytes(7663..7676),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: a,
                                                                                    span: bytes(7677..7678),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    Comma,
                                                    Expr::Reference {
                                                        attrs: [],
                                                        and_token: And,
                                                        mutability: None,
                                                        expr: Expr::Call {
                                                            attrs: [],
                                                            func: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: StringWrapper,
                                                                                span: bytes(7682..7695),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: b,
                                                                                    span: bytes(7696..7697),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                    },
                    FnItem {
                        fn_name: Name {
                            name: "normalized_levenshtein",
                            complete_name: "strsim::normalized_levenshtein",
                            import_name: MyPath {
                                name: "strsim",
                                next: Some(
                                    MyPath {
                                        name: "normalized_levenshtein",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "normalized_levenshtein",
                        item: Some(
                            ItemFn {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: normalized_levenshtein,
                                        span: bytes(8285..8307),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: a,
                                                        span: bytes(8308..8309),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: None,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: str,
                                                                        span: bytes(8312..8315),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: b,
                                                        span: bytes(8317..8318),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: None,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: str,
                                                                        span: bytes(8321..8324),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: f64,
                                                            span: bytes(8329..8332),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Expr(
                                            Expr::If {
                                                attrs: [],
                                                if_token: If,
                                                cond: Expr::Binary {
                                                    attrs: [],
                                                    left: Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: a,
                                                                            span: bytes(8342..8343),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: is_empty,
                                                            span: bytes(8344..8352),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [],
                                                    },
                                                    op: BinOp::And(
                                                        AndAnd,
                                                    ),
                                                    right: Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: b,
                                                                            span: bytes(8358..8359),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: is_empty,
                                                            span: bytes(8360..8368),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [],
                                                    },
                                                },
                                                then_branch: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::Return {
                                                                attrs: [],
                                                                return_token: Return,
                                                                expr: Some(
                                                                    Expr::Lit {
                                                                        attrs: [],
                                                                        lit: Lit::Float {
                                                                            token: 1.0,
                                                                        },
                                                                    },
                                                                ),
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                    ],
                                                },
                                                else_branch: None,
                                            },
                                            None,
                                        ),
                                        Stmt::Expr(
                                            Expr::Binary {
                                                attrs: [],
                                                left: Expr::Lit {
                                                    attrs: [],
                                                    lit: Lit::Float {
                                                        token: 1.0,
                                                    },
                                                },
                                                op: BinOp::Sub(
                                                    Minus,
                                                ),
                                                right: Expr::Binary {
                                                    attrs: [],
                                                    left: Expr::Paren {
                                                        attrs: [],
                                                        paren_token: Paren,
                                                        expr: Expr::Cast {
                                                            attrs: [],
                                                            expr: Expr::Call {
                                                                attrs: [],
                                                                func: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: levenshtein,
                                                                                    span: bytes(8410..8421),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: a,
                                                                                        span: bytes(8422..8423),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    Comma,
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: b,
                                                                                        span: bytes(8425..8426),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            as_token: As,
                                                            ty: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: f64,
                                                                                span: bytes(8431..8434),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                    op: BinOp::Div(
                                                        Slash,
                                                    ),
                                                    right: Expr::Paren {
                                                        attrs: [],
                                                        paren_token: Paren,
                                                        expr: Expr::Cast {
                                                            attrs: [],
                                                            expr: Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::MethodCall {
                                                                    attrs: [],
                                                                    receiver: Expr::MethodCall {
                                                                        attrs: [],
                                                                        receiver: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: a,
                                                                                            span: bytes(8439..8440),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        dot_token: Dot,
                                                                        method: Ident {
                                                                            sym: chars,
                                                                            span: bytes(8441..8446),
                                                                        },
                                                                        turbofish: None,
                                                                        paren_token: Paren,
                                                                        args: [],
                                                                    },
                                                                    dot_token: Dot,
                                                                    method: Ident {
                                                                        sym: count,
                                                                        span: bytes(8449..8454),
                                                                    },
                                                                    turbofish: None,
                                                                    paren_token: Paren,
                                                                    args: [],
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: max,
                                                                    span: bytes(8457..8460),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::MethodCall {
                                                                        attrs: [],
                                                                        receiver: Expr::MethodCall {
                                                                            attrs: [],
                                                                            receiver: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: b,
                                                                                                span: bytes(8461..8462),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            dot_token: Dot,
                                                                            method: Ident {
                                                                                sym: chars,
                                                                                span: bytes(8463..8468),
                                                                            },
                                                                            turbofish: None,
                                                                            paren_token: Paren,
                                                                            args: [],
                                                                        },
                                                                        dot_token: Dot,
                                                                        method: Ident {
                                                                            sym: count,
                                                                            span: bytes(8471..8476),
                                                                        },
                                                                        turbofish: None,
                                                                        paren_token: Paren,
                                                                        args: [],
                                                                    },
                                                                ],
                                                            },
                                                            as_token: As,
                                                            ty: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: f64,
                                                                                span: bytes(8483..8486),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                    },
                    FnItem {
                        fn_name: Name {
                            name: "osa_distance",
                            complete_name: "strsim::osa_distance",
                            import_name: MyPath {
                                name: "strsim",
                                next: Some(
                                    MyPath {
                                        name: "osa_distance",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "osa_distance",
                        item: Some(
                            ItemFn {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: osa_distance,
                                        span: bytes(8703..8715),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: a,
                                                        span: bytes(8716..8717),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: None,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: str,
                                                                        span: bytes(8720..8723),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: b,
                                                        span: bytes(8725..8726),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: None,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: str,
                                                                        span: bytes(8729..8732),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: usize,
                                                            span: bytes(8737..8742),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: None,
                                                ident: Ident {
                                                    sym: b_len,
                                                    span: bytes(8753..8758),
                                                },
                                                subpat: None,
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: b,
                                                                                span: bytes(8761..8762),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: chars,
                                                                span: bytes(8763..8768),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [],
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: count,
                                                            span: bytes(8771..8776),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [],
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Type {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    ident: Ident {
                                                        sym: prev_two_distances,
                                                        span: bytes(8963..8981),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Vec,
                                                                    span: bytes(8983..8986),
                                                                },
                                                                arguments: PathArguments::AngleBracketed {
                                                                    colon2_token: None,
                                                                    lt_token: Lt,
                                                                    args: [
                                                                        GenericArgument::Type(
                                                                            Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: usize,
                                                                                                span: bytes(8987..8992),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                    gt_token: Gt,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::Paren {
                                                            attrs: [],
                                                            paren_token: Paren,
                                                            expr: Expr::Range {
                                                                attrs: [],
                                                                start: Some(
                                                                    Expr::Lit {
                                                                        attrs: [],
                                                                        lit: Lit::Int {
                                                                            token: 0,
                                                                        },
                                                                    },
                                                                ),
                                                                limits: RangeLimits::HalfOpen(
                                                                    DotDot,
                                                                ),
                                                                end: Some(
                                                                    Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: b_len,
                                                                                            span: bytes(9000..9005),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        op: BinOp::Add(
                                                                            Plus,
                                                                        ),
                                                                        right: Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Int {
                                                                                token: 1,
                                                                            },
                                                                        },
                                                                    },
                                                                ),
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: collect,
                                                            span: bytes(9011..9018),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [],
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Type {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    ident: Ident {
                                                        sym: prev_distances,
                                                        span: bytes(9034..9048),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Vec,
                                                                    span: bytes(9050..9053),
                                                                },
                                                                arguments: PathArguments::AngleBracketed {
                                                                    colon2_token: None,
                                                                    lt_token: Lt,
                                                                    args: [
                                                                        GenericArgument::Type(
                                                                            Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: usize,
                                                                                                span: bytes(9054..9059),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                    gt_token: Gt,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::Paren {
                                                            attrs: [],
                                                            paren_token: Paren,
                                                            expr: Expr::Range {
                                                                attrs: [],
                                                                start: Some(
                                                                    Expr::Lit {
                                                                        attrs: [],
                                                                        lit: Lit::Int {
                                                                            token: 0,
                                                                        },
                                                                    },
                                                                ),
                                                                limits: RangeLimits::HalfOpen(
                                                                    DotDot,
                                                                ),
                                                                end: Some(
                                                                    Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: b_len,
                                                                                            span: bytes(9067..9072),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        op: BinOp::Add(
                                                                            Plus,
                                                                        ),
                                                                        right: Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Int {
                                                                                token: 1,
                                                                            },
                                                                        },
                                                                    },
                                                                ),
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: collect,
                                                            span: bytes(9078..9085),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [],
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Type {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    ident: Ident {
                                                        sym: curr_distances,
                                                        span: bytes(9101..9115),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Vec,
                                                                    span: bytes(9117..9120),
                                                                },
                                                                arguments: PathArguments::AngleBracketed {
                                                                    colon2_token: None,
                                                                    lt_token: Lt,
                                                                    args: [
                                                                        GenericArgument::Type(
                                                                            Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: usize,
                                                                                                span: bytes(9121..9126),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                    gt_token: Gt,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Macro {
                                                        attrs: [],
                                                        mac: Macro {
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: vec,
                                                                            span: bytes(9130..9133),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                            bang_token: Not,
                                                            delimiter: MacroDelimiter::Bracket(
                                                                Bracket,
                                                            ),
                                                            tokens: TokenStream [
                                                                Literal {
                                                                    lit: 0,
                                                                    span: bytes(9135..9136),
                                                                },
                                                                Punct {
                                                                    char: ';',
                                                                    spacing: Alone,
                                                                    span: bytes(9136..9137),
                                                                },
                                                                Ident {
                                                                    sym: b_len,
                                                                    span: bytes(9138..9143),
                                                                },
                                                                Punct {
                                                                    char: '+',
                                                                    spacing: Alone,
                                                                    span: bytes(9144..9145),
                                                                },
                                                                Literal {
                                                                    lit: 1,
                                                                    span: bytes(9146..9147),
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                ident: Ident {
                                                    sym: prev_a_char,
                                                    span: bytes(9163..9174),
                                                },
                                                subpat: None,
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: char,
                                                                        span: bytes(9177..9181),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                                PathSep,
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: MAX,
                                                                        span: bytes(9183..9186),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                ident: Ident {
                                                    sym: prev_b_char,
                                                    span: bytes(9200..9211),
                                                },
                                                subpat: None,
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: char,
                                                                        span: bytes(9214..9218),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                                PathSep,
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: MAX,
                                                                        span: bytes(9220..9223),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Expr(
                                            Expr::ForLoop {
                                                attrs: [],
                                                label: None,
                                                for_token: For,
                                                pat: Pat::Tuple {
                                                    attrs: [],
                                                    paren_token: Paren,
                                                    elems: [
                                                        Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: i,
                                                                span: bytes(9235..9236),
                                                            },
                                                            subpat: None,
                                                        },
                                                        Comma,
                                                        Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: a_char,
                                                                span: bytes(9238..9244),
                                                            },
                                                            subpat: None,
                                                        },
                                                    ],
                                                },
                                                in_token: In,
                                                expr: Expr::MethodCall {
                                                    attrs: [],
                                                    receiver: Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: a,
                                                                            span: bytes(9249..9250),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: chars,
                                                            span: bytes(9251..9256),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [],
                                                    },
                                                    dot_token: Dot,
                                                    method: Ident {
                                                        sym: enumerate,
                                                        span: bytes(9259..9268),
                                                    },
                                                    turbofish: None,
                                                    paren_token: Paren,
                                                    args: [],
                                                },
                                                body: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::Assign {
                                                                attrs: [],
                                                                left: Expr::Index {
                                                                    attrs: [],
                                                                    expr: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: curr_distances,
                                                                                        span: bytes(9281..9295),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    bracket_token: Bracket,
                                                                    index: Expr::Lit {
                                                                        attrs: [],
                                                                        lit: Lit::Int {
                                                                            token: 0,
                                                                        },
                                                                    },
                                                                },
                                                                eq_token: Eq,
                                                                right: Expr::Binary {
                                                                    attrs: [],
                                                                    left: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: i,
                                                                                        span: bytes(9301..9302),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    op: BinOp::Add(
                                                                        Plus,
                                                                    ),
                                                                    right: Expr::Lit {
                                                                        attrs: [],
                                                                        lit: Lit::Int {
                                                                            token: 1,
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                        Stmt::Expr(
                                                            Expr::ForLoop {
                                                                attrs: [],
                                                                label: None,
                                                                for_token: For,
                                                                pat: Pat::Tuple {
                                                                    attrs: [],
                                                                    paren_token: Paren,
                                                                    elems: [
                                                                        Pat::Ident {
                                                                            attrs: [],
                                                                            by_ref: None,
                                                                            mutability: None,
                                                                            ident: Ident {
                                                                                sym: j,
                                                                                span: bytes(9322..9323),
                                                                            },
                                                                            subpat: None,
                                                                        },
                                                                        Comma,
                                                                        Pat::Ident {
                                                                            attrs: [],
                                                                            by_ref: None,
                                                                            mutability: None,
                                                                            ident: Ident {
                                                                                sym: b_char,
                                                                                span: bytes(9325..9331),
                                                                            },
                                                                            subpat: None,
                                                                        },
                                                                    ],
                                                                },
                                                                in_token: In,
                                                                expr: Expr::MethodCall {
                                                                    attrs: [],
                                                                    receiver: Expr::MethodCall {
                                                                        attrs: [],
                                                                        receiver: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: b,
                                                                                            span: bytes(9336..9337),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        dot_token: Dot,
                                                                        method: Ident {
                                                                            sym: chars,
                                                                            span: bytes(9338..9343),
                                                                        },
                                                                        turbofish: None,
                                                                        paren_token: Paren,
                                                                        args: [],
                                                                    },
                                                                    dot_token: Dot,
                                                                    method: Ident {
                                                                        sym: enumerate,
                                                                        span: bytes(9346..9355),
                                                                    },
                                                                    turbofish: None,
                                                                    paren_token: Paren,
                                                                    args: [],
                                                                },
                                                                body: Block {
                                                                    brace_token: Brace,
                                                                    stmts: [
                                                                        Stmt::Local {
                                                                            attrs: [],
                                                                            let_token: Let,
                                                                            pat: Pat::Ident {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident {
                                                                                    sym: cost,
                                                                                    span: bytes(9376..9380),
                                                                                },
                                                                                subpat: None,
                                                                            },
                                                                            init: Some(
                                                                                LocalInit {
                                                                                    eq_token: Eq,
                                                                                    expr: Expr::Call {
                                                                                        attrs: [],
                                                                                        func: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: usize,
                                                                                                            span: bytes(9383..9388),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                    PathSep,
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: from,
                                                                                                            span: bytes(9390..9394),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        paren_token: Paren,
                                                                                        args: [
                                                                                            Expr::Binary {
                                                                                                attrs: [],
                                                                                                left: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: a_char,
                                                                                                                    span: bytes(9395..9401),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                op: BinOp::Ne(
                                                                                                    Ne,
                                                                                                ),
                                                                                                right: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: b_char,
                                                                                                                    span: bytes(9405..9411),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                    diverge: None,
                                                                                },
                                                                            ),
                                                                            semi_token: Semi,
                                                                        },
                                                                        Stmt::Expr(
                                                                            Expr::Assign {
                                                                                attrs: [],
                                                                                left: Expr::Index {
                                                                                    attrs: [],
                                                                                    expr: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: curr_distances,
                                                                                                        span: bytes(9426..9440),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    bracket_token: Bracket,
                                                                                    index: Expr::Binary {
                                                                                        attrs: [],
                                                                                        left: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: j,
                                                                                                            span: bytes(9441..9442),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        op: BinOp::Add(
                                                                                            Plus,
                                                                                        ),
                                                                                        right: Expr::Lit {
                                                                                            attrs: [],
                                                                                            lit: Lit::Int {
                                                                                                token: 1,
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                },
                                                                                eq_token: Eq,
                                                                                right: Expr::Call {
                                                                                    attrs: [],
                                                                                    func: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: min,
                                                                                                        span: bytes(9450..9453),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    paren_token: Paren,
                                                                                    args: [
                                                                                        Expr::Binary {
                                                                                            attrs: [],
                                                                                            left: Expr::Index {
                                                                                                attrs: [],
                                                                                                expr: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: curr_distances,
                                                                                                                    span: bytes(9471..9485),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                bracket_token: Bracket,
                                                                                                index: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: j,
                                                                                                                    span: bytes(9486..9487),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                            op: BinOp::Add(
                                                                                                Plus,
                                                                                            ),
                                                                                            right: Expr::Lit {
                                                                                                attrs: [],
                                                                                                lit: Lit::Int {
                                                                                                    token: 1,
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                        Comma,
                                                                                        Expr::Call {
                                                                                            attrs: [],
                                                                                            func: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: min,
                                                                                                                span: bytes(9510..9513),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            paren_token: Paren,
                                                                                            args: [
                                                                                                Expr::Binary {
                                                                                                    attrs: [],
                                                                                                    left: Expr::Index {
                                                                                                        attrs: [],
                                                                                                        expr: Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: prev_distances,
                                                                                                                            span: bytes(9514..9528),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                        bracket_token: Bracket,
                                                                                                        index: Expr::Binary {
                                                                                                            attrs: [],
                                                                                                            left: Expr::Path {
                                                                                                                attrs: [],
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: j,
                                                                                                                                span: bytes(9529..9530),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                            op: BinOp::Add(
                                                                                                                Plus,
                                                                                                            ),
                                                                                                            right: Expr::Lit {
                                                                                                                attrs: [],
                                                                                                                lit: Lit::Int {
                                                                                                                    token: 1,
                                                                                                                },
                                                                                                            },
                                                                                                        },
                                                                                                    },
                                                                                                    op: BinOp::Add(
                                                                                                        Plus,
                                                                                                    ),
                                                                                                    right: Expr::Lit {
                                                                                                        attrs: [],
                                                                                                        lit: Lit::Int {
                                                                                                            token: 1,
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                                Comma,
                                                                                                Expr::Binary {
                                                                                                    attrs: [],
                                                                                                    left: Expr::Index {
                                                                                                        attrs: [],
                                                                                                        expr: Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: prev_distances,
                                                                                                                            span: bytes(9541..9555),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                        bracket_token: Bracket,
                                                                                                        index: Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: j,
                                                                                                                            span: bytes(9556..9557),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                    },
                                                                                                    op: BinOp::Add(
                                                                                                        Plus,
                                                                                                    ),
                                                                                                    right: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: cost,
                                                                                                                        span: bytes(9561..9565),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                        Comma,
                                                                                    ],
                                                                                },
                                                                            },
                                                                            Some(
                                                                                Semi,
                                                                            ),
                                                                        ),
                                                                        Stmt::Expr(
                                                                            Expr::If {
                                                                                attrs: [],
                                                                                if_token: If,
                                                                                cond: Expr::Binary {
                                                                                    attrs: [],
                                                                                    left: Expr::Binary {
                                                                                        attrs: [],
                                                                                        left: Expr::Binary {
                                                                                            attrs: [],
                                                                                            left: Expr::Binary {
                                                                                                attrs: [],
                                                                                                left: Expr::Binary {
                                                                                                    attrs: [],
                                                                                                    left: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: i,
                                                                                                                        span: bytes(9598..9599),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    op: BinOp::Gt(
                                                                                                        Gt,
                                                                                                    ),
                                                                                                    right: Expr::Lit {
                                                                                                        attrs: [],
                                                                                                        lit: Lit::Int {
                                                                                                            token: 0,
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                                op: BinOp::And(
                                                                                                    AndAnd,
                                                                                                ),
                                                                                                right: Expr::Binary {
                                                                                                    attrs: [],
                                                                                                    left: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: j,
                                                                                                                        span: bytes(9607..9608),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    op: BinOp::Gt(
                                                                                                        Gt,
                                                                                                    ),
                                                                                                    right: Expr::Lit {
                                                                                                        attrs: [],
                                                                                                        lit: Lit::Int {
                                                                                                            token: 0,
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                            op: BinOp::And(
                                                                                                AndAnd,
                                                                                            ),
                                                                                            right: Expr::Binary {
                                                                                                attrs: [],
                                                                                                left: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: a_char,
                                                                                                                    span: bytes(9616..9622),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                op: BinOp::Ne(
                                                                                                    Ne,
                                                                                                ),
                                                                                                right: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: b_char,
                                                                                                                    span: bytes(9626..9632),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                        op: BinOp::And(
                                                                                            AndAnd,
                                                                                        ),
                                                                                        right: Expr::Binary {
                                                                                            attrs: [],
                                                                                            left: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: a_char,
                                                                                                                span: bytes(9636..9642),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            op: BinOp::Eq(
                                                                                                EqEq,
                                                                                            ),
                                                                                            right: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: prev_b_char,
                                                                                                                span: bytes(9646..9657),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                    op: BinOp::And(
                                                                                        AndAnd,
                                                                                    ),
                                                                                    right: Expr::Binary {
                                                                                        attrs: [],
                                                                                        left: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: b_char,
                                                                                                            span: bytes(9661..9667),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        op: BinOp::Eq(
                                                                                            EqEq,
                                                                                        ),
                                                                                        right: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: prev_a_char,
                                                                                                            span: bytes(9671..9682),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                },
                                                                                then_branch: Block {
                                                                                    brace_token: Brace,
                                                                                    stmts: [
                                                                                        Stmt::Expr(
                                                                                            Expr::Assign {
                                                                                                attrs: [],
                                                                                                left: Expr::Index {
                                                                                                    attrs: [],
                                                                                                    expr: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: curr_distances,
                                                                                                                        span: bytes(9713..9727),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    bracket_token: Bracket,
                                                                                                    index: Expr::Binary {
                                                                                                        attrs: [],
                                                                                                        left: Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: j,
                                                                                                                            span: bytes(9728..9729),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                        op: BinOp::Add(
                                                                                                            Plus,
                                                                                                        ),
                                                                                                        right: Expr::Lit {
                                                                                                            attrs: [],
                                                                                                            lit: Lit::Int {
                                                                                                                token: 1,
                                                                                                            },
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                                eq_token: Eq,
                                                                                                right: Expr::Call {
                                                                                                    attrs: [],
                                                                                                    func: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: min,
                                                                                                                        span: bytes(9737..9740),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    paren_token: Paren,
                                                                                                    args: [
                                                                                                        Expr::Index {
                                                                                                            attrs: [],
                                                                                                            expr: Expr::Path {
                                                                                                                attrs: [],
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: curr_distances,
                                                                                                                                span: bytes(9741..9755),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                            bracket_token: Bracket,
                                                                                                            index: Expr::Binary {
                                                                                                                attrs: [],
                                                                                                                left: Expr::Path {
                                                                                                                    attrs: [],
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: j,
                                                                                                                                    span: bytes(9756..9757),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                                op: BinOp::Add(
                                                                                                                    Plus,
                                                                                                                ),
                                                                                                                right: Expr::Lit {
                                                                                                                    attrs: [],
                                                                                                                    lit: Lit::Int {
                                                                                                                        token: 1,
                                                                                                                    },
                                                                                                                },
                                                                                                            },
                                                                                                        },
                                                                                                        Comma,
                                                                                                        Expr::Binary {
                                                                                                            attrs: [],
                                                                                                            left: Expr::Index {
                                                                                                                attrs: [],
                                                                                                                expr: Expr::Path {
                                                                                                                    attrs: [],
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: prev_two_distances,
                                                                                                                                    span: bytes(9764..9782),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                                bracket_token: Bracket,
                                                                                                                index: Expr::Binary {
                                                                                                                    attrs: [],
                                                                                                                    left: Expr::Path {
                                                                                                                        attrs: [],
                                                                                                                        qself: None,
                                                                                                                        path: Path {
                                                                                                                            leading_colon: None,
                                                                                                                            segments: [
                                                                                                                                PathSegment {
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: j,
                                                                                                                                        span: bytes(9783..9784),
                                                                                                                                    },
                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                },
                                                                                                                            ],
                                                                                                                        },
                                                                                                                    },
                                                                                                                    op: BinOp::Sub(
                                                                                                                        Minus,
                                                                                                                    ),
                                                                                                                    right: Expr::Lit {
                                                                                                                        attrs: [],
                                                                                                                        lit: Lit::Int {
                                                                                                                            token: 1,
                                                                                                                        },
                                                                                                                    },
                                                                                                                },
                                                                                                            },
                                                                                                            op: BinOp::Add(
                                                                                                                Plus,
                                                                                                            ),
                                                                                                            right: Expr::Lit {
                                                                                                                attrs: [],
                                                                                                                lit: Lit::Int {
                                                                                                                    token: 1,
                                                                                                                },
                                                                                                            },
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            Some(
                                                                                                Semi,
                                                                                            ),
                                                                                        ),
                                                                                    ],
                                                                                },
                                                                                else_branch: None,
                                                                            },
                                                                            None,
                                                                        ),
                                                                        Stmt::Expr(
                                                                            Expr::Assign {
                                                                                attrs: [],
                                                                                left: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: prev_b_char,
                                                                                                    span: bytes(9823..9834),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                eq_token: Eq,
                                                                                right: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: b_char,
                                                                                                    span: bytes(9837..9843),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            },
                                                                            Some(
                                                                                Semi,
                                                                            ),
                                                                        ),
                                                                    ],
                                                                },
                                                            },
                                                            None,
                                                        ),
                                                        Stmt::Expr(
                                                            Expr::Call {
                                                                attrs: [],
                                                                func: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: mem,
                                                                                    span: bytes(9864..9867),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: swap,
                                                                                    span: bytes(9869..9873),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Reference {
                                                                        attrs: [],
                                                                        and_token: And,
                                                                        mutability: Some(
                                                                            Mut,
                                                                        ),
                                                                        expr: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: prev_two_distances,
                                                                                            span: bytes(9879..9897),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                    Comma,
                                                                    Expr::Reference {
                                                                        attrs: [],
                                                                        and_token: And,
                                                                        mutability: Some(
                                                                            Mut,
                                                                        ),
                                                                        expr: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: prev_distances,
                                                                                            span: bytes(9904..9918),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                        Stmt::Expr(
                                                            Expr::Call {
                                                                attrs: [],
                                                                func: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: mem,
                                                                                    span: bytes(9929..9932),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: swap,
                                                                                    span: bytes(9934..9938),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Reference {
                                                                        attrs: [],
                                                                        and_token: And,
                                                                        mutability: Some(
                                                                            Mut,
                                                                        ),
                                                                        expr: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: prev_distances,
                                                                                            span: bytes(9944..9958),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                    Comma,
                                                                    Expr::Reference {
                                                                        attrs: [],
                                                                        and_token: And,
                                                                        mutability: Some(
                                                                            Mut,
                                                                        ),
                                                                        expr: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: curr_distances,
                                                                                            span: bytes(9965..9979),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                        Stmt::Expr(
                                                            Expr::Assign {
                                                                attrs: [],
                                                                left: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: prev_a_char,
                                                                                    span: bytes(9990..10001),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                eq_token: Eq,
                                                                right: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: a_char,
                                                                                    span: bytes(10004..10010),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                    ],
                                                },
                                            },
                                            None,
                                        ),
                                        Stmt::Expr(
                                            Expr::Index {
                                                attrs: [],
                                                expr: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: prev_distances,
                                                                    span: bytes(10227..10241),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                bracket_token: Bracket,
                                                index: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: b_len,
                                                                    span: bytes(10242..10247),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                    },
                    FnItem {
                        fn_name: Name {
                            name: "flat_index",
                            complete_name: "strsim::flat_index",
                            import_name: MyPath {
                                name: "strsim",
                                next: Some(
                                    MyPath {
                                        name: "flat_index",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "flat_index",
                        item: Some(
                            ItemFn {
                                attrs: [],
                                vis: Visibility::Inherited,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: flat_index,
                                        span: bytes(10348..10358),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: i,
                                                        span: bytes(10359..10360),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: usize,
                                                                    span: bytes(10362..10367),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: j,
                                                        span: bytes(10369..10370),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: usize,
                                                                    span: bytes(10372..10377),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: width,
                                                        span: bytes(10379..10384),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: usize,
                                                                    span: bytes(10386..10391),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: usize,
                                                            span: bytes(10396..10401),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Expr(
                                            Expr::Binary {
                                                attrs: [],
                                                left: Expr::Binary {
                                                    attrs: [],
                                                    left: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: j,
                                                                        span: bytes(10408..10409),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    op: BinOp::Mul(
                                                        Star,
                                                    ),
                                                    right: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: width,
                                                                        span: bytes(10412..10417),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                                op: BinOp::Add(
                                                    Plus,
                                                ),
                                                right: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: i,
                                                                    span: bytes(10420..10421),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                    },
                    FnItem {
                        fn_name: Name {
                            name: "generic_damerau_levenshtein",
                            complete_name: "strsim::generic_damerau_levenshtein",
                            import_name: MyPath {
                                name: "strsim",
                                next: Some(
                                    MyPath {
                                        name: "generic_damerau_levenshtein",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "generic_damerau_levenshtein",
                        item: Some(
                            ItemFn {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: generic_damerau_levenshtein,
                                        span: bytes(10700..10727),
                                    },
                                    generics: Generics {
                                        lt_token: Some(
                                            Lt,
                                        ),
                                        params: [
                                            GenericParam::Type(
                                                TypeParam {
                                                    attrs: [],
                                                    ident: Ident {
                                                        sym: Elem,
                                                        span: bytes(10728..10732),
                                                    },
                                                    colon_token: None,
                                                    bounds: [],
                                                    eq_token: None,
                                                    default: None,
                                                },
                                            ),
                                        ],
                                        gt_token: Some(
                                            Gt,
                                        ),
                                        where_clause: Some(
                                            WhereClause {
                                                where_token: Where,
                                                predicates: [
                                                    WherePredicate::Type(
                                                        PredicateType {
                                                            lifetimes: None,
                                                            bounded_ty: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Elem,
                                                                                span: bytes(10789..10793),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            colon_token: Colon,
                                                            bounds: [
                                                                TypeParamBound::Trait(
                                                                    TraitBound {
                                                                        paren_token: None,
                                                                        modifier: TraitBoundModifier::None,
                                                                        lifetimes: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Eq,
                                                                                        span: bytes(10795..10797),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                                Plus,
                                                                TypeParamBound::Trait(
                                                                    TraitBound {
                                                                        paren_token: None,
                                                                        modifier: TraitBoundModifier::None,
                                                                        lifetimes: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Hash,
                                                                                        span: bytes(10800..10804),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                                Plus,
                                                                TypeParamBound::Trait(
                                                                    TraitBound {
                                                                        paren_token: None,
                                                                        modifier: TraitBoundModifier::None,
                                                                        lifetimes: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Clone,
                                                                                        span: bytes(10807..10812),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                    Comma,
                                                ],
                                            },
                                        ),
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: a_elems,
                                                        span: bytes(10734..10741),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: None,
                                                    elem: Type::Slice {
                                                        bracket_token: Bracket,
                                                        elem: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Elem,
                                                                            span: bytes(10745..10749),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: b_elems,
                                                        span: bytes(10752..10759),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: None,
                                                    elem: Type::Slice {
                                                        bracket_token: Bracket,
                                                        elem: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Elem,
                                                                            span: bytes(10763..10767),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: usize,
                                                            span: bytes(10773..10778),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: None,
                                                ident: Ident {
                                                    sym: a_len,
                                                    span: bytes(10824..10829),
                                                },
                                                subpat: None,
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: a_elems,
                                                                            span: bytes(10832..10839),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: len,
                                                            span: bytes(10840..10843),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [],
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: None,
                                                ident: Ident {
                                                    sym: b_len,
                                                    span: bytes(10855..10860),
                                                },
                                                subpat: None,
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: b_elems,
                                                                            span: bytes(10863..10870),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: len,
                                                            span: bytes(10871..10874),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [],
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Expr(
                                            Expr::If {
                                                attrs: [],
                                                if_token: If,
                                                cond: Expr::Binary {
                                                    attrs: [],
                                                    left: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: a_len,
                                                                        span: bytes(10886..10891),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    op: BinOp::Eq(
                                                        EqEq,
                                                    ),
                                                    right: Expr::Lit {
                                                        attrs: [],
                                                        lit: Lit::Int {
                                                            token: 0,
                                                        },
                                                    },
                                                },
                                                then_branch: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::Return {
                                                                attrs: [],
                                                                return_token: Return,
                                                                expr: Some(
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: b_len,
                                                                                        span: bytes(10914..10919),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                    ],
                                                },
                                                else_branch: None,
                                            },
                                            None,
                                        ),
                                        Stmt::Expr(
                                            Expr::If {
                                                attrs: [],
                                                if_token: If,
                                                cond: Expr::Binary {
                                                    attrs: [],
                                                    left: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: b_len,
                                                                        span: bytes(10934..10939),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    op: BinOp::Eq(
                                                        EqEq,
                                                    ),
                                                    right: Expr::Lit {
                                                        attrs: [],
                                                        lit: Lit::Int {
                                                            token: 0,
                                                        },
                                                    },
                                                },
                                                then_branch: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::Return {
                                                                attrs: [],
                                                                return_token: Return,
                                                                expr: Some(
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: a_len,
                                                                                        span: bytes(10962..10967),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                    ],
                                                },
                                                else_branch: None,
                                            },
                                            None,
                                        ),
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: None,
                                                ident: Ident {
                                                    sym: width,
                                                    span: bytes(10984..10989),
                                                },
                                                subpat: None,
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: a_len,
                                                                            span: bytes(10992..10997),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        op: BinOp::Add(
                                                            Plus,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 2,
                                                            },
                                                        },
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                ident: Ident {
                                                    sym: distances,
                                                    span: bytes(11015..11024),
                                                },
                                                subpat: None,
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Macro {
                                                        attrs: [],
                                                        mac: Macro {
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: vec,
                                                                            span: bytes(11027..11030),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                            bang_token: Not,
                                                            delimiter: MacroDelimiter::Bracket(
                                                                Bracket,
                                                            ),
                                                            tokens: TokenStream [
                                                                Literal {
                                                                    lit: 0,
                                                                    span: bytes(11032..11033),
                                                                },
                                                                Punct {
                                                                    char: ';',
                                                                    spacing: Alone,
                                                                    span: bytes(11033..11034),
                                                                },
                                                                Group {
                                                                    delimiter: Parenthesis,
                                                                    stream: TokenStream [
                                                                        Ident {
                                                                            sym: a_len,
                                                                            span: bytes(11036..11041),
                                                                        },
                                                                        Punct {
                                                                            char: '+',
                                                                            spacing: Alone,
                                                                            span: bytes(11042..11043),
                                                                        },
                                                                        Literal {
                                                                            lit: 2,
                                                                            span: bytes(11044..11045),
                                                                        },
                                                                    ],
                                                                    span: bytes(11035..11046),
                                                                },
                                                                Punct {
                                                                    char: '*',
                                                                    spacing: Alone,
                                                                    span: bytes(11047..11048),
                                                                },
                                                                Group {
                                                                    delimiter: Parenthesis,
                                                                    stream: TokenStream [
                                                                        Ident {
                                                                            sym: b_len,
                                                                            span: bytes(11050..11055),
                                                                        },
                                                                        Punct {
                                                                            char: '+',
                                                                            spacing: Alone,
                                                                            span: bytes(11056..11057),
                                                                        },
                                                                        Literal {
                                                                            lit: 2,
                                                                            span: bytes(11058..11059),
                                                                        },
                                                                    ],
                                                                    span: bytes(11049..11060),
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: None,
                                                ident: Ident {
                                                    sym: max_distance,
                                                    span: bytes(11071..11083),
                                                },
                                                subpat: None,
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: a_len,
                                                                            span: bytes(11086..11091),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        op: BinOp::Add(
                                                            Plus,
                                                        ),
                                                        right: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: b_len,
                                                                            span: bytes(11094..11099),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Expr(
                                            Expr::Assign {
                                                attrs: [],
                                                left: Expr::Index {
                                                    attrs: [],
                                                    expr: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: distances,
                                                                        span: bytes(11105..11114),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    bracket_token: Bracket,
                                                    index: Expr::Lit {
                                                        attrs: [],
                                                        lit: Lit::Int {
                                                            token: 0,
                                                        },
                                                    },
                                                },
                                                eq_token: Eq,
                                                right: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: max_distance,
                                                                    span: bytes(11120..11132),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                            Some(
                                                Semi,
                                            ),
                                        ),
                                        Stmt::Expr(
                                            Expr::ForLoop {
                                                attrs: [],
                                                label: None,
                                                for_token: For,
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: i,
                                                        span: bytes(11143..11144),
                                                    },
                                                    subpat: None,
                                                },
                                                in_token: In,
                                                expr: Expr::Range {
                                                    attrs: [],
                                                    start: Some(
                                                        Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 0,
                                                            },
                                                        },
                                                    ),
                                                    limits: RangeLimits::HalfOpen(
                                                        DotDot,
                                                    ),
                                                    end: Some(
                                                        Expr::Paren {
                                                            attrs: [],
                                                            paren_token: Paren,
                                                            expr: Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: a_len,
                                                                                    span: bytes(11152..11157),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                op: BinOp::Add(
                                                                    Plus,
                                                                ),
                                                                right: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 1,
                                                                    },
                                                                },
                                                            },
                                                        },
                                                    ),
                                                },
                                                body: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::Assign {
                                                                attrs: [],
                                                                left: Expr::Index {
                                                                    attrs: [],
                                                                    expr: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: distances,
                                                                                        span: bytes(11173..11182),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    bracket_token: Bracket,
                                                                    index: Expr::Call {
                                                                        attrs: [],
                                                                        func: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: flat_index,
                                                                                            span: bytes(11183..11193),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        paren_token: Paren,
                                                                        args: [
                                                                            Expr::Binary {
                                                                                attrs: [],
                                                                                left: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: i,
                                                                                                    span: bytes(11194..11195),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                op: BinOp::Add(
                                                                                    Plus,
                                                                                ),
                                                                                right: Expr::Lit {
                                                                                    attrs: [],
                                                                                    lit: Lit::Int {
                                                                                        token: 1,
                                                                                    },
                                                                                },
                                                                            },
                                                                            Comma,
                                                                            Expr::Lit {
                                                                                attrs: [],
                                                                                lit: Lit::Int {
                                                                                    token: 0,
                                                                                },
                                                                            },
                                                                            Comma,
                                                                            Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: width,
                                                                                                span: bytes(11204..11209),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                eq_token: Eq,
                                                                right: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: max_distance,
                                                                                    span: bytes(11214..11226),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                        Stmt::Expr(
                                                            Expr::Assign {
                                                                attrs: [],
                                                                left: Expr::Index {
                                                                    attrs: [],
                                                                    expr: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: distances,
                                                                                        span: bytes(11236..11245),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    bracket_token: Bracket,
                                                                    index: Expr::Call {
                                                                        attrs: [],
                                                                        func: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: flat_index,
                                                                                            span: bytes(11246..11256),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        paren_token: Paren,
                                                                        args: [
                                                                            Expr::Binary {
                                                                                attrs: [],
                                                                                left: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: i,
                                                                                                    span: bytes(11257..11258),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                op: BinOp::Add(
                                                                                    Plus,
                                                                                ),
                                                                                right: Expr::Lit {
                                                                                    attrs: [],
                                                                                    lit: Lit::Int {
                                                                                        token: 1,
                                                                                    },
                                                                                },
                                                                            },
                                                                            Comma,
                                                                            Expr::Lit {
                                                                                attrs: [],
                                                                                lit: Lit::Int {
                                                                                    token: 1,
                                                                                },
                                                                            },
                                                                            Comma,
                                                                            Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: width,
                                                                                                span: bytes(11267..11272),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                eq_token: Eq,
                                                                right: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: i,
                                                                                    span: bytes(11277..11278),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                    ],
                                                },
                                            },
                                            None,
                                        ),
                                        Stmt::Expr(
                                            Expr::ForLoop {
                                                attrs: [],
                                                label: None,
                                                for_token: For,
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: j,
                                                        span: bytes(11295..11296),
                                                    },
                                                    subpat: None,
                                                },
                                                in_token: In,
                                                expr: Expr::Range {
                                                    attrs: [],
                                                    start: Some(
                                                        Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 0,
                                                            },
                                                        },
                                                    ),
                                                    limits: RangeLimits::HalfOpen(
                                                        DotDot,
                                                    ),
                                                    end: Some(
                                                        Expr::Paren {
                                                            attrs: [],
                                                            paren_token: Paren,
                                                            expr: Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: b_len,
                                                                                    span: bytes(11304..11309),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                op: BinOp::Add(
                                                                    Plus,
                                                                ),
                                                                right: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 1,
                                                                    },
                                                                },
                                                            },
                                                        },
                                                    ),
                                                },
                                                body: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::Assign {
                                                                attrs: [],
                                                                left: Expr::Index {
                                                                    attrs: [],
                                                                    expr: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: distances,
                                                                                        span: bytes(11325..11334),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    bracket_token: Bracket,
                                                                    index: Expr::Call {
                                                                        attrs: [],
                                                                        func: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: flat_index,
                                                                                            span: bytes(11335..11345),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        paren_token: Paren,
                                                                        args: [
                                                                            Expr::Lit {
                                                                                attrs: [],
                                                                                lit: Lit::Int {
                                                                                    token: 0,
                                                                                },
                                                                            },
                                                                            Comma,
                                                                            Expr::Binary {
                                                                                attrs: [],
                                                                                left: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: j,
                                                                                                    span: bytes(11349..11350),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                op: BinOp::Add(
                                                                                    Plus,
                                                                                ),
                                                                                right: Expr::Lit {
                                                                                    attrs: [],
                                                                                    lit: Lit::Int {
                                                                                        token: 1,
                                                                                    },
                                                                                },
                                                                            },
                                                                            Comma,
                                                                            Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: width,
                                                                                                span: bytes(11356..11361),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                eq_token: Eq,
                                                                right: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: max_distance,
                                                                                    span: bytes(11366..11378),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                        Stmt::Expr(
                                                            Expr::Assign {
                                                                attrs: [],
                                                                left: Expr::Index {
                                                                    attrs: [],
                                                                    expr: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: distances,
                                                                                        span: bytes(11388..11397),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    bracket_token: Bracket,
                                                                    index: Expr::Call {
                                                                        attrs: [],
                                                                        func: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: flat_index,
                                                                                            span: bytes(11398..11408),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        paren_token: Paren,
                                                                        args: [
                                                                            Expr::Lit {
                                                                                attrs: [],
                                                                                lit: Lit::Int {
                                                                                    token: 1,
                                                                                },
                                                                            },
                                                                            Comma,
                                                                            Expr::Binary {
                                                                                attrs: [],
                                                                                left: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: j,
                                                                                                    span: bytes(11412..11413),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                op: BinOp::Add(
                                                                                    Plus,
                                                                                ),
                                                                                right: Expr::Lit {
                                                                                    attrs: [],
                                                                                    lit: Lit::Int {
                                                                                        token: 1,
                                                                                    },
                                                                                },
                                                                            },
                                                                            Comma,
                                                                            Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: width,
                                                                                                span: bytes(11419..11424),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                eq_token: Eq,
                                                                right: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: j,
                                                                                    span: bytes(11429..11430),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                    ],
                                                },
                                            },
                                            None,
                                        ),
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Type {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    ident: Ident {
                                                        sym: elems,
                                                        span: bytes(11451..11456),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: HashMap,
                                                                    span: bytes(11458..11465),
                                                                },
                                                                arguments: PathArguments::AngleBracketed {
                                                                    colon2_token: None,
                                                                    lt_token: Lt,
                                                                    args: [
                                                                        GenericArgument::Type(
                                                                            Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Elem,
                                                                                                span: bytes(11466..11470),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                        Comma,
                                                                        GenericArgument::Type(
                                                                            Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: usize,
                                                                                                span: bytes(11472..11477),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                    gt_token: Gt,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Call {
                                                        attrs: [],
                                                        func: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: HashMap,
                                                                            span: bytes(11481..11488),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: with_capacity,
                                                                            span: bytes(11490..11503),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        paren_token: Paren,
                                                        args: [
                                                            Expr::Lit {
                                                                attrs: [],
                                                                lit: Lit::Int {
                                                                    token: 64,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Expr(
                                            Expr::ForLoop {
                                                attrs: [],
                                                label: None,
                                                for_token: For,
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: i,
                                                        span: bytes(11518..11519),
                                                    },
                                                    subpat: None,
                                                },
                                                in_token: In,
                                                expr: Expr::Range {
                                                    attrs: [],
                                                    start: Some(
                                                        Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 1,
                                                            },
                                                        },
                                                    ),
                                                    limits: RangeLimits::HalfOpen(
                                                        DotDot,
                                                    ),
                                                    end: Some(
                                                        Expr::Paren {
                                                            attrs: [],
                                                            paren_token: Paren,
                                                            expr: Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: a_len,
                                                                                    span: bytes(11527..11532),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                op: BinOp::Add(
                                                                    Plus,
                                                                ),
                                                                right: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 1,
                                                                    },
                                                                },
                                                            },
                                                        },
                                                    ),
                                                },
                                                body: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Local {
                                                            attrs: [],
                                                            let_token: Let,
                                                            pat: Pat::Ident {
                                                                attrs: [],
                                                                by_ref: None,
                                                                mutability: Some(
                                                                    Mut,
                                                                ),
                                                                ident: Ident {
                                                                    sym: db,
                                                                    span: bytes(11556..11558),
                                                                },
                                                                subpat: None,
                                                            },
                                                            init: Some(
                                                                LocalInit {
                                                                    eq_token: Eq,
                                                                    expr: Expr::Lit {
                                                                        attrs: [],
                                                                        lit: Lit::Int {
                                                                            token: 0,
                                                                        },
                                                                    },
                                                                    diverge: None,
                                                                },
                                                            ),
                                                            semi_token: Semi,
                                                        },
                                                        Stmt::Expr(
                                                            Expr::ForLoop {
                                                                attrs: [],
                                                                label: None,
                                                                for_token: For,
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: j,
                                                                        span: bytes(11577..11578),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                in_token: In,
                                                                expr: Expr::Range {
                                                                    attrs: [],
                                                                    start: Some(
                                                                        Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Int {
                                                                                token: 1,
                                                                            },
                                                                        },
                                                                    ),
                                                                    limits: RangeLimits::HalfOpen(
                                                                        DotDot,
                                                                    ),
                                                                    end: Some(
                                                                        Expr::Paren {
                                                                            attrs: [],
                                                                            paren_token: Paren,
                                                                            expr: Expr::Binary {
                                                                                attrs: [],
                                                                                left: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: b_len,
                                                                                                    span: bytes(11586..11591),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                op: BinOp::Add(
                                                                                    Plus,
                                                                                ),
                                                                                right: Expr::Lit {
                                                                                    attrs: [],
                                                                                    lit: Lit::Int {
                                                                                        token: 1,
                                                                                    },
                                                                                },
                                                                            },
                                                                        },
                                                                    ),
                                                                },
                                                                body: Block {
                                                                    brace_token: Brace,
                                                                    stmts: [
                                                                        Stmt::Local {
                                                                            attrs: [],
                                                                            let_token: Let,
                                                                            pat: Pat::Ident {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident {
                                                                                    sym: k,
                                                                                    span: bytes(11615..11616),
                                                                                },
                                                                                subpat: None,
                                                                            },
                                                                            init: Some(
                                                                                LocalInit {
                                                                                    eq_token: Eq,
                                                                                    expr: Expr::Match {
                                                                                        attrs: [],
                                                                                        match_token: Match,
                                                                                        expr: Expr::MethodCall {
                                                                                            attrs: [],
                                                                                            receiver: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: elems,
                                                                                                                span: bytes(11625..11630),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            dot_token: Dot,
                                                                                            method: Ident {
                                                                                                sym: get,
                                                                                                span: bytes(11631..11634),
                                                                                            },
                                                                                            turbofish: None,
                                                                                            paren_token: Paren,
                                                                                            args: [
                                                                                                Expr::Reference {
                                                                                                    attrs: [],
                                                                                                    and_token: And,
                                                                                                    mutability: None,
                                                                                                    expr: Expr::Index {
                                                                                                        attrs: [],
                                                                                                        expr: Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: b_elems,
                                                                                                                            span: bytes(11636..11643),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                        bracket_token: Bracket,
                                                                                                        index: Expr::Binary {
                                                                                                            attrs: [],
                                                                                                            left: Expr::Path {
                                                                                                                attrs: [],
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: j,
                                                                                                                                span: bytes(11644..11645),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                            op: BinOp::Sub(
                                                                                                                Minus,
                                                                                                            ),
                                                                                                            right: Expr::Lit {
                                                                                                                attrs: [],
                                                                                                                lit: Lit::Int {
                                                                                                                    token: 1,
                                                                                                                },
                                                                                                            },
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                        brace_token: Brace,
                                                                                        arms: [
                                                                                            Arm {
                                                                                                attrs: [],
                                                                                                pat: Pat::TupleStruct {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: Some,
                                                                                                                    span: bytes(11670..11674),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                    paren_token: Paren,
                                                                                                    elems: [
                                                                                                        Pat::Reference {
                                                                                                            attrs: [],
                                                                                                            and_token: And,
                                                                                                            mutability: None,
                                                                                                            pat: Pat::Ident {
                                                                                                                attrs: [],
                                                                                                                by_ref: None,
                                                                                                                mutability: None,
                                                                                                                ident: Ident {
                                                                                                                    sym: value,
                                                                                                                    span: bytes(11676..11681),
                                                                                                                },
                                                                                                                subpat: None,
                                                                                                            },
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                                guard: None,
                                                                                                fat_arrow_token: FatArrow,
                                                                                                body: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: value,
                                                                                                                    span: bytes(11686..11691),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                comma: Some(
                                                                                                    Comma,
                                                                                                ),
                                                                                            },
                                                                                            Arm {
                                                                                                attrs: [],
                                                                                                pat: Pat::Ident {
                                                                                                    attrs: [],
                                                                                                    by_ref: None,
                                                                                                    mutability: None,
                                                                                                    ident: Ident {
                                                                                                        sym: None,
                                                                                                        span: bytes(11709..11713),
                                                                                                    },
                                                                                                    subpat: None,
                                                                                                },
                                                                                                guard: None,
                                                                                                fat_arrow_token: FatArrow,
                                                                                                body: Expr::Lit {
                                                                                                    attrs: [],
                                                                                                    lit: Lit::Int {
                                                                                                        token: 0,
                                                                                                    },
                                                                                                },
                                                                                                comma: Some(
                                                                                                    Comma,
                                                                                                ),
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                    diverge: None,
                                                                                },
                                                                            ),
                                                                            semi_token: Semi,
                                                                        },
                                                                        Stmt::Local {
                                                                            attrs: [],
                                                                            let_token: Let,
                                                                            pat: Pat::Ident {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident {
                                                                                    sym: insertion_cost,
                                                                                    span: bytes(11752..11766),
                                                                                },
                                                                                subpat: None,
                                                                            },
                                                                            init: Some(
                                                                                LocalInit {
                                                                                    eq_token: Eq,
                                                                                    expr: Expr::Binary {
                                                                                        attrs: [],
                                                                                        left: Expr::Index {
                                                                                            attrs: [],
                                                                                            expr: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: distances,
                                                                                                                span: bytes(11769..11778),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            bracket_token: Bracket,
                                                                                            index: Expr::Call {
                                                                                                attrs: [],
                                                                                                func: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: flat_index,
                                                                                                                    span: bytes(11779..11789),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                paren_token: Paren,
                                                                                                args: [
                                                                                                    Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: i,
                                                                                                                        span: bytes(11790..11791),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    Comma,
                                                                                                    Expr::Binary {
                                                                                                        attrs: [],
                                                                                                        left: Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: j,
                                                                                                                            span: bytes(11793..11794),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                        op: BinOp::Add(
                                                                                                            Plus,
                                                                                                        ),
                                                                                                        right: Expr::Lit {
                                                                                                            attrs: [],
                                                                                                            lit: Lit::Int {
                                                                                                                token: 1,
                                                                                                            },
                                                                                                        },
                                                                                                    },
                                                                                                    Comma,
                                                                                                    Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: width,
                                                                                                                        span: bytes(11800..11805),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        op: BinOp::Add(
                                                                                            Plus,
                                                                                        ),
                                                                                        right: Expr::Lit {
                                                                                            attrs: [],
                                                                                            lit: Lit::Int {
                                                                                                token: 1,
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                    diverge: None,
                                                                                },
                                                                            ),
                                                                            semi_token: Semi,
                                                                        },
                                                                        Stmt::Local {
                                                                            attrs: [],
                                                                            let_token: Let,
                                                                            pat: Pat::Ident {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident {
                                                                                    sym: deletion_cost,
                                                                                    span: bytes(11829..11842),
                                                                                },
                                                                                subpat: None,
                                                                            },
                                                                            init: Some(
                                                                                LocalInit {
                                                                                    eq_token: Eq,
                                                                                    expr: Expr::Binary {
                                                                                        attrs: [],
                                                                                        left: Expr::Index {
                                                                                            attrs: [],
                                                                                            expr: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: distances,
                                                                                                                span: bytes(11845..11854),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            bracket_token: Bracket,
                                                                                            index: Expr::Call {
                                                                                                attrs: [],
                                                                                                func: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: flat_index,
                                                                                                                    span: bytes(11855..11865),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                paren_token: Paren,
                                                                                                args: [
                                                                                                    Expr::Binary {
                                                                                                        attrs: [],
                                                                                                        left: Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: i,
                                                                                                                            span: bytes(11866..11867),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                        op: BinOp::Add(
                                                                                                            Plus,
                                                                                                        ),
                                                                                                        right: Expr::Lit {
                                                                                                            attrs: [],
                                                                                                            lit: Lit::Int {
                                                                                                                token: 1,
                                                                                                            },
                                                                                                        },
                                                                                                    },
                                                                                                    Comma,
                                                                                                    Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: j,
                                                                                                                        span: bytes(11873..11874),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    Comma,
                                                                                                    Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: width,
                                                                                                                        span: bytes(11876..11881),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        op: BinOp::Add(
                                                                                            Plus,
                                                                                        ),
                                                                                        right: Expr::Lit {
                                                                                            attrs: [],
                                                                                            lit: Lit::Int {
                                                                                                token: 1,
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                    diverge: None,
                                                                                },
                                                                            ),
                                                                            semi_token: Semi,
                                                                        },
                                                                        Stmt::Local {
                                                                            attrs: [],
                                                                            let_token: Let,
                                                                            pat: Pat::Ident {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident {
                                                                                    sym: transposition_cost,
                                                                                    span: bytes(11905..11923),
                                                                                },
                                                                                subpat: None,
                                                                            },
                                                                            init: Some(
                                                                                LocalInit {
                                                                                    eq_token: Eq,
                                                                                    expr: Expr::Binary {
                                                                                        attrs: [],
                                                                                        left: Expr::Binary {
                                                                                            attrs: [],
                                                                                            left: Expr::Binary {
                                                                                                attrs: [],
                                                                                                left: Expr::Index {
                                                                                                    attrs: [],
                                                                                                    expr: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: distances,
                                                                                                                        span: bytes(11942..11951),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    bracket_token: Bracket,
                                                                                                    index: Expr::Call {
                                                                                                        attrs: [],
                                                                                                        func: Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: flat_index,
                                                                                                                            span: bytes(11952..11962),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                        paren_token: Paren,
                                                                                                        args: [
                                                                                                            Expr::Path {
                                                                                                                attrs: [],
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: k,
                                                                                                                                span: bytes(11963..11964),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                            Comma,
                                                                                                            Expr::Path {
                                                                                                                attrs: [],
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: db,
                                                                                                                                span: bytes(11966..11968),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                            Comma,
                                                                                                            Expr::Path {
                                                                                                                attrs: [],
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: width,
                                                                                                                                span: bytes(11970..11975),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                op: BinOp::Add(
                                                                                                    Plus,
                                                                                                ),
                                                                                                right: Expr::Paren {
                                                                                                    attrs: [],
                                                                                                    paren_token: Paren,
                                                                                                    expr: Expr::Binary {
                                                                                                        attrs: [],
                                                                                                        left: Expr::Binary {
                                                                                                            attrs: [],
                                                                                                            left: Expr::Path {
                                                                                                                attrs: [],
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: i,
                                                                                                                                span: bytes(11981..11982),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                            op: BinOp::Sub(
                                                                                                                Minus,
                                                                                                            ),
                                                                                                            right: Expr::Path {
                                                                                                                attrs: [],
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: k,
                                                                                                                                span: bytes(11985..11986),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                        },
                                                                                                        op: BinOp::Sub(
                                                                                                            Minus,
                                                                                                        ),
                                                                                                        right: Expr::Lit {
                                                                                                            attrs: [],
                                                                                                            lit: Lit::Int {
                                                                                                                token: 1,
                                                                                                            },
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                            op: BinOp::Add(
                                                                                                Plus,
                                                                                            ),
                                                                                            right: Expr::Lit {
                                                                                                attrs: [],
                                                                                                lit: Lit::Int {
                                                                                                    token: 1,
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                        op: BinOp::Add(
                                                                                            Plus,
                                                                                        ),
                                                                                        right: Expr::Paren {
                                                                                            attrs: [],
                                                                                            paren_token: Paren,
                                                                                            expr: Expr::Binary {
                                                                                                attrs: [],
                                                                                                left: Expr::Binary {
                                                                                                    attrs: [],
                                                                                                    left: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: j,
                                                                                                                        span: bytes(11999..12000),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    op: BinOp::Sub(
                                                                                                        Minus,
                                                                                                    ),
                                                                                                    right: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: db,
                                                                                                                        span: bytes(12003..12005),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                                op: BinOp::Sub(
                                                                                                    Minus,
                                                                                                ),
                                                                                                right: Expr::Lit {
                                                                                                    attrs: [],
                                                                                                    lit: Lit::Int {
                                                                                                        token: 1,
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                    diverge: None,
                                                                                },
                                                                            ),
                                                                            semi_token: Semi,
                                                                        },
                                                                        Stmt::Local {
                                                                            attrs: [],
                                                                            let_token: Let,
                                                                            pat: Pat::Ident {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: Some(
                                                                                    Mut,
                                                                                ),
                                                                                ident: Ident {
                                                                                    sym: substitution_cost,
                                                                                    span: bytes(12033..12050),
                                                                                },
                                                                                subpat: None,
                                                                            },
                                                                            init: Some(
                                                                                LocalInit {
                                                                                    eq_token: Eq,
                                                                                    expr: Expr::Binary {
                                                                                        attrs: [],
                                                                                        left: Expr::Index {
                                                                                            attrs: [],
                                                                                            expr: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: distances,
                                                                                                                span: bytes(12053..12062),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            bracket_token: Bracket,
                                                                                            index: Expr::Call {
                                                                                                attrs: [],
                                                                                                func: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: flat_index,
                                                                                                                    span: bytes(12063..12073),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                paren_token: Paren,
                                                                                                args: [
                                                                                                    Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: i,
                                                                                                                        span: bytes(12074..12075),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    Comma,
                                                                                                    Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: j,
                                                                                                                        span: bytes(12077..12078),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    Comma,
                                                                                                    Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: width,
                                                                                                                        span: bytes(12080..12085),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        op: BinOp::Add(
                                                                                            Plus,
                                                                                        ),
                                                                                        right: Expr::Lit {
                                                                                            attrs: [],
                                                                                            lit: Lit::Int {
                                                                                                token: 1,
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                    diverge: None,
                                                                                },
                                                                            ),
                                                                            semi_token: Semi,
                                                                        },
                                                                        Stmt::Expr(
                                                                            Expr::If {
                                                                                attrs: [],
                                                                                if_token: If,
                                                                                cond: Expr::Binary {
                                                                                    attrs: [],
                                                                                    left: Expr::Index {
                                                                                        attrs: [],
                                                                                        expr: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: a_elems,
                                                                                                            span: bytes(12108..12115),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        bracket_token: Bracket,
                                                                                        index: Expr::Binary {
                                                                                            attrs: [],
                                                                                            left: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: i,
                                                                                                                span: bytes(12116..12117),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            op: BinOp::Sub(
                                                                                                Minus,
                                                                                            ),
                                                                                            right: Expr::Lit {
                                                                                                attrs: [],
                                                                                                lit: Lit::Int {
                                                                                                    token: 1,
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                    op: BinOp::Eq(
                                                                                        EqEq,
                                                                                    ),
                                                                                    right: Expr::Index {
                                                                                        attrs: [],
                                                                                        expr: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: b_elems,
                                                                                                            span: bytes(12126..12133),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        bracket_token: Bracket,
                                                                                        index: Expr::Binary {
                                                                                            attrs: [],
                                                                                            left: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: j,
                                                                                                                span: bytes(12134..12135),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            op: BinOp::Sub(
                                                                                                Minus,
                                                                                            ),
                                                                                            right: Expr::Lit {
                                                                                                attrs: [],
                                                                                                lit: Lit::Int {
                                                                                                    token: 1,
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                },
                                                                                then_branch: Block {
                                                                                    brace_token: Brace,
                                                                                    stmts: [
                                                                                        Stmt::Expr(
                                                                                            Expr::Assign {
                                                                                                attrs: [],
                                                                                                left: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: db,
                                                                                                                    span: bytes(12159..12161),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                eq_token: Eq,
                                                                                                right: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: j,
                                                                                                                    span: bytes(12164..12165),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                            Some(
                                                                                                Semi,
                                                                                            ),
                                                                                        ),
                                                                                        Stmt::Expr(
                                                                                            Expr::Binary {
                                                                                                attrs: [],
                                                                                                left: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: substitution_cost,
                                                                                                                    span: bytes(12183..12200),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                op: BinOp::SubAssign(
                                                                                                    MinusEq,
                                                                                                ),
                                                                                                right: Expr::Lit {
                                                                                                    attrs: [],
                                                                                                    lit: Lit::Int {
                                                                                                        token: 1,
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                            Some(
                                                                                                Semi,
                                                                                            ),
                                                                                        ),
                                                                                    ],
                                                                                },
                                                                                else_branch: None,
                                                                            },
                                                                            None,
                                                                        ),
                                                                        Stmt::Expr(
                                                                            Expr::Assign {
                                                                                attrs: [],
                                                                                left: Expr::Index {
                                                                                    attrs: [],
                                                                                    expr: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: distances,
                                                                                                        span: bytes(12234..12243),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    bracket_token: Bracket,
                                                                                    index: Expr::Call {
                                                                                        attrs: [],
                                                                                        func: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: flat_index,
                                                                                                            span: bytes(12244..12254),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        paren_token: Paren,
                                                                                        args: [
                                                                                            Expr::Binary {
                                                                                                attrs: [],
                                                                                                left: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: i,
                                                                                                                    span: bytes(12255..12256),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                op: BinOp::Add(
                                                                                                    Plus,
                                                                                                ),
                                                                                                right: Expr::Lit {
                                                                                                    attrs: [],
                                                                                                    lit: Lit::Int {
                                                                                                        token: 1,
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                            Comma,
                                                                                            Expr::Binary {
                                                                                                attrs: [],
                                                                                                left: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: j,
                                                                                                                    span: bytes(12262..12263),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                op: BinOp::Add(
                                                                                                    Plus,
                                                                                                ),
                                                                                                right: Expr::Lit {
                                                                                                    attrs: [],
                                                                                                    lit: Lit::Int {
                                                                                                        token: 1,
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                            Comma,
                                                                                            Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: width,
                                                                                                                span: bytes(12269..12274),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                eq_token: Eq,
                                                                                right: Expr::Call {
                                                                                    attrs: [],
                                                                                    func: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: min,
                                                                                                        span: bytes(12279..12282),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    paren_token: Paren,
                                                                                    args: [
                                                                                        Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: substitution_cost,
                                                                                                            span: bytes(12300..12317),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        Comma,
                                                                                        Expr::Call {
                                                                                            attrs: [],
                                                                                            func: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: min,
                                                                                                                span: bytes(12335..12338),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            paren_token: Paren,
                                                                                            args: [
                                                                                                Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: insertion_cost,
                                                                                                                    span: bytes(12339..12353),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                Comma,
                                                                                                Expr::Call {
                                                                                                    attrs: [],
                                                                                                    func: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: min,
                                                                                                                        span: bytes(12355..12358),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    paren_token: Paren,
                                                                                                    args: [
                                                                                                        Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: deletion_cost,
                                                                                                                            span: bytes(12359..12372),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                        Comma,
                                                                                                        Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: transposition_cost,
                                                                                                                            span: bytes(12374..12392),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                        Comma,
                                                                                    ],
                                                                                },
                                                                            },
                                                                            Some(
                                                                                Semi,
                                                                            ),
                                                                        ),
                                                                    ],
                                                                },
                                                            },
                                                            None,
                                                        ),
                                                        Stmt::Expr(
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: elems,
                                                                                    span: bytes(12430..12435),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: insert,
                                                                    span: bytes(12436..12442),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::MethodCall {
                                                                        attrs: [],
                                                                        receiver: Expr::Index {
                                                                            attrs: [],
                                                                            expr: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: a_elems,
                                                                                                span: bytes(12443..12450),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            bracket_token: Bracket,
                                                                            index: Expr::Binary {
                                                                                attrs: [],
                                                                                left: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: i,
                                                                                                    span: bytes(12451..12452),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                op: BinOp::Sub(
                                                                                    Minus,
                                                                                ),
                                                                                right: Expr::Lit {
                                                                                    attrs: [],
                                                                                    lit: Lit::Int {
                                                                                        token: 1,
                                                                                    },
                                                                                },
                                                                            },
                                                                        },
                                                                        dot_token: Dot,
                                                                        method: Ident {
                                                                            sym: clone,
                                                                            span: bytes(12458..12463),
                                                                        },
                                                                        turbofish: None,
                                                                        paren_token: Paren,
                                                                        args: [],
                                                                    },
                                                                    Comma,
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: i,
                                                                                        span: bytes(12467..12468),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                    ],
                                                },
                                            },
                                            None,
                                        ),
                                        Stmt::Expr(
                                            Expr::Index {
                                                attrs: [],
                                                expr: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: distances,
                                                                    span: bytes(12482..12491),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                bracket_token: Bracket,
                                                index: Expr::Call {
                                                    attrs: [],
                                                    func: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: flat_index,
                                                                        span: bytes(12492..12502),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    paren_token: Paren,
                                                    args: [
                                                        Expr::Binary {
                                                            attrs: [],
                                                            left: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: a_len,
                                                                                span: bytes(12503..12508),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            op: BinOp::Add(
                                                                Plus,
                                                            ),
                                                            right: Expr::Lit {
                                                                attrs: [],
                                                                lit: Lit::Int {
                                                                    token: 1,
                                                                },
                                                            },
                                                        },
                                                        Comma,
                                                        Expr::Binary {
                                                            attrs: [],
                                                            left: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: b_len,
                                                                                span: bytes(12514..12519),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            op: BinOp::Add(
                                                                Plus,
                                                            ),
                                                            right: Expr::Lit {
                                                                attrs: [],
                                                                lit: Lit::Int {
                                                                    token: 1,
                                                                },
                                                            },
                                                        },
                                                        Comma,
                                                        Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: width,
                                                                            span: bytes(12525..12530),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ],
                                                },
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                    },
                    FnItem {
                        fn_name: Name {
                            name: "damerau_levenshtein_impl",
                            complete_name: "strsim::damerau_levenshtein_impl",
                            import_name: MyPath {
                                name: "strsim",
                                next: Some(
                                    MyPath {
                                        name: "damerau_levenshtein_impl",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "damerau_levenshtein_impl",
                        item: Some(
                            ItemFn {
                                attrs: [],
                                vis: Visibility::Inherited,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: damerau_levenshtein_impl,
                                        span: bytes(17732..17756),
                                    },
                                    generics: Generics {
                                        lt_token: Some(
                                            Lt,
                                        ),
                                        params: [
                                            GenericParam::Type(
                                                TypeParam {
                                                    attrs: [],
                                                    ident: Ident {
                                                        sym: Iter1,
                                                        span: bytes(17757..17762),
                                                    },
                                                    colon_token: None,
                                                    bounds: [],
                                                    eq_token: None,
                                                    default: None,
                                                },
                                            ),
                                            Comma,
                                            GenericParam::Type(
                                                TypeParam {
                                                    attrs: [],
                                                    ident: Ident {
                                                        sym: Iter2,
                                                        span: bytes(17764..17769),
                                                    },
                                                    colon_token: None,
                                                    bounds: [],
                                                    eq_token: None,
                                                    default: None,
                                                },
                                            ),
                                        ],
                                        gt_token: Some(
                                            Gt,
                                        ),
                                        where_clause: Some(
                                            WhereClause {
                                                where_token: Where,
                                                predicates: [
                                                    WherePredicate::Type(
                                                        PredicateType {
                                                            lifetimes: None,
                                                            bounded_ty: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Iter1,
                                                                                span: bytes(17838..17843),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            colon_token: Colon,
                                                            bounds: [
                                                                TypeParamBound::Trait(
                                                                    TraitBound {
                                                                        paren_token: None,
                                                                        modifier: TraitBoundModifier::None,
                                                                        lifetimes: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Iterator,
                                                                                        span: bytes(17845..17853),
                                                                                    },
                                                                                    arguments: PathArguments::AngleBracketed {
                                                                                        colon2_token: None,
                                                                                        lt_token: Lt,
                                                                                        args: [
                                                                                            GenericArgument::AssocType(
                                                                                                AssocType {
                                                                                                    ident: Ident {
                                                                                                        sym: Item,
                                                                                                        span: bytes(17854..17858),
                                                                                                    },
                                                                                                    generics: None,
                                                                                                    eq_token: Eq,
                                                                                                    ty: Type::Path {
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: char,
                                                                                                                        span: bytes(17861..17865),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                            ),
                                                                                        ],
                                                                                        gt_token: Gt,
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                                Plus,
                                                                TypeParamBound::Trait(
                                                                    TraitBound {
                                                                        paren_token: None,
                                                                        modifier: TraitBoundModifier::None,
                                                                        lifetimes: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Clone,
                                                                                        span: bytes(17869..17874),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                    Comma,
                                                    WherePredicate::Type(
                                                        PredicateType {
                                                            lifetimes: None,
                                                            bounded_ty: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Iter2,
                                                                                span: bytes(17880..17885),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            colon_token: Colon,
                                                            bounds: [
                                                                TypeParamBound::Trait(
                                                                    TraitBound {
                                                                        paren_token: None,
                                                                        modifier: TraitBoundModifier::None,
                                                                        lifetimes: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Iterator,
                                                                                        span: bytes(17887..17895),
                                                                                    },
                                                                                    arguments: PathArguments::AngleBracketed {
                                                                                        colon2_token: None,
                                                                                        lt_token: Lt,
                                                                                        args: [
                                                                                            GenericArgument::AssocType(
                                                                                                AssocType {
                                                                                                    ident: Ident {
                                                                                                        sym: Item,
                                                                                                        span: bytes(17896..17900),
                                                                                                    },
                                                                                                    generics: None,
                                                                                                    eq_token: Eq,
                                                                                                    ty: Type::Path {
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: char,
                                                                                                                        span: bytes(17903..17907),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                            ),
                                                                                        ],
                                                                                        gt_token: Gt,
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                                Plus,
                                                                TypeParamBound::Trait(
                                                                    TraitBound {
                                                                        paren_token: None,
                                                                        modifier: TraitBoundModifier::None,
                                                                        lifetimes: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Clone,
                                                                                        span: bytes(17911..17916),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                    Comma,
                                                ],
                                            },
                                        ),
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: s1,
                                                        span: bytes(17771..17773),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Iter1,
                                                                    span: bytes(17775..17780),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: len1,
                                                        span: bytes(17782..17786),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: usize,
                                                                    span: bytes(17788..17793),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: s2,
                                                        span: bytes(17795..17797),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Iter2,
                                                                    span: bytes(17799..17804),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: len2,
                                                        span: bytes(17806..17810),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: usize,
                                                                    span: bytes(17812..17817),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: usize,
                                                            span: bytes(17822..17827),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: None,
                                                ident: Ident {
                                                    sym: max_val,
                                                    span: bytes(18195..18202),
                                                },
                                                subpat: None,
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Cast {
                                                            attrs: [],
                                                            expr: Expr::Call {
                                                                attrs: [],
                                                                func: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: max,
                                                                                    span: bytes(18205..18208),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: len1,
                                                                                        span: bytes(18209..18213),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    Comma,
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: len2,
                                                                                        span: bytes(18215..18219),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            as_token: As,
                                                            ty: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: isize,
                                                                                span: bytes(18224..18229),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                        op: BinOp::Add(
                                                            Plus,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 1,
                                                            },
                                                        },
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                ident: Ident {
                                                    sym: last_row_id,
                                                    span: bytes(18248..18259),
                                                },
                                                subpat: None,
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Call {
                                                        attrs: [],
                                                        func: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: HybridGrowingHashmapChar,
                                                                            span: bytes(18262..18286),
                                                                        },
                                                                        arguments: PathArguments::AngleBracketed {
                                                                            colon2_token: Some(
                                                                                PathSep,
                                                                            ),
                                                                            lt_token: Lt,
                                                                            args: [
                                                                                GenericArgument::Type(
                                                                                    Type::Path {
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: RowId,
                                                                                                        span: bytes(18289..18294),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            ],
                                                                            gt_token: Gt,
                                                                        },
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: default,
                                                                            span: bytes(18297..18304),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        paren_token: Paren,
                                                        args: [],
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: None,
                                                ident: Ident {
                                                    sym: size,
                                                    span: bytes(18317..18321),
                                                },
                                                subpat: None,
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: len2,
                                                                            span: bytes(18324..18328),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        op: BinOp::Add(
                                                            Plus,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 2,
                                                            },
                                                        },
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                ident: Ident {
                                                    sym: fr,
                                                    span: bytes(18346..18348),
                                                },
                                                subpat: None,
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Macro {
                                                        attrs: [],
                                                        mac: Macro {
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: vec,
                                                                            span: bytes(18351..18354),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                            bang_token: Not,
                                                            delimiter: MacroDelimiter::Bracket(
                                                                Bracket,
                                                            ),
                                                            tokens: TokenStream [
                                                                Ident {
                                                                    sym: max_val,
                                                                    span: bytes(18356..18363),
                                                                },
                                                                Punct {
                                                                    char: ';',
                                                                    spacing: Alone,
                                                                    span: bytes(18363..18364),
                                                                },
                                                                Ident {
                                                                    sym: size,
                                                                    span: bytes(18365..18369),
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                ident: Ident {
                                                    sym: r1,
                                                    span: bytes(18384..18386),
                                                },
                                                subpat: None,
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Macro {
                                                        attrs: [],
                                                        mac: Macro {
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: vec,
                                                                            span: bytes(18389..18392),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                            bang_token: Not,
                                                            delimiter: MacroDelimiter::Bracket(
                                                                Bracket,
                                                            ),
                                                            tokens: TokenStream [
                                                                Ident {
                                                                    sym: max_val,
                                                                    span: bytes(18394..18401),
                                                                },
                                                                Punct {
                                                                    char: ';',
                                                                    spacing: Alone,
                                                                    span: bytes(18401..18402),
                                                                },
                                                                Ident {
                                                                    sym: size,
                                                                    span: bytes(18403..18407),
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Type {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    ident: Ident {
                                                        sym: r,
                                                        span: bytes(18422..18423),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Vec,
                                                                    span: bytes(18425..18428),
                                                                },
                                                                arguments: PathArguments::AngleBracketed {
                                                                    colon2_token: None,
                                                                    lt_token: Lt,
                                                                    args: [
                                                                        GenericArgument::Type(
                                                                            Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: isize,
                                                                                                span: bytes(18429..18434),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                    gt_token: Gt,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::Paren {
                                                                attrs: [],
                                                                paren_token: Paren,
                                                                expr: Expr::Range {
                                                                    attrs: [],
                                                                    start: Some(
                                                                        Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: max_val,
                                                                                            span: bytes(18439..18446),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ),
                                                                    limits: RangeLimits::HalfOpen(
                                                                        DotDot,
                                                                    ),
                                                                    end: Some(
                                                                        Expr::Binary {
                                                                            attrs: [],
                                                                            left: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: max_val,
                                                                                                span: bytes(18448..18455),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            op: BinOp::Add(
                                                                                Plus,
                                                                            ),
                                                                            right: Expr::Lit {
                                                                                attrs: [],
                                                                                lit: Lit::Int {
                                                                                    token: 1,
                                                                                },
                                                                            },
                                                                        },
                                                                    ),
                                                                },
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: chain,
                                                                span: bytes(18470..18475),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Range {
                                                                    attrs: [],
                                                                    start: Some(
                                                                        Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Int {
                                                                                token: 0,
                                                                            },
                                                                        },
                                                                    ),
                                                                    limits: RangeLimits::HalfOpen(
                                                                        DotDot,
                                                                    ),
                                                                    end: Some(
                                                                        Expr::Cast {
                                                                            attrs: [],
                                                                            expr: Expr::Paren {
                                                                                attrs: [],
                                                                                paren_token: Paren,
                                                                                expr: Expr::Binary {
                                                                                    attrs: [],
                                                                                    left: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: size,
                                                                                                        span: bytes(18480..18484),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    op: BinOp::Sub(
                                                                                        Minus,
                                                                                    ),
                                                                                    right: Expr::Lit {
                                                                                        attrs: [],
                                                                                        lit: Lit::Int {
                                                                                            token: 1,
                                                                                        },
                                                                                    },
                                                                                },
                                                                            },
                                                                            as_token: As,
                                                                            ty: Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: isize,
                                                                                                span: bytes(18493..18498),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        },
                                                                    ),
                                                                },
                                                            ],
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: collect,
                                                            span: bytes(18509..18516),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [],
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Expr(
                                            Expr::ForLoop {
                                                attrs: [],
                                                label: None,
                                                for_token: For,
                                                pat: Pat::Tuple {
                                                    attrs: [],
                                                    paren_token: Paren,
                                                    elems: [
                                                        Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: i,
                                                                span: bytes(18530..18531),
                                                            },
                                                            subpat: None,
                                                        },
                                                        Comma,
                                                        Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: ch1,
                                                                span: bytes(18533..18536),
                                                            },
                                                            subpat: None,
                                                        },
                                                    ],
                                                },
                                                in_token: In,
                                                expr: Expr::MethodCall {
                                                    attrs: [],
                                                    receiver: Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: s1,
                                                                            span: bytes(18541..18543),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: enumerate,
                                                            span: bytes(18544..18553),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [],
                                                    },
                                                    dot_token: Dot,
                                                    method: Ident {
                                                        sym: map,
                                                        span: bytes(18556..18559),
                                                    },
                                                    turbofish: None,
                                                    paren_token: Paren,
                                                    args: [
                                                        Expr::Closure {
                                                            attrs: [],
                                                            lifetimes: None,
                                                            constness: None,
                                                            movability: None,
                                                            asyncness: None,
                                                            capture: None,
                                                            or1_token: Or,
                                                            inputs: [
                                                                Pat::Tuple {
                                                                    attrs: [],
                                                                    paren_token: Paren,
                                                                    elems: [
                                                                        Pat::Ident {
                                                                            attrs: [],
                                                                            by_ref: None,
                                                                            mutability: None,
                                                                            ident: Ident {
                                                                                sym: i,
                                                                                span: bytes(18562..18563),
                                                                            },
                                                                            subpat: None,
                                                                        },
                                                                        Comma,
                                                                        Pat::Ident {
                                                                            attrs: [],
                                                                            by_ref: None,
                                                                            mutability: None,
                                                                            ident: Ident {
                                                                                sym: ch1,
                                                                                span: bytes(18565..18568),
                                                                            },
                                                                            subpat: None,
                                                                        },
                                                                    ],
                                                                },
                                                            ],
                                                            or2_token: Or,
                                                            output: ReturnType::Default,
                                                            body: Expr::Tuple {
                                                                attrs: [],
                                                                paren_token: Paren,
                                                                elems: [
                                                                    Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: i,
                                                                                            span: bytes(18572..18573),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        op: BinOp::Add(
                                                                            Plus,
                                                                        ),
                                                                        right: Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Int {
                                                                                token: 1,
                                                                            },
                                                                        },
                                                                    },
                                                                    Comma,
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: ch1,
                                                                                        span: bytes(18579..18582),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ],
                                                },
                                                body: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::Call {
                                                                attrs: [],
                                                                func: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: mem,
                                                                                    span: bytes(18595..18598),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: swap,
                                                                                    span: bytes(18600..18604),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Reference {
                                                                        attrs: [],
                                                                        and_token: And,
                                                                        mutability: Some(
                                                                            Mut,
                                                                        ),
                                                                        expr: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: r,
                                                                                            span: bytes(18610..18611),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                    Comma,
                                                                    Expr::Reference {
                                                                        attrs: [],
                                                                        and_token: And,
                                                                        mutability: Some(
                                                                            Mut,
                                                                        ),
                                                                        expr: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: r1,
                                                                                            span: bytes(18618..18620),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                        Stmt::Local {
                                                            attrs: [],
                                                            let_token: Let,
                                                            pat: Pat::Type {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    ident: Ident {
                                                                        sym: last_col_id,
                                                                        span: bytes(18639..18650),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: isize,
                                                                                    span: bytes(18652..18657),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                            init: Some(
                                                                LocalInit {
                                                                    eq_token: Eq,
                                                                    expr: Expr::Unary {
                                                                        attrs: [],
                                                                        op: UnOp::Neg(
                                                                            Minus,
                                                                        ),
                                                                        expr: Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Int {
                                                                                token: 1,
                                                                            },
                                                                        },
                                                                    },
                                                                    diverge: None,
                                                                },
                                                            ),
                                                            semi_token: Semi,
                                                        },
                                                        Stmt::Local {
                                                            attrs: [],
                                                            let_token: Let,
                                                            pat: Pat::Ident {
                                                                attrs: [],
                                                                by_ref: None,
                                                                mutability: Some(
                                                                    Mut,
                                                                ),
                                                                ident: Ident {
                                                                    sym: last_i2l1,
                                                                    span: bytes(18680..18689),
                                                                },
                                                                subpat: None,
                                                            },
                                                            init: Some(
                                                                LocalInit {
                                                                    eq_token: Eq,
                                                                    expr: Expr::Index {
                                                                        attrs: [],
                                                                        expr: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: r,
                                                                                            span: bytes(18692..18693),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        bracket_token: Bracket,
                                                                        index: Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Int {
                                                                                token: 1,
                                                                            },
                                                                        },
                                                                    },
                                                                    diverge: None,
                                                                },
                                                            ),
                                                            semi_token: Semi,
                                                        },
                                                        Stmt::Expr(
                                                            Expr::Assign {
                                                                attrs: [],
                                                                left: Expr::Index {
                                                                    attrs: [],
                                                                    expr: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: r,
                                                                                        span: bytes(18706..18707),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    bracket_token: Bracket,
                                                                    index: Expr::Lit {
                                                                        attrs: [],
                                                                        lit: Lit::Int {
                                                                            token: 1,
                                                                        },
                                                                    },
                                                                },
                                                                eq_token: Eq,
                                                                right: Expr::Cast {
                                                                    attrs: [],
                                                                    expr: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: i,
                                                                                        span: bytes(18713..18714),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    as_token: As,
                                                                    ty: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: isize,
                                                                                        span: bytes(18718..18723),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                        Stmt::Local {
                                                            attrs: [],
                                                            let_token: Let,
                                                            pat: Pat::Ident {
                                                                attrs: [],
                                                                by_ref: None,
                                                                mutability: Some(
                                                                    Mut,
                                                                ),
                                                                ident: Ident {
                                                                    sym: t,
                                                                    span: bytes(18741..18742),
                                                                },
                                                                subpat: None,
                                                            },
                                                            init: Some(
                                                                LocalInit {
                                                                    eq_token: Eq,
                                                                    expr: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: max_val,
                                                                                        span: bytes(18745..18752),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    diverge: None,
                                                                },
                                                            ),
                                                            semi_token: Semi,
                                                        },
                                                        Stmt::Expr(
                                                            Expr::ForLoop {
                                                                attrs: [],
                                                                label: None,
                                                                for_token: For,
                                                                pat: Pat::Tuple {
                                                                    attrs: [],
                                                                    paren_token: Paren,
                                                                    elems: [
                                                                        Pat::Ident {
                                                                            attrs: [],
                                                                            by_ref: None,
                                                                            mutability: None,
                                                                            ident: Ident {
                                                                                sym: j,
                                                                                span: bytes(18768..18769),
                                                                            },
                                                                            subpat: None,
                                                                        },
                                                                        Comma,
                                                                        Pat::Ident {
                                                                            attrs: [],
                                                                            by_ref: None,
                                                                            mutability: None,
                                                                            ident: Ident {
                                                                                sym: ch2,
                                                                                span: bytes(18771..18774),
                                                                            },
                                                                            subpat: None,
                                                                        },
                                                                    ],
                                                                },
                                                                in_token: In,
                                                                expr: Expr::MethodCall {
                                                                    attrs: [],
                                                                    receiver: Expr::MethodCall {
                                                                        attrs: [],
                                                                        receiver: Expr::MethodCall {
                                                                            attrs: [],
                                                                            receiver: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: s2,
                                                                                                span: bytes(18779..18781),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            dot_token: Dot,
                                                                            method: Ident {
                                                                                sym: clone,
                                                                                span: bytes(18782..18787),
                                                                            },
                                                                            turbofish: None,
                                                                            paren_token: Paren,
                                                                            args: [],
                                                                        },
                                                                        dot_token: Dot,
                                                                        method: Ident {
                                                                            sym: enumerate,
                                                                            span: bytes(18790..18799),
                                                                        },
                                                                        turbofish: None,
                                                                        paren_token: Paren,
                                                                        args: [],
                                                                    },
                                                                    dot_token: Dot,
                                                                    method: Ident {
                                                                        sym: map,
                                                                        span: bytes(18802..18805),
                                                                    },
                                                                    turbofish: None,
                                                                    paren_token: Paren,
                                                                    args: [
                                                                        Expr::Closure {
                                                                            attrs: [],
                                                                            lifetimes: None,
                                                                            constness: None,
                                                                            movability: None,
                                                                            asyncness: None,
                                                                            capture: None,
                                                                            or1_token: Or,
                                                                            inputs: [
                                                                                Pat::Tuple {
                                                                                    attrs: [],
                                                                                    paren_token: Paren,
                                                                                    elems: [
                                                                                        Pat::Ident {
                                                                                            attrs: [],
                                                                                            by_ref: None,
                                                                                            mutability: None,
                                                                                            ident: Ident {
                                                                                                sym: j,
                                                                                                span: bytes(18808..18809),
                                                                                            },
                                                                                            subpat: None,
                                                                                        },
                                                                                        Comma,
                                                                                        Pat::Ident {
                                                                                            attrs: [],
                                                                                            by_ref: None,
                                                                                            mutability: None,
                                                                                            ident: Ident {
                                                                                                sym: ch2,
                                                                                                span: bytes(18811..18814),
                                                                                            },
                                                                                            subpat: None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            ],
                                                                            or2_token: Or,
                                                                            output: ReturnType::Default,
                                                                            body: Expr::Tuple {
                                                                                attrs: [],
                                                                                paren_token: Paren,
                                                                                elems: [
                                                                                    Expr::Binary {
                                                                                        attrs: [],
                                                                                        left: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: j,
                                                                                                            span: bytes(18818..18819),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        op: BinOp::Add(
                                                                                            Plus,
                                                                                        ),
                                                                                        right: Expr::Lit {
                                                                                            attrs: [],
                                                                                            lit: Lit::Int {
                                                                                                token: 1,
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                    Comma,
                                                                                    Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: ch2,
                                                                                                        span: bytes(18825..18828),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                                body: Block {
                                                                    brace_token: Brace,
                                                                    stmts: [
                                                                        Stmt::Local {
                                                                            attrs: [],
                                                                            let_token: Let,
                                                                            pat: Pat::Ident {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident {
                                                                                    sym: diag,
                                                                                    span: bytes(18849..18853),
                                                                                },
                                                                                subpat: None,
                                                                            },
                                                                            init: Some(
                                                                                LocalInit {
                                                                                    eq_token: Eq,
                                                                                    expr: Expr::Binary {
                                                                                        attrs: [],
                                                                                        left: Expr::Index {
                                                                                            attrs: [],
                                                                                            expr: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: r1,
                                                                                                                span: bytes(18856..18858),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            bracket_token: Bracket,
                                                                                            index: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: j,
                                                                                                                span: bytes(18859..18860),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                        op: BinOp::Add(
                                                                                            Plus,
                                                                                        ),
                                                                                        right: Expr::Call {
                                                                                            attrs: [],
                                                                                            func: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: isize,
                                                                                                                span: bytes(18864..18869),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                        PathSep,
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: from,
                                                                                                                span: bytes(18871..18875),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            paren_token: Paren,
                                                                                            args: [
                                                                                                Expr::Binary {
                                                                                                    attrs: [],
                                                                                                    left: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: ch1,
                                                                                                                        span: bytes(18876..18879),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    op: BinOp::Ne(
                                                                                                        Ne,
                                                                                                    ),
                                                                                                    right: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: ch2,
                                                                                                                        span: bytes(18883..18886),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    diverge: None,
                                                                                },
                                                                            ),
                                                                            semi_token: Semi,
                                                                        },
                                                                        Stmt::Local {
                                                                            attrs: [],
                                                                            let_token: Let,
                                                                            pat: Pat::Ident {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident {
                                                                                    sym: left,
                                                                                    span: bytes(18905..18909),
                                                                                },
                                                                                subpat: None,
                                                                            },
                                                                            init: Some(
                                                                                LocalInit {
                                                                                    eq_token: Eq,
                                                                                    expr: Expr::Binary {
                                                                                        attrs: [],
                                                                                        left: Expr::Index {
                                                                                            attrs: [],
                                                                                            expr: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: r,
                                                                                                                span: bytes(18912..18913),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            bracket_token: Bracket,
                                                                                            index: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: j,
                                                                                                                span: bytes(18914..18915),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                        op: BinOp::Add(
                                                                                            Plus,
                                                                                        ),
                                                                                        right: Expr::Lit {
                                                                                            attrs: [],
                                                                                            lit: Lit::Int {
                                                                                                token: 1,
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                    diverge: None,
                                                                                },
                                                                            ),
                                                                            semi_token: Semi,
                                                                        },
                                                                        Stmt::Local {
                                                                            attrs: [],
                                                                            let_token: Let,
                                                                            pat: Pat::Ident {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident {
                                                                                    sym: up,
                                                                                    span: bytes(18938..18940),
                                                                                },
                                                                                subpat: None,
                                                                            },
                                                                            init: Some(
                                                                                LocalInit {
                                                                                    eq_token: Eq,
                                                                                    expr: Expr::Binary {
                                                                                        attrs: [],
                                                                                        left: Expr::Index {
                                                                                            attrs: [],
                                                                                            expr: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: r1,
                                                                                                                span: bytes(18943..18945),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            bracket_token: Bracket,
                                                                                            index: Expr::Binary {
                                                                                                attrs: [],
                                                                                                left: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: j,
                                                                                                                    span: bytes(18946..18947),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                op: BinOp::Add(
                                                                                                    Plus,
                                                                                                ),
                                                                                                right: Expr::Lit {
                                                                                                    attrs: [],
                                                                                                    lit: Lit::Int {
                                                                                                        token: 1,
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                        op: BinOp::Add(
                                                                                            Plus,
                                                                                        ),
                                                                                        right: Expr::Lit {
                                                                                            attrs: [],
                                                                                            lit: Lit::Int {
                                                                                                token: 1,
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                    diverge: None,
                                                                                },
                                                                            ),
                                                                            semi_token: Semi,
                                                                        },
                                                                        Stmt::Local {
                                                                            attrs: [],
                                                                            let_token: Let,
                                                                            pat: Pat::Ident {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: Some(
                                                                                    Mut,
                                                                                ),
                                                                                ident: Ident {
                                                                                    sym: temp,
                                                                                    span: bytes(18978..18982),
                                                                                },
                                                                                subpat: None,
                                                                            },
                                                                            init: Some(
                                                                                LocalInit {
                                                                                    eq_token: Eq,
                                                                                    expr: Expr::Call {
                                                                                        attrs: [],
                                                                                        func: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: min,
                                                                                                            span: bytes(18985..18988),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        paren_token: Paren,
                                                                                        args: [
                                                                                            Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: diag,
                                                                                                                span: bytes(18989..18993),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            Comma,
                                                                                            Expr::Call {
                                                                                                attrs: [],
                                                                                                func: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: min,
                                                                                                                    span: bytes(18995..18998),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                paren_token: Paren,
                                                                                                args: [
                                                                                                    Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: left,
                                                                                                                        span: bytes(18999..19003),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    Comma,
                                                                                                    Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: up,
                                                                                                                        span: bytes(19005..19007),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                    diverge: None,
                                                                                },
                                                                            ),
                                                                            semi_token: Semi,
                                                                        },
                                                                        Stmt::Expr(
                                                                            Expr::If {
                                                                                attrs: [],
                                                                                if_token: If,
                                                                                cond: Expr::Binary {
                                                                                    attrs: [],
                                                                                    left: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: ch1,
                                                                                                        span: bytes(19027..19030),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    op: BinOp::Eq(
                                                                                        EqEq,
                                                                                    ),
                                                                                    right: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: ch2,
                                                                                                        span: bytes(19034..19037),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                },
                                                                                then_branch: Block {
                                                                                    brace_token: Brace,
                                                                                    stmts: [
                                                                                        Stmt::Expr(
                                                                                            Expr::Assign {
                                                                                                attrs: [],
                                                                                                left: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: last_col_id,
                                                                                                                    span: bytes(19056..19067),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                eq_token: Eq,
                                                                                                right: Expr::Cast {
                                                                                                    attrs: [],
                                                                                                    expr: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: j,
                                                                                                                        span: bytes(19070..19071),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    as_token: As,
                                                                                                    ty: Type::Path {
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: isize,
                                                                                                                        span: bytes(19075..19080),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                            Some(
                                                                                                Semi,
                                                                                            ),
                                                                                        ),
                                                                                        Stmt::Expr(
                                                                                            Expr::Assign {
                                                                                                attrs: [],
                                                                                                left: Expr::Index {
                                                                                                    attrs: [],
                                                                                                    expr: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: fr,
                                                                                                                        span: bytes(19124..19126),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    bracket_token: Bracket,
                                                                                                    index: Expr::Binary {
                                                                                                        attrs: [],
                                                                                                        left: Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: j,
                                                                                                                            span: bytes(19127..19128),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                        op: BinOp::Add(
                                                                                                            Plus,
                                                                                                        ),
                                                                                                        right: Expr::Lit {
                                                                                                            attrs: [],
                                                                                                            lit: Lit::Int {
                                                                                                                token: 1,
                                                                                                            },
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                                eq_token: Eq,
                                                                                                right: Expr::Index {
                                                                                                    attrs: [],
                                                                                                    expr: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: r1,
                                                                                                                        span: bytes(19136..19138),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    bracket_token: Bracket,
                                                                                                    index: Expr::Binary {
                                                                                                        attrs: [],
                                                                                                        left: Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: j,
                                                                                                                            span: bytes(19139..19140),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                        op: BinOp::Sub(
                                                                                                            Minus,
                                                                                                        ),
                                                                                                        right: Expr::Lit {
                                                                                                            attrs: [],
                                                                                                            lit: Lit::Int {
                                                                                                                token: 1,
                                                                                                            },
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                            Some(
                                                                                                Semi,
                                                                                            ),
                                                                                        ),
                                                                                        Stmt::Expr(
                                                                                            Expr::Assign {
                                                                                                attrs: [],
                                                                                                left: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: t,
                                                                                                                    span: bytes(19181..19182),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                eq_token: Eq,
                                                                                                right: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: last_i2l1,
                                                                                                                    span: bytes(19185..19194),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                            Some(
                                                                                                Semi,
                                                                                            ),
                                                                                        ),
                                                                                    ],
                                                                                },
                                                                                else_branch: Some(
                                                                                    (
                                                                                        Else,
                                                                                        Expr::Block {
                                                                                            attrs: [],
                                                                                            label: None,
                                                                                            block: Block {
                                                                                                brace_token: Brace,
                                                                                                stmts: [
                                                                                                    Stmt::Local {
                                                                                                        attrs: [],
                                                                                                        let_token: Let,
                                                                                                        pat: Pat::Ident {
                                                                                                            attrs: [],
                                                                                                            by_ref: None,
                                                                                                            mutability: None,
                                                                                                            ident: Ident {
                                                                                                                sym: k,
                                                                                                                span: bytes(19255..19256),
                                                                                                            },
                                                                                                            subpat: None,
                                                                                                        },
                                                                                                        init: Some(
                                                                                                            LocalInit {
                                                                                                                eq_token: Eq,
                                                                                                                expr: Expr::Field {
                                                                                                                    attrs: [],
                                                                                                                    base: Expr::MethodCall {
                                                                                                                        attrs: [],
                                                                                                                        receiver: Expr::Path {
                                                                                                                            attrs: [],
                                                                                                                            qself: None,
                                                                                                                            path: Path {
                                                                                                                                leading_colon: None,
                                                                                                                                segments: [
                                                                                                                                    PathSegment {
                                                                                                                                        ident: Ident {
                                                                                                                                            sym: last_row_id,
                                                                                                                                            span: bytes(19259..19270),
                                                                                                                                        },
                                                                                                                                        arguments: PathArguments::None,
                                                                                                                                    },
                                                                                                                                ],
                                                                                                                            },
                                                                                                                        },
                                                                                                                        dot_token: Dot,
                                                                                                                        method: Ident {
                                                                                                                            sym: get,
                                                                                                                            span: bytes(19271..19274),
                                                                                                                        },
                                                                                                                        turbofish: None,
                                                                                                                        paren_token: Paren,
                                                                                                                        args: [
                                                                                                                            Expr::Path {
                                                                                                                                attrs: [],
                                                                                                                                qself: None,
                                                                                                                                path: Path {
                                                                                                                                    leading_colon: None,
                                                                                                                                    segments: [
                                                                                                                                        PathSegment {
                                                                                                                                            ident: Ident {
                                                                                                                                                sym: ch2,
                                                                                                                                                span: bytes(19275..19278),
                                                                                                                                            },
                                                                                                                                            arguments: PathArguments::None,
                                                                                                                                        },
                                                                                                                                    ],
                                                                                                                                },
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                    dot_token: Dot,
                                                                                                                    member: Member::Named(
                                                                                                                        Ident {
                                                                                                                            sym: val,
                                                                                                                            span: bytes(19280..19283),
                                                                                                                        },
                                                                                                                    ),
                                                                                                                },
                                                                                                                diverge: None,
                                                                                                            },
                                                                                                        ),
                                                                                                        semi_token: Semi,
                                                                                                    },
                                                                                                    Stmt::Local {
                                                                                                        attrs: [],
                                                                                                        let_token: Let,
                                                                                                        pat: Pat::Ident {
                                                                                                            attrs: [],
                                                                                                            by_ref: None,
                                                                                                            mutability: None,
                                                                                                            ident: Ident {
                                                                                                                sym: l,
                                                                                                                span: bytes(19305..19306),
                                                                                                            },
                                                                                                            subpat: None,
                                                                                                        },
                                                                                                        init: Some(
                                                                                                            LocalInit {
                                                                                                                eq_token: Eq,
                                                                                                                expr: Expr::Path {
                                                                                                                    attrs: [],
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: last_col_id,
                                                                                                                                    span: bytes(19309..19320),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                                diverge: None,
                                                                                                            },
                                                                                                        ),
                                                                                                        semi_token: Semi,
                                                                                                    },
                                                                                                    Stmt::Expr(
                                                                                                        Expr::If {
                                                                                                            attrs: [],
                                                                                                            if_token: If,
                                                                                                            cond: Expr::Binary {
                                                                                                                attrs: [],
                                                                                                                left: Expr::Binary {
                                                                                                                    attrs: [],
                                                                                                                    left: Expr::Cast {
                                                                                                                        attrs: [],
                                                                                                                        expr: Expr::Path {
                                                                                                                            attrs: [],
                                                                                                                            qself: None,
                                                                                                                            path: Path {
                                                                                                                                leading_colon: None,
                                                                                                                                segments: [
                                                                                                                                    PathSegment {
                                                                                                                                        ident: Ident {
                                                                                                                                            sym: j,
                                                                                                                                            span: bytes(19342..19343),
                                                                                                                                        },
                                                                                                                                        arguments: PathArguments::None,
                                                                                                                                    },
                                                                                                                                ],
                                                                                                                            },
                                                                                                                        },
                                                                                                                        as_token: As,
                                                                                                                        ty: Type::Path {
                                                                                                                            qself: None,
                                                                                                                            path: Path {
                                                                                                                                leading_colon: None,
                                                                                                                                segments: [
                                                                                                                                    PathSegment {
                                                                                                                                        ident: Ident {
                                                                                                                                            sym: isize,
                                                                                                                                            span: bytes(19347..19352),
                                                                                                                                        },
                                                                                                                                        arguments: PathArguments::None,
                                                                                                                                    },
                                                                                                                                ],
                                                                                                                            },
                                                                                                                        },
                                                                                                                    },
                                                                                                                    op: BinOp::Sub(
                                                                                                                        Minus,
                                                                                                                    ),
                                                                                                                    right: Expr::Path {
                                                                                                                        attrs: [],
                                                                                                                        qself: None,
                                                                                                                        path: Path {
                                                                                                                            leading_colon: None,
                                                                                                                            segments: [
                                                                                                                                PathSegment {
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: l,
                                                                                                                                        span: bytes(19355..19356),
                                                                                                                                    },
                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                },
                                                                                                                            ],
                                                                                                                        },
                                                                                                                    },
                                                                                                                },
                                                                                                                op: BinOp::Eq(
                                                                                                                    EqEq,
                                                                                                                ),
                                                                                                                right: Expr::Lit {
                                                                                                                    attrs: [],
                                                                                                                    lit: Lit::Int {
                                                                                                                        token: 1,
                                                                                                                    },
                                                                                                                },
                                                                                                            },
                                                                                                            then_branch: Block {
                                                                                                                brace_token: Brace,
                                                                                                                stmts: [
                                                                                                                    Stmt::Local {
                                                                                                                        attrs: [],
                                                                                                                        let_token: Let,
                                                                                                                        pat: Pat::Ident {
                                                                                                                            attrs: [],
                                                                                                                            by_ref: None,
                                                                                                                            mutability: None,
                                                                                                                            ident: Ident {
                                                                                                                                sym: transpose,
                                                                                                                                span: bytes(19388..19397),
                                                                                                                            },
                                                                                                                            subpat: None,
                                                                                                                        },
                                                                                                                        init: Some(
                                                                                                                            LocalInit {
                                                                                                                                eq_token: Eq,
                                                                                                                                expr: Expr::Binary {
                                                                                                                                    attrs: [],
                                                                                                                                    left: Expr::Index {
                                                                                                                                        attrs: [],
                                                                                                                                        expr: Expr::Path {
                                                                                                                                            attrs: [],
                                                                                                                                            qself: None,
                                                                                                                                            path: Path {
                                                                                                                                                leading_colon: None,
                                                                                                                                                segments: [
                                                                                                                                                    PathSegment {
                                                                                                                                                        ident: Ident {
                                                                                                                                                            sym: fr,
                                                                                                                                                            span: bytes(19400..19402),
                                                                                                                                                        },
                                                                                                                                                        arguments: PathArguments::None,
                                                                                                                                                    },
                                                                                                                                                ],
                                                                                                                                            },
                                                                                                                                        },
                                                                                                                                        bracket_token: Bracket,
                                                                                                                                        index: Expr::Binary {
                                                                                                                                            attrs: [],
                                                                                                                                            left: Expr::Path {
                                                                                                                                                attrs: [],
                                                                                                                                                qself: None,
                                                                                                                                                path: Path {
                                                                                                                                                    leading_colon: None,
                                                                                                                                                    segments: [
                                                                                                                                                        PathSegment {
                                                                                                                                                            ident: Ident {
                                                                                                                                                                sym: j,
                                                                                                                                                                span: bytes(19403..19404),
                                                                                                                                                            },
                                                                                                                                                            arguments: PathArguments::None,
                                                                                                                                                        },
                                                                                                                                                    ],
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            op: BinOp::Add(
                                                                                                                                                Plus,
                                                                                                                                            ),
                                                                                                                                            right: Expr::Lit {
                                                                                                                                                attrs: [],
                                                                                                                                                lit: Lit::Int {
                                                                                                                                                    token: 1,
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                    op: BinOp::Add(
                                                                                                                                        Plus,
                                                                                                                                    ),
                                                                                                                                    right: Expr::Paren {
                                                                                                                                        attrs: [],
                                                                                                                                        paren_token: Paren,
                                                                                                                                        expr: Expr::Binary {
                                                                                                                                            attrs: [],
                                                                                                                                            left: Expr::Cast {
                                                                                                                                                attrs: [],
                                                                                                                                                expr: Expr::Path {
                                                                                                                                                    attrs: [],
                                                                                                                                                    qself: None,
                                                                                                                                                    path: Path {
                                                                                                                                                        leading_colon: None,
                                                                                                                                                        segments: [
                                                                                                                                                            PathSegment {
                                                                                                                                                                ident: Ident {
                                                                                                                                                                    sym: i,
                                                                                                                                                                    span: bytes(19413..19414),
                                                                                                                                                                },
                                                                                                                                                                arguments: PathArguments::None,
                                                                                                                                                            },
                                                                                                                                                        ],
                                                                                                                                                    },
                                                                                                                                                },
                                                                                                                                                as_token: As,
                                                                                                                                                ty: Type::Path {
                                                                                                                                                    qself: None,
                                                                                                                                                    path: Path {
                                                                                                                                                        leading_colon: None,
                                                                                                                                                        segments: [
                                                                                                                                                            PathSegment {
                                                                                                                                                                ident: Ident {
                                                                                                                                                                    sym: isize,
                                                                                                                                                                    span: bytes(19418..19423),
                                                                                                                                                                },
                                                                                                                                                                arguments: PathArguments::None,
                                                                                                                                                            },
                                                                                                                                                        ],
                                                                                                                                                    },
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            op: BinOp::Sub(
                                                                                                                                                Minus,
                                                                                                                                            ),
                                                                                                                                            right: Expr::Path {
                                                                                                                                                attrs: [],
                                                                                                                                                qself: None,
                                                                                                                                                path: Path {
                                                                                                                                                    leading_colon: None,
                                                                                                                                                    segments: [
                                                                                                                                                        PathSegment {
                                                                                                                                                            ident: Ident {
                                                                                                                                                                sym: k,
                                                                                                                                                                span: bytes(19426..19427),
                                                                                                                                                            },
                                                                                                                                                            arguments: PathArguments::None,
                                                                                                                                                        },
                                                                                                                                                    ],
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                },
                                                                                                                                diverge: None,
                                                                                                                            },
                                                                                                                        ),
                                                                                                                        semi_token: Semi,
                                                                                                                    },
                                                                                                                    Stmt::Expr(
                                                                                                                        Expr::Assign {
                                                                                                                            attrs: [],
                                                                                                                            left: Expr::Path {
                                                                                                                                attrs: [],
                                                                                                                                qself: None,
                                                                                                                                path: Path {
                                                                                                                                    leading_colon: None,
                                                                                                                                    segments: [
                                                                                                                                        PathSegment {
                                                                                                                                            ident: Ident {
                                                                                                                                                sym: temp,
                                                                                                                                                span: bytes(19450..19454),
                                                                                                                                            },
                                                                                                                                            arguments: PathArguments::None,
                                                                                                                                        },
                                                                                                                                    ],
                                                                                                                                },
                                                                                                                            },
                                                                                                                            eq_token: Eq,
                                                                                                                            right: Expr::Call {
                                                                                                                                attrs: [],
                                                                                                                                func: Expr::Path {
                                                                                                                                    attrs: [],
                                                                                                                                    qself: None,
                                                                                                                                    path: Path {
                                                                                                                                        leading_colon: None,
                                                                                                                                        segments: [
                                                                                                                                            PathSegment {
                                                                                                                                                ident: Ident {
                                                                                                                                                    sym: min,
                                                                                                                                                    span: bytes(19457..19460),
                                                                                                                                                },
                                                                                                                                                arguments: PathArguments::None,
                                                                                                                                            },
                                                                                                                                        ],
                                                                                                                                    },
                                                                                                                                },
                                                                                                                                paren_token: Paren,
                                                                                                                                args: [
                                                                                                                                    Expr::Path {
                                                                                                                                        attrs: [],
                                                                                                                                        qself: None,
                                                                                                                                        path: Path {
                                                                                                                                            leading_colon: None,
                                                                                                                                            segments: [
                                                                                                                                                PathSegment {
                                                                                                                                                    ident: Ident {
                                                                                                                                                        sym: temp,
                                                                                                                                                        span: bytes(19461..19465),
                                                                                                                                                    },
                                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                                },
                                                                                                                                            ],
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                    Comma,
                                                                                                                                    Expr::Path {
                                                                                                                                        attrs: [],
                                                                                                                                        qself: None,
                                                                                                                                        path: Path {
                                                                                                                                            leading_colon: None,
                                                                                                                                            segments: [
                                                                                                                                                PathSegment {
                                                                                                                                                    ident: Ident {
                                                                                                                                                        sym: transpose,
                                                                                                                                                        span: bytes(19467..19476),
                                                                                                                                                    },
                                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                                },
                                                                                                                                            ],
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                ],
                                                                                                                            },
                                                                                                                        },
                                                                                                                        Some(
                                                                                                                            Semi,
                                                                                                                        ),
                                                                                                                    ),
                                                                                                                ],
                                                                                                            },
                                                                                                            else_branch: Some(
                                                                                                                (
                                                                                                                    Else,
                                                                                                                    Expr::If {
                                                                                                                        attrs: [],
                                                                                                                        if_token: If,
                                                                                                                        cond: Expr::Binary {
                                                                                                                            attrs: [],
                                                                                                                            left: Expr::Binary {
                                                                                                                                attrs: [],
                                                                                                                                left: Expr::Cast {
                                                                                                                                    attrs: [],
                                                                                                                                    expr: Expr::Path {
                                                                                                                                        attrs: [],
                                                                                                                                        qself: None,
                                                                                                                                        path: Path {
                                                                                                                                            leading_colon: None,
                                                                                                                                            segments: [
                                                                                                                                                PathSegment {
                                                                                                                                                    ident: Ident {
                                                                                                                                                        sym: i,
                                                                                                                                                        span: bytes(19505..19506),
                                                                                                                                                    },
                                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                                },
                                                                                                                                            ],
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                    as_token: As,
                                                                                                                                    ty: Type::Path {
                                                                                                                                        qself: None,
                                                                                                                                        path: Path {
                                                                                                                                            leading_colon: None,
                                                                                                                                            segments: [
                                                                                                                                                PathSegment {
                                                                                                                                                    ident: Ident {
                                                                                                                                                        sym: isize,
                                                                                                                                                        span: bytes(19510..19515),
                                                                                                                                                    },
                                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                                },
                                                                                                                                            ],
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                },
                                                                                                                                op: BinOp::Sub(
                                                                                                                                    Minus,
                                                                                                                                ),
                                                                                                                                right: Expr::Path {
                                                                                                                                    attrs: [],
                                                                                                                                    qself: None,
                                                                                                                                    path: Path {
                                                                                                                                        leading_colon: None,
                                                                                                                                        segments: [
                                                                                                                                            PathSegment {
                                                                                                                                                ident: Ident {
                                                                                                                                                    sym: k,
                                                                                                                                                    span: bytes(19518..19519),
                                                                                                                                                },
                                                                                                                                                arguments: PathArguments::None,
                                                                                                                                            },
                                                                                                                                        ],
                                                                                                                                    },
                                                                                                                                },
                                                                                                                            },
                                                                                                                            op: BinOp::Eq(
                                                                                                                                EqEq,
                                                                                                                            ),
                                                                                                                            right: Expr::Lit {
                                                                                                                                attrs: [],
                                                                                                                                lit: Lit::Int {
                                                                                                                                    token: 1,
                                                                                                                                },
                                                                                                                            },
                                                                                                                        },
                                                                                                                        then_branch: Block {
                                                                                                                            brace_token: Brace,
                                                                                                                            stmts: [
                                                                                                                                Stmt::Local {
                                                                                                                                    attrs: [],
                                                                                                                                    let_token: Let,
                                                                                                                                    pat: Pat::Ident {
                                                                                                                                        attrs: [],
                                                                                                                                        by_ref: None,
                                                                                                                                        mutability: None,
                                                                                                                                        ident: Ident {
                                                                                                                                            sym: transpose,
                                                                                                                                            span: bytes(19551..19560),
                                                                                                                                        },
                                                                                                                                        subpat: None,
                                                                                                                                    },
                                                                                                                                    init: Some(
                                                                                                                                        LocalInit {
                                                                                                                                            eq_token: Eq,
                                                                                                                                            expr: Expr::Binary {
                                                                                                                                                attrs: [],
                                                                                                                                                left: Expr::Path {
                                                                                                                                                    attrs: [],
                                                                                                                                                    qself: None,
                                                                                                                                                    path: Path {
                                                                                                                                                        leading_colon: None,
                                                                                                                                                        segments: [
                                                                                                                                                            PathSegment {
                                                                                                                                                                ident: Ident {
                                                                                                                                                                    sym: t,
                                                                                                                                                                    span: bytes(19563..19564),
                                                                                                                                                                },
                                                                                                                                                                arguments: PathArguments::None,
                                                                                                                                                            },
                                                                                                                                                        ],
                                                                                                                                                    },
                                                                                                                                                },
                                                                                                                                                op: BinOp::Add(
                                                                                                                                                    Plus,
                                                                                                                                                ),
                                                                                                                                                right: Expr::Paren {
                                                                                                                                                    attrs: [],
                                                                                                                                                    paren_token: Paren,
                                                                                                                                                    expr: Expr::Binary {
                                                                                                                                                        attrs: [],
                                                                                                                                                        left: Expr::Cast {
                                                                                                                                                            attrs: [],
                                                                                                                                                            expr: Expr::Path {
                                                                                                                                                                attrs: [],
                                                                                                                                                                qself: None,
                                                                                                                                                                path: Path {
                                                                                                                                                                    leading_colon: None,
                                                                                                                                                                    segments: [
                                                                                                                                                                        PathSegment {
                                                                                                                                                                            ident: Ident {
                                                                                                                                                                                sym: j,
                                                                                                                                                                                span: bytes(19568..19569),
                                                                                                                                                                            },
                                                                                                                                                                            arguments: PathArguments::None,
                                                                                                                                                                        },
                                                                                                                                                                    ],
                                                                                                                                                                },
                                                                                                                                                            },
                                                                                                                                                            as_token: As,
                                                                                                                                                            ty: Type::Path {
                                                                                                                                                                qself: None,
                                                                                                                                                                path: Path {
                                                                                                                                                                    leading_colon: None,
                                                                                                                                                                    segments: [
                                                                                                                                                                        PathSegment {
                                                                                                                                                                            ident: Ident {
                                                                                                                                                                                sym: isize,
                                                                                                                                                                                span: bytes(19573..19578),
                                                                                                                                                                            },
                                                                                                                                                                            arguments: PathArguments::None,
                                                                                                                                                                        },
                                                                                                                                                                    ],
                                                                                                                                                                },
                                                                                                                                                            },
                                                                                                                                                        },
                                                                                                                                                        op: BinOp::Sub(
                                                                                                                                                            Minus,
                                                                                                                                                        ),
                                                                                                                                                        right: Expr::Path {
                                                                                                                                                            attrs: [],
                                                                                                                                                            qself: None,
                                                                                                                                                            path: Path {
                                                                                                                                                                leading_colon: None,
                                                                                                                                                                segments: [
                                                                                                                                                                    PathSegment {
                                                                                                                                                                        ident: Ident {
                                                                                                                                                                            sym: l,
                                                                                                                                                                            span: bytes(19581..19582),
                                                                                                                                                                        },
                                                                                                                                                                        arguments: PathArguments::None,
                                                                                                                                                                    },
                                                                                                                                                                ],
                                                                                                                                                            },
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            diverge: None,
                                                                                                                                        },
                                                                                                                                    ),
                                                                                                                                    semi_token: Semi,
                                                                                                                                },
                                                                                                                                Stmt::Expr(
                                                                                                                                    Expr::Assign {
                                                                                                                                        attrs: [],
                                                                                                                                        left: Expr::Path {
                                                                                                                                            attrs: [],
                                                                                                                                            qself: None,
                                                                                                                                            path: Path {
                                                                                                                                                leading_colon: None,
                                                                                                                                                segments: [
                                                                                                                                                    PathSegment {
                                                                                                                                                        ident: Ident {
                                                                                                                                                            sym: temp,
                                                                                                                                                            span: bytes(19605..19609),
                                                                                                                                                        },
                                                                                                                                                        arguments: PathArguments::None,
                                                                                                                                                    },
                                                                                                                                                ],
                                                                                                                                            },
                                                                                                                                        },
                                                                                                                                        eq_token: Eq,
                                                                                                                                        right: Expr::Call {
                                                                                                                                            attrs: [],
                                                                                                                                            func: Expr::Path {
                                                                                                                                                attrs: [],
                                                                                                                                                qself: None,
                                                                                                                                                path: Path {
                                                                                                                                                    leading_colon: None,
                                                                                                                                                    segments: [
                                                                                                                                                        PathSegment {
                                                                                                                                                            ident: Ident {
                                                                                                                                                                sym: min,
                                                                                                                                                                span: bytes(19612..19615),
                                                                                                                                                            },
                                                                                                                                                            arguments: PathArguments::None,
                                                                                                                                                        },
                                                                                                                                                    ],
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            paren_token: Paren,
                                                                                                                                            args: [
                                                                                                                                                Expr::Path {
                                                                                                                                                    attrs: [],
                                                                                                                                                    qself: None,
                                                                                                                                                    path: Path {
                                                                                                                                                        leading_colon: None,
                                                                                                                                                        segments: [
                                                                                                                                                            PathSegment {
                                                                                                                                                                ident: Ident {
                                                                                                                                                                    sym: temp,
                                                                                                                                                                    span: bytes(19616..19620),
                                                                                                                                                                },
                                                                                                                                                                arguments: PathArguments::None,
                                                                                                                                                            },
                                                                                                                                                        ],
                                                                                                                                                    },
                                                                                                                                                },
                                                                                                                                                Comma,
                                                                                                                                                Expr::Path {
                                                                                                                                                    attrs: [],
                                                                                                                                                    qself: None,
                                                                                                                                                    path: Path {
                                                                                                                                                        leading_colon: None,
                                                                                                                                                        segments: [
                                                                                                                                                            PathSegment {
                                                                                                                                                                ident: Ident {
                                                                                                                                                                    sym: transpose,
                                                                                                                                                                    span: bytes(19622..19631),
                                                                                                                                                                },
                                                                                                                                                                arguments: PathArguments::None,
                                                                                                                                                            },
                                                                                                                                                        ],
                                                                                                                                                    },
                                                                                                                                                },
                                                                                                                                            ],
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                    Some(
                                                                                                                                        Semi,
                                                                                                                                    ),
                                                                                                                                ),
                                                                                                                            ],
                                                                                                                        },
                                                                                                                        else_branch: None,
                                                                                                                    },
                                                                                                                ),
                                                                                                            ),
                                                                                                        },
                                                                                                        None,
                                                                                                    ),
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    ),
                                                                                ),
                                                                            },
                                                                            None,
                                                                        ),
                                                                        Stmt::Expr(
                                                                            Expr::Assign {
                                                                                attrs: [],
                                                                                left: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: last_i2l1,
                                                                                                    span: bytes(19679..19688),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                eq_token: Eq,
                                                                                right: Expr::Index {
                                                                                    attrs: [],
                                                                                    expr: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: r,
                                                                                                        span: bytes(19691..19692),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    bracket_token: Bracket,
                                                                                    index: Expr::Binary {
                                                                                        attrs: [],
                                                                                        left: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: j,
                                                                                                            span: bytes(19693..19694),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        op: BinOp::Add(
                                                                                            Plus,
                                                                                        ),
                                                                                        right: Expr::Lit {
                                                                                            attrs: [],
                                                                                            lit: Lit::Int {
                                                                                                token: 1,
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                },
                                                                            },
                                                                            Some(
                                                                                Semi,
                                                                            ),
                                                                        ),
                                                                        Stmt::Expr(
                                                                            Expr::Assign {
                                                                                attrs: [],
                                                                                left: Expr::Index {
                                                                                    attrs: [],
                                                                                    expr: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: r,
                                                                                                        span: bytes(19713..19714),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    bracket_token: Bracket,
                                                                                    index: Expr::Binary {
                                                                                        attrs: [],
                                                                                        left: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: j,
                                                                                                            span: bytes(19715..19716),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        op: BinOp::Add(
                                                                                            Plus,
                                                                                        ),
                                                                                        right: Expr::Lit {
                                                                                            attrs: [],
                                                                                            lit: Lit::Int {
                                                                                                token: 1,
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                },
                                                                                eq_token: Eq,
                                                                                right: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: temp,
                                                                                                    span: bytes(19724..19728),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            },
                                                                            Some(
                                                                                Semi,
                                                                            ),
                                                                        ),
                                                                    ],
                                                                },
                                                            },
                                                            None,
                                                        ),
                                                        Stmt::Expr(
                                                            Expr::Assign {
                                                                attrs: [],
                                                                left: Expr::Field {
                                                                    attrs: [],
                                                                    base: Expr::MethodCall {
                                                                        attrs: [],
                                                                        receiver: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: last_row_id,
                                                                                            span: bytes(19748..19759),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        dot_token: Dot,
                                                                        method: Ident {
                                                                            sym: get_mut,
                                                                            span: bytes(19760..19767),
                                                                        },
                                                                        turbofish: None,
                                                                        paren_token: Paren,
                                                                        args: [
                                                                            Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: ch1,
                                                                                                span: bytes(19768..19771),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                    dot_token: Dot,
                                                                    member: Member::Named(
                                                                        Ident {
                                                                            sym: val,
                                                                            span: bytes(19773..19776),
                                                                        },
                                                                    ),
                                                                },
                                                                eq_token: Eq,
                                                                right: Expr::Cast {
                                                                    attrs: [],
                                                                    expr: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: i,
                                                                                        span: bytes(19779..19780),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    as_token: As,
                                                                    ty: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: isize,
                                                                                        span: bytes(19784..19789),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                    ],
                                                },
                                            },
                                            None,
                                        ),
                                        Stmt::Expr(
                                            Expr::Cast {
                                                attrs: [],
                                                expr: Expr::Index {
                                                    attrs: [],
                                                    expr: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: r,
                                                                        span: bytes(19802..19803),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    bracket_token: Bracket,
                                                    index: Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: len2,
                                                                            span: bytes(19804..19808),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        op: BinOp::Add(
                                                            Plus,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 1,
                                                            },
                                                        },
                                                    },
                                                },
                                                as_token: As,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: usize,
                                                                    span: bytes(19817..19822),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                    },
                    FnItem {
                        fn_name: Name {
                            name: "damerau_levenshtein",
                            complete_name: "strsim::damerau_levenshtein",
                            import_name: MyPath {
                                name: "strsim",
                                next: Some(
                                    MyPath {
                                        name: "damerau_levenshtein",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "damerau_levenshtein",
                        item: Some(
                            ItemFn {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: damerau_levenshtein,
                                        span: bytes(20080..20099),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: a,
                                                        span: bytes(20100..20101),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: None,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: str,
                                                                        span: bytes(20104..20107),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: b,
                                                        span: bytes(20109..20110),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: None,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: str,
                                                                        span: bytes(20113..20116),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: usize,
                                                            span: bytes(20121..20126),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Expr(
                                            Expr::Call {
                                                attrs: [],
                                                func: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: damerau_levenshtein_impl,
                                                                    span: bytes(20133..20157),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                paren_token: Paren,
                                                args: [
                                                    Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: a,
                                                                            span: bytes(20158..20159),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: chars,
                                                            span: bytes(20160..20165),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [],
                                                    },
                                                    Comma,
                                                    Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: a,
                                                                                span: bytes(20169..20170),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: chars,
                                                                span: bytes(20171..20176),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [],
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: count,
                                                            span: bytes(20179..20184),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [],
                                                    },
                                                    Comma,
                                                    Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: b,
                                                                            span: bytes(20188..20189),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: chars,
                                                            span: bytes(20190..20195),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [],
                                                    },
                                                    Comma,
                                                    Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: b,
                                                                                span: bytes(20199..20200),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: chars,
                                                                span: bytes(20201..20206),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [],
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: count,
                                                            span: bytes(20209..20214),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [],
                                                    },
                                                ],
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                    },
                    FnItem {
                        fn_name: Name {
                            name: "normalized_damerau_levenshtein",
                            complete_name: "strsim::normalized_damerau_levenshtein",
                            import_name: MyPath {
                                name: "strsim",
                                next: Some(
                                    MyPath {
                                        name: "normalized_damerau_levenshtein",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "normalized_damerau_levenshtein",
                        item: Some(
                            ItemFn {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: normalized_damerau_levenshtein,
                                        span: bytes(20873..20903),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: a,
                                                        span: bytes(20904..20905),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: None,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: str,
                                                                        span: bytes(20908..20911),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: b,
                                                        span: bytes(20913..20914),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: None,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: str,
                                                                        span: bytes(20917..20920),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: f64,
                                                            span: bytes(20925..20928),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Expr(
                                            Expr::If {
                                                attrs: [],
                                                if_token: If,
                                                cond: Expr::Binary {
                                                    attrs: [],
                                                    left: Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: a,
                                                                            span: bytes(20938..20939),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: is_empty,
                                                            span: bytes(20940..20948),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [],
                                                    },
                                                    op: BinOp::And(
                                                        AndAnd,
                                                    ),
                                                    right: Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: b,
                                                                            span: bytes(20954..20955),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: is_empty,
                                                            span: bytes(20956..20964),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [],
                                                    },
                                                },
                                                then_branch: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::Return {
                                                                attrs: [],
                                                                return_token: Return,
                                                                expr: Some(
                                                                    Expr::Lit {
                                                                        attrs: [],
                                                                        lit: Lit::Float {
                                                                            token: 1.0,
                                                                        },
                                                                    },
                                                                ),
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                    ],
                                                },
                                                else_branch: None,
                                            },
                                            None,
                                        ),
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: None,
                                                ident: Ident {
                                                    sym: len1,
                                                    span: bytes(21004..21008),
                                                },
                                                subpat: None,
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: a,
                                                                                span: bytes(21011..21012),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: chars,
                                                                span: bytes(21013..21018),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [],
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: count,
                                                            span: bytes(21021..21026),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [],
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: None,
                                                ident: Ident {
                                                    sym: len2,
                                                    span: bytes(21038..21042),
                                                },
                                                subpat: None,
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: b,
                                                                                span: bytes(21045..21046),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: chars,
                                                                span: bytes(21047..21052),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [],
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: count,
                                                            span: bytes(21055..21060),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [],
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: None,
                                                ident: Ident {
                                                    sym: dist,
                                                    span: bytes(21072..21076),
                                                },
                                                subpat: None,
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Call {
                                                        attrs: [],
                                                        func: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: damerau_levenshtein_impl,
                                                                            span: bytes(21079..21103),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        paren_token: Paren,
                                                        args: [
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: a,
                                                                                    span: bytes(21104..21105),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: chars,
                                                                    span: bytes(21106..21111),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [],
                                                            },
                                                            Comma,
                                                            Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: len1,
                                                                                span: bytes(21115..21119),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            Comma,
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: b,
                                                                                    span: bytes(21121..21122),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: chars,
                                                                    span: bytes(21123..21128),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [],
                                                            },
                                                            Comma,
                                                            Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: len2,
                                                                                span: bytes(21132..21136),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Expr(
                                            Expr::Binary {
                                                attrs: [],
                                                left: Expr::Lit {
                                                    attrs: [],
                                                    lit: Lit::Float {
                                                        token: 1.0,
                                                    },
                                                },
                                                op: BinOp::Sub(
                                                    Minus,
                                                ),
                                                right: Expr::Binary {
                                                    attrs: [],
                                                    left: Expr::Paren {
                                                        attrs: [],
                                                        paren_token: Paren,
                                                        expr: Expr::Cast {
                                                            attrs: [],
                                                            expr: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: dist,
                                                                                span: bytes(21150..21154),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            as_token: As,
                                                            ty: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: f64,
                                                                                span: bytes(21158..21161),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                    op: BinOp::Div(
                                                        Slash,
                                                    ),
                                                    right: Expr::Paren {
                                                        attrs: [],
                                                        paren_token: Paren,
                                                        expr: Expr::Cast {
                                                            attrs: [],
                                                            expr: Expr::Call {
                                                                attrs: [],
                                                                func: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: max,
                                                                                    span: bytes(21166..21169),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: len1,
                                                                                        span: bytes(21170..21174),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    Comma,
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: len2,
                                                                                        span: bytes(21176..21180),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            as_token: As,
                                                            ty: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: f64,
                                                                                span: bytes(21185..21188),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                    },
                    FnItem {
                        fn_name: Name {
                            name: "bigrams",
                            complete_name: "strsim::bigrams",
                            import_name: MyPath {
                                name: "strsim",
                                next: Some(
                                    MyPath {
                                        name: "bigrams",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "bigrams",
                        item: Some(
                            ItemFn {
                                attrs: [],
                                vis: Visibility::Inherited,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: bigrams,
                                        span: bytes(21236..21243),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: s,
                                                        span: bytes(21244..21245),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: None,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: str,
                                                                        span: bytes(21248..21251),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::ImplTrait {
                                            impl_token: Impl,
                                            bounds: [
                                                TypeParamBound::Trait(
                                                    TraitBound {
                                                        paren_token: None,
                                                        modifier: TraitBoundModifier::None,
                                                        lifetimes: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Iterator,
                                                                        span: bytes(21261..21269),
                                                                    },
                                                                    arguments: PathArguments::AngleBracketed {
                                                                        colon2_token: None,
                                                                        lt_token: Lt,
                                                                        args: [
                                                                            GenericArgument::AssocType(
                                                                                AssocType {
                                                                                    ident: Ident {
                                                                                        sym: Item,
                                                                                        span: bytes(21270..21274),
                                                                                    },
                                                                                    generics: None,
                                                                                    eq_token: Eq,
                                                                                    ty: Type::Tuple {
                                                                                        paren_token: Paren,
                                                                                        elems: [
                                                                                            Type::Path {
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: char,
                                                                                                                span: bytes(21278..21282),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            Comma,
                                                                                            Type::Path {
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: char,
                                                                                                                span: bytes(21284..21288),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            ),
                                                                        ],
                                                                        gt_token: Gt,
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                                Plus,
                                                TypeParamBound::Lifetime {
                                                    apostrophe: bytes(21293..21294),
                                                    ident: Ident {
                                                        sym: _,
                                                        span: bytes(21294..21295),
                                                    },
                                                },
                                            ],
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Expr(
                                            Expr::MethodCall {
                                                attrs: [],
                                                receiver: Expr::MethodCall {
                                                    attrs: [],
                                                    receiver: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: s,
                                                                        span: bytes(21302..21303),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    dot_token: Dot,
                                                    method: Ident {
                                                        sym: chars,
                                                        span: bytes(21304..21309),
                                                    },
                                                    turbofish: None,
                                                    paren_token: Paren,
                                                    args: [],
                                                },
                                                dot_token: Dot,
                                                method: Ident {
                                                    sym: zip,
                                                    span: bytes(21312..21315),
                                                },
                                                turbofish: None,
                                                paren_token: Paren,
                                                args: [
                                                    Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: s,
                                                                                span: bytes(21316..21317),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: chars,
                                                                span: bytes(21318..21323),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [],
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: skip,
                                                            span: bytes(21326..21330),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [
                                                            Expr::Lit {
                                                                attrs: [],
                                                                lit: Lit::Int {
                                                                    token: 1,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                ],
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                    },
                    FnItem {
                        fn_name: Name {
                            name: "sorensen_dice",
                            complete_name: "strsim::sorensen_dice",
                            import_name: MyPath {
                                name: "strsim",
                                next: Some(
                                    MyPath {
                                        name: "sorensen_dice",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "sorensen_dice",
                        item: Some(
                            ItemFn {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: sorensen_dice,
                                        span: bytes(21817..21830),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: a,
                                                        span: bytes(21831..21832),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: None,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: str,
                                                                        span: bytes(21835..21838),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: b,
                                                        span: bytes(21840..21841),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: None,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: str,
                                                                        span: bytes(21844..21847),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: f64,
                                                            span: bytes(21852..21855),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Type {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: a,
                                                        span: bytes(22014..22015),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: String,
                                                                    span: bytes(22017..22023),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: a,
                                                                                    span: bytes(22026..22027),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: chars,
                                                                    span: bytes(22028..22033),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [],
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: filter,
                                                                span: bytes(22036..22042),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Closure {
                                                                    attrs: [],
                                                                    lifetimes: None,
                                                                    constness: None,
                                                                    movability: None,
                                                                    asyncness: None,
                                                                    capture: None,
                                                                    or1_token: Or,
                                                                    inputs: [
                                                                        Pat::Reference {
                                                                            attrs: [],
                                                                            and_token: And,
                                                                            mutability: None,
                                                                            pat: Pat::Ident {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident {
                                                                                    sym: x,
                                                                                    span: bytes(22045..22046),
                                                                                },
                                                                                subpat: None,
                                                                            },
                                                                        },
                                                                    ],
                                                                    or2_token: Or,
                                                                    output: ReturnType::Default,
                                                                    body: Expr::Unary {
                                                                        attrs: [],
                                                                        op: UnOp::Not(
                                                                            Not,
                                                                        ),
                                                                        expr: Expr::Call {
                                                                            attrs: [],
                                                                            func: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: char,
                                                                                                span: bytes(22049..22053),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                        PathSep,
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: is_whitespace,
                                                                                                span: bytes(22055..22068),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            paren_token: Paren,
                                                                            args: [
                                                                                Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: x,
                                                                                                    span: bytes(22069..22070),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: collect,
                                                            span: bytes(22073..22080),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [],
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Type {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: b,
                                                        span: bytes(22092..22093),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: String,
                                                                    span: bytes(22095..22101),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: b,
                                                                                    span: bytes(22104..22105),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: chars,
                                                                    span: bytes(22106..22111),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [],
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: filter,
                                                                span: bytes(22114..22120),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Closure {
                                                                    attrs: [],
                                                                    lifetimes: None,
                                                                    constness: None,
                                                                    movability: None,
                                                                    asyncness: None,
                                                                    capture: None,
                                                                    or1_token: Or,
                                                                    inputs: [
                                                                        Pat::Reference {
                                                                            attrs: [],
                                                                            and_token: And,
                                                                            mutability: None,
                                                                            pat: Pat::Ident {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident {
                                                                                    sym: x,
                                                                                    span: bytes(22123..22124),
                                                                                },
                                                                                subpat: None,
                                                                            },
                                                                        },
                                                                    ],
                                                                    or2_token: Or,
                                                                    output: ReturnType::Default,
                                                                    body: Expr::Unary {
                                                                        attrs: [],
                                                                        op: UnOp::Not(
                                                                            Not,
                                                                        ),
                                                                        expr: Expr::Call {
                                                                            attrs: [],
                                                                            func: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: char,
                                                                                                span: bytes(22127..22131),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                        PathSep,
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: is_whitespace,
                                                                                                span: bytes(22133..22146),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            paren_token: Paren,
                                                                            args: [
                                                                                Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: x,
                                                                                                    span: bytes(22147..22148),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: collect,
                                                            span: bytes(22151..22158),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [],
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Expr(
                                            Expr::If {
                                                attrs: [],
                                                if_token: If,
                                                cond: Expr::Binary {
                                                    attrs: [],
                                                    left: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: a,
                                                                        span: bytes(22170..22171),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    op: BinOp::Eq(
                                                        EqEq,
                                                    ),
                                                    right: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: b,
                                                                        span: bytes(22175..22176),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                                then_branch: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::Return {
                                                                attrs: [],
                                                                return_token: Return,
                                                                expr: Some(
                                                                    Expr::Lit {
                                                                        attrs: [],
                                                                        lit: Lit::Float {
                                                                            token: 1.0,
                                                                        },
                                                                    },
                                                                ),
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                    ],
                                                },
                                                else_branch: None,
                                            },
                                            None,
                                        ),
                                        Stmt::Expr(
                                            Expr::If {
                                                attrs: [],
                                                if_token: If,
                                                cond: Expr::Binary {
                                                    attrs: [],
                                                    left: Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: a,
                                                                                span: bytes(22213..22214),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: len,
                                                                span: bytes(22215..22218),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [],
                                                        },
                                                        op: BinOp::Lt(
                                                            Lt,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 2,
                                                            },
                                                        },
                                                    },
                                                    op: BinOp::Or(
                                                        OrOr,
                                                    ),
                                                    right: Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: b,
                                                                                span: bytes(22228..22229),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: len,
                                                                span: bytes(22230..22233),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [],
                                                        },
                                                        op: BinOp::Lt(
                                                            Lt,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 2,
                                                            },
                                                        },
                                                    },
                                                },
                                                then_branch: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::Return {
                                                                attrs: [],
                                                                return_token: Return,
                                                                expr: Some(
                                                                    Expr::Lit {
                                                                        attrs: [],
                                                                        lit: Lit::Float {
                                                                            token: 0.0,
                                                                        },
                                                                    },
                                                                ),
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                    ],
                                                },
                                                else_branch: None,
                                            },
                                            None,
                                        ),
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Type {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    ident: Ident {
                                                        sym: a_bigrams,
                                                        span: bytes(22281..22290),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: HashMap,
                                                                    span: bytes(22292..22299),
                                                                },
                                                                arguments: PathArguments::AngleBracketed {
                                                                    colon2_token: None,
                                                                    lt_token: Lt,
                                                                    args: [
                                                                        GenericArgument::Type(
                                                                            Type::Tuple {
                                                                                paren_token: Paren,
                                                                                elems: [
                                                                                    Type::Path {
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: char,
                                                                                                        span: bytes(22301..22305),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    Comma,
                                                                                    Type::Path {
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: char,
                                                                                                        span: bytes(22307..22311),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ],
                                                                            },
                                                                        ),
                                                                        Comma,
                                                                        GenericArgument::Type(
                                                                            Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: usize,
                                                                                                span: bytes(22314..22319),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                    gt_token: Gt,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Call {
                                                        attrs: [],
                                                        func: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: HashMap,
                                                                            span: bytes(22323..22330),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: new,
                                                                            span: bytes(22332..22335),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        paren_token: Paren,
                                                        args: [],
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Expr(
                                            Expr::ForLoop {
                                                attrs: [],
                                                label: None,
                                                for_token: For,
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: bigram,
                                                        span: bytes(22348..22354),
                                                    },
                                                    subpat: None,
                                                },
                                                in_token: In,
                                                expr: Expr::Call {
                                                    attrs: [],
                                                    func: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: bigrams,
                                                                        span: bytes(22358..22365),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    paren_token: Paren,
                                                    args: [
                                                        Expr::Reference {
                                                            attrs: [],
                                                            and_token: And,
                                                            mutability: None,
                                                            expr: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: a,
                                                                                span: bytes(22367..22368),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    ],
                                                },
                                                body: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Unary {
                                                                    attrs: [],
                                                                    op: UnOp::Deref(
                                                                        Star,
                                                                    ),
                                                                    expr: Expr::MethodCall {
                                                                        attrs: [],
                                                                        receiver: Expr::MethodCall {
                                                                            attrs: [],
                                                                            receiver: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: a_bigrams,
                                                                                                span: bytes(22381..22390),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            dot_token: Dot,
                                                                            method: Ident {
                                                                                sym: entry,
                                                                                span: bytes(22391..22396),
                                                                            },
                                                                            turbofish: None,
                                                                            paren_token: Paren,
                                                                            args: [
                                                                                Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: bigram,
                                                                                                    span: bytes(22397..22403),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                        dot_token: Dot,
                                                                        method: Ident {
                                                                            sym: or_insert,
                                                                            span: bytes(22405..22414),
                                                                        },
                                                                        turbofish: None,
                                                                        paren_token: Paren,
                                                                        args: [
                                                                            Expr::Lit {
                                                                                attrs: [],
                                                                                lit: Lit::Int {
                                                                                    token: 0,
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                op: BinOp::AddAssign(
                                                                    PlusEq,
                                                                ),
                                                                right: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 1,
                                                                    },
                                                                },
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                    ],
                                                },
                                            },
                                            None,
                                        ),
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                ident: Ident {
                                                    sym: intersection_size,
                                                    span: bytes(22443..22460),
                                                },
                                                subpat: None,
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Lit {
                                                        attrs: [],
                                                        lit: Lit::Int {
                                                            token: 0_usize,
                                                        },
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Expr(
                                            Expr::ForLoop {
                                                attrs: [],
                                                label: None,
                                                for_token: For,
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: bigram,
                                                        span: bytes(22481..22487),
                                                    },
                                                    subpat: None,
                                                },
                                                in_token: In,
                                                expr: Expr::Call {
                                                    attrs: [],
                                                    func: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: bigrams,
                                                                        span: bytes(22491..22498),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    paren_token: Paren,
                                                    args: [
                                                        Expr::Reference {
                                                            attrs: [],
                                                            and_token: And,
                                                            mutability: None,
                                                            expr: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: b,
                                                                                span: bytes(22500..22501),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    ],
                                                },
                                                body: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::MethodCall {
                                                                    attrs: [],
                                                                    receiver: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: a_bigrams,
                                                                                        span: bytes(22513..22522),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    method: Ident {
                                                                        sym: entry,
                                                                        span: bytes(22523..22528),
                                                                    },
                                                                    turbofish: None,
                                                                    paren_token: Paren,
                                                                    args: [
                                                                        Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: bigram,
                                                                                            span: bytes(22529..22535),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: and_modify,
                                                                    span: bytes(22537..22547),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Closure {
                                                                        attrs: [],
                                                                        lifetimes: None,
                                                                        constness: None,
                                                                        movability: None,
                                                                        asyncness: None,
                                                                        capture: None,
                                                                        or1_token: Or,
                                                                        inputs: [
                                                                            Pat::Ident {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident {
                                                                                    sym: bi,
                                                                                    span: bytes(22549..22551),
                                                                                },
                                                                                subpat: None,
                                                                            },
                                                                        ],
                                                                        or2_token: Or,
                                                                        output: ReturnType::Default,
                                                                        body: Expr::Block {
                                                                            attrs: [],
                                                                            label: None,
                                                                            block: Block {
                                                                                brace_token: Brace,
                                                                                stmts: [
                                                                                    Stmt::Expr(
                                                                                        Expr::If {
                                                                                            attrs: [],
                                                                                            if_token: If,
                                                                                            cond: Expr::Binary {
                                                                                                attrs: [],
                                                                                                left: Expr::Unary {
                                                                                                    attrs: [],
                                                                                                    op: UnOp::Deref(
                                                                                                        Star,
                                                                                                    ),
                                                                                                    expr: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: bi,
                                                                                                                        span: bytes(22571..22573),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                                op: BinOp::Gt(
                                                                                                    Gt,
                                                                                                ),
                                                                                                right: Expr::Lit {
                                                                                                    attrs: [],
                                                                                                    lit: Lit::Int {
                                                                                                        token: 0,
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                            then_branch: Block {
                                                                                                brace_token: Brace,
                                                                                                stmts: [
                                                                                                    Stmt::Expr(
                                                                                                        Expr::Binary {
                                                                                                            attrs: [],
                                                                                                            left: Expr::Unary {
                                                                                                                attrs: [],
                                                                                                                op: UnOp::Deref(
                                                                                                                    Star,
                                                                                                                ),
                                                                                                                expr: Expr::Path {
                                                                                                                    attrs: [],
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: bi,
                                                                                                                                    span: bytes(22597..22599),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                            },
                                                                                                            op: BinOp::SubAssign(
                                                                                                                MinusEq,
                                                                                                            ),
                                                                                                            right: Expr::Lit {
                                                                                                                attrs: [],
                                                                                                                lit: Lit::Int {
                                                                                                                    token: 1,
                                                                                                                },
                                                                                                            },
                                                                                                        },
                                                                                                        Some(
                                                                                                            Semi,
                                                                                                        ),
                                                                                                    ),
                                                                                                    Stmt::Expr(
                                                                                                        Expr::Binary {
                                                                                                            attrs: [],
                                                                                                            left: Expr::Path {
                                                                                                                attrs: [],
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: intersection_size,
                                                                                                                                span: bytes(22622..22639),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                            op: BinOp::AddAssign(
                                                                                                                PlusEq,
                                                                                                            ),
                                                                                                            right: Expr::Lit {
                                                                                                                attrs: [],
                                                                                                                lit: Lit::Int {
                                                                                                                    token: 1,
                                                                                                                },
                                                                                                            },
                                                                                                        },
                                                                                                        Some(
                                                                                                            Semi,
                                                                                                        ),
                                                                                                    ),
                                                                                                ],
                                                                                            },
                                                                                            else_branch: None,
                                                                                        },
                                                                                        None,
                                                                                    ),
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                    ],
                                                },
                                            },
                                            None,
                                        ),
                                        Stmt::Expr(
                                            Expr::Binary {
                                                attrs: [],
                                                left: Expr::Cast {
                                                    attrs: [],
                                                    expr: Expr::Paren {
                                                        attrs: [],
                                                        paren_token: Paren,
                                                        expr: Expr::Binary {
                                                            attrs: [],
                                                            left: Expr::Lit {
                                                                attrs: [],
                                                                lit: Lit::Int {
                                                                    token: 2,
                                                                },
                                                            },
                                                            op: BinOp::Mul(
                                                                Star,
                                                            ),
                                                            right: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: intersection_size,
                                                                                span: bytes(22688..22705),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                    as_token: As,
                                                    ty: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: f64,
                                                                        span: bytes(22710..22713),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                                op: BinOp::Div(
                                                    Slash,
                                                ),
                                                right: Expr::Cast {
                                                    attrs: [],
                                                    expr: Expr::Paren {
                                                        attrs: [],
                                                        paren_token: Paren,
                                                        expr: Expr::Binary {
                                                            attrs: [],
                                                            left: Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::MethodCall {
                                                                    attrs: [],
                                                                    receiver: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: a,
                                                                                        span: bytes(22717..22718),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    method: Ident {
                                                                        sym: len,
                                                                        span: bytes(22719..22722),
                                                                    },
                                                                    turbofish: None,
                                                                    paren_token: Paren,
                                                                    args: [],
                                                                },
                                                                op: BinOp::Add(
                                                                    Plus,
                                                                ),
                                                                right: Expr::MethodCall {
                                                                    attrs: [],
                                                                    receiver: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: b,
                                                                                        span: bytes(22727..22728),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    method: Ident {
                                                                        sym: len,
                                                                        span: bytes(22729..22732),
                                                                    },
                                                                    turbofish: None,
                                                                    paren_token: Paren,
                                                                    args: [],
                                                                },
                                                            },
                                                            op: BinOp::Sub(
                                                                Minus,
                                                            ),
                                                            right: Expr::Lit {
                                                                attrs: [],
                                                                lit: Lit::Int {
                                                                    token: 2,
                                                                },
                                                            },
                                                        },
                                                    },
                                                    as_token: As,
                                                    ty: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: f64,
                                                                        span: bytes(22743..22746),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                    },
                ],
                traits: [],
                use_trees: [
                    UseTree {
                        use_name: "char",
                        alias_name: None,
                        use_tree: MyPath {
                            name: "std",
                            next: Some(
                                MyPath {
                                    name: "char",
                                    next: None,
                                },
                            ),
                        },
                        visibility: Pri,
                    },
                    UseTree {
                        use_name: "max",
                        alias_name: None,
                        use_tree: MyPath {
                            name: "std",
                            next: Some(
                                MyPath {
                                    name: "cmp",
                                    next: Some(
                                        MyPath {
                                            name: "max",
                                            next: None,
                                        },
                                    ),
                                },
                            ),
                        },
                        visibility: Pri,
                    },
                    UseTree {
                        use_name: "min",
                        alias_name: None,
                        use_tree: MyPath {
                            name: "std",
                            next: Some(
                                MyPath {
                                    name: "cmp",
                                    next: Some(
                                        MyPath {
                                            name: "min",
                                            next: None,
                                        },
                                    ),
                                },
                            ),
                        },
                        visibility: Pri,
                    },
                    UseTree {
                        use_name: "HashMap",
                        alias_name: None,
                        use_tree: MyPath {
                            name: "std",
                            next: Some(
                                MyPath {
                                    name: "collections",
                                    next: Some(
                                        MyPath {
                                            name: "HashMap",
                                            next: None,
                                        },
                                    ),
                                },
                            ),
                        },
                        visibility: Pri,
                    },
                    UseTree {
                        use_name: "TryFrom",
                        alias_name: None,
                        use_tree: MyPath {
                            name: "std",
                            next: Some(
                                MyPath {
                                    name: "convert",
                                    next: Some(
                                        MyPath {
                                            name: "TryFrom",
                                            next: None,
                                        },
                                    ),
                                },
                            ),
                        },
                        visibility: Pri,
                    },
                    UseTree {
                        use_name: "Error",
                        alias_name: None,
                        use_tree: MyPath {
                            name: "std",
                            next: Some(
                                MyPath {
                                    name: "error",
                                    next: Some(
                                        MyPath {
                                            name: "Error",
                                            next: None,
                                        },
                                    ),
                                },
                            ),
                        },
                        visibility: Pri,
                    },
                    UseTree {
                        use_name: "self",
                        alias_name: None,
                        use_tree: MyPath {
                            name: "std",
                            next: Some(
                                MyPath {
                                    name: "fmt",
                                    next: Some(
                                        MyPath {
                                            name: "self",
                                            next: None,
                                        },
                                    ),
                                },
                            ),
                        },
                        visibility: Pri,
                    },
                    UseTree {
                        use_name: "Display",
                        alias_name: None,
                        use_tree: MyPath {
                            name: "std",
                            next: Some(
                                MyPath {
                                    name: "fmt",
                                    next: Some(
                                        MyPath {
                                            name: "Display",
                                            next: None,
                                        },
                                    ),
                                },
                            ),
                        },
                        visibility: Pri,
                    },
                    UseTree {
                        use_name: "Formatter",
                        alias_name: None,
                        use_tree: MyPath {
                            name: "std",
                            next: Some(
                                MyPath {
                                    name: "fmt",
                                    next: Some(
                                        MyPath {
                                            name: "Formatter",
                                            next: None,
                                        },
                                    ),
                                },
                            ),
                        },
                        visibility: Pri,
                    },
                    UseTree {
                        use_name: "Hash",
                        alias_name: None,
                        use_tree: MyPath {
                            name: "std",
                            next: Some(
                                MyPath {
                                    name: "hash",
                                    next: Some(
                                        MyPath {
                                            name: "Hash",
                                            next: None,
                                        },
                                    ),
                                },
                            ),
                        },
                        visibility: Pri,
                    },
                    UseTree {
                        use_name: "mem",
                        alias_name: None,
                        use_tree: MyPath {
                            name: "std",
                            next: Some(
                                MyPath {
                                    name: "mem",
                                    next: None,
                                },
                            ),
                        },
                        visibility: Pri,
                    },
                    UseTree {
                        use_name: "Chars",
                        alias_name: None,
                        use_tree: MyPath {
                            name: "std",
                            next: Some(
                                MyPath {
                                    name: "str",
                                    next: Some(
                                        MyPath {
                                            name: "Chars",
                                            next: None,
                                        },
                                    ),
                                },
                            ),
                        },
                        visibility: Pri,
                    },
                ],
            },
             sub_mods: [
                RefCell {
                    value: ModContext {
                     mod_info: Mod(
                        ModModInfo {
                            mod_name: "tests",
                            mod_tree: MyPath {
                                name: "strsim",
                                next: Some(
                                    MyPath {
                                        name: "tests",
                                        next: None,
                                    },
                                ),
                            },
                            file_path: "",
                            parent_directory_path: "",
                            mod_file_directory_path: None,
                            visibility: PubS,
                        },
                    ),
                     syntax_context: SyntaxContext {
                        consts: [],
                        trait_aliases: [],
                        uses: [
                            UseItem {
                                item: Some(
                                    ItemUse {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        use_token: Use,
                                        leading_colon: None,
                                        tree: UseTree::Path(
                                            UsePath {
                                                ident: Ident {
                                                    sym: super,
                                                    span: bytes(22783..22788),
                                                },
                                                colon2_token: PathSep,
                                                tree: UseTree::Glob(
                                                    UseGlob {
                                                        star_token: Star,
                                                    },
                                                ),
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                ),
                                visibility: Pri,
                            },
                        ],
                        mods: [],
                        statics: [],
                        types: [],
                        structs: [],
                        enums: [],
                        unions: [],
                        impls: [],
                        functions: [
                            FnItem {
                                fn_name: Name {
                                    name: "assert_hamming_dist",
                                    complete_name: "strsim::tests::assert_hamming_dist",
                                    import_name: MyPath {
                                        name: "strsim",
                                        next: Some(
                                            MyPath {
                                                name: "tests",
                                                next: Some(
                                                    MyPath {
                                                        name: "assert_hamming_dist",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "assert_hamming_dist",
                                item: Some(
                                    ItemFn {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: assert_hamming_dist,
                                                span: bytes(23577..23596),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: dist,
                                                                span: bytes(23597..23601),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: usize,
                                                                            span: bytes(23603..23608),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                ),
                                                Comma,
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: str1,
                                                                span: bytes(23610..23614),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: None,
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: str,
                                                                                span: bytes(23617..23620),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                                Comma,
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: str2,
                                                                span: bytes(23622..23626),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: None,
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: str,
                                                                                span: bytes(23629..23632),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Default,
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Macro {
                                                    attrs: [],
                                                    mac: Macro {
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: assert_eq,
                                                                        span: bytes(23644..23653),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                        bang_token: Not,
                                                        delimiter: MacroDelimiter::Paren(
                                                            Paren,
                                                        ),
                                                        tokens: TokenStream [
                                                            Ident {
                                                                sym: Ok,
                                                                span: bytes(23655..23657),
                                                            },
                                                            Group {
                                                                delimiter: Parenthesis,
                                                                stream: TokenStream [
                                                                    Ident {
                                                                        sym: dist,
                                                                        span: bytes(23658..23662),
                                                                    },
                                                                ],
                                                                span: bytes(23657..23663),
                                                            },
                                                            Punct {
                                                                char: ',',
                                                                spacing: Alone,
                                                                span: bytes(23663..23664),
                                                            },
                                                            Ident {
                                                                sym: hamming,
                                                                span: bytes(23665..23672),
                                                            },
                                                            Group {
                                                                delimiter: Parenthesis,
                                                                stream: TokenStream [
                                                                    Ident {
                                                                        sym: str1,
                                                                        span: bytes(23673..23677),
                                                                    },
                                                                    Punct {
                                                                        char: ',',
                                                                        spacing: Alone,
                                                                        span: bytes(23677..23678),
                                                                    },
                                                                    Ident {
                                                                        sym: str2,
                                                                        span: bytes(23679..23683),
                                                                    },
                                                                ],
                                                                span: bytes(23672..23684),
                                                            },
                                                        ],
                                                    },
                                                    semi_token: Some(
                                                        Semi,
                                                    ),
                                                },
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: Pri,
                            },
                        ],
                        traits: [],
                        use_trees: [
                            UseTree {
                                use_name: "*",
                                alias_name: None,
                                use_tree: MyPath {
                                    name: "super",
                                    next: Some(
                                        MyPath {
                                            name: "*",
                                            next: None,
                                        },
                                    ),
                                },
                                visibility: Pri,
                            },
                        ],
                    },
                     sub_mods: []
                     }
                    ,
                },
            ]
             }
            ,
        },
    ],
}