[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            StorageLive(_4),
            StorageLive(_5),
            StorageLive(_6),
            _6 = &(*_1),
            _5 = StringWrapper::<'_>(move _6),
            StorageDead(_6),
            _4 = &_5,
            _3 = &(*_4),
            StorageLive(_7),
            StorageLive(_8),
            StorageLive(_9),
            StorageLive(_10),
            _10 = &(*_2),
            _9 = StringWrapper::<'_>(move _10),
            StorageDead(_10),
            _8 = &_9,
            _7 = &(*_8),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:270:5: 270:62 (#0),
                    scope: scope[0],
                },
                kind: _0 = generic_levenshtein::<'_, '_, StringWrapper<'_>, StringWrapper<'_>, char, char>(move _3, move _7) -> [return: bb1, unwind: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_7),
            StorageDead(_3),
            StorageDead(_9),
            StorageDead(_8),
            StorageDead(_5),
            StorageDead(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:271:2: 271:2 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:269:1: 271:2 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:269:41: 269:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/lib.rs:269:23: 269:27 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/lib.rs:269:20: 269:21 (#0),
                            ),
                        ),
                        pat_span: src/lib.rs:269:20: 269:21 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:269:20: 269:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/lib.rs:269:32: 269:36 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/lib.rs:269:29: 269:30 (#0),
                            ),
                        ),
                        pat_span: src/lib.rs:269:29: 269:30 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:269:29: 269:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/lib.rs:270:5: 270:62 (#0),
                },
            ),
        ),
        ty: &'{erased} StringWrapper<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:270:25: 270:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/lib.rs:270:5: 270:62 (#0),
                },
            ),
        ),
        ty: &'{erased} StringWrapper<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:270:25: 270:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/lib.rs:270:5: 270:62 (#0),
                },
            ),
        ),
        ty: StringWrapper<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:270:26: 270:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:270:40: 270:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/lib.rs:270:5: 270:62 (#0),
                },
            ),
        ),
        ty: &'{erased} StringWrapper<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:270:44: 270:61 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/lib.rs:270:5: 270:62 (#0),
                },
            ),
        ),
        ty: &'{erased} StringWrapper<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:270:44: 270:61 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/lib.rs:270:5: 270:62 (#0),
                },
            ),
        ),
        ty: StringWrapper<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:270:45: 270:61 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:270:59: 270:60 (#0),
            scope: scope[0],
        },
    },
]