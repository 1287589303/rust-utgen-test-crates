[
    BasicBlockData {
        statements: [
            StorageLive(_1),
            _1 = std::option::Option::<std::vec::Vec<GrowingHashmapMapElemChar<ValueType>>>::None,
            _0 = GrowingHashmapChar::<ValueType> { used: const 0_i32, fill: const 0_i32, mask: const -1_i32, map: move _1 },
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:457:9: 457:10 (#0),
                    scope: scope[0],
                },
                kind: drop(_1) -> [return: bb1, unwind: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:458:6: 458:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:451:5: 458:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: GrowingHashmapChar<ValueType/#0>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:451:21: 451:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: std::option::Option<std::vec::Vec<GrowingHashmapMapElemChar<ValueType/#0>, std::alloc::Global>>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:456:18: 456:22 (#0),
            scope: scope[0],
        },
    },
]