{
  "name": "strsim::jaro_winkler",
  "mod_info": {
    "name": "",
    "loc": "src/lib.rs:1:1:1307:2"
  },
  "visible": true,
  "loc": "src/lib.rs:221:1:223:2",
  "fn_tests": [
    {
      "chain_id": 1,
      "prompt_conds": [],
      "input_infer": "",
      "answers": [
        {
          "uses": [],
          "has_test_mod": false,
          "common": [],
          "chain_tests": [
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    assert!((1.0 - jaro_winkler(\"test\", \"test\")).abs() < 0.001);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    assert!((0.0 - jaro_winkler(\"abc\", \"xyz\")).abs() < 0.001);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    assert!((0.733 - jaro_winkler(\"night\", \"nacht\")).abs() < 0.001);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    assert!((0.866 - jaro_winkler(\"cheeseburger\", \"cheese fries\")).abs() < 0.001);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    assert!((0.0 - jaro_winkler(\"\", \"nonempty\")).abs() < 0.001);",
                "    assert!((0.0 - jaro_winkler(\"nonempty\", \"\")).abs() < 0.001);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let score = jaro_winkler(\"prefix_example\", \"prefix_test\");",
                "    assert!(score > 0.85);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    assert!((0.911 - jaro_winkler(\"Hello\", \"hello\")).abs() < 0.001);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    assert!((0.767 - jaro_winkler(\"longer_string\", \"long_string\")).abs() < 0.001);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    assert!((0.0 - jaro_winkler(\"a\", \"b\")).abs() < 0.001);",
                "    assert!((1.0 - jaro_winkler(\"a\", \"a\")).abs() < 0.001);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            }
          ]
        }
      ]
    }
  ]
}