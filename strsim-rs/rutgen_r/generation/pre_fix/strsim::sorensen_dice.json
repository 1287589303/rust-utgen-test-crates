{
  "name": "strsim::sorensen_dice",
  "mod_info": {
    "name": "",
    "loc": "src/lib.rs:1:1:1307:2"
  },
  "visible": true,
  "loc": "src/lib.rs:721:1:754:2",
  "fn_tests": [
    {
      "chain_id": 1,
      "prompt_conds": [
        "precondition: a == b at line 728 is true\n",
        "expected return value/type: 1.0\n"
      ],
      "input_infer": "",
      "answers": [
        {
          "uses": [],
          "has_test_mod": false,
          "common": [],
          "chain_tests": [
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    assert_eq!(1.0, sorensen_dice(\"test\", \"test\"));",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    assert_eq!(1.0, sorensen_dice(\" test \", \"test\"));",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    assert_eq!(1.0, sorensen_dice(\"te$t\", \"te$t\"));",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    assert_eq!(1.0, sorensen_dice(\"\", \"\"));",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    assert_eq!(1.0, sorensen_dice(\"Data\", \"Data\"));",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            }
          ]
        }
      ]
    },
    {
      "chain_id": 2,
      "prompt_conds": [
        "precondition: a == b at line 728 is false\n",
        "precondition: a.len() < 2 at line 732 is true\n",
        "expected return value/type: 0.0\n"
      ],
      "input_infer": "",
      "answers": [
        {
          "uses": [],
          "has_test_mod": false,
          "common": [],
          "chain_tests": [
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    assert_eq!(0.0, sorensen_dice(\"\", \"a\"));",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    assert_eq!(0.0, sorensen_dice(\"a\", \"b\"));",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    assert_eq!(0.0, sorensen_dice(\"ab\", \"c\"));",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    assert_eq!(0.0, sorensen_dice(\"\", \"cd\"));",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    assert_eq!(0.0, sorensen_dice(\"a\", \"cd\"));",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            }
          ]
        }
      ]
    },
    {
      "chain_id": 3,
      "prompt_conds": [
        "precondition: a == b at line 728 is false\n",
        "precondition: a.len() < 2 at line 732 is false, with bound a.len() == 2\n",
        "precondition: b.len() < 2 at line 732 is true\n",
        "expected return value/type: 0.0\n"
      ],
      "input_infer": "",
      "answers": [
        {
          "uses": [],
          "has_test_mod": false,
          "common": [],
          "chain_tests": [
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let a = \"ab\";",
                "    let b = \"c\";",
                "    let result = sorensen_dice(a, b);",
                "    assert_eq!(0.0, result);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let a = \"ab\";",
                "    let b = \"\";",
                "    let result = sorensen_dice(a, b);",
                "    assert_eq!(0.0, result);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            }
          ]
        }
      ]
    },
    {
      "chain_id": 4,
      "prompt_conds": [
        "precondition: a == b at line 728 is false\n",
        "precondition: a.len() < 2 at line 732 is false, with bound a.len() == 2\n",
        "precondition: b.len() < 2 at line 732 is false, with bound b.len() == 2\n",
        "precondition: bigram in bigrams(&a) at line 738 is true\n",
        "precondition: bigram in bigrams(&a) at line 738 is false\n",
        "precondition: bigram in bigrams(&b) at line 744 is true\n",
        "precondition: bigram in bigrams(&b) at line 744 is false\n",
        "expected return value/type: (2 * intersection_size) as f64 / (a.len() + b.len() - 2) as f64\n"
      ],
      "input_infer": "",
      "answers": [
        {
          "uses": [],
          "has_test_mod": false,
          "common": [],
          "chain_tests": [
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    assert_eq!(1.0, sorensen_dice(\"ab\", \"ab\"));",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    assert_eq!(0.0, sorensen_dice(\"ab\", \"cd\"));",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    assert_eq!(0.5, sorensen_dice(\"ab\", \"ac\"));",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    assert_eq!(1.0 / 3.0, sorensen_dice(\"ab\", \"bc\"));",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    assert_eq!(0.0, sorensen_dice(\"ab\", \"\"));",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    assert_eq!(0.0, sorensen_dice(\"a\", \"b\"));",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            }
          ]
        }
      ]
    },
    {
      "chain_id": 7,
      "prompt_conds": [
        "precondition: a == b at line 728 is false\n",
        "precondition: a.len() < 2 at line 732 is false, with bound a.len() == 2\n",
        "precondition: b.len() < 2 at line 732 is false, with bound b.len() == 2\n",
        "precondition: bigram in bigrams(&a) at line 738 is false\n",
        "precondition: bigram in bigrams(&b) at line 744 is false\n",
        "expected return value/type: (2 * intersection_size) as f64 / (a.len() + b.len() - 2) as f64\n"
      ],
      "input_infer": "",
      "answers": [
        {
          "uses": [],
          "has_test_mod": false,
          "common": [],
          "chain_tests": [
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    assert_eq!(1.0, sorensen_dice(\"ab\", \"ab\"));",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    assert_eq!(0.0, sorensen_dice(\"\", \"ab\"));",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    assert_eq!(0.0, sorensen_dice(\"ab\", \"cd\"));",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    assert_eq!(0.0, sorensen_dice(\"ab\", \"xy\"));",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    assert_eq!(1.0, sorensen_dice(\"ab\", \"ab\"));",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    assert_eq!(0.6666666666666666, sorensen_dice(\"aba\", \"bac\"));",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            }
          ]
        }
      ]
    }
  ]
}