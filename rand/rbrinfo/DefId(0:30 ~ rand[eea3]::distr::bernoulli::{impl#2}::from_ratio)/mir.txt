bb0
  0: StorageLive(_3)
    SourceInfo(src/distr/bernoulli.rs:130:9-132:10)
  1: StorageLive(_4)
    SourceInfo(src/distr/bernoulli.rs:130:12-130:35)
  2: StorageLive(_5)
    SourceInfo(src/distr/bernoulli.rs:130:12-130:21)
  3: _5 = _1
    SourceInfo(src/distr/bernoulli.rs:130:12-130:21)
  4: StorageLive(_6)
    SourceInfo(src/distr/bernoulli.rs:130:24-130:35)
  5: _6 = _2
    SourceInfo(src/distr/bernoulli.rs:130:24-130:35)
  6: _4 = Gt(move _5, move _6)
    SourceInfo(src/distr/bernoulli.rs:130:12-130:35)
  Terminator {
      source_info: SourceInfo(src/distr/bernoulli.rs:130:12-130:35)
      kind: switchInt(move _4) -> [0: bb2, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2]

bb1
  0: StorageDead(_6)
    SourceInfo(src/distr/bernoulli.rs:130:34-130:35)
  1: StorageDead(_5)
    SourceInfo(src/distr/bernoulli.rs:130:34-130:35)
  Terminator {
      source_info: SourceInfo(src/distr/bernoulli.rs:130:56-132:10)
      kind: goto -> bb4
  }
  preds [bb0]
  succs [bb4]

bb2
  0: StorageDead(_6)
    SourceInfo(src/distr/bernoulli.rs:130:34-130:35)
  1: StorageDead(_5)
    SourceInfo(src/distr/bernoulli.rs:130:34-130:35)
  2: StorageLive(_7)
    SourceInfo(src/distr/bernoulli.rs:130:39-130:55)
  3: StorageLive(_8)
    SourceInfo(src/distr/bernoulli.rs:130:39-130:50)
  4: _8 = _2
    SourceInfo(src/distr/bernoulli.rs:130:39-130:50)
  5: _7 = Eq(move _8, const 0_u32)
    SourceInfo(src/distr/bernoulli.rs:130:39-130:55)
  Terminator {
      source_info: SourceInfo(src/distr/bernoulli.rs:130:39-130:55)
      kind: switchInt(move _7) -> [0: bb5, otherwise: bb3]
  }
  preds [bb0]
  succs [bb3, bb5]

bb3
  0: StorageDead(_8)
    SourceInfo(src/distr/bernoulli.rs:130:54-130:55)
  Terminator {
      source_info: SourceInfo(src/distr/bernoulli.rs:130:56-132:10)
      kind: goto -> bb4
  }
  preds [bb2]
  succs [bb4]

bb4
  0: StorageLive(_10)
    SourceInfo(src/distr/bernoulli.rs:131:24-131:58)
  1: _10 = distr::bernoulli::BernoulliError::InvalidProbability
    SourceInfo(src/distr/bernoulli.rs:131:24-131:58)
  2: _0 = core::result::Result::<distr::bernoulli::Bernoulli, distr::bernoulli::BernoulliError>::Err(move _10)
    SourceInfo(src/distr/bernoulli.rs:131:20-131:59)
  3: StorageDead(_10)
    SourceInfo(src/distr/bernoulli.rs:131:58-131:59)
  4: StorageDead(_7)
    SourceInfo(src/distr/bernoulli.rs:132:9-132:10)
  5: StorageDead(_4)
    SourceInfo(src/distr/bernoulli.rs:132:9-132:10)
  6: StorageDead(_3)
    SourceInfo(src/distr/bernoulli.rs:132:9-132:10)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb10
  }
  preds [bb1, bb3]
  succs [bb10]

bb5
  0: StorageDead(_8)
    SourceInfo(src/distr/bernoulli.rs:130:54-130:55)
  1: _3 = const ()
    SourceInfo(src/distr/bernoulli.rs:132:10-132:10)
  2: StorageDead(_7)
    SourceInfo(src/distr/bernoulli.rs:132:9-132:10)
  3: StorageDead(_4)
    SourceInfo(src/distr/bernoulli.rs:132:9-132:10)
  4: StorageDead(_3)
    SourceInfo(src/distr/bernoulli.rs:132:9-132:10)
  5: StorageLive(_11)
    SourceInfo(src/distr/bernoulli.rs:133:9-135:10)
  6: StorageLive(_12)
    SourceInfo(src/distr/bernoulli.rs:133:12-133:36)
  7: StorageLive(_13)
    SourceInfo(src/distr/bernoulli.rs:133:12-133:21)
  8: _13 = _1
    SourceInfo(src/distr/bernoulli.rs:133:12-133:21)
  9: StorageLive(_14)
    SourceInfo(src/distr/bernoulli.rs:133:25-133:36)
  10: _14 = _2
    SourceInfo(src/distr/bernoulli.rs:133:25-133:36)
  11: _12 = Eq(move _13, move _14)
    SourceInfo(src/distr/bernoulli.rs:133:12-133:36)
  Terminator {
      source_info: SourceInfo(src/distr/bernoulli.rs:133:12-133:36)
      kind: switchInt(move _12) -> [0: bb7, otherwise: bb6]
  }
  preds [bb2]
  succs [bb6, bb7]

bb6
  0: StorageDead(_14)
    SourceInfo(src/distr/bernoulli.rs:133:35-133:36)
  1: StorageDead(_13)
    SourceInfo(src/distr/bernoulli.rs:133:35-133:36)
  2: StorageLive(_16)
    SourceInfo(src/distr/bernoulli.rs:134:23-134:55)
  3: _16 = distr::bernoulli::Bernoulli { p_int: const distr::bernoulli::ALWAYS_TRUE }
    SourceInfo(src/distr/bernoulli.rs:134:23-134:55)
  4: _0 = core::result::Result::<distr::bernoulli::Bernoulli, distr::bernoulli::BernoulliError>::Ok(move _16)
    SourceInfo(src/distr/bernoulli.rs:134:20-134:56)
  5: StorageDead(_16)
    SourceInfo(src/distr/bernoulli.rs:134:55-134:56)
  6: StorageDead(_12)
    SourceInfo(src/distr/bernoulli.rs:135:9-135:10)
  7: StorageDead(_11)
    SourceInfo(src/distr/bernoulli.rs:135:9-135:10)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb10
  }
  preds [bb5]
  succs [bb10]

bb7
  0: StorageDead(_14)
    SourceInfo(src/distr/bernoulli.rs:133:35-133:36)
  1: StorageDead(_13)
    SourceInfo(src/distr/bernoulli.rs:133:35-133:36)
  2: _11 = const ()
    SourceInfo(src/distr/bernoulli.rs:135:10-135:10)
  3: StorageDead(_12)
    SourceInfo(src/distr/bernoulli.rs:135:9-135:10)
  4: StorageDead(_11)
    SourceInfo(src/distr/bernoulli.rs:135:9-135:10)
  5: StorageLive(_17)
    SourceInfo(src/distr/bernoulli.rs:136:13-136:18)
  6: StorageLive(_18)
    SourceInfo(src/distr/bernoulli.rs:136:21-136:78)
  7: StorageLive(_19)
    SourceInfo(src/distr/bernoulli.rs:136:22-136:69)
  8: StorageLive(_20)
    SourceInfo(src/distr/bernoulli.rs:136:23-136:43)
  9: StorageLive(_21)
    SourceInfo(src/distr/bernoulli.rs:136:33-136:42)
  10: _21 = _1
    SourceInfo(src/distr/bernoulli.rs:136:33-136:42)
  Terminator {
      source_info: SourceInfo(src/distr/bernoulli.rs:136:23-136:43)
      kind: _20 = <f64 as core::convert::From<u32>>::from(move _21) -> [return: bb8, unwind: bb11]
  }
  preds [bb5]
  succs [bb8, bb11]

bb8
  0: StorageDead(_21)
    SourceInfo(src/distr/bernoulli.rs:136:42-136:43)
  1: StorageLive(_22)
    SourceInfo(src/distr/bernoulli.rs:136:46-136:68)
  2: StorageLive(_23)
    SourceInfo(src/distr/bernoulli.rs:136:56-136:67)
  3: _23 = _2
    SourceInfo(src/distr/bernoulli.rs:136:56-136:67)
  Terminator {
      source_info: SourceInfo(src/distr/bernoulli.rs:136:46-136:68)
      kind: _22 = <f64 as core::convert::From<u32>>::from(move _23) -> [return: bb9, unwind: bb11]
  }
  preds [bb7]
  succs [bb9, bb11]

bb9
  0: StorageDead(_23)
    SourceInfo(src/distr/bernoulli.rs:136:67-136:68)
  1: _19 = Div(move _20, move _22)
    SourceInfo(src/distr/bernoulli.rs:136:22-136:69)
  2: StorageDead(_22)
    SourceInfo(src/distr/bernoulli.rs:136:68-136:69)
  3: StorageDead(_20)
    SourceInfo(src/distr/bernoulli.rs:136:68-136:69)
  4: _18 = Mul(move _19, const distr::bernoulli::SCALE)
    SourceInfo(src/distr/bernoulli.rs:136:21-136:78)
  5: StorageDead(_19)
    SourceInfo(src/distr/bernoulli.rs:136:77-136:78)
  6: _17 = move _18 as u64 (FloatToInt)
    SourceInfo(src/distr/bernoulli.rs:136:21-136:85)
  7: StorageDead(_18)
    SourceInfo(src/distr/bernoulli.rs:136:84-136:85)
  8: FakeRead(ForLet(None), _17)
    SourceInfo(src/distr/bernoulli.rs:136:13-136:18)
  9: StorageLive(_24)
    SourceInfo(src/distr/bernoulli.rs:137:12-137:31)
  10: StorageLive(_25)
    SourceInfo(src/distr/bernoulli.rs:137:24-137:29)
  11: _25 = _17
    SourceInfo(src/distr/bernoulli.rs:137:24-137:29)
  12: _24 = distr::bernoulli::Bernoulli { p_int: move _25 }
    SourceInfo(src/distr/bernoulli.rs:137:12-137:31)
  13: StorageDead(_25)
    SourceInfo(src/distr/bernoulli.rs:137:30-137:31)
  14: _0 = core::result::Result::<distr::bernoulli::Bernoulli, distr::bernoulli::BernoulliError>::Ok(move _24)
    SourceInfo(src/distr/bernoulli.rs:137:9-137:32)
  15: StorageDead(_24)
    SourceInfo(src/distr/bernoulli.rs:137:31-137:32)
  16: StorageDead(_17)
    SourceInfo(src/distr/bernoulli.rs:138:5-138:6)
  Terminator {
      source_info: SourceInfo(src/distr/bernoulli.rs:138:6-138:6)
      kind: goto -> bb10
  }
  preds [bb8]
  succs [bb10]

bb10
  Terminator {
      source_info: SourceInfo(src/distr/bernoulli.rs:138:6-138:6)
      kind: return
  }
  preds [bb4, bb6, bb9]
  succs []

bb11
  Terminator {
      source_info: SourceInfo(src/distr/bernoulli.rs:129:5-138:6)
      kind: resume
  }
  preds [bb7, bb8]
  succs []

