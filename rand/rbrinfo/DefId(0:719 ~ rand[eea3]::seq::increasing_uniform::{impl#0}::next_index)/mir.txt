bb0
  0: StorageLive(_2)
    SourceInfo(src/seq/increasing_uniform.rs:41:13-41:19)
  1: StorageLive(_3)
    SourceInfo(src/seq/increasing_uniform.rs:41:22-41:28)
  2: _3 = ((*_1).1: u32)
    SourceInfo(src/seq/increasing_uniform.rs:41:22-41:28)
  3: _4 = AddWithOverflow(_3, const 1_u32)
    SourceInfo(src/seq/increasing_uniform.rs:41:22-41:32)
  Terminator {
      source_info: SourceInfo(src/seq/increasing_uniform.rs:41:22-41:32)
      kind: assert(!move (_4.1: bool), "attempt to compute `{} + {}`, which would overflow", move _3, const 1_u32) -> [success: bb1, unwind: bb9]
  }
  preds []
  succs [bb1, bb9]

bb1
  0: _2 = move (_4.0: u32)
    SourceInfo(src/seq/increasing_uniform.rs:41:22-41:32)
  1: StorageDead(_3)
    SourceInfo(src/seq/increasing_uniform.rs:41:31-41:32)
  2: FakeRead(ForLet(None), _2)
    SourceInfo(src/seq/increasing_uniform.rs:41:13-41:19)
  3: StorageLive(_5)
    SourceInfo(src/seq/increasing_uniform.rs:49:13-49:33)
  4: StorageLive(_6)
    SourceInfo(src/seq/increasing_uniform.rs:49:36-49:71)
  5: StorageLive(_7)
    SourceInfo(src/seq/increasing_uniform.rs:49:36-49:56)
  6: _7 = ((*_1).3: u8)
    SourceInfo(src/seq/increasing_uniform.rs:49:36-49:56)
  Terminator {
      source_info: SourceInfo(src/seq/increasing_uniform.rs:49:36-49:71)
      kind: _6 = core::num::<impl u8>::checked_sub(move _7, const 1_u8) -> [return: bb2, unwind: bb9]
  }
  preds [bb0]
  succs [bb2, bb9]

bb2
  0: StorageDead(_7)
    SourceInfo(src/seq/increasing_uniform.rs:49:70-49:71)
  1: StorageLive(_8)
    SourceInfo(src/seq/increasing_uniform.rs:49:87-58:10)
  2: StorageLive(_9)
    SourceInfo(src/seq/increasing_uniform.rs:49:87-58:10)
  3: _9 = &_2
    SourceInfo(src/seq/increasing_uniform.rs:49:87-58:10)
  4: StorageLive(_10)
    SourceInfo(src/seq/increasing_uniform.rs:49:87-58:10)
  5: _10 = &mut ((*_1).0: R)
    SourceInfo(src/seq/increasing_uniform.rs:49:87-58:10)
  6: StorageLive(_11)
    SourceInfo(src/seq/increasing_uniform.rs:49:87-58:10)
  7: _11 = &mut ((*_1).2: u32)
    SourceInfo(src/seq/increasing_uniform.rs:49:87-58:10)
  8: _8 = {closure@src/seq/increasing_uniform.rs:49:87: 49:89} { next_n: move _9, self: move _10 }
    SourceInfo(src/seq/increasing_uniform.rs:49:87-58:10)
  9: StorageDead(_11)
    SourceInfo(src/seq/increasing_uniform.rs:49:88-49:89)
  10: StorageDead(_10)
    SourceInfo(src/seq/increasing_uniform.rs:49:88-49:89)
  11: StorageDead(_9)
    SourceInfo(src/seq/increasing_uniform.rs:49:88-49:89)
  Terminator {
      source_info: SourceInfo(src/seq/increasing_uniform.rs:49:36-58:11)
      kind: _5 = core::option::Option::<u8>::unwrap_or_else::<{closure@src/seq/increasing_uniform.rs:49:87: 49:89}>(move _6, move _8) -> [return: bb3, unwind: bb9]
  }
  preds [bb1]
  succs [bb3, bb9]

bb3
  0: StorageDead(_8)
    SourceInfo(src/seq/increasing_uniform.rs:58:10-58:11)
  1: StorageDead(_6)
    SourceInfo(src/seq/increasing_uniform.rs:58:10-58:11)
  2: FakeRead(ForLet(None), _5)
    SourceInfo(src/seq/increasing_uniform.rs:49:13-49:33)
  3: StorageLive(_12)
    SourceInfo(src/seq/increasing_uniform.rs:60:13-60:19)
  4: StorageLive(_13)
    SourceInfo(src/seq/increasing_uniform.rs:60:25-60:50)
  5: StorageLive(_14)
    SourceInfo(src/seq/increasing_uniform.rs:60:25-60:45)
  6: _14 = _5
    SourceInfo(src/seq/increasing_uniform.rs:60:25-60:45)
  7: _13 = Eq(move _14, const 0_u8)
    SourceInfo(src/seq/increasing_uniform.rs:60:25-60:50)
  Terminator {
      source_info: SourceInfo(src/seq/increasing_uniform.rs:60:25-60:50)
      kind: switchInt(move _13) -> [0: bb5, otherwise: bb4]
  }
  preds [bb2]
  succs [bb4, bb5]

bb4
  0: StorageDead(_14)
    SourceInfo(src/seq/increasing_uniform.rs:60:49-60:50)
  1: StorageLive(_15)
    SourceInfo(src/seq/increasing_uniform.rs:64:13-64:23)
  2: _15 = ((*_1).2: u32)
    SourceInfo(src/seq/increasing_uniform.rs:64:13-64:23)
  3: _12 = move _15 as usize (IntToInt)
    SourceInfo(src/seq/increasing_uniform.rs:64:13-64:32)
  4: StorageDead(_15)
    SourceInfo(src/seq/increasing_uniform.rs:64:31-64:32)
  Terminator {
      source_info: SourceInfo(src/seq/increasing_uniform.rs:60:22-71:10)
      kind: goto -> bb8
  }
  preds [bb3]
  succs [bb8]

bb5
  0: StorageDead(_14)
    SourceInfo(src/seq/increasing_uniform.rs:60:49-60:50)
  1: StorageLive(_16)
    SourceInfo(src/seq/increasing_uniform.rs:68:17-68:18)
  2: StorageLive(_17)
    SourceInfo(src/seq/increasing_uniform.rs:68:21-68:31)
  3: _17 = ((*_1).2: u32)
    SourceInfo(src/seq/increasing_uniform.rs:68:21-68:31)
  4: StorageLive(_18)
    SourceInfo(src/seq/increasing_uniform.rs:68:34-68:40)
  5: _18 = _2
    SourceInfo(src/seq/increasing_uniform.rs:68:34-68:40)
  6: _19 = Eq(_18, const 0_u32)
    SourceInfo(src/seq/increasing_uniform.rs:68:21-68:40)
  Terminator {
      source_info: SourceInfo(src/seq/increasing_uniform.rs:68:21-68:40)
      kind: assert(!move _19, "attempt to calculate the remainder of `{}` with a divisor of zero", _17) -> [success: bb6, unwind: bb9]
  }
  preds [bb3]
  succs [bb6, bb9]

bb6
  0: _16 = Rem(move _17, move _18)
    SourceInfo(src/seq/increasing_uniform.rs:68:21-68:40)
  1: StorageDead(_18)
    SourceInfo(src/seq/increasing_uniform.rs:68:39-68:40)
  2: StorageDead(_17)
    SourceInfo(src/seq/increasing_uniform.rs:68:39-68:40)
  3: FakeRead(ForLet(None), _16)
    SourceInfo(src/seq/increasing_uniform.rs:68:17-68:18)
  4: StorageLive(_20)
    SourceInfo(src/seq/increasing_uniform.rs:69:27-69:33)
  5: _20 = _2
    SourceInfo(src/seq/increasing_uniform.rs:69:27-69:33)
  6: _21 = Eq(_20, const 0_u32)
    SourceInfo(src/seq/increasing_uniform.rs:69:13-69:33)
  Terminator {
      source_info: SourceInfo(src/seq/increasing_uniform.rs:69:13-69:33)
      kind: assert(!move _21, "attempt to divide `{}` by zero", ((*_1).2: u32)) -> [success: bb7, unwind: bb9]
  }
  preds [bb5]
  succs [bb7, bb9]

bb7
  0: ((*_1).2: u32) = Div(((*_1).2: u32), move _20)
    SourceInfo(src/seq/increasing_uniform.rs:69:13-69:33)
  1: StorageDead(_20)
    SourceInfo(src/seq/increasing_uniform.rs:69:32-69:33)
  2: StorageLive(_22)
    SourceInfo(src/seq/increasing_uniform.rs:70:13-70:14)
  3: _22 = _16
    SourceInfo(src/seq/increasing_uniform.rs:70:13-70:14)
  4: _12 = move _22 as usize (IntToInt)
    SourceInfo(src/seq/increasing_uniform.rs:70:13-70:23)
  5: StorageDead(_22)
    SourceInfo(src/seq/increasing_uniform.rs:70:22-70:23)
  6: StorageDead(_16)
    SourceInfo(src/seq/increasing_uniform.rs:71:9-71:10)
  Terminator {
      source_info: SourceInfo(src/seq/increasing_uniform.rs:60:22-71:10)
      kind: goto -> bb8
  }
  preds [bb6]
  succs [bb8]

bb8
  0: StorageDead(_13)
    SourceInfo(src/seq/increasing_uniform.rs:71:9-71:10)
  1: FakeRead(ForLet(None), _12)
    SourceInfo(src/seq/increasing_uniform.rs:60:13-60:19)
  2: StorageLive(_23)
    SourceInfo(src/seq/increasing_uniform.rs:73:32-73:52)
  3: _23 = _5
    SourceInfo(src/seq/increasing_uniform.rs:73:32-73:52)
  4: ((*_1).3: u8) = move _23
    SourceInfo(src/seq/increasing_uniform.rs:73:9-73:52)
  5: StorageDead(_23)
    SourceInfo(src/seq/increasing_uniform.rs:73:51-73:52)
  6: StorageLive(_24)
    SourceInfo(src/seq/increasing_uniform.rs:74:18-74:24)
  7: _24 = _2
    SourceInfo(src/seq/increasing_uniform.rs:74:18-74:24)
  8: ((*_1).1: u32) = move _24
    SourceInfo(src/seq/increasing_uniform.rs:74:9-74:24)
  9: StorageDead(_24)
    SourceInfo(src/seq/increasing_uniform.rs:74:23-74:24)
  10: _0 = _12
    SourceInfo(src/seq/increasing_uniform.rs:75:9-75:15)
  11: StorageDead(_12)
    SourceInfo(src/seq/increasing_uniform.rs:76:5-76:6)
  12: StorageDead(_5)
    SourceInfo(src/seq/increasing_uniform.rs:76:5-76:6)
  13: StorageDead(_2)
    SourceInfo(src/seq/increasing_uniform.rs:76:5-76:6)
  Terminator {
      source_info: SourceInfo(src/seq/increasing_uniform.rs:76:6-76:6)
      kind: return
  }
  preds [bb4, bb7]
  succs []

bb9
  Terminator {
      source_info: SourceInfo(src/seq/increasing_uniform.rs:40:5-76:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb5, bb6]
  succs []

