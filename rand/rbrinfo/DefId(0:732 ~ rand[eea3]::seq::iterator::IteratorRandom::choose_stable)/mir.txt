bb0
  0: StorageLive(_3)
    SourceInfo(src/seq/iterator.rs:141:13-141:25)
  1: _3 = const 0_usize
    SourceInfo(src/seq/iterator.rs:141:28-141:29)
  2: FakeRead(ForLet(None), _3)
    SourceInfo(src/seq/iterator.rs:141:13-141:25)
  3: StorageLive(_4)
    SourceInfo(src/seq/iterator.rs:142:13-142:23)
  4: _4 = core::option::Option::<<Self as core::iter::Iterator>::Item>::None
    SourceInfo(src/seq/iterator.rs:142:26-142:30)
  5: FakeRead(ForLet(None), _4)
    SourceInfo(src/seq/iterator.rs:142:13-142:23)
  6: StorageLive(_5)
    SourceInfo(src/seq/iterator.rs:143:13-143:29)
  7: StorageLive(_6)
    SourceInfo(src/seq/iterator.rs:143:49-143:52)
  8: _6 = move _2
    SourceInfo(src/seq/iterator.rs:143:49-143:52)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:143:32-143:53)
      kind: _5 = seq::coin_flipper::CoinFlipper::<&mut R>::new(move _6) -> [return: bb1, unwind: bb46]
  }
  preds []
  succs [bb1, bb46]

bb1
  0: StorageDead(_6)
    SourceInfo(src/seq/iterator.rs:143:52-143:53)
  1: FakeRead(ForLet(None), _5)
    SourceInfo(src/seq/iterator.rs:143:13-143:29)
  2: StorageLive(_7)
    SourceInfo(src/seq/iterator.rs:145:9-177:10)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:145:9-177:10)
      kind: goto -> bb2
  }
  preds [bb0]
  succs [bb2]

bb2
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:145:9-177:10)
      kind: falseUnwind -> [real: bb3, unwind: bb46]
  }
  preds [bb1, bb41]
  succs [bb3, bb46]

bb3
  0: StorageLive(_9)
    SourceInfo(src/seq/iterator.rs:150:17-150:25)
  1: _9 = const 0_usize
    SourceInfo(src/seq/iterator.rs:150:28-150:29)
  2: FakeRead(ForLet(None), _9)
    SourceInfo(src/seq/iterator.rs:150:17-150:25)
  3: StorageLive(_11)
    SourceInfo(src/seq/iterator.rs:152:30-152:46)
  4: StorageLive(_12)
    SourceInfo(src/seq/iterator.rs:152:30-152:34)
  5: _12 = &_1
    SourceInfo(src/seq/iterator.rs:152:30-152:34)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:152:30-152:46)
      kind: _11 = <Self as core::iter::Iterator>::size_hint(move _12) -> [return: bb4, unwind: bb46]
  }
  preds [bb2]
  succs [bb4, bb46]

bb4
  0: StorageDead(_12)
    SourceInfo(src/seq/iterator.rs:152:45-152:46)
  1: PlaceMention(_11)
    SourceInfo(src/seq/iterator.rs:152:30-152:46)
  2: StorageLive(_10)
    SourceInfo(src/seq/iterator.rs:152:18-152:23)
  3: _10 = (_11.0: usize)
    SourceInfo(src/seq/iterator.rs:152:18-152:23)
  4: StorageDead(_11)
    SourceInfo(src/seq/iterator.rs:152:46-152:47)
  5: StorageLive(_13)
    SourceInfo(src/seq/iterator.rs:153:13-166:14)
  6: StorageLive(_14)
    SourceInfo(src/seq/iterator.rs:153:16-153:26)
  7: StorageLive(_15)
    SourceInfo(src/seq/iterator.rs:153:16-153:21)
  8: _15 = _10
    SourceInfo(src/seq/iterator.rs:153:16-153:21)
  9: _14 = Ge(move _15, const 2_usize)
    SourceInfo(src/seq/iterator.rs:153:16-153:26)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:153:16-153:26)
      kind: switchInt(move _14) -> [0: bb26, otherwise: bb5]
  }
  preds [bb3]
  succs [bb5, bb26]

bb5
  0: StorageDead(_15)
    SourceInfo(src/seq/iterator.rs:153:25-153:26)
  1: StorageLive(_16)
    SourceInfo(src/seq/iterator.rs:154:21-154:37)
  2: StorageLive(_17)
    SourceInfo(src/seq/iterator.rs:154:40-155:88)
  3: StorageLive(_18)
    SourceInfo(src/seq/iterator.rs:154:40-154:50)
  4: StorageLive(_19)
    SourceInfo(src/seq/iterator.rs:154:44-154:49)
  5: _19 = _10
    SourceInfo(src/seq/iterator.rs:154:44-154:49)
  6: _18 = core::ops::Range::<usize> { start: const 0_usize, end: move _19 }
    SourceInfo(src/seq/iterator.rs:154:40-154:50)
  7: StorageDead(_19)
    SourceInfo(src/seq/iterator.rs:154:49-154:50)
  8: StorageLive(_20)
    SourceInfo(src/seq/iterator.rs:155:29-155:87)
  9: StorageLive(_21)
    SourceInfo(src/seq/iterator.rs:155:29-155:87)
  10: _21 = &mut _5
    SourceInfo(src/seq/iterator.rs:155:29-155:87)
  11: StorageLive(_22)
    SourceInfo(src/seq/iterator.rs:155:29-155:87)
  12: _22 = &_3
    SourceInfo(src/seq/iterator.rs:155:29-155:87)
  13: _20 = {closure@src/seq/iterator.rs:155:29: 155:33} { coin_flipper: move _21, consumed: move _22 }
    SourceInfo(src/seq/iterator.rs:155:29-155:87)
  14: StorageDead(_22)
    SourceInfo(src/seq/iterator.rs:155:32-155:33)
  15: StorageDead(_21)
    SourceInfo(src/seq/iterator.rs:155:32-155:33)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:154:40-155:88)
      kind: _17 = <core::ops::Range<usize> as core::iter::Iterator>::filter::<{closure@src/seq/iterator.rs:155:29: 155:33}>(move _18, move _20) -> [return: bb6, unwind: bb46]
  }
  preds [bb4]
  succs [bb6, bb46]

bb6
  0: StorageDead(_20)
    SourceInfo(src/seq/iterator.rs:155:87-155:88)
  1: StorageDead(_18)
    SourceInfo(src/seq/iterator.rs:155:87-155:88)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:154:40-156:28)
      kind: _16 = <core::iter::Filter<core::ops::Range<usize>, {closure@src/seq/iterator.rs:155:29: 155:33}> as core::iter::Iterator>::last(move _17) -> [return: bb7, unwind: bb46]
  }
  preds [bb5]
  succs [bb7, bb46]

bb7
  0: StorageDead(_17)
    SourceInfo(src/seq/iterator.rs:156:27-156:28)
  1: FakeRead(ForLet(None), _16)
    SourceInfo(src/seq/iterator.rs:154:21-154:37)
  2: StorageLive(_23)
    SourceInfo(src/seq/iterator.rs:158:29-158:34)
  3: _23 = _10
    SourceInfo(src/seq/iterator.rs:158:29-158:34)
  4: _24 = AddWithOverflow(_3, _23)
    SourceInfo(src/seq/iterator.rs:158:17-158:34)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:158:17-158:34)
      kind: assert(!move (_24.1: bool), "attempt to compute `{} + {}`, which would overflow", _3, move _23) -> [success: bb8, unwind: bb46]
  }
  preds [bb6]
  succs [bb8, bb46]

bb8
  0: _3 = move (_24.0: usize)
    SourceInfo(src/seq/iterator.rs:158:17-158:34)
  1: StorageDead(_23)
    SourceInfo(src/seq/iterator.rs:158:33-158:34)
  2: StorageLive(_25)
    SourceInfo(src/seq/iterator.rs:159:24-159:29)
  3: _25 = _10
    SourceInfo(src/seq/iterator.rs:159:24-159:29)
  4: _9 = move _25
    SourceInfo(src/seq/iterator.rs:159:17-159:29)
  5: StorageDead(_25)
    SourceInfo(src/seq/iterator.rs:159:28-159:29)
  6: PlaceMention(_16)
    SourceInfo(src/seq/iterator.rs:161:35-161:51)
  7: _26 = discriminant(_16)
    SourceInfo(src/seq/iterator.rs:161:35-161:51)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:161:24-161:32)
      kind: switchInt(move _26) -> [1: bb9, otherwise: bb24]
  }
  preds [bb7]
  succs [bb9, bb24]

bb9
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:161:24-161:32)
      kind: falseEdge -> [real: bb10, imaginary: bb24]
  }
  preds [bb8]
  succs [bb10, bb24]

bb10
  0: StorageLive(_27)
    SourceInfo(src/seq/iterator.rs:161:29-161:31)
  1: _27 = ((_16 as Some).0: usize)
    SourceInfo(src/seq/iterator.rs:161:29-161:31)
  2: StorageLive(_28)
    SourceInfo(src/seq/iterator.rs:162:30-162:42)
  3: StorageLive(_29)
    SourceInfo(src/seq/iterator.rs:162:30-162:34)
  4: _29 = &mut _1
    SourceInfo(src/seq/iterator.rs:162:30-162:34)
  5: StorageLive(_30)
    SourceInfo(src/seq/iterator.rs:162:39-162:41)
  6: _30 = _27
    SourceInfo(src/seq/iterator.rs:162:39-162:41)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:162:30-162:42)
      kind: _28 = <Self as core::iter::Iterator>::nth(move _29, move _30) -> [return: bb11, unwind: bb46]
  }
  preds [bb9]
  succs [bb11, bb46]

bb11
  0: StorageDead(_30)
    SourceInfo(src/seq/iterator.rs:162:41-162:42)
  1: StorageDead(_29)
    SourceInfo(src/seq/iterator.rs:162:41-162:42)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:162:21-162:27)
      kind: drop(_4) -> [return: bb12, unwind: bb13]
  }
  preds [bb10]
  succs [bb12, bb13]

bb12
  0: _4 = move _28
    SourceInfo(src/seq/iterator.rs:162:21-162:27)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:162:41-162:42)
      kind: drop(_28) -> [return: bb14, unwind: bb46]
  }
  preds [bb11]
  succs [bb14, bb46]

bb13
  0: _4 = move _28
    SourceInfo(src/seq/iterator.rs:162:21-162:27)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:162:41-162:42)
      kind: drop(_28) -> [return: bb46, unwind terminate(cleanup)]
  }
  preds [bb11]
  succs [bb46]

bb14
  0: StorageDead(_28)
    SourceInfo(src/seq/iterator.rs:162:41-162:42)
  1: StorageLive(_31)
    SourceInfo(src/seq/iterator.rs:163:29-163:35)
  2: StorageLive(_32)
    SourceInfo(src/seq/iterator.rs:163:29-163:31)
  3: _32 = _27
    SourceInfo(src/seq/iterator.rs:163:29-163:31)
  4: _33 = AddWithOverflow(_32, const 1_usize)
    SourceInfo(src/seq/iterator.rs:163:29-163:35)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:163:29-163:35)
      kind: assert(!move (_33.1: bool), "attempt to compute `{} + {}`, which would overflow", move _32, const 1_usize) -> [success: bb15, unwind: bb46]
  }
  preds [bb12]
  succs [bb15, bb46]

bb15
  0: _31 = move (_33.0: usize)
    SourceInfo(src/seq/iterator.rs:163:29-163:35)
  1: StorageDead(_32)
    SourceInfo(src/seq/iterator.rs:163:34-163:35)
  2: _34 = SubWithOverflow(_9, _31)
    SourceInfo(src/seq/iterator.rs:163:21-163:35)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:163:21-163:35)
      kind: assert(!move (_34.1: bool), "attempt to compute `{} - {}`, which would overflow", _9, move _31) -> [success: bb16, unwind: bb46]
  }
  preds [bb14]
  succs [bb16, bb46]

bb16
  0: _9 = move (_34.0: usize)
    SourceInfo(src/seq/iterator.rs:163:21-163:35)
  1: StorageDead(_31)
    SourceInfo(src/seq/iterator.rs:163:34-163:35)
  2: StorageLive(_35)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
  3: StorageLive(_36)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
  4: _36 = const true
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
      kind: switchInt(move _36) -> [0: bb22, otherwise: bb17]
  }
  preds [bb15]
  succs [bb17, bb22]

bb17
  0: StorageLive(_37)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
  1: StorageLive(_38)
    SourceInfo(src/seq/iterator.rs:164:35-164:51)
  2: StorageLive(_39)
    SourceInfo(src/seq/iterator.rs:164:35-164:41)
  3: _39 = &_4
    SourceInfo(src/seq/iterator.rs:164:35-164:41)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:164:35-164:51)
      kind: _38 = core::option::Option::<<Self as core::iter::Iterator>::Item>::is_some(move _39) -> [return: bb18, unwind: bb46]
  }
  preds [bb16]
  succs [bb18, bb46]

bb18
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:164:35-164:51)
      kind: switchInt(move _38) -> [0: bb20, otherwise: bb19]
  }
  preds [bb17]
  succs [bb19, bb20]

bb19
  0: StorageDead(_39)
    SourceInfo(src/seq/iterator.rs:164:50-164:51)
  1: _37 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:38-317:38)
  2: StorageDead(_38)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:37-317:38)
  3: StorageDead(_37)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:37-317:38)
  4: _35 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:43-318:10)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
      kind: goto -> bb23
  }
  preds [bb18]
  succs [bb23]

bb20
  0: StorageDead(_39)
    SourceInfo(src/seq/iterator.rs:164:50-164:51)
  1: StorageLive(_41)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:9-108:73)
  2: StorageLive(_42)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  3: StorageLive(_43)
    SourceInfo(src/seq/iterator.rs:164:53-164:90)
  4: StorageLive(_44)
    SourceInfo(src/seq/iterator.rs:164:53-164:90)
  5: StorageLive(_45)
    SourceInfo(src/seq/iterator.rs:164:53-164:90)
  6: _45 = [const "iterator shorter than size_hint().0"]
    SourceInfo(src/seq/iterator.rs:164:53-164:90)
  7: _44 = &_45
    SourceInfo(src/seq/iterator.rs:164:53-164:90)
  8: _43 = &(*_44)
    SourceInfo(src/seq/iterator.rs:164:53-164:90)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
      kind: _42 = core::fmt::Arguments::<'_>::new_const::<1>(move _43) -> [return: bb21, unwind: bb46]
  }
  preds [bb18]
  succs [bb21, bb46]

bb21
  0: StorageDead(_43)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:71-108:72)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:9-108:73)
      kind: _41 = core::panicking::panic_fmt(move _42) -> bb46
  }
  preds [bb20]
  succs [bb46]

bb22
  0: _35 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:10-318:10)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
      kind: goto -> bb23
  }
  preds [bb16]
  succs [bb23]

bb23
  0: StorageDead(_36)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:9-318:10)
  1: StorageDead(_35)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:9-318:10)
  2: _13 = const ()
    SourceInfo(src/seq/iterator.rs:161:52-165:18)
  3: StorageDead(_27)
    SourceInfo(src/seq/iterator.rs:165:17-165:18)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:161:17-165:18)
      kind: goto -> bb25
  }
  preds [bb19, bb22]
  succs [bb25]

bb24
  0: _13 = const ()
    SourceInfo(src/seq/iterator.rs:165:18-165:18)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:161:17-165:18)
      kind: goto -> bb25
  }
  preds [bb8, bb9]
  succs [bb25]

bb25
  0: StorageDead(_16)
    SourceInfo(src/seq/iterator.rs:166:13-166:14)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:153:13-166:14)
      kind: goto -> bb27
  }
  preds [bb23, bb24]
  succs [bb27]

bb26
  0: StorageDead(_15)
    SourceInfo(src/seq/iterator.rs:153:25-153:26)
  1: _13 = const ()
    SourceInfo(src/seq/iterator.rs:166:14-166:14)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:153:13-166:14)
      kind: goto -> bb27
  }
  preds [bb4]
  succs [bb27]

bb27
  0: StorageDead(_14)
    SourceInfo(src/seq/iterator.rs:166:13-166:14)
  1: StorageDead(_13)
    SourceInfo(src/seq/iterator.rs:166:13-166:14)
  2: StorageLive(_46)
    SourceInfo(src/seq/iterator.rs:168:17-168:21)
  3: StorageLive(_47)
    SourceInfo(src/seq/iterator.rs:168:24-168:28)
  4: _47 = &mut _1
    SourceInfo(src/seq/iterator.rs:168:24-168:28)
  5: StorageLive(_48)
    SourceInfo(src/seq/iterator.rs:168:33-168:37)
  6: _48 = _9
    SourceInfo(src/seq/iterator.rs:168:33-168:37)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:168:24-168:38)
      kind: _46 = <Self as core::iter::Iterator>::nth(move _47, move _48) -> [return: bb28, unwind: bb46]
  }
  preds [bb25, bb26]
  succs [bb28, bb46]

bb28
  0: StorageDead(_48)
    SourceInfo(src/seq/iterator.rs:168:37-168:38)
  1: StorageDead(_47)
    SourceInfo(src/seq/iterator.rs:168:37-168:38)
  2: FakeRead(ForLet(None), _46)
    SourceInfo(src/seq/iterator.rs:168:17-168:21)
  3: StorageLive(_49)
    SourceInfo(src/seq/iterator.rs:169:13-171:14)
  4: StorageLive(_50)
    SourceInfo(src/seq/iterator.rs:169:16-169:30)
  5: StorageLive(_51)
    SourceInfo(src/seq/iterator.rs:169:16-169:20)
  6: _51 = &_46
    SourceInfo(src/seq/iterator.rs:169:16-169:20)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:169:16-169:30)
      kind: _50 = core::option::Option::<<Self as core::iter::Iterator>::Item>::is_none(move _51) -> [return: bb29, unwind: bb45]
  }
  preds [bb27]
  succs [bb29, bb45]

bb29
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:169:16-169:30)
      kind: switchInt(move _50) -> [0: bb31, otherwise: bb30]
  }
  preds [bb28]
  succs [bb30, bb31]

bb30
  0: StorageDead(_51)
    SourceInfo(src/seq/iterator.rs:169:29-169:30)
  1: _0 = move _4
    SourceInfo(src/seq/iterator.rs:170:24-170:30)
  2: StorageDead(_50)
    SourceInfo(src/seq/iterator.rs:171:13-171:14)
  3: StorageDead(_49)
    SourceInfo(src/seq/iterator.rs:171:13-171:14)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:177:9-177:10)
      kind: drop(_46) -> [return: bb42, unwind: bb46]
  }
  preds [bb29]
  succs [bb42, bb46]

bb31
  0: StorageDead(_51)
    SourceInfo(src/seq/iterator.rs:169:29-169:30)
  1: _49 = const ()
    SourceInfo(src/seq/iterator.rs:171:14-171:14)
  2: StorageDead(_50)
    SourceInfo(src/seq/iterator.rs:171:13-171:14)
  3: StorageDead(_49)
    SourceInfo(src/seq/iterator.rs:171:13-171:14)
  4: StorageLive(_53)
    SourceInfo(src/seq/iterator.rs:173:13-175:14)
  5: StorageLive(_54)
    SourceInfo(src/seq/iterator.rs:173:16-173:64)
  6: StorageLive(_55)
    SourceInfo(src/seq/iterator.rs:173:16-173:28)
  7: _55 = &mut _5
    SourceInfo(src/seq/iterator.rs:173:16-173:28)
  8: StorageLive(_56)
    SourceInfo(src/seq/iterator.rs:173:51-173:63)
  9: StorageLive(_57)
    SourceInfo(src/seq/iterator.rs:173:51-173:59)
  10: _57 = _3
    SourceInfo(src/seq/iterator.rs:173:51-173:59)
  11: _58 = AddWithOverflow(_57, const 1_usize)
    SourceInfo(src/seq/iterator.rs:173:51-173:63)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:173:51-173:63)
      kind: assert(!move (_58.1: bool), "attempt to compute `{} + {}`, which would overflow", move _57, const 1_usize) -> [success: bb32, unwind: bb45]
  }
  preds [bb29]
  succs [bb32, bb45]

bb32
  0: _56 = move (_58.0: usize)
    SourceInfo(src/seq/iterator.rs:173:51-173:63)
  1: StorageDead(_57)
    SourceInfo(src/seq/iterator.rs:173:62-173:63)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:173:16-173:64)
      kind: _54 = seq::coin_flipper::CoinFlipper::<&mut R>::random_ratio_one_over(move _55, move _56) -> [return: bb33, unwind: bb45]
  }
  preds [bb31]
  succs [bb33, bb45]

bb33
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:173:16-173:64)
      kind: switchInt(move _54) -> [0: bb38, otherwise: bb34]
  }
  preds [bb32]
  succs [bb34, bb38]

bb34
  0: StorageDead(_56)
    SourceInfo(src/seq/iterator.rs:173:63-173:64)
  1: StorageDead(_55)
    SourceInfo(src/seq/iterator.rs:173:63-173:64)
  2: StorageLive(_59)
    SourceInfo(src/seq/iterator.rs:174:26-174:30)
  3: _59 = move _46
    SourceInfo(src/seq/iterator.rs:174:26-174:30)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:174:17-174:23)
      kind: drop(_4) -> [return: bb35, unwind: bb36]
  }
  preds [bb33]
  succs [bb35, bb36]

bb35
  0: _4 = move _59
    SourceInfo(src/seq/iterator.rs:174:17-174:23)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:174:29-174:30)
      kind: drop(_59) -> [return: bb37, unwind: bb45]
  }
  preds [bb34]
  succs [bb37, bb45]

bb36
  0: _4 = move _59
    SourceInfo(src/seq/iterator.rs:174:17-174:23)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:174:29-174:30)
      kind: drop(_59) -> [return: bb45, unwind terminate(cleanup)]
  }
  preds [bb34]
  succs [bb45]

bb37
  0: StorageDead(_59)
    SourceInfo(src/seq/iterator.rs:174:29-174:30)
  1: _53 = const ()
    SourceInfo(src/seq/iterator.rs:173:65-175:14)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:173:13-175:14)
      kind: goto -> bb39
  }
  preds [bb35]
  succs [bb39]

bb38
  0: StorageDead(_56)
    SourceInfo(src/seq/iterator.rs:173:63-173:64)
  1: StorageDead(_55)
    SourceInfo(src/seq/iterator.rs:173:63-173:64)
  2: _53 = const ()
    SourceInfo(src/seq/iterator.rs:175:14-175:14)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:173:13-175:14)
      kind: goto -> bb39
  }
  preds [bb33]
  succs [bb39]

bb39
  0: StorageDead(_54)
    SourceInfo(src/seq/iterator.rs:175:13-175:14)
  1: StorageDead(_53)
    SourceInfo(src/seq/iterator.rs:175:13-175:14)
  2: _60 = AddWithOverflow(_3, const 1_usize)
    SourceInfo(src/seq/iterator.rs:176:13-176:26)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:176:13-176:26)
      kind: assert(!move (_60.1: bool), "attempt to compute `{} + {}`, which would overflow", _3, const 1_usize) -> [success: bb40, unwind: bb45]
  }
  preds [bb37, bb38]
  succs [bb40, bb45]

bb40
  0: _3 = move (_60.0: usize)
    SourceInfo(src/seq/iterator.rs:176:13-176:26)
  1: _8 = const ()
    SourceInfo(src/seq/iterator.rs:145:14-177:10)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:177:9-177:10)
      kind: drop(_46) -> [return: bb41, unwind: bb46]
  }
  preds [bb39]
  succs [bb41, bb46]

bb41
  0: StorageDead(_46)
    SourceInfo(src/seq/iterator.rs:177:9-177:10)
  1: StorageDead(_10)
    SourceInfo(src/seq/iterator.rs:177:9-177:10)
  2: StorageDead(_9)
    SourceInfo(src/seq/iterator.rs:177:9-177:10)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:145:9-177:10)
      kind: goto -> bb2
  }
  preds [bb40]
  succs [bb2]

bb42
  0: StorageDead(_46)
    SourceInfo(src/seq/iterator.rs:177:9-177:10)
  1: StorageDead(_10)
    SourceInfo(src/seq/iterator.rs:177:9-177:10)
  2: StorageDead(_9)
    SourceInfo(src/seq/iterator.rs:177:9-177:10)
  3: StorageDead(_7)
    SourceInfo(src/seq/iterator.rs:177:9-177:10)
  4: StorageDead(_5)
    SourceInfo(src/seq/iterator.rs:178:5-178:6)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:178:5-178:6)
      kind: drop(_4) -> [return: bb43, unwind: bb47]
  }
  preds [bb30]
  succs [bb43, bb47]

bb43
  0: StorageDead(_4)
    SourceInfo(src/seq/iterator.rs:178:5-178:6)
  1: StorageDead(_3)
    SourceInfo(src/seq/iterator.rs:178:5-178:6)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:178:5-178:6)
      kind: drop(_1) -> [return: bb44, unwind: bb48]
  }
  preds [bb42]
  succs [bb44, bb48]

bb44
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:178:6-178:6)
      kind: return
  }
  preds [bb43]
  succs []

bb45
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:177:9-177:10)
      kind: drop(_46) -> [return: bb46, unwind terminate(cleanup)]
  }
  preds [bb28, bb31, bb32, bb35, bb36, bb39]
  succs [bb46]

bb46
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:178:5-178:6)
      kind: drop(_4) -> [return: bb47, unwind terminate(cleanup)]
  }
  preds [bb0, bb2, bb3, bb5, bb6, bb7, bb10, bb12, bb13, bb14, bb15, bb17, bb20, bb21, bb27, bb30, bb40, bb45]
  succs [bb47]

bb47
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:178:5-178:6)
      kind: drop(_1) -> [return: bb48, unwind terminate(cleanup)]
  }
  preds [bb42, bb46]
  succs [bb48]

bb48
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:137:5-178:6)
      kind: resume
  }
  preds [bb43, bb47]
  succs []

