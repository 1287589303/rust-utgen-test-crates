bb0
  0: StorageLive(_2)
    SourceInfo(src/rngs/reseeding.rs:135:22-135:56)
  1: StorageLive(_3)
    SourceInfo(src/rngs/reseeding.rs:135:36-135:55)
  2: StorageLive(_4)
    SourceInfo(src/rngs/reseeding.rs:135:36-135:47)
  3: _4 = &(((*_1).0: rand_core::block::BlockRng<rngs::reseeding::ReseedingCore<R, Rsdr>>).2: rngs::reseeding::ReseedingCore<R, Rsdr>)
    SourceInfo(src/rngs/reseeding.rs:135:36-135:47)
  Terminator {
      source_info: SourceInfo(src/rngs/reseeding.rs:135:36-135:55)
      kind: _3 = <rngs::reseeding::ReseedingCore<R, Rsdr> as core::clone::Clone>::clone(move _4) -> [return: bb1, unwind: bb5]
  }
  preds []
  succs [bb1, bb5]

bb1
  0: StorageDead(_4)
    SourceInfo(src/rngs/reseeding.rs:135:54-135:55)
  Terminator {
      source_info: SourceInfo(src/rngs/reseeding.rs:135:22-135:56)
      kind: _2 = rand_core::block::BlockRng::<rngs::reseeding::ReseedingCore<R, Rsdr>>::new(move _3) -> [return: bb2, unwind: bb4]
  }
  preds [bb0]
  succs [bb2, bb4]

bb2
  0: StorageDead(_3)
    SourceInfo(src/rngs/reseeding.rs:135:55-135:56)
  1: _0 = rngs::reseeding::ReseedingRng::<R, Rsdr>(move _2)
    SourceInfo(src/rngs/reseeding.rs:135:9-135:57)
  Terminator {
      source_info: SourceInfo(src/rngs/reseeding.rs:135:56-135:57)
      kind: drop(_2) -> [return: bb3, unwind: bb5]
  }
  preds [bb1]
  succs [bb3, bb5]

bb3
  0: StorageDead(_2)
    SourceInfo(src/rngs/reseeding.rs:135:56-135:57)
  Terminator {
      source_info: SourceInfo(src/rngs/reseeding.rs:136:6-136:6)
      kind: return
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(src/rngs/reseeding.rs:135:55-135:56)
      kind: drop(_3) -> [return: bb5, unwind terminate(cleanup)]
  }
  preds [bb1]
  succs [bb5]

bb5
  Terminator {
      source_info: SourceInfo(src/rngs/reseeding.rs:132:5-136:6)
      kind: resume
  }
  preds [bb0, bb2, bb4]
  succs []

