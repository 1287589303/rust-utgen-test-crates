bb0
  0: StorageLive(_2)
    SourceInfo(src/distr/bernoulli.rs:109:9-114:10)
  1: StorageLive(_3)
    SourceInfo(src/distr/bernoulli.rs:109:13-109:36)
  2: StorageLive(_4)
    SourceInfo(src/distr/bernoulli.rs:109:13-109:23)
  3: StorageLive(_5)
    SourceInfo(src/distr/bernoulli.rs:109:13-109:23)
  4: _5 = core::ops::Range::<f64> { start: const 0f64, end: const 1f64 }
    SourceInfo(src/distr/bernoulli.rs:109:13-109:23)
  5: _4 = &_5
    SourceInfo(src/distr/bernoulli.rs:109:13-109:23)
  6: StorageLive(_6)
    SourceInfo(src/distr/bernoulli.rs:109:33-109:35)
  7: StorageLive(_7)
    SourceInfo(src/distr/bernoulli.rs:109:33-109:35)
  8: _7 = &_1
    SourceInfo(src/distr/bernoulli.rs:109:33-109:35)
  9: _6 = &(*_7)
    SourceInfo(src/distr/bernoulli.rs:109:33-109:35)
  Terminator {
      source_info: SourceInfo(src/distr/bernoulli.rs:109:13-109:36)
      kind: _3 = core::ops::Range::<f64>::contains::<f64>(move _4, move _6) -> [return: bb1, unwind: bb8]
  }
  preds []
  succs [bb1, bb8]

bb1
  Terminator {
      source_info: SourceInfo(src/distr/bernoulli.rs:109:13-109:36)
      kind: switchInt(move _3) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_6)
    SourceInfo(src/distr/bernoulli.rs:109:35-109:36)
  1: StorageDead(_4)
    SourceInfo(src/distr/bernoulli.rs:109:35-109:36)
  2: StorageDead(_7)
    SourceInfo(src/distr/bernoulli.rs:109:35-109:36)
  3: StorageDead(_5)
    SourceInfo(src/distr/bernoulli.rs:109:35-109:36)
  4: _2 = const ()
    SourceInfo(src/distr/bernoulli.rs:114:10-114:10)
  5: StorageDead(_3)
    SourceInfo(src/distr/bernoulli.rs:114:9-114:10)
  6: StorageDead(_2)
    SourceInfo(src/distr/bernoulli.rs:114:9-114:10)
  7: StorageLive(_15)
    SourceInfo(src/distr/bernoulli.rs:115:12-117:10)
  8: StorageLive(_16)
    SourceInfo(src/distr/bernoulli.rs:116:20-116:38)
  9: StorageLive(_17)
    SourceInfo(src/distr/bernoulli.rs:116:20-116:31)
  10: StorageLive(_18)
    SourceInfo(src/distr/bernoulli.rs:116:21-116:22)
  11: _18 = _1
    SourceInfo(src/distr/bernoulli.rs:116:21-116:22)
  12: _17 = Mul(move _18, const distr::bernoulli::SCALE)
    SourceInfo(src/distr/bernoulli.rs:116:20-116:31)
  13: StorageDead(_18)
    SourceInfo(src/distr/bernoulli.rs:116:30-116:31)
  14: _16 = move _17 as u64 (FloatToInt)
    SourceInfo(src/distr/bernoulli.rs:116:20-116:38)
  15: StorageDead(_17)
    SourceInfo(src/distr/bernoulli.rs:116:37-116:38)
  16: _15 = distr::bernoulli::Bernoulli { p_int: move _16 }
    SourceInfo(src/distr/bernoulli.rs:115:12-117:10)
  17: StorageDead(_16)
    SourceInfo(src/distr/bernoulli.rs:117:9-117:10)
  18: _0 = core::result::Result::<distr::bernoulli::Bernoulli, distr::bernoulli::BernoulliError>::Ok(move _15)
    SourceInfo(src/distr/bernoulli.rs:115:9-117:11)
  19: StorageDead(_15)
    SourceInfo(src/distr/bernoulli.rs:117:10-117:11)
  Terminator {
      source_info: SourceInfo(src/distr/bernoulli.rs:118:6-118:6)
      kind: goto -> bb7
  }
  preds [bb1]
  succs [bb7]

bb3
  0: StorageDead(_6)
    SourceInfo(src/distr/bernoulli.rs:109:35-109:36)
  1: StorageDead(_4)
    SourceInfo(src/distr/bernoulli.rs:109:35-109:36)
  2: StorageDead(_7)
    SourceInfo(src/distr/bernoulli.rs:109:35-109:36)
  3: StorageDead(_5)
    SourceInfo(src/distr/bernoulli.rs:109:35-109:36)
  4: StorageLive(_9)
    SourceInfo(src/distr/bernoulli.rs:110:13-112:14)
  5: StorageLive(_10)
    SourceInfo(src/distr/bernoulli.rs:110:16-110:24)
  6: StorageLive(_11)
    SourceInfo(src/distr/bernoulli.rs:110:16-110:17)
  7: _11 = _1
    SourceInfo(src/distr/bernoulli.rs:110:16-110:17)
  8: _10 = Eq(move _11, const 1f64)
    SourceInfo(src/distr/bernoulli.rs:110:16-110:24)
  Terminator {
      source_info: SourceInfo(src/distr/bernoulli.rs:110:16-110:24)
      kind: switchInt(move _10) -> [0: bb5, otherwise: bb4]
  }
  preds [bb1]
  succs [bb4, bb5]

bb4
  0: StorageDead(_11)
    SourceInfo(src/distr/bernoulli.rs:110:23-110:24)
  1: StorageLive(_13)
    SourceInfo(src/distr/bernoulli.rs:111:27-111:59)
  2: _13 = distr::bernoulli::Bernoulli { p_int: const distr::bernoulli::ALWAYS_TRUE }
    SourceInfo(src/distr/bernoulli.rs:111:27-111:59)
  3: _0 = core::result::Result::<distr::bernoulli::Bernoulli, distr::bernoulli::BernoulliError>::Ok(move _13)
    SourceInfo(src/distr/bernoulli.rs:111:24-111:60)
  4: StorageDead(_13)
    SourceInfo(src/distr/bernoulli.rs:111:59-111:60)
  5: StorageDead(_10)
    SourceInfo(src/distr/bernoulli.rs:112:13-112:14)
  6: StorageDead(_9)
    SourceInfo(src/distr/bernoulli.rs:112:13-112:14)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb6
  }
  preds [bb3]
  succs [bb6]

bb5
  0: StorageDead(_11)
    SourceInfo(src/distr/bernoulli.rs:110:23-110:24)
  1: _9 = const ()
    SourceInfo(src/distr/bernoulli.rs:112:14-112:14)
  2: StorageDead(_10)
    SourceInfo(src/distr/bernoulli.rs:112:13-112:14)
  3: StorageDead(_9)
    SourceInfo(src/distr/bernoulli.rs:112:13-112:14)
  4: StorageLive(_14)
    SourceInfo(src/distr/bernoulli.rs:113:24-113:58)
  5: _14 = distr::bernoulli::BernoulliError::InvalidProbability
    SourceInfo(src/distr/bernoulli.rs:113:24-113:58)
  6: _0 = core::result::Result::<distr::bernoulli::Bernoulli, distr::bernoulli::BernoulliError>::Err(move _14)
    SourceInfo(src/distr/bernoulli.rs:113:20-113:59)
  7: StorageDead(_14)
    SourceInfo(src/distr/bernoulli.rs:113:58-113:59)
  Terminator {
      source_info: SourceInfo(src/distr/bernoulli.rs:113:13-113:59)
      kind: goto -> bb6
  }
  preds [bb3]
  succs [bb6]

bb6
  0: StorageDead(_3)
    SourceInfo(src/distr/bernoulli.rs:114:9-114:10)
  1: StorageDead(_2)
    SourceInfo(src/distr/bernoulli.rs:114:9-114:10)
  Terminator {
      source_info: SourceInfo(src/distr/bernoulli.rs:118:6-118:6)
      kind: goto -> bb7
  }
  preds [bb4, bb5]
  succs [bb7]

bb7
  Terminator {
      source_info: SourceInfo(src/distr/bernoulli.rs:118:6-118:6)
      kind: return
  }
  preds [bb2, bb6]
  succs []

bb8
  Terminator {
      source_info: SourceInfo(src/distr/bernoulli.rs:108:5-118:6)
      kind: resume
  }
  preds [bb0]
  succs []

