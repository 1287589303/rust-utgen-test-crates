bb0
  0: StorageLive(_2)
    SourceInfo(src/distr/slice.rs:70:13-70:24)
  1: StorageLive(_3)
    SourceInfo(src/distr/slice.rs:70:27-70:71)
  2: StorageLive(_4)
    SourceInfo(src/distr/slice.rs:70:27-70:70)
  3: StorageLive(_5)
    SourceInfo(src/distr/slice.rs:70:27-70:57)
  4: StorageLive(_6)
    SourceInfo(src/distr/slice.rs:70:45-70:56)
  5: StorageLive(_7)
    SourceInfo(src/distr/slice.rs:70:45-70:50)
  6: _7 = &(*_1)
    SourceInfo(src/distr/slice.rs:70:45-70:50)
  Terminator {
      source_info: SourceInfo(src/distr/slice.rs:70:45-70:56)
      kind: _6 = core::slice::<impl [T]>::len(move _7) -> [return: bb1, unwind: bb14]
  }
  preds []
  succs [bb1, bb14]

bb1
  0: StorageDead(_7)
    SourceInfo(src/distr/slice.rs:70:55-70:56)
  Terminator {
      source_info: SourceInfo(src/distr/slice.rs:70:27-70:57)
      kind: _5 = core::num::NonZero::<usize>::new(move _6) -> [return: bb2, unwind: bb14]
  }
  preds [bb0]
  succs [bb2, bb14]

bb2
  0: StorageDead(_6)
    SourceInfo(src/distr/slice.rs:70:56-70:57)
  1: StorageLive(_8)
    SourceInfo(src/distr/slice.rs:70:64-70:69)
  2: _8 = distr::slice::Empty
    SourceInfo(src/distr/slice.rs:70:64-70:69)
  Terminator {
      source_info: SourceInfo(src/distr/slice.rs:70:27-70:70)
      kind: _4 = core::option::Option::<core::num::NonZero<usize>>::ok_or::<distr::slice::Empty>(move _5, move _8) -> [return: bb3, unwind: bb14]
  }
  preds [bb1]
  succs [bb3, bb14]

bb3
  0: StorageDead(_8)
    SourceInfo(src/distr/slice.rs:70:69-70:70)
  1: StorageDead(_5)
    SourceInfo(src/distr/slice.rs:70:69-70:70)
  Terminator {
      source_info: SourceInfo(src/distr/slice.rs:70:27-70:71)
      kind: _3 = <core::result::Result<core::num::NonZero<usize>, distr::slice::Empty> as core::ops::Try>::branch(move _4) -> [return: bb4, unwind: bb14]
  }
  preds [bb2]
  succs [bb4, bb14]

bb4
  0: StorageDead(_4)
    SourceInfo(src/distr/slice.rs:70:70-70:71)
  1: PlaceMention(_3)
    SourceInfo(src/distr/slice.rs:70:27-70:71)
  2: _9 = discriminant(_3)
    SourceInfo(src/distr/slice.rs:70:27-70:71)
  Terminator {
      source_info: SourceInfo(src/distr/slice.rs:70:27-70:71)
      kind: switchInt(move _9) -> [0: bb7, 1: bb6, otherwise: bb5]
  }
  preds [bb3]
  succs [bb5, bb6, bb7]

bb5
  0: FakeRead(ForMatchedPlace(None), _3)
    SourceInfo(src/distr/slice.rs:70:27-70:71)
  Terminator {
      source_info: SourceInfo(src/distr/slice.rs:70:27-70:71)
      kind: unreachable
  }
  preds [bb4]
  succs []

bb6
  Terminator {
      source_info: SourceInfo(src/distr/slice.rs:70:70-70:71)
      kind: falseEdge -> [real: bb8, imaginary: bb7]
  }
  preds [bb4]
  succs [bb7, bb8]

bb7
  0: StorageLive(_13)
    SourceInfo(src/distr/slice.rs:70:27-70:71)
  1: _13 = ((_3 as Continue).0: core::num::NonZero<usize>)
    SourceInfo(src/distr/slice.rs:70:27-70:71)
  2: _2 = _13
    SourceInfo(src/distr/slice.rs:70:27-70:71)
  3: StorageDead(_13)
    SourceInfo(src/distr/slice.rs:70:70-70:71)
  4: FakeRead(ForLet(None), _2)
    SourceInfo(src/distr/slice.rs:70:13-70:24)
  5: StorageDead(_3)
    SourceInfo(src/distr/slice.rs:70:71-70:72)
  6: StorageLive(_14)
    SourceInfo(src/distr/slice.rs:72:12-76:10)
  7: StorageLive(_15)
    SourceInfo(src/distr/slice.rs:73:13-73:18)
  8: _15 = _1
    SourceInfo(src/distr/slice.rs:73:13-73:18)
  9: StorageLive(_16)
    SourceInfo(src/distr/slice.rs:74:20-74:68)
  10: StorageLive(_17)
    SourceInfo(src/distr/slice.rs:74:20-74:59)
  11: StorageLive(_18)
    SourceInfo(src/distr/slice.rs:74:41-74:58)
  12: StorageLive(_19)
    SourceInfo(src/distr/slice.rs:74:41-74:52)
  13: _19 = _2
    SourceInfo(src/distr/slice.rs:74:41-74:52)
  Terminator {
      source_info: SourceInfo(src/distr/slice.rs:74:41-74:58)
      kind: _18 = core::num::NonZero::<usize>::get(move _19) -> [return: bb10, unwind: bb14]
  }
  preds [bb4, bb6]
  succs [bb10, bb14]

bb8
  0: StorageLive(_10)
    SourceInfo(src/distr/slice.rs:70:70-70:71)
  1: _10 = ((_3 as Break).0: core::result::Result<core::convert::Infallible, distr::slice::Empty>)
    SourceInfo(src/distr/slice.rs:70:70-70:71)
  2: StorageLive(_12)
    SourceInfo(src/distr/slice.rs:70:70-70:71)
  3: _12 = _10
    SourceInfo(src/distr/slice.rs:70:70-70:71)
  Terminator {
      source_info: SourceInfo(src/distr/slice.rs:70:27-70:71)
      kind: _0 = <core::result::Result<distr::slice::Choose<'_, T>, distr::slice::Empty> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, distr::slice::Empty>>>::from_residual(move _12) -> [return: bb9, unwind: bb14]
  }
  preds [bb6]
  succs [bb9, bb14]

bb9
  0: StorageDead(_12)
    SourceInfo(src/distr/slice.rs:70:70-70:71)
  1: StorageDead(_10)
    SourceInfo(src/distr/slice.rs:70:70-70:71)
  2: StorageDead(_3)
    SourceInfo(src/distr/slice.rs:70:71-70:72)
  3: StorageDead(_2)
    SourceInfo(src/distr/slice.rs:77:5-77:6)
  Terminator {
      source_info: SourceInfo(src/distr/slice.rs:77:6-77:6)
      kind: goto -> bb13
  }
  preds [bb8]
  succs [bb13]

bb10
  0: StorageDead(_19)
    SourceInfo(src/distr/slice.rs:74:57-74:58)
  Terminator {
      source_info: SourceInfo(src/distr/slice.rs:74:20-74:59)
      kind: _17 = <distr::uniform::int::UniformUsize as distr::uniform::UniformSampler>::new::<usize, usize>(const 0_usize, move _18) -> [return: bb11, unwind: bb14]
  }
  preds [bb7]
  succs [bb11, bb14]

bb11
  0: StorageDead(_18)
    SourceInfo(src/distr/slice.rs:74:58-74:59)
  Terminator {
      source_info: SourceInfo(src/distr/slice.rs:74:20-74:68)
      kind: _16 = core::result::Result::<distr::uniform::int::UniformUsize, distr::uniform::Error>::unwrap(move _17) -> [return: bb12, unwind: bb14]
  }
  preds [bb10]
  succs [bb12, bb14]

bb12
  0: StorageDead(_17)
    SourceInfo(src/distr/slice.rs:74:67-74:68)
  1: StorageLive(_20)
    SourceInfo(src/distr/slice.rs:75:13-75:24)
  2: _20 = _2
    SourceInfo(src/distr/slice.rs:75:13-75:24)
  3: _14 = distr::slice::Choose::<'_, T> { slice: move _15, range: move _16, num_choices: move _20 }
    SourceInfo(src/distr/slice.rs:72:12-76:10)
  4: StorageDead(_20)
    SourceInfo(src/distr/slice.rs:76:9-76:10)
  5: StorageDead(_16)
    SourceInfo(src/distr/slice.rs:76:9-76:10)
  6: StorageDead(_15)
    SourceInfo(src/distr/slice.rs:76:9-76:10)
  7: _0 = core::result::Result::<distr::slice::Choose<'_, T>, distr::slice::Empty>::Ok(move _14)
    SourceInfo(src/distr/slice.rs:72:9-76:11)
  8: StorageDead(_14)
    SourceInfo(src/distr/slice.rs:76:10-76:11)
  9: StorageDead(_2)
    SourceInfo(src/distr/slice.rs:77:5-77:6)
  Terminator {
      source_info: SourceInfo(src/distr/slice.rs:77:6-77:6)
      kind: goto -> bb13
  }
  preds [bb11]
  succs [bb13]

bb13
  Terminator {
      source_info: SourceInfo(src/distr/slice.rs:77:6-77:6)
      kind: return
  }
  preds [bb9, bb12]
  succs []

bb14
  Terminator {
      source_info: SourceInfo(src/distr/slice.rs:69:5-77:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3, bb7, bb8, bb10, bb11]
  succs []

