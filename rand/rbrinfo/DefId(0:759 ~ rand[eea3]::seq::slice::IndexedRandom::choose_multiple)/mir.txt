bb0
  0: StorageLive(_4)
    SourceInfo(src/seq/slice.rs:95:13-95:19)
  1: StorageLive(_5)
    SourceInfo(src/seq/slice.rs:95:37-95:43)
  2: _5 = _3
    SourceInfo(src/seq/slice.rs:95:37-95:43)
  3: StorageLive(_6)
    SourceInfo(src/seq/slice.rs:95:45-95:55)
  4: StorageLive(_7)
    SourceInfo(src/seq/slice.rs:95:45-95:49)
  5: _7 = &(*_1)
    SourceInfo(src/seq/slice.rs:95:45-95:49)
  Terminator {
      source_info: SourceInfo(src/seq/slice.rs:95:45-95:55)
      kind: _6 = <Self as seq::slice::IndexedRandom>::len(move _7) -> [return: bb1, unwind: bb9]
  }
  preds []
  succs [bb1, bb9]

bb1
  0: StorageDead(_7)
    SourceInfo(src/seq/slice.rs:95:54-95:55)
  Terminator {
      source_info: SourceInfo(src/seq/slice.rs:95:22-95:56)
      kind: _4 = core::cmp::min::<usize>(move _5, move _6) -> [return: bb2, unwind: bb9]
  }
  preds [bb0]
  succs [bb2, bb9]

bb2
  0: StorageDead(_6)
    SourceInfo(src/seq/slice.rs:95:55-95:56)
  1: StorageDead(_5)
    SourceInfo(src/seq/slice.rs:95:55-95:56)
  2: FakeRead(ForLet(None), _4)
    SourceInfo(src/seq/slice.rs:95:13-95:19)
  3: StorageLive(_8)
    SourceInfo(src/seq/slice.rs:97:20-97:24)
  4: _8 = &(*_1)
    SourceInfo(src/seq/slice.rs:97:20-97:24)
  5: StorageLive(_9)
    SourceInfo(src/seq/slice.rs:98:23-98:41)
  Terminator {
      source_info: SourceInfo(src/seq/slice.rs:98:23-98:41)
      kind: _9 = <core::marker::PhantomData<<Self as core::ops::Index<usize>>::Output> as core::default::Default>::default() -> [return: bb3, unwind: bb9]
  }
  preds [bb1]
  succs [bb3, bb9]

bb3
  0: StorageLive(_10)
    SourceInfo(src/seq/slice.rs:99:22-99:72)
  1: StorageLive(_11)
    SourceInfo(src/seq/slice.rs:99:22-99:60)
  2: StorageLive(_12)
    SourceInfo(src/seq/slice.rs:99:36-99:39)
  3: _12 = &mut (*_2)
    SourceInfo(src/seq/slice.rs:99:36-99:39)
  4: StorageLive(_13)
    SourceInfo(src/seq/slice.rs:99:41-99:51)
  5: StorageLive(_14)
    SourceInfo(src/seq/slice.rs:99:41-99:45)
  6: _14 = &(*_1)
    SourceInfo(src/seq/slice.rs:99:41-99:45)
  Terminator {
      source_info: SourceInfo(src/seq/slice.rs:99:41-99:51)
      kind: _13 = <Self as seq::slice::IndexedRandom>::len(move _14) -> [return: bb4, unwind: bb9]
  }
  preds [bb2]
  succs [bb4, bb9]

bb4
  0: StorageDead(_14)
    SourceInfo(src/seq/slice.rs:99:50-99:51)
  1: StorageLive(_15)
    SourceInfo(src/seq/slice.rs:99:53-99:59)
  2: _15 = _4
    SourceInfo(src/seq/slice.rs:99:53-99:59)
  Terminator {
      source_info: SourceInfo(src/seq/slice.rs:99:22-99:60)
      kind: _11 = seq::index_::sample::<R>(move _12, move _13, move _15) -> [return: bb5, unwind: bb9]
  }
  preds [bb3]
  succs [bb5, bb9]

bb5
  0: StorageDead(_15)
    SourceInfo(src/seq/slice.rs:99:59-99:60)
  1: StorageDead(_13)
    SourceInfo(src/seq/slice.rs:99:59-99:60)
  2: StorageDead(_12)
    SourceInfo(src/seq/slice.rs:99:59-99:60)
  Terminator {
      source_info: SourceInfo(src/seq/slice.rs:99:22-99:72)
      kind: _10 = <seq::index_::IndexVec as core::iter::IntoIterator>::into_iter(move _11) -> [return: bb6, unwind: bb8]
  }
  preds [bb4]
  succs [bb6, bb8]

bb6
  0: StorageDead(_11)
    SourceInfo(src/seq/slice.rs:99:71-99:72)
  1: _0 = seq::slice::SliceChooseIter::<'_, Self, <Self as core::ops::Index<usize>>::Output> { slice: move _8, _phantom: move _9, indices: move _10 }
    SourceInfo(src/seq/slice.rs:96:9-100:10)
  Terminator {
      source_info: SourceInfo(src/seq/slice.rs:100:9-100:10)
      kind: drop(_10) -> [return: bb7, unwind: bb9]
  }
  preds [bb5]
  succs [bb7, bb9]

bb7
  0: StorageDead(_10)
    SourceInfo(src/seq/slice.rs:100:9-100:10)
  1: StorageDead(_9)
    SourceInfo(src/seq/slice.rs:100:9-100:10)
  2: StorageDead(_8)
    SourceInfo(src/seq/slice.rs:100:9-100:10)
  3: StorageDead(_4)
    SourceInfo(src/seq/slice.rs:101:5-101:6)
  Terminator {
      source_info: SourceInfo(src/seq/slice.rs:101:6-101:6)
      kind: return
  }
  preds [bb6]
  succs []

bb8
  Terminator {
      source_info: SourceInfo(src/seq/slice.rs:99:71-99:72)
      kind: drop(_11) -> [return: bb9, unwind terminate(cleanup)]
  }
  preds [bb5]
  succs [bb9]

bb9
  Terminator {
      source_info: SourceInfo(src/seq/slice.rs:90:5-101:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3, bb4, bb6, bb8]
  succs []

