bb0
  0: StorageLive(_4)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
  1: StorageLive(_5)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
  2: _5 = const true
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
      kind: switchInt(move _5) -> [0: bb4, otherwise: bb1]
  }
  preds []
  succs [bb1, bb4]

bb1
  0: StorageLive(_6)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
  1: StorageLive(_7)
    SourceInfo(src/seq/index.rs:448:19-448:35)
  2: StorageLive(_8)
    SourceInfo(src/seq/index.rs:448:19-448:25)
  3: _8 = _3
    SourceInfo(src/seq/index.rs:448:19-448:25)
  4: StorageLive(_9)
    SourceInfo(src/seq/index.rs:448:29-448:35)
  5: _9 = _2
    SourceInfo(src/seq/index.rs:448:29-448:35)
  6: _7 = Le(move _8, move _9)
    SourceInfo(src/seq/index.rs:448:19-448:35)
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:448:19-448:35)
      kind: switchInt(move _7) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_9)
    SourceInfo(src/seq/index.rs:448:34-448:35)
  1: StorageDead(_8)
    SourceInfo(src/seq/index.rs:448:34-448:35)
  2: _6 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:38-317:38)
  3: StorageDead(_7)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:37-317:38)
  4: StorageDead(_6)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:37-317:38)
  5: _4 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:43-318:10)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
      kind: goto -> bb5
  }
  preds [bb1]
  succs [bb5]

bb3
  0: StorageDead(_9)
    SourceInfo(src/seq/index.rs:448:34-448:35)
  1: StorageDead(_8)
    SourceInfo(src/seq/index.rs:448:34-448:35)
  2: StorageLive(_10)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
      kind: _10 = core::panicking::panic(const "assertion failed: amount <= length") -> bb30
  }
  preds [bb1]
  succs [bb30]

bb4
  0: _4 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:10-318:10)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
      kind: goto -> bb5
  }
  preds [bb0]
  succs [bb5]

bb5
  0: StorageDead(_5)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:9-318:10)
  1: StorageDead(_4)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:9-318:10)
  2: StorageLive(_11)
    SourceInfo(src/seq/index.rs:449:9-449:20)
  3: StorageLive(_12)
    SourceInfo(src/seq/index.rs:449:42-449:57)
  4: StorageLive(_13)
    SourceInfo(src/seq/index.rs:449:42-449:48)
  5: _13 = _3
    SourceInfo(src/seq/index.rs:449:42-449:48)
  6: _12 = move _13 as usize (IntToInt)
    SourceInfo(src/seq/index.rs:449:42-449:57)
  7: StorageDead(_13)
    SourceInfo(src/seq/index.rs:449:56-449:57)
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:449:23-449:58)
      kind: _11 = alloc::vec::Vec::<u32>::with_capacity(move _12) -> [return: bb6, unwind: bb30]
  }
  preds [bb2, bb4]
  succs [bb6, bb30]

bb6
  0: StorageDead(_12)
    SourceInfo(src/seq/index.rs:449:57-449:58)
  1: FakeRead(ForLet(None), _11)
    SourceInfo(src/seq/index.rs:449:9-449:20)
  2: StorageLive(_14)
    SourceInfo(src/seq/index.rs:450:5-456:6)
  3: StorageLive(_15)
    SourceInfo(src/seq/index.rs:450:14-450:37)
  4: StorageLive(_16)
    SourceInfo(src/seq/index.rs:450:14-450:37)
  5: StorageLive(_17)
    SourceInfo(src/seq/index.rs:450:14-450:29)
  6: StorageLive(_18)
    SourceInfo(src/seq/index.rs:450:14-450:20)
  7: _18 = _2
    SourceInfo(src/seq/index.rs:450:14-450:20)
  8: StorageLive(_19)
    SourceInfo(src/seq/index.rs:450:23-450:29)
  9: _19 = _3
    SourceInfo(src/seq/index.rs:450:23-450:29)
  10: _20 = SubWithOverflow(_18, _19)
    SourceInfo(src/seq/index.rs:450:14-450:29)
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:450:14-450:29)
      kind: assert(!move (_20.1: bool), "attempt to compute `{} - {}`, which would overflow", move _18, move _19) -> [success: bb7, unwind: bb29]
  }
  preds [bb5]
  succs [bb7, bb29]

bb7
  0: _17 = move (_20.0: u32)
    SourceInfo(src/seq/index.rs:450:14-450:29)
  1: StorageDead(_19)
    SourceInfo(src/seq/index.rs:450:28-450:29)
  2: StorageDead(_18)
    SourceInfo(src/seq/index.rs:450:28-450:29)
  3: StorageLive(_21)
    SourceInfo(src/seq/index.rs:450:31-450:37)
  4: _21 = _2
    SourceInfo(src/seq/index.rs:450:31-450:37)
  5: _16 = core::ops::Range::<u32> { start: move _17, end: move _21 }
    SourceInfo(src/seq/index.rs:450:14-450:37)
  6: StorageDead(_21)
    SourceInfo(src/seq/index.rs:450:36-450:37)
  7: StorageDead(_17)
    SourceInfo(src/seq/index.rs:450:36-450:37)
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:450:14-450:37)
      kind: _15 = <core::ops::Range<u32> as core::iter::IntoIterator>::into_iter(move _16) -> [return: bb8, unwind: bb29]
  }
  preds [bb6]
  succs [bb8, bb29]

bb8
  0: StorageDead(_16)
    SourceInfo(src/seq/index.rs:450:36-450:37)
  1: PlaceMention(_15)
    SourceInfo(src/seq/index.rs:450:14-450:37)
  2: StorageLive(_22)
    SourceInfo(src/seq/index.rs:450:14-450:37)
  3: _22 = move _15
    SourceInfo(src/seq/index.rs:450:14-450:37)
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:450:5-456:6)
      kind: goto -> bb9
  }
  preds [bb7]
  succs [bb9]

bb9
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:450:5-456:6)
      kind: falseUnwind -> [real: bb10, unwind: bb29]
  }
  preds [bb8, bb25]
  succs [bb10, bb29]

bb10
  0: StorageLive(_24)
    SourceInfo(src/seq/index.rs:450:14-450:37)
  1: StorageLive(_25)
    SourceInfo(src/seq/index.rs:450:14-450:37)
  2: StorageLive(_26)
    SourceInfo(src/seq/index.rs:450:14-450:37)
  3: StorageLive(_27)
    SourceInfo(src/seq/index.rs:450:14-450:37)
  4: _27 = &mut _22
    SourceInfo(src/seq/index.rs:450:14-450:37)
  5: _26 = &mut (*_27)
    SourceInfo(src/seq/index.rs:450:14-450:37)
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:450:14-450:37)
      kind: _25 = <core::ops::Range<u32> as core::iter::Iterator>::next(move _26) -> [return: bb11, unwind: bb29]
  }
  preds [bb9]
  succs [bb11, bb29]

bb11
  0: StorageDead(_26)
    SourceInfo(src/seq/index.rs:450:36-450:37)
  1: PlaceMention(_25)
    SourceInfo(src/seq/index.rs:450:14-450:37)
  2: _28 = discriminant(_25)
    SourceInfo(src/seq/index.rs:450:14-450:37)
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:450:14-450:37)
      kind: switchInt(move _28) -> [0: bb13, 1: bb14, otherwise: bb12]
  }
  preds [bb10]
  succs [bb12, bb13, bb14]

bb12
  0: FakeRead(ForMatchedPlace(None), _25)
    SourceInfo(src/seq/index.rs:450:14-450:37)
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:450:14-450:37)
      kind: unreachable
  }
  preds [bb11]
  succs []

bb13
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:450:5-456:6)
      kind: falseEdge -> [real: bb15, imaginary: bb14]
  }
  preds [bb11]
  succs [bb14, bb15]

bb14
  0: StorageLive(_30)
    SourceInfo(src/seq/index.rs:450:9-450:10)
  1: _30 = ((_25 as Some).0: u32)
    SourceInfo(src/seq/index.rs:450:9-450:10)
  2: StorageLive(_31)
    SourceInfo(src/seq/index.rs:451:13-451:14)
  3: StorageLive(_32)
    SourceInfo(src/seq/index.rs:451:17-451:20)
  4: _32 = &mut (*_1)
    SourceInfo(src/seq/index.rs:451:17-451:20)
  5: StorageLive(_33)
    SourceInfo(src/seq/index.rs:451:34-451:38)
  6: StorageLive(_34)
    SourceInfo(src/seq/index.rs:451:37-451:38)
  7: _34 = _30
    SourceInfo(src/seq/index.rs:451:37-451:38)
  8: _33 = core::ops::RangeToInclusive::<u32> { end: move _34 }
    SourceInfo(src/seq/index.rs:451:34-451:38)
  9: StorageDead(_34)
    SourceInfo(src/seq/index.rs:451:37-451:38)
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:451:17-451:39)
      kind: _31 = <R as rng::Rng>::random_range::<u32, core::ops::RangeToInclusive<u32>>(move _32, move _33) -> [return: bb16, unwind: bb29]
  }
  preds [bb11, bb13]
  succs [bb16, bb29]

bb15
  0: _14 = const ()
    SourceInfo(src/seq/index.rs:450:5-456:6)
  1: StorageDead(_27)
    SourceInfo(src/seq/index.rs:456:5-456:6)
  2: StorageDead(_25)
    SourceInfo(src/seq/index.rs:456:5-456:6)
  3: StorageDead(_24)
    SourceInfo(src/seq/index.rs:456:5-456:6)
  4: StorageDead(_22)
    SourceInfo(src/seq/index.rs:456:5-456:6)
  5: StorageDead(_15)
    SourceInfo(src/seq/index.rs:456:5-456:6)
  6: StorageDead(_14)
    SourceInfo(src/seq/index.rs:456:5-456:6)
  7: StorageLive(_53)
    SourceInfo(src/seq/index.rs:457:20-457:27)
  8: _53 = move _11
    SourceInfo(src/seq/index.rs:457:20-457:27)
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:457:5-457:28)
      kind: _0 = <seq::index_::IndexVec as core::convert::From<alloc::vec::Vec<u32>>>::from(move _53) -> [return: bb26, unwind: bb28]
  }
  preds [bb13]
  succs [bb26, bb28]

bb16
  0: StorageDead(_33)
    SourceInfo(src/seq/index.rs:451:38-451:39)
  1: StorageDead(_32)
    SourceInfo(src/seq/index.rs:451:38-451:39)
  2: FakeRead(ForLet(None), _31)
    SourceInfo(src/seq/index.rs:451:13-451:14)
  3: StorageLive(_35)
    SourceInfo(src/seq/index.rs:452:9-454:10)
  4: StorageLive(_36)
    SourceInfo(src/seq/index.rs:452:28-452:64)
  5: StorageLive(_37)
    SourceInfo(src/seq/index.rs:452:28-452:42)
  6: StorageLive(_38)
    SourceInfo(src/seq/index.rs:452:28-452:42)
  7: StorageLive(_39)
    SourceInfo(src/seq/index.rs:452:28-452:35)
  8: StorageLive(_40)
    SourceInfo(src/seq/index.rs:452:28-452:42)
  9: StorageLive(_41)
    SourceInfo(src/seq/index.rs:452:28-452:35)
  10: _41 = &_11
    SourceInfo(src/seq/index.rs:452:28-452:35)
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:452:28-452:42)
      kind: _40 = <alloc::vec::Vec<u32> as core::ops::Deref>::deref(move _41) -> [return: bb17, unwind: bb29]
  }
  preds [bb14]
  succs [bb17, bb29]

bb17
  0: _39 = &(*_40)
    SourceInfo(src/seq/index.rs:452:28-452:35)
  1: StorageDead(_41)
    SourceInfo(src/seq/index.rs:452:34-452:35)
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:452:28-452:42)
      kind: _38 = core::slice::<impl [u32]>::iter(move _39) -> [return: bb18, unwind: bb29]
  }
  preds [bb16]
  succs [bb18, bb29]

bb18
  0: _37 = &mut _38
    SourceInfo(src/seq/index.rs:452:28-452:42)
  1: StorageDead(_39)
    SourceInfo(src/seq/index.rs:452:41-452:42)
  2: StorageLive(_42)
    SourceInfo(src/seq/index.rs:452:52-452:63)
  3: StorageLive(_43)
    SourceInfo(src/seq/index.rs:452:52-452:63)
  4: _43 = &_31
    SourceInfo(src/seq/index.rs:452:52-452:63)
  5: _42 = {closure@src/seq/index.rs:452:52: 452:56} { t: move _43 }
    SourceInfo(src/seq/index.rs:452:52-452:63)
  6: StorageDead(_43)
    SourceInfo(src/seq/index.rs:452:55-452:56)
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:452:28-452:64)
      kind: _36 = <core::slice::Iter<'_, u32> as core::iter::Iterator>::position::<{closure@src/seq/index.rs:452:52: 452:56}>(move _37, move _42) -> [return: bb19, unwind: bb29]
  }
  preds [bb17]
  succs [bb19, bb29]

bb19
  0: StorageDead(_42)
    SourceInfo(src/seq/index.rs:452:63-452:64)
  1: StorageDead(_37)
    SourceInfo(src/seq/index.rs:452:63-452:64)
  2: PlaceMention(_36)
    SourceInfo(src/seq/index.rs:452:28-452:64)
  3: _44 = discriminant(_36)
    SourceInfo(src/seq/index.rs:452:28-452:64)
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:452:16-452:25)
      kind: switchInt(move _44) -> [1: bb20, otherwise: bb23]
  }
  preds [bb18]
  succs [bb20, bb23]

bb20
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:452:16-452:25)
      kind: falseEdge -> [real: bb21, imaginary: bb23]
  }
  preds [bb19]
  succs [bb21, bb23]

bb21
  0: StorageLive(_45)
    SourceInfo(src/seq/index.rs:452:21-452:24)
  1: _45 = ((_36 as Some).0: usize)
    SourceInfo(src/seq/index.rs:452:21-452:24)
  2: StorageLive(_46)
    SourceInfo(src/seq/index.rs:453:28-453:29)
  3: _46 = _30
    SourceInfo(src/seq/index.rs:453:28-453:29)
  4: StorageLive(_47)
    SourceInfo(src/seq/index.rs:453:20-453:25)
  5: StorageLive(_48)
    SourceInfo(src/seq/index.rs:453:13-453:20)
  6: _48 = &mut _11
    SourceInfo(src/seq/index.rs:453:13-453:20)
  7: StorageLive(_49)
    SourceInfo(src/seq/index.rs:453:21-453:24)
  8: _49 = _45
    SourceInfo(src/seq/index.rs:453:21-453:24)
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:453:20-453:25)
      kind: _47 = <alloc::vec::Vec<u32> as core::ops::IndexMut<usize>>::index_mut(move _48, move _49) -> [return: bb22, unwind: bb29]
  }
  preds [bb20]
  succs [bb22, bb29]

bb22
  0: StorageDead(_49)
    SourceInfo(src/seq/index.rs:453:24-453:25)
  1: StorageDead(_48)
    SourceInfo(src/seq/index.rs:453:24-453:25)
  2: (*_47) = move _46
    SourceInfo(src/seq/index.rs:453:13-453:29)
  3: StorageDead(_46)
    SourceInfo(src/seq/index.rs:453:28-453:29)
  4: StorageDead(_47)
    SourceInfo(src/seq/index.rs:453:29-453:30)
  5: _35 = const ()
    SourceInfo(src/seq/index.rs:452:65-454:10)
  6: StorageDead(_45)
    SourceInfo(src/seq/index.rs:454:9-454:10)
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:452:9-454:10)
      kind: goto -> bb24
  }
  preds [bb21]
  succs [bb24]

bb23
  0: _35 = const ()
    SourceInfo(src/seq/index.rs:454:10-454:10)
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:452:9-454:10)
      kind: goto -> bb24
  }
  preds [bb19, bb20]
  succs [bb24]

bb24
  0: StorageDead(_40)
    SourceInfo(src/seq/index.rs:454:9-454:10)
  1: StorageDead(_38)
    SourceInfo(src/seq/index.rs:454:9-454:10)
  2: StorageDead(_36)
    SourceInfo(src/seq/index.rs:454:9-454:10)
  3: StorageDead(_35)
    SourceInfo(src/seq/index.rs:454:9-454:10)
  4: StorageLive(_50)
    SourceInfo(src/seq/index.rs:455:9-455:24)
  5: StorageLive(_51)
    SourceInfo(src/seq/index.rs:455:9-455:16)
  6: _51 = &mut _11
    SourceInfo(src/seq/index.rs:455:9-455:16)
  7: StorageLive(_52)
    SourceInfo(src/seq/index.rs:455:22-455:23)
  8: _52 = _31
    SourceInfo(src/seq/index.rs:455:22-455:23)
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:455:9-455:24)
      kind: _50 = alloc::vec::Vec::<u32>::push(move _51, move _52) -> [return: bb25, unwind: bb29]
  }
  preds [bb22, bb23]
  succs [bb25, bb29]

bb25
  0: StorageDead(_52)
    SourceInfo(src/seq/index.rs:455:23-455:24)
  1: StorageDead(_51)
    SourceInfo(src/seq/index.rs:455:23-455:24)
  2: StorageDead(_50)
    SourceInfo(src/seq/index.rs:455:24-455:25)
  3: _24 = const ()
    SourceInfo(src/seq/index.rs:450:38-456:6)
  4: StorageDead(_31)
    SourceInfo(src/seq/index.rs:456:5-456:6)
  5: StorageDead(_30)
    SourceInfo(src/seq/index.rs:456:5-456:6)
  6: StorageDead(_27)
    SourceInfo(src/seq/index.rs:456:5-456:6)
  7: StorageDead(_25)
    SourceInfo(src/seq/index.rs:456:5-456:6)
  8: StorageDead(_24)
    SourceInfo(src/seq/index.rs:456:5-456:6)
  9: _23 = const ()
    SourceInfo(src/seq/index.rs:450:5-456:6)
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:450:5-456:6)
      kind: goto -> bb9
  }
  preds [bb24]
  succs [bb9]

bb26
  0: StorageDead(_53)
    SourceInfo(src/seq/index.rs:457:27-457:28)
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:458:1-458:2)
      kind: drop(_11) -> [return: bb27, unwind: bb30]
  }
  preds [bb15]
  succs [bb27, bb30]

bb27
  0: StorageDead(_11)
    SourceInfo(src/seq/index.rs:458:1-458:2)
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:458:2-458:2)
      kind: return
  }
  preds [bb26]
  succs []

bb28
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:457:27-457:28)
      kind: drop(_53) -> [return: bb29, unwind terminate(cleanup)]
  }
  preds [bb15]
  succs [bb29]

bb29
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:458:1-458:2)
      kind: drop(_11) -> [return: bb30, unwind terminate(cleanup)]
  }
  preds [bb6, bb7, bb9, bb10, bb14, bb16, bb17, bb18, bb21, bb24, bb28]
  succs [bb30]

bb30
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:441:1-458:2)
      kind: resume
  }
  preds [bb3, bb5, bb26, bb29]
  succs []

