bb0
  0: StorageLive(_2)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:73:13-73:16)
  1: StorageLive(_3)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:73:19-73:23)
  2: _3 = &mut (*_1)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:73:19-73:23)
  Terminator {
      source_info: SourceInfo(src/rngs/xoshiro256plusplus.rs:73:19-73:34)
      kind: _2 = <rngs::xoshiro256plusplus::Xoshiro256PlusPlus as rand_core::RngCore>::next_u64(move _3) -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: StorageDead(_3)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:73:33-73:34)
  1: FakeRead(ForLet(None), _2)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:73:13-73:16)
  2: StorageLive(_4)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:74:9-74:20)
  3: StorageLive(_5)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:74:10-74:13)
  4: _5 = _2
    SourceInfo(src/rngs/xoshiro256plusplus.rs:74:10-74:13)
  5: _6 = const 32_i32 as u32 (IntToInt)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:74:9-74:20)
  6: _7 = Lt(move _6, const 64_u32)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:74:9-74:20)
  Terminator {
      source_info: SourceInfo(src/rngs/xoshiro256plusplus.rs:74:9-74:20)
      kind: assert(move _7, "attempt to shift right by `{}`, which would overflow", const 32_i32) -> [success: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: _4 = Shr(move _5, const 32_i32)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:74:9-74:20)
  1: StorageDead(_5)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:74:19-74:20)
  2: _0 = move _4 as u32 (IntToInt)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:74:9-74:27)
  3: StorageDead(_4)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:74:26-74:27)
  4: StorageDead(_2)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:75:5-75:6)
  Terminator {
      source_info: SourceInfo(src/rngs/xoshiro256plusplus.rs:75:6-75:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(src/rngs/xoshiro256plusplus.rs:70:5-75:6)
      kind: resume
  }
  preds [bb0, bb1]
  succs []

