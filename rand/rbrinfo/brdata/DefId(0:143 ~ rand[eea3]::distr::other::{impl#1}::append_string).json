{
  "name": "rand::distr::other::{impl#1}::append_string",
  "mod_info": {
    "name": "distr::other",
    "loc": "src/distr/mod.rs:93:1:93:11"
  },
  "visible": true,
  "loc": "src/distr/other.rs:127:5:133:6",
  "doc": "",
  "code": [
    "fn append_string<R: Rng + ?Sized>(&self, rng: &mut R, s: &mut String, len: usize) {",
    "    // A char is encoded with at most four bytes, thus this reservation is",
    "    // guaranteed to be sufficient. We do not shrink_to_fit afterwards so",
    "    // that repeated usage on the same `String` buffer does not reallocate.",
    "    s.reserve(4 * len);",
    "    s.extend(Distribution::<char>::sample_iter(self, rng).take(len));",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}