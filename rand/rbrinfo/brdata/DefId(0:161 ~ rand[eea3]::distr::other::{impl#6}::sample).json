{
  "name": "rand::distr::other::{impl#6}::sample",
  "mod_info": {
    "name": "distr::other",
    "loc": "src/distr/mod.rs:93:1:93:11"
  },
  "visible": true,
  "loc": "src/distr/other.rs:192:5:198:6",
  "doc": "",
  "code": [
    "fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> bool {",
    "    // We can compare against an arbitrary bit of an u32 to get a bool.",
    "    // Because the least significant bits of a lower quality RNG can have",
    "    // simple patterns, we compare against the most significant bit. This is",
    "    // easiest done using a sign test.",
    "    (rng.next_u32() as i32) < 0",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "(rng.next_u32() as i32) < 0",
      "path": [
        0,
        1
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}