{
  "name": "rand::distr::uniform::other::{impl#1}::new",
  "mod_info": {
    "name": "distr::uniform::other",
    "loc": "src/distr/uniform.rs:108:1:108:11"
  },
  "visible": true,
  "loc": "src/distr/uniform_other.rs:57:5:66:6",
  "doc": "",
  "code": [
    "fn new<B1, B2>(low_b: B1, high_b: B2) -> Result<Self, Error>",
    "where",
    "    B1: SampleBorrow<Self::X> + Sized,",
    "    B2: SampleBorrow<Self::X> + Sized,",
    "{",
    "    let low = char_to_comp_u32(*low_b.borrow());",
    "    let high = char_to_comp_u32(*high_b.borrow());",
    "    let sampler = UniformInt::<u32>::new(low, high);",
    "    sampler.map(|sampler| UniformChar { sampler })",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}