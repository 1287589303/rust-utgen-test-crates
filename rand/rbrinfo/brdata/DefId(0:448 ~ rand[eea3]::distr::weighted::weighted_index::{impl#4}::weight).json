{
  "name": "rand::distr::weighted::weighted_index::{impl#4}::weight",
  "mod_info": {
    "name": "distr::weighted::weighted_index",
    "loc": "src/distr/weighted/mod.rs:18:1:18:20"
  },
  "visible": true,
  "loc": "src/distr/weighted/weighted_index.rs:308:5:324:6",
  "doc": "/// Returns the weight at the given index, if it exists.\n///\n/// If the index is out of bounds, this will return `None`.\n///\n/// # Example\n///\n/// ```\n/// use rand::distr::weighted::WeightedIndex;\n///\n/// let weights = [0, 1, 2];\n/// let dist = WeightedIndex::new(&weights).unwrap();\n/// assert_eq!(dist.weight(0), Some(0));\n/// assert_eq!(dist.weight(1), Some(1));\n/// assert_eq!(dist.weight(2), Some(2));\n/// assert_eq!(dist.weight(3), None);\n/// ```\n",
  "code": [
    "pub fn weight(&self, index: usize) -> Option<X>",
    "where",
    "    X: for<'a> core::ops::SubAssign<&'a X>,",
    "{",
    "    use core::cmp::Ordering::*;",
    "",
    "    let mut weight = match index.cmp(&self.cumulative_weights.len()) {",
    "        Less => self.cumulative_weights[index].clone(),",
    "        Equal => self.total_weight.clone(),",
    "        Greater => return None,",
    "    };",
    "",
    "    if index > 0 {",
    "        weight -= &self.cumulative_weights[index - 1];",
    "    }",
    "    Some(weight)",
    "}"
  ],
  "size": {
    "chain": 5,
    "contra": 0,
    "min_set": 3
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "index.cmp(&self.cumulative_weights.len()) matches Greater",
          "norm": null,
          "value": "true",
          "line": 314,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        2,
        6,
        21
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "index.cmp(&self.cumulative_weights.len()) matches Equal",
          "norm": null,
          "value": "true",
          "line": 314,
          "bound": null
        },
        {
          "cond": "index.cmp(&self.cumulative_weights.len()) matches Equal",
          "norm": null,
          "value": "true",
          "line": 314,
          "bound": null
        },
        {
          "cond": "index > 0",
          "norm": "0 < index",
          "value": "true",
          "line": 320,
          "bound": null
        }
      ],
      "ret": "Some(weight)",
      "path": [
        0,
        1,
        2,
        5,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        18,
        19,
        20,
        21
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "index.cmp(&self.cumulative_weights.len()) matches Equal",
          "norm": null,
          "value": "true",
          "line": 314,
          "bound": null
        },
        {
          "cond": "index.cmp(&self.cumulative_weights.len()) matches Equal",
          "norm": null,
          "value": "true",
          "line": 314,
          "bound": null
        },
        {
          "cond": "index > 0",
          "norm": "0 < index",
          "value": "false",
          "line": 320,
          "bound": "index == 0"
        }
      ],
      "ret": "Some(weight)",
      "path": [
        0,
        1,
        2,
        5,
        10,
        11,
        12,
        17,
        18,
        19,
        20,
        21
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "index.cmp(&self.cumulative_weights.len()) matches Less",
          "norm": null,
          "value": "true",
          "line": 314,
          "bound": null
        },
        {
          "cond": "index.cmp(&self.cumulative_weights.len()) matches Less",
          "norm": null,
          "value": "true",
          "line": 314,
          "bound": null
        },
        {
          "cond": "index > 0",
          "norm": "0 < index",
          "value": "true",
          "line": 320,
          "bound": null
        }
      ],
      "ret": "Some(weight)",
      "path": [
        0,
        1,
        2,
        4,
        7,
        8,
        9,
        12,
        13,
        14,
        15,
        16,
        18,
        19,
        20,
        21
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "index.cmp(&self.cumulative_weights.len()) matches Less",
          "norm": null,
          "value": "true",
          "line": 314,
          "bound": null
        },
        {
          "cond": "index.cmp(&self.cumulative_weights.len()) matches Less",
          "norm": null,
          "value": "true",
          "line": 314,
          "bound": null
        },
        {
          "cond": "index > 0",
          "norm": "0 < index",
          "value": "false",
          "line": 320,
          "bound": "index == 0"
        }
      ],
      "ret": "Some(weight)",
      "path": [
        0,
        1,
        2,
        4,
        7,
        8,
        9,
        12,
        17,
        18,
        19,
        20,
        21
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}