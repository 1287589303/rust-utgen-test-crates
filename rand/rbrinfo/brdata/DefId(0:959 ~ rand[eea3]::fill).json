{
  "name": "rand::fill",
  "mod_info": {
    "name": "",
    "loc": "src/lib.rs:10:1:331:2"
  },
  "visible": true,
  "loc": "src/lib.rs:295:1:297:2",
  "doc": "/// Fill any type implementing [`Fill`] with random data\n///\n/// This function is shorthand for\n/// <code>[rng()].[fill](Rng::fill)(<var>dest</var>)</code>.\n///\n/// # Example\n///\n/// ```\n/// let mut arr = [0i8; 20];\n/// rand::fill(&mut arr[..]);\n/// ```\n///\n/// Note that you can instead use [`random()`] to generate an array of random\n/// data, though this is slower for small elements (smaller than the RNG word\n/// size).\n",
  "code": [
    "pub fn fill<T: Fill + ?Sized>(dest: &mut T) {",
    "    dest.fill(&mut rng())",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}