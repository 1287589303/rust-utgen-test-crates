{
  "name": "rand::distr::uniform::int::{impl#15}::sample_single",
  "mod_info": {
    "name": "distr::uniform::int",
    "loc": "src/distr/uniform.rs:103:1:103:9"
  },
  "visible": true,
  "loc": "src/distr/uniform_int.rs:153:13:168:14",
  "doc": "",
  "code": [
    "fn sample_single<R: Rng + ?Sized, B1, B2>(",
    "    low_b: B1,",
    "    high_b: B2,",
    "    rng: &mut R,",
    ") -> Result<Self::X, Error>",
    "where",
    "    B1: SampleBorrow<Self::X> + Sized,",
    "    B2: SampleBorrow<Self::X> + Sized,",
    "{",
    "    let low = *low_b.borrow();",
    "    let high = *high_b.borrow();",
    "    if !(low < high) {",
    "        return Err(Error::EmptyRange);",
    "    }",
    "    Self::sample_single_inclusive(low, high - 1, rng)",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "(low < high)",
          "norm": "high > low",
          "value": "true",
          "line": 164,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        5,
        6,
        7,
        9
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "(low < high)",
          "norm": "high > low",
          "value": "false",
          "line": 164,
          "bound": "low == high"
        }
      ],
      "ret": "Err(Error::EmptyRange)",
      "path": [
        0,
        1,
        2,
        4,
        8,
        9
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}