{
  "name": "rand::seq::index_::sample_efraimidis_spirakis",
  "mod_info": {
    "name": "seq::index_",
    "loc": "src/seq/mod.rs:36:1:36:12"
  },
  "visible": false,
  "loc": "src/seq/index.rs:344:1:433:2",
  "doc": "/// Randomly sample exactly `amount` distinct indices from `0..length`, and\n/// return them in an arbitrary order (there is no guarantee of shuffling or\n/// ordering). The weights are to be provided by the input function `weights`,\n/// which will be called once for each index.\n///\n/// This implementation is based on the algorithm A-ExpJ as found in\n/// [Efraimidis and Spirakis, 2005](https://doi.org/10.1016/j.ipl.2005.11.003).\n/// It uses `O(length + amount)` space and `O(length)` time.\n///\n/// Error cases:\n/// -   [`WeightError::InvalidWeight`] when a weight is not-a-number or negative.\n/// -   [`WeightError::InsufficientNonZero`] when fewer than `amount` weights are positive.\n",
  "code": [
    "fn sample_efraimidis_spirakis<R, F, X, N>(",
    "    rng: &mut R,",
    "    length: N,",
    "    weight: F,",
    "    amount: N,",
    ") -> Result<IndexVec, WeightError>",
    "where",
    "    R: Rng + ?Sized,",
    "    F: Fn(usize) -> X,",
    "    X: Into<f64>,",
    "    N: UInt,",
    "    IndexVec: From<Vec<N>>,",
    "{",
    "    use std::{cmp::Ordering, collections::BinaryHeap};",
    "",
    "    if amount == N::zero() {",
    "        return Ok(IndexVec::U32(Vec::new()));",
    "    }",
    "",
    "    struct Element<N> {",
    "        index: N,",
    "        key: f64,",
    "    }",
    "",
    "    impl<N> PartialOrd for Element<N> {",
    "        fn partial_cmp(&self, other: &Self) -> Option<Ordering> {",
    "            Some(self.cmp(other))",
    "        }",
    "    }",
    "",
    "    impl<N> Ord for Element<N> {",
    "        fn cmp(&self, other: &Self) -> Ordering {",
    "            // unwrap() should not panic since weights should not be NaN",
    "            // We reverse so that BinaryHeap::peek shows the smallest item",
    "            self.key.partial_cmp(&other.key).unwrap().reverse()",
    "        }",
    "    }",
    "",
    "    impl<N> PartialEq for Element<N> {",
    "        fn eq(&self, other: &Self) -> bool {",
    "            self.key == other.key",
    "        }",
    "    }",
    "",
    "    impl<N> Eq for Element<N> {}",
    "",
    "    let mut candidates = BinaryHeap::with_capacity(amount.as_usize());",
    "    let mut index = N::zero();",
    "    while index < length && candidates.len() < amount.as_usize() {",
    "        let weight = weight(index.as_usize()).into();",
    "        if weight > 0.0 {",
    "            // We use the log of the key used in A-ExpJ to improve precision",
    "            // for small weights:",
    "            let key = rng.random::<f64>().ln() / weight;",
    "            candidates.push(Element { index, key });",
    "        } else if !(weight >= 0.0) {",
    "            return Err(WeightError::InvalidWeight);",
    "        }",
    "",
    "        index += N::one();",
    "    }",
    "",
    "    if candidates.len() < amount.as_usize() {",
    "        return Err(WeightError::InsufficientNonZero);",
    "    }",
    "",
    "    let mut x = rng.random::<f64>().ln() / candidates.peek().unwrap().key;",
    "    while index < length {",
    "        let weight = weight(index.as_usize()).into();",
    "        if weight > 0.0 {",
    "            x -= weight;",
    "            if x <= 0.0 {",
    "                let min_candidate = candidates.pop().unwrap();",
    "                let t = (min_candidate.key * weight).exp();",
    "                let key = rng.random_range(t..1.0).ln() / weight;",
    "                candidates.push(Element { index, key });",
    "",
    "                x = rng.random::<f64>().ln() / candidates.peek().unwrap().key;",
    "            }",
    "        } else if !(weight >= 0.0) {",
    "            return Err(WeightError::InvalidWeight);",
    "        }",
    "",
    "        index += N::one();",
    "    }",
    "",
    "    Ok(IndexVec::from(",
    "        candidates.iter().map(|elt| elt.index).collect(),",
    "    ))",
    "}"
  ],
  "size": {
    "chain": 26,
    "contra": 18,
    "min_set": 8
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "amount == N::zero()",
          "norm": "N::zero() == amount",
          "value": "true",
          "line": 359,
          "bound": null
        }
      ],
      "ret": "Ok(IndexVec::U32(Vec::new()))",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        78,
        79
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "amount == N::zero()",
          "norm": "N::zero() == amount",
          "value": "false",
          "line": 359,
          "bound": null
        },
        {
          "cond": "index < length",
          "norm": null,
          "value": "true",
          "line": 392,
          "bound": null
        },
        {
          "cond": "candidates.len() < amount.as_usize()",
          "norm": "amount.as_usize() > candidates.len()",
          "value": "true",
          "line": 392,
          "bound": null
        },
        {
          "cond": "weight > 0.0",
          "norm": "0.0 < weight",
          "value": "true",
          "line": 394,
          "bound": null
        },
        {
          "cond": "index < length",
          "norm": null,
          "value": "false",
          "line": 392,
          "bound": "index == length"
        },
        {
          "cond": "candidates.len() < amount.as_usize()",
          "norm": "amount.as_usize() > candidates.len()",
          "value": "true",
          "line": 406,
          "bound": null
        }
      ],
      "ret": "Err(WeightError::InsufficientNonZero)",
      "path": [
        0,
        1,
        2,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        28,
        29,
        30,
        11,
        12,
        13,
        32,
        33,
        34,
        35,
        36,
        76,
        77,
        78,
        79
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "amount == N::zero()",
          "norm": "N::zero() == amount",
          "value": "false",
          "line": 359,
          "bound": null
        },
        {
          "cond": "index < length",
          "norm": null,
          "value": "true",
          "line": 392,
          "bound": null
        },
        {
          "cond": "candidates.len() < amount.as_usize()",
          "norm": "amount.as_usize() > candidates.len()",
          "value": "true",
          "line": 392,
          "bound": null
        },
        {
          "cond": "weight > 0.0",
          "norm": "0.0 < weight",
          "value": "true",
          "line": 394,
          "bound": null
        },
        {
          "cond": "index < length",
          "norm": null,
          "value": "false",
          "line": 392,
          "bound": "index == length"
        },
        {
          "cond": "candidates.len() < amount.as_usize()",
          "norm": "amount.as_usize() > candidates.len()",
          "value": "false",
          "line": 406,
          "bound": "candidates.len() == amount.as_usize()"
        },
        {
          "cond": "index < length",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "weight > 0.0",
          "norm": "0.0 < weight",
          "value": "true",
          "line": 413,
          "bound": null
        },
        {
          "cond": "x <= 0.0",
          "norm": "0.0 >= x",
          "value": "true",
          "line": 415,
          "bound": "x == 0.0"
        },
        {
          "cond": "index < length",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": "index == length"
        }
      ],
      "ret": "Ok(IndexVec::from(\n        candidates.iter().map(|elt| elt.index).collect(),\n    ))",
      "path": [
        0,
        1,
        2,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        28,
        29,
        30,
        11,
        12,
        13,
        32,
        33,
        34,
        35,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        59,
        60,
        62,
        66,
        67,
        68,
        42,
        43,
        44,
        69,
        70,
        71,
        72,
        73,
        74,
        75,
        79
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "amount == N::zero()",
          "norm": "N::zero() == amount",
          "value": "false",
          "line": 359,
          "bound": null
        },
        {
          "cond": "index < length",
          "norm": null,
          "value": "true",
          "line": 392,
          "bound": null
        },
        {
          "cond": "candidates.len() < amount.as_usize()",
          "norm": "amount.as_usize() > candidates.len()",
          "value": "true",
          "line": 392,
          "bound": null
        },
        {
          "cond": "weight > 0.0",
          "norm": "0.0 < weight",
          "value": "true",
          "line": 394,
          "bound": null
        },
        {
          "cond": "index < length",
          "norm": null,
          "value": "false",
          "line": 392,
          "bound": "index == length"
        },
        {
          "cond": "candidates.len() < amount.as_usize()",
          "norm": "amount.as_usize() > candidates.len()",
          "value": "false",
          "line": 406,
          "bound": "candidates.len() == amount.as_usize()"
        },
        {
          "cond": "index < length",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "weight > 0.0",
          "norm": "0.0 < weight",
          "value": "true",
          "line": 413,
          "bound": null
        },
        {
          "cond": "x <= 0.0",
          "norm": "0.0 >= x",
          "value": "false",
          "line": 415,
          "bound": null
        },
        {
          "cond": "index < length",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": "index == length"
        }
      ],
      "ret": "Ok(IndexVec::from(\n        candidates.iter().map(|elt| elt.index).collect(),\n    ))",
      "path": [
        0,
        1,
        2,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        28,
        29,
        30,
        11,
        12,
        13,
        32,
        33,
        34,
        35,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        61,
        62,
        66,
        67,
        68,
        42,
        43,
        44,
        69,
        70,
        71,
        72,
        73,
        74,
        75,
        79
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "amount == N::zero()",
          "norm": "N::zero() == amount",
          "value": "false",
          "line": 359,
          "bound": null
        },
        {
          "cond": "index < length",
          "norm": null,
          "value": "true",
          "line": 392,
          "bound": null
        },
        {
          "cond": "candidates.len() < amount.as_usize()",
          "norm": "amount.as_usize() > candidates.len()",
          "value": "true",
          "line": 392,
          "bound": null
        },
        {
          "cond": "weight > 0.0",
          "norm": "0.0 < weight",
          "value": "true",
          "line": 394,
          "bound": null
        },
        {
          "cond": "index < length",
          "norm": null,
          "value": "false",
          "line": 392,
          "bound": "index == length"
        },
        {
          "cond": "candidates.len() < amount.as_usize()",
          "norm": "amount.as_usize() > candidates.len()",
          "value": "false",
          "line": 406,
          "bound": "candidates.len() == amount.as_usize()"
        },
        {
          "cond": "index < length",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "weight > 0.0",
          "norm": "0.0 < weight",
          "value": "false",
          "line": 413,
          "bound": "weight == 0.0"
        },
        {
          "cond": "(weight >= 0.0)",
          "norm": "0.0 <= weight",
          "value": "true",
          "line": 423,
          "bound": "weight == 0.0"
        },
        {
          "cond": "index < length",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": "index == length"
        }
      ],
      "ret": "Ok(IndexVec::from(\n        candidates.iter().map(|elt| elt.index).collect(),\n    ))",
      "path": [
        0,
        1,
        2,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        28,
        29,
        30,
        11,
        12,
        13,
        32,
        33,
        34,
        35,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        63,
        64,
        66,
        67,
        68,
        42,
        43,
        44,
        69,
        70,
        71,
        72,
        73,
        74,
        75,
        79
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "amount == N::zero()",
          "norm": "N::zero() == amount",
          "value": "false",
          "line": 359,
          "bound": null
        },
        {
          "cond": "index < length",
          "norm": null,
          "value": "true",
          "line": 392,
          "bound": null
        },
        {
          "cond": "candidates.len() < amount.as_usize()",
          "norm": "amount.as_usize() > candidates.len()",
          "value": "true",
          "line": 392,
          "bound": null
        },
        {
          "cond": "weight > 0.0",
          "norm": "0.0 < weight",
          "value": "true",
          "line": 394,
          "bound": null
        },
        {
          "cond": "index < length",
          "norm": null,
          "value": "false",
          "line": 392,
          "bound": "index == length"
        },
        {
          "cond": "candidates.len() < amount.as_usize()",
          "norm": "amount.as_usize() > candidates.len()",
          "value": "false",
          "line": 406,
          "bound": "candidates.len() == amount.as_usize()"
        },
        {
          "cond": "index < length",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "weight > 0.0",
          "norm": "0.0 < weight",
          "value": "false",
          "line": 413,
          "bound": "weight == 0.0"
        },
        {
          "cond": "(weight >= 0.0)",
          "norm": "0.0 <= weight",
          "value": "false",
          "line": 423,
          "bound": null
        }
      ],
      "ret": "Err(WeightError::InvalidWeight)",
      "path": [
        0,
        1,
        2,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        28,
        29,
        30,
        11,
        12,
        13,
        32,
        33,
        34,
        35,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        63,
        65,
        76,
        77,
        78,
        79
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "amount == N::zero()",
          "norm": "N::zero() == amount",
          "value": "false",
          "line": 359,
          "bound": null
        },
        {
          "cond": "index < length",
          "norm": null,
          "value": "true",
          "line": 392,
          "bound": null
        },
        {
          "cond": "candidates.len() < amount.as_usize()",
          "norm": "amount.as_usize() > candidates.len()",
          "value": "true",
          "line": 392,
          "bound": null
        },
        {
          "cond": "weight > 0.0",
          "norm": "0.0 < weight",
          "value": "true",
          "line": 394,
          "bound": null
        },
        {
          "cond": "index < length",
          "norm": null,
          "value": "false",
          "line": 392,
          "bound": "index == length"
        },
        {
          "cond": "candidates.len() < amount.as_usize()",
          "norm": "amount.as_usize() > candidates.len()",
          "value": "false",
          "line": 406,
          "bound": "candidates.len() == amount.as_usize()"
        },
        {
          "cond": "index < length",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": "index == length"
        }
      ],
      "ret": "Ok(IndexVec::from(\n        candidates.iter().map(|elt| elt.index).collect(),\n    ))",
      "path": [
        0,
        1,
        2,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        28,
        29,
        30,
        11,
        12,
        13,
        32,
        33,
        34,
        35,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        69,
        70,
        71,
        72,
        73,
        74,
        75,
        79
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 8,
      "conds": [
        {
          "cond": "amount == N::zero()",
          "norm": "N::zero() == amount",
          "value": "false",
          "line": 359,
          "bound": null
        },
        {
          "cond": "index < length",
          "norm": null,
          "value": "true",
          "line": 392,
          "bound": null
        },
        {
          "cond": "candidates.len() < amount.as_usize()",
          "norm": "amount.as_usize() > candidates.len()",
          "value": "true",
          "line": 392,
          "bound": null
        },
        {
          "cond": "weight > 0.0",
          "norm": "0.0 < weight",
          "value": "false",
          "line": 394,
          "bound": "weight == 0.0"
        },
        {
          "cond": "(weight >= 0.0)",
          "norm": "0.0 <= weight",
          "value": "true",
          "line": 399,
          "bound": "weight == 0.0"
        },
        {
          "cond": "index < length",
          "norm": null,
          "value": "false",
          "line": 392,
          "bound": "index == length"
        },
        {
          "cond": "candidates.len() < amount.as_usize()",
          "norm": "amount.as_usize() > candidates.len()",
          "value": "true",
          "line": 406,
          "bound": null
        }
      ],
      "ret": "Err(WeightError::InsufficientNonZero)",
      "path": [
        0,
        1,
        2,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        25,
        26,
        28,
        29,
        30,
        11,
        12,
        13,
        32,
        33,
        34,
        35,
        36,
        76,
        77,
        78,
        79
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 9,
      "conds": [
        {
          "cond": "amount == N::zero()",
          "norm": "N::zero() == amount",
          "value": "false",
          "line": 359,
          "bound": null
        },
        {
          "cond": "index < length",
          "norm": null,
          "value": "true",
          "line": 392,
          "bound": null
        },
        {
          "cond": "candidates.len() < amount.as_usize()",
          "norm": "amount.as_usize() > candidates.len()",
          "value": "true",
          "line": 392,
          "bound": null
        },
        {
          "cond": "weight > 0.0",
          "norm": "0.0 < weight",
          "value": "false",
          "line": 394,
          "bound": "weight == 0.0"
        },
        {
          "cond": "(weight >= 0.0)",
          "norm": "0.0 <= weight",
          "value": "true",
          "line": 399,
          "bound": "weight == 0.0"
        },
        {
          "cond": "index < length",
          "norm": null,
          "value": "false",
          "line": 392,
          "bound": "index == length"
        },
        {
          "cond": "candidates.len() < amount.as_usize()",
          "norm": "amount.as_usize() > candidates.len()",
          "value": "false",
          "line": 406,
          "bound": "candidates.len() == amount.as_usize()"
        },
        {
          "cond": "index < length",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "weight > 0.0",
          "norm": "0.0 < weight",
          "value": "true",
          "line": 413,
          "bound": null
        },
        {
          "cond": "x <= 0.0",
          "norm": "0.0 >= x",
          "value": "true",
          "line": 415,
          "bound": "x == 0.0"
        },
        {
          "cond": "index < length",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": "index == length"
        }
      ],
      "ret": "Ok(IndexVec::from(\n        candidates.iter().map(|elt| elt.index).collect(),\n    ))",
      "path": [
        0,
        1,
        2,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        25,
        26,
        28,
        29,
        30,
        11,
        12,
        13,
        32,
        33,
        34,
        35,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        59,
        60,
        62,
        66,
        67,
        68,
        42,
        43,
        44,
        69,
        70,
        71,
        72,
        73,
        74,
        75,
        79
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 10,
      "conds": [
        {
          "cond": "amount == N::zero()",
          "norm": "N::zero() == amount",
          "value": "false",
          "line": 359,
          "bound": null
        },
        {
          "cond": "index < length",
          "norm": null,
          "value": "true",
          "line": 392,
          "bound": null
        },
        {
          "cond": "candidates.len() < amount.as_usize()",
          "norm": "amount.as_usize() > candidates.len()",
          "value": "true",
          "line": 392,
          "bound": null
        },
        {
          "cond": "weight > 0.0",
          "norm": "0.0 < weight",
          "value": "false",
          "line": 394,
          "bound": "weight == 0.0"
        },
        {
          "cond": "(weight >= 0.0)",
          "norm": "0.0 <= weight",
          "value": "true",
          "line": 399,
          "bound": "weight == 0.0"
        },
        {
          "cond": "index < length",
          "norm": null,
          "value": "false",
          "line": 392,
          "bound": "index == length"
        },
        {
          "cond": "candidates.len() < amount.as_usize()",
          "norm": "amount.as_usize() > candidates.len()",
          "value": "false",
          "line": 406,
          "bound": "candidates.len() == amount.as_usize()"
        },
        {
          "cond": "index < length",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "weight > 0.0",
          "norm": "0.0 < weight",
          "value": "true",
          "line": 413,
          "bound": null
        },
        {
          "cond": "x <= 0.0",
          "norm": "0.0 >= x",
          "value": "false",
          "line": 415,
          "bound": null
        },
        {
          "cond": "index < length",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": "index == length"
        }
      ],
      "ret": "Ok(IndexVec::from(\n        candidates.iter().map(|elt| elt.index).collect(),\n    ))",
      "path": [
        0,
        1,
        2,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        25,
        26,
        28,
        29,
        30,
        11,
        12,
        13,
        32,
        33,
        34,
        35,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        61,
        62,
        66,
        67,
        68,
        42,
        43,
        44,
        69,
        70,
        71,
        72,
        73,
        74,
        75,
        79
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 11,
      "conds": [
        {
          "cond": "amount == N::zero()",
          "norm": "N::zero() == amount",
          "value": "false",
          "line": 359,
          "bound": null
        },
        {
          "cond": "index < length",
          "norm": null,
          "value": "true",
          "line": 392,
          "bound": null
        },
        {
          "cond": "candidates.len() < amount.as_usize()",
          "norm": "amount.as_usize() > candidates.len()",
          "value": "true",
          "line": 392,
          "bound": null
        },
        {
          "cond": "weight > 0.0",
          "norm": "0.0 < weight",
          "value": "false",
          "line": 394,
          "bound": "weight == 0.0"
        },
        {
          "cond": "(weight >= 0.0)",
          "norm": "0.0 <= weight",
          "value": "true",
          "line": 399,
          "bound": "weight == 0.0"
        },
        {
          "cond": "index < length",
          "norm": null,
          "value": "false",
          "line": 392,
          "bound": "index == length"
        },
        {
          "cond": "candidates.len() < amount.as_usize()",
          "norm": "amount.as_usize() > candidates.len()",
          "value": "false",
          "line": 406,
          "bound": "candidates.len() == amount.as_usize()"
        },
        {
          "cond": "index < length",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "weight > 0.0",
          "norm": "0.0 < weight",
          "value": "false",
          "line": 413,
          "bound": "weight == 0.0"
        },
        {
          "cond": "(weight >= 0.0)",
          "norm": "0.0 <= weight",
          "value": "true",
          "line": 423,
          "bound": "weight == 0.0"
        },
        {
          "cond": "index < length",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": "index == length"
        }
      ],
      "ret": "Ok(IndexVec::from(\n        candidates.iter().map(|elt| elt.index).collect(),\n    ))",
      "path": [
        0,
        1,
        2,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        25,
        26,
        28,
        29,
        30,
        11,
        12,
        13,
        32,
        33,
        34,
        35,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        63,
        64,
        66,
        67,
        68,
        42,
        43,
        44,
        69,
        70,
        71,
        72,
        73,
        74,
        75,
        79
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 12,
      "conds": [
        {
          "cond": "amount == N::zero()",
          "norm": "N::zero() == amount",
          "value": "false",
          "line": 359,
          "bound": null
        },
        {
          "cond": "index < length",
          "norm": null,
          "value": "true",
          "line": 392,
          "bound": null
        },
        {
          "cond": "candidates.len() < amount.as_usize()",
          "norm": "amount.as_usize() > candidates.len()",
          "value": "true",
          "line": 392,
          "bound": null
        },
        {
          "cond": "weight > 0.0",
          "norm": "0.0 < weight",
          "value": "false",
          "line": 394,
          "bound": "weight == 0.0"
        },
        {
          "cond": "(weight >= 0.0)",
          "norm": "0.0 <= weight",
          "value": "true",
          "line": 399,
          "bound": "weight == 0.0"
        },
        {
          "cond": "index < length",
          "norm": null,
          "value": "false",
          "line": 392,
          "bound": "index == length"
        },
        {
          "cond": "candidates.len() < amount.as_usize()",
          "norm": "amount.as_usize() > candidates.len()",
          "value": "false",
          "line": 406,
          "bound": "candidates.len() == amount.as_usize()"
        },
        {
          "cond": "index < length",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "weight > 0.0",
          "norm": "0.0 < weight",
          "value": "false",
          "line": 413,
          "bound": "weight == 0.0"
        },
        {
          "cond": "(weight >= 0.0)",
          "norm": "0.0 <= weight",
          "value": "false",
          "line": 423,
          "bound": null
        }
      ],
      "ret": "Err(WeightError::InvalidWeight)",
      "path": [
        0,
        1,
        2,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        25,
        26,
        28,
        29,
        30,
        11,
        12,
        13,
        32,
        33,
        34,
        35,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        63,
        65,
        76,
        77,
        78,
        79
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 13,
      "conds": [
        {
          "cond": "amount == N::zero()",
          "norm": "N::zero() == amount",
          "value": "false",
          "line": 359,
          "bound": null
        },
        {
          "cond": "index < length",
          "norm": null,
          "value": "true",
          "line": 392,
          "bound": null
        },
        {
          "cond": "candidates.len() < amount.as_usize()",
          "norm": "amount.as_usize() > candidates.len()",
          "value": "true",
          "line": 392,
          "bound": null
        },
        {
          "cond": "weight > 0.0",
          "norm": "0.0 < weight",
          "value": "false",
          "line": 394,
          "bound": "weight == 0.0"
        },
        {
          "cond": "(weight >= 0.0)",
          "norm": "0.0 <= weight",
          "value": "true",
          "line": 399,
          "bound": "weight == 0.0"
        },
        {
          "cond": "index < length",
          "norm": null,
          "value": "false",
          "line": 392,
          "bound": "index == length"
        },
        {
          "cond": "candidates.len() < amount.as_usize()",
          "norm": "amount.as_usize() > candidates.len()",
          "value": "false",
          "line": 406,
          "bound": "candidates.len() == amount.as_usize()"
        },
        {
          "cond": "index < length",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": "index == length"
        }
      ],
      "ret": "Ok(IndexVec::from(\n        candidates.iter().map(|elt| elt.index).collect(),\n    ))",
      "path": [
        0,
        1,
        2,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        25,
        26,
        28,
        29,
        30,
        11,
        12,
        13,
        32,
        33,
        34,
        35,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        69,
        70,
        71,
        72,
        73,
        74,
        75,
        79
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 14,
      "conds": [
        {
          "cond": "amount == N::zero()",
          "norm": "N::zero() == amount",
          "value": "false",
          "line": 359,
          "bound": null
        },
        {
          "cond": "index < length",
          "norm": null,
          "value": "true",
          "line": 392,
          "bound": null
        },
        {
          "cond": "candidates.len() < amount.as_usize()",
          "norm": "amount.as_usize() > candidates.len()",
          "value": "true",
          "line": 392,
          "bound": null
        },
        {
          "cond": "weight > 0.0",
          "norm": "0.0 < weight",
          "value": "false",
          "line": 394,
          "bound": "weight == 0.0"
        },
        {
          "cond": "(weight >= 0.0)",
          "norm": "0.0 <= weight",
          "value": "false",
          "line": 399,
          "bound": null
        }
      ],
      "ret": "Err(WeightError::InvalidWeight)",
      "path": [
        0,
        1,
        2,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        25,
        27,
        76,
        77,
        78,
        79
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 15,
      "conds": [
        {
          "cond": "amount == N::zero()",
          "norm": "N::zero() == amount",
          "value": "false",
          "line": 359,
          "bound": null
        },
        {
          "cond": "index < length",
          "norm": null,
          "value": "true",
          "line": 392,
          "bound": null
        },
        {
          "cond": "candidates.len() < amount.as_usize()",
          "norm": "amount.as_usize() > candidates.len()",
          "value": "false",
          "line": 392,
          "bound": "candidates.len() == amount.as_usize()"
        },
        {
          "cond": "candidates.len() < amount.as_usize()",
          "norm": "amount.as_usize() > candidates.len()",
          "value": "true",
          "line": 406,
          "bound": null
        }
      ],
      "ret": "Err(WeightError::InsufficientNonZero)",
      "path": [
        0,
        1,
        2,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        31,
        33,
        34,
        35,
        36,
        76,
        77,
        78,
        79
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 16,
      "conds": [
        {
          "cond": "amount == N::zero()",
          "norm": "N::zero() == amount",
          "value": "false",
          "line": 359,
          "bound": null
        },
        {
          "cond": "index < length",
          "norm": null,
          "value": "true",
          "line": 392,
          "bound": null
        },
        {
          "cond": "candidates.len() < amount.as_usize()",
          "norm": "amount.as_usize() > candidates.len()",
          "value": "false",
          "line": 392,
          "bound": "candidates.len() == amount.as_usize()"
        },
        {
          "cond": "candidates.len() < amount.as_usize()",
          "norm": "amount.as_usize() > candidates.len()",
          "value": "false",
          "line": 406,
          "bound": "candidates.len() == amount.as_usize()"
        },
        {
          "cond": "index < length",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "weight > 0.0",
          "norm": "0.0 < weight",
          "value": "true",
          "line": 413,
          "bound": null
        },
        {
          "cond": "x <= 0.0",
          "norm": "0.0 >= x",
          "value": "true",
          "line": 415,
          "bound": "x == 0.0"
        },
        {
          "cond": "index < length",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": "index == length"
        }
      ],
      "ret": "Ok(IndexVec::from(\n        candidates.iter().map(|elt| elt.index).collect(),\n    ))",
      "path": [
        0,
        1,
        2,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        31,
        33,
        34,
        35,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        59,
        60,
        62,
        66,
        67,
        68,
        42,
        43,
        44,
        69,
        70,
        71,
        72,
        73,
        74,
        75,
        79
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 17,
      "conds": [
        {
          "cond": "amount == N::zero()",
          "norm": "N::zero() == amount",
          "value": "false",
          "line": 359,
          "bound": null
        },
        {
          "cond": "index < length",
          "norm": null,
          "value": "true",
          "line": 392,
          "bound": null
        },
        {
          "cond": "candidates.len() < amount.as_usize()",
          "norm": "amount.as_usize() > candidates.len()",
          "value": "false",
          "line": 392,
          "bound": "candidates.len() == amount.as_usize()"
        },
        {
          "cond": "candidates.len() < amount.as_usize()",
          "norm": "amount.as_usize() > candidates.len()",
          "value": "false",
          "line": 406,
          "bound": "candidates.len() == amount.as_usize()"
        },
        {
          "cond": "index < length",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "weight > 0.0",
          "norm": "0.0 < weight",
          "value": "true",
          "line": 413,
          "bound": null
        },
        {
          "cond": "x <= 0.0",
          "norm": "0.0 >= x",
          "value": "false",
          "line": 415,
          "bound": null
        },
        {
          "cond": "index < length",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": "index == length"
        }
      ],
      "ret": "Ok(IndexVec::from(\n        candidates.iter().map(|elt| elt.index).collect(),\n    ))",
      "path": [
        0,
        1,
        2,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        31,
        33,
        34,
        35,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        61,
        62,
        66,
        67,
        68,
        42,
        43,
        44,
        69,
        70,
        71,
        72,
        73,
        74,
        75,
        79
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 18,
      "conds": [
        {
          "cond": "amount == N::zero()",
          "norm": "N::zero() == amount",
          "value": "false",
          "line": 359,
          "bound": null
        },
        {
          "cond": "index < length",
          "norm": null,
          "value": "true",
          "line": 392,
          "bound": null
        },
        {
          "cond": "candidates.len() < amount.as_usize()",
          "norm": "amount.as_usize() > candidates.len()",
          "value": "false",
          "line": 392,
          "bound": "candidates.len() == amount.as_usize()"
        },
        {
          "cond": "candidates.len() < amount.as_usize()",
          "norm": "amount.as_usize() > candidates.len()",
          "value": "false",
          "line": 406,
          "bound": "candidates.len() == amount.as_usize()"
        },
        {
          "cond": "index < length",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "weight > 0.0",
          "norm": "0.0 < weight",
          "value": "false",
          "line": 413,
          "bound": "weight == 0.0"
        },
        {
          "cond": "(weight >= 0.0)",
          "norm": "0.0 <= weight",
          "value": "true",
          "line": 423,
          "bound": "weight == 0.0"
        },
        {
          "cond": "index < length",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": "index == length"
        }
      ],
      "ret": "Ok(IndexVec::from(\n        candidates.iter().map(|elt| elt.index).collect(),\n    ))",
      "path": [
        0,
        1,
        2,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        31,
        33,
        34,
        35,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        63,
        64,
        66,
        67,
        68,
        42,
        43,
        44,
        69,
        70,
        71,
        72,
        73,
        74,
        75,
        79
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 19,
      "conds": [
        {
          "cond": "amount == N::zero()",
          "norm": "N::zero() == amount",
          "value": "false",
          "line": 359,
          "bound": null
        },
        {
          "cond": "index < length",
          "norm": null,
          "value": "true",
          "line": 392,
          "bound": null
        },
        {
          "cond": "candidates.len() < amount.as_usize()",
          "norm": "amount.as_usize() > candidates.len()",
          "value": "false",
          "line": 392,
          "bound": "candidates.len() == amount.as_usize()"
        },
        {
          "cond": "candidates.len() < amount.as_usize()",
          "norm": "amount.as_usize() > candidates.len()",
          "value": "false",
          "line": 406,
          "bound": "candidates.len() == amount.as_usize()"
        },
        {
          "cond": "index < length",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "weight > 0.0",
          "norm": "0.0 < weight",
          "value": "false",
          "line": 413,
          "bound": "weight == 0.0"
        },
        {
          "cond": "(weight >= 0.0)",
          "norm": "0.0 <= weight",
          "value": "false",
          "line": 423,
          "bound": null
        }
      ],
      "ret": "Err(WeightError::InvalidWeight)",
      "path": [
        0,
        1,
        2,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        31,
        33,
        34,
        35,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        63,
        65,
        76,
        77,
        78,
        79
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 20,
      "conds": [
        {
          "cond": "amount == N::zero()",
          "norm": "N::zero() == amount",
          "value": "false",
          "line": 359,
          "bound": null
        },
        {
          "cond": "index < length",
          "norm": null,
          "value": "true",
          "line": 392,
          "bound": null
        },
        {
          "cond": "candidates.len() < amount.as_usize()",
          "norm": "amount.as_usize() > candidates.len()",
          "value": "false",
          "line": 392,
          "bound": "candidates.len() == amount.as_usize()"
        },
        {
          "cond": "candidates.len() < amount.as_usize()",
          "norm": "amount.as_usize() > candidates.len()",
          "value": "false",
          "line": 406,
          "bound": "candidates.len() == amount.as_usize()"
        },
        {
          "cond": "index < length",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": "index == length"
        }
      ],
      "ret": "Ok(IndexVec::from(\n        candidates.iter().map(|elt| elt.index).collect(),\n    ))",
      "path": [
        0,
        1,
        2,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        31,
        33,
        34,
        35,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        69,
        70,
        71,
        72,
        73,
        74,
        75,
        79
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 21,
      "conds": [
        {
          "cond": "amount == N::zero()",
          "norm": "N::zero() == amount",
          "value": "false",
          "line": 359,
          "bound": null
        },
        {
          "cond": "index < length",
          "norm": null,
          "value": "false",
          "line": 392,
          "bound": "index == length"
        },
        {
          "cond": "candidates.len() < amount.as_usize()",
          "norm": "amount.as_usize() > candidates.len()",
          "value": "true",
          "line": 406,
          "bound": null
        }
      ],
      "ret": "Err(WeightError::InsufficientNonZero)",
      "path": [
        0,
        1,
        2,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        32,
        33,
        34,
        35,
        36,
        76,
        77,
        78,
        79
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 22,
      "conds": [
        {
          "cond": "amount == N::zero()",
          "norm": "N::zero() == amount",
          "value": "false",
          "line": 359,
          "bound": null
        },
        {
          "cond": "index < length",
          "norm": null,
          "value": "false",
          "line": 392,
          "bound": "index == length"
        },
        {
          "cond": "candidates.len() < amount.as_usize()",
          "norm": "amount.as_usize() > candidates.len()",
          "value": "false",
          "line": 406,
          "bound": "candidates.len() == amount.as_usize()"
        },
        {
          "cond": "index < length",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "weight > 0.0",
          "norm": "0.0 < weight",
          "value": "true",
          "line": 413,
          "bound": null
        },
        {
          "cond": "x <= 0.0",
          "norm": "0.0 >= x",
          "value": "true",
          "line": 415,
          "bound": "x == 0.0"
        },
        {
          "cond": "index < length",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": "index == length"
        }
      ],
      "ret": "Ok(IndexVec::from(\n        candidates.iter().map(|elt| elt.index).collect(),\n    ))",
      "path": [
        0,
        1,
        2,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        32,
        33,
        34,
        35,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        59,
        60,
        62,
        66,
        67,
        68,
        42,
        43,
        44,
        69,
        70,
        71,
        72,
        73,
        74,
        75,
        79
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 23,
      "conds": [
        {
          "cond": "amount == N::zero()",
          "norm": "N::zero() == amount",
          "value": "false",
          "line": 359,
          "bound": null
        },
        {
          "cond": "index < length",
          "norm": null,
          "value": "false",
          "line": 392,
          "bound": "index == length"
        },
        {
          "cond": "candidates.len() < amount.as_usize()",
          "norm": "amount.as_usize() > candidates.len()",
          "value": "false",
          "line": 406,
          "bound": "candidates.len() == amount.as_usize()"
        },
        {
          "cond": "index < length",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "weight > 0.0",
          "norm": "0.0 < weight",
          "value": "true",
          "line": 413,
          "bound": null
        },
        {
          "cond": "x <= 0.0",
          "norm": "0.0 >= x",
          "value": "false",
          "line": 415,
          "bound": null
        },
        {
          "cond": "index < length",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": "index == length"
        }
      ],
      "ret": "Ok(IndexVec::from(\n        candidates.iter().map(|elt| elt.index).collect(),\n    ))",
      "path": [
        0,
        1,
        2,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        32,
        33,
        34,
        35,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        61,
        62,
        66,
        67,
        68,
        42,
        43,
        44,
        69,
        70,
        71,
        72,
        73,
        74,
        75,
        79
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 24,
      "conds": [
        {
          "cond": "amount == N::zero()",
          "norm": "N::zero() == amount",
          "value": "false",
          "line": 359,
          "bound": null
        },
        {
          "cond": "index < length",
          "norm": null,
          "value": "false",
          "line": 392,
          "bound": "index == length"
        },
        {
          "cond": "candidates.len() < amount.as_usize()",
          "norm": "amount.as_usize() > candidates.len()",
          "value": "false",
          "line": 406,
          "bound": "candidates.len() == amount.as_usize()"
        },
        {
          "cond": "index < length",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "weight > 0.0",
          "norm": "0.0 < weight",
          "value": "false",
          "line": 413,
          "bound": "weight == 0.0"
        },
        {
          "cond": "(weight >= 0.0)",
          "norm": "0.0 <= weight",
          "value": "true",
          "line": 423,
          "bound": "weight == 0.0"
        },
        {
          "cond": "index < length",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": "index == length"
        }
      ],
      "ret": "Ok(IndexVec::from(\n        candidates.iter().map(|elt| elt.index).collect(),\n    ))",
      "path": [
        0,
        1,
        2,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        32,
        33,
        34,
        35,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        63,
        64,
        66,
        67,
        68,
        42,
        43,
        44,
        69,
        70,
        71,
        72,
        73,
        74,
        75,
        79
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 25,
      "conds": [
        {
          "cond": "amount == N::zero()",
          "norm": "N::zero() == amount",
          "value": "false",
          "line": 359,
          "bound": null
        },
        {
          "cond": "index < length",
          "norm": null,
          "value": "false",
          "line": 392,
          "bound": "index == length"
        },
        {
          "cond": "candidates.len() < amount.as_usize()",
          "norm": "amount.as_usize() > candidates.len()",
          "value": "false",
          "line": 406,
          "bound": "candidates.len() == amount.as_usize()"
        },
        {
          "cond": "index < length",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "weight > 0.0",
          "norm": "0.0 < weight",
          "value": "false",
          "line": 413,
          "bound": "weight == 0.0"
        },
        {
          "cond": "(weight >= 0.0)",
          "norm": "0.0 <= weight",
          "value": "false",
          "line": 423,
          "bound": null
        }
      ],
      "ret": "Err(WeightError::InvalidWeight)",
      "path": [
        0,
        1,
        2,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        32,
        33,
        34,
        35,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        63,
        65,
        76,
        77,
        78,
        79
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 26,
      "conds": [
        {
          "cond": "amount == N::zero()",
          "norm": "N::zero() == amount",
          "value": "false",
          "line": 359,
          "bound": null
        },
        {
          "cond": "index < length",
          "norm": null,
          "value": "false",
          "line": 392,
          "bound": "index == length"
        },
        {
          "cond": "candidates.len() < amount.as_usize()",
          "norm": "amount.as_usize() > candidates.len()",
          "value": "false",
          "line": 406,
          "bound": "candidates.len() == amount.as_usize()"
        },
        {
          "cond": "index < length",
          "norm": null,
          "value": "false",
          "line": 411,
          "bound": "index == length"
        }
      ],
      "ret": "Ok(IndexVec::from(\n        candidates.iter().map(|elt| elt.index).collect(),\n    ))",
      "path": [
        0,
        1,
        2,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        32,
        33,
        34,
        35,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        69,
        70,
        71,
        72,
        73,
        74,
        75,
        79
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}