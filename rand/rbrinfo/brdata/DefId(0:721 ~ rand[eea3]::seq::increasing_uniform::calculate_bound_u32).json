{
  "name": "rand::seq::increasing_uniform::calculate_bound_u32",
  "mod_info": {
    "name": "seq::increasing_uniform",
    "loc": "src/seq/mod.rs:30:1:30:24"
  },
  "visible": false,
  "loc": "src/seq/increasing_uniform.rs:81:1:108:2",
  "doc": "/// Calculates `bound`, `count` such that bound (m)*(m+1)*..*(m + remaining - 1)\n",
  "code": [
    "fn calculate_bound_u32(m: u32) -> (u32, u8) {",
    "    debug_assert!(m > 0);",
    "    #[inline]",
    "    const fn inner(m: u32) -> (u32, u8) {",
    "        let mut product = m;",
    "        let mut current = m + 1;",
    "",
    "        loop {",
    "            if let Some(p) = u32::checked_mul(product, current) {",
    "                product = p;",
    "                current += 1;",
    "            } else {",
    "                // Count has a maximum value of 13 for when min is 1 or 2",
    "                let count = (current - m) as u8;",
    "                return (product, count);",
    "            }",
    "        }",
    "    }",
    "",
    "    const RESULT2: (u32, u8) = inner(2);",
    "    if m == 2 {",
    "        // Making this value a constant instead of recalculating it",
    "        // gives a significant (~50%) performance boost for small shuffles",
    "        return RESULT2;",
    "    }",
    "",
    "    inner(m)",
    "}"
  ],
  "size": {
    "chain": 3,
    "contra": 0,
    "min_set": 3
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "m > 0",
          "norm": "0 < m",
          "value": "true",
          "line": 82,
          "bound": null
        },
        {
          "cond": "m == 2",
          "norm": "2 == m",
          "value": "false",
          "line": 101,
          "bound": null
        }
      ],
      "ret": "RESULT2",
      "path": [
        0,
        1,
        2,
        5,
        6,
        9
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "m > 0",
          "norm": "0 < m",
          "value": "true",
          "line": 82,
          "bound": null
        },
        {
          "cond": "m == 2",
          "norm": "2 == m",
          "value": "true",
          "line": 101,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        7,
        8,
        9
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "m > 0",
          "norm": "0 < m",
          "value": "false",
          "line": 82,
          "bound": "m == 0"
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        10
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}