{
  "name": "rand::distr::distribution::SampleString::sample_string",
  "mod_info": {
    "name": "distr::distribution",
    "loc": "src/distr/mod.rs:90:1:90:18"
  },
  "visible": true,
  "loc": "src/distr/distribution.rs:197:5:201:6",
  "doc": "/// Generate a [`String`] of `len` random chars\n///\n/// Note: implementations may leave the string with excess capacity. If this\n/// is undesirable, consider calling [`String::shrink_to_fit`] after this\n/// method.\n",
  "code": [
    "fn sample_string<R: Rng + ?Sized>(&self, rng: &mut R, len: usize) -> String {",
    "    let mut s = String::new();",
    "    self.append_string(rng, &mut s, len);",
    "    s",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "s",
      "path": [
        0,
        1,
        2,
        3
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}