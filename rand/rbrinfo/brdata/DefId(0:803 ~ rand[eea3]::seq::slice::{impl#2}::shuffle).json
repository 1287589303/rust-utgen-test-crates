{
  "name": "rand::seq::slice::{impl#2}::shuffle",
  "mod_info": {
    "name": "seq::slice",
    "loc": "src/seq/mod.rs:32:1:32:11"
  },
  "visible": true,
  "loc": "src/seq/slice.rs:377:5:386:6",
  "doc": "",
  "code": [
    "fn shuffle<R>(&mut self, rng: &mut R)",
    "where",
    "    R: Rng + ?Sized,",
    "{",
    "    if self.len() <= 1 {",
    "        // There is no need to shuffle an empty or single element slice",
    "        return;",
    "    }",
    "    self.partial_shuffle(rng, self.len());",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.len() <= 1",
          "norm": "1 >= self.len()",
          "value": "true",
          "line": 381,
          "bound": "self.len() == 1"
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        6
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.len() <= 1",
          "norm": "1 >= self.len()",
          "value": "false",
          "line": 381,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        5,
        6
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}