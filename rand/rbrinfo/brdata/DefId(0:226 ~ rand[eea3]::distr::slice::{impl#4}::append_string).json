{
  "name": "rand::distr::slice::{impl#4}::append_string",
  "mod_info": {
    "name": "distr::slice",
    "loc": "src/distr/mod.rs:100:1:100:15"
  },
  "visible": true,
  "loc": "src/distr/slice.rs:123:5:152:6",
  "doc": "",
  "code": [
    "fn append_string<R: crate::Rng + ?Sized>(&self, rng: &mut R, string: &mut String, len: usize) {",
    "    // Get the max char length to minimize extra space.",
    "    // Limit this check to avoid searching for long slice.",
    "    let max_char_len = if self.slice.len() < 200 {",
    "        self.slice",
    "            .iter()",
    "            .try_fold(1, |max_len, char| {",
    "                // When the current max_len is 4, the result max_char_len will be 4.",
    "                Some(max_len.max(char.len_utf8())).filter(|len| *len < 4)",
    "            })",
    "            .unwrap_or(4)",
    "    } else {",
    "        4",
    "    };",
    "",
    "    // Split the extension of string to reuse the unused capacities.",
    "    // Skip the split for small length or only ascii slice.",
    "    let mut extend_len = if max_char_len == 1 || len < 100 {",
    "        len",
    "    } else {",
    "        len / 4",
    "    };",
    "    let mut remain_len = len;",
    "    while extend_len > 0 {",
    "        string.reserve(max_char_len * extend_len);",
    "        string.extend(self.sample_iter(&mut *rng).take(extend_len));",
    "        remain_len -= extend_len;",
    "        extend_len = extend_len.min(remain_len);",
    "    }",
    "}"
  ],
  "size": {
    "chain": 12,
    "contra": 6,
    "min_set": 4
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.slice.len() < 200",
          "norm": "200 > self.slice.len()",
          "value": "true",
          "line": 126,
          "bound": null
        },
        {
          "cond": "max_char_len == 1",
          "norm": "1 == max_char_len",
          "value": "false",
          "line": 140,
          "bound": null
        },
        {
          "cond": "extend_len > 0",
          "norm": "0 < extend_len",
          "value": "true",
          "line": 146,
          "bound": null
        },
        {
          "cond": "extend_len > 0",
          "norm": "0 < extend_len",
          "value": "false",
          "line": 146,
          "bound": "extend_len == 0"
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        7,
        8,
        11,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        15,
        16,
        25
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.slice.len() < 200",
          "norm": "200 > self.slice.len()",
          "value": "true",
          "line": 126,
          "bound": null
        },
        {
          "cond": "max_char_len == 1",
          "norm": "1 == max_char_len",
          "value": "false",
          "line": 140,
          "bound": null
        },
        {
          "cond": "extend_len > 0",
          "norm": "0 < extend_len",
          "value": "false",
          "line": 146,
          "bound": "extend_len == 0"
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        7,
        8,
        11,
        14,
        15,
        16,
        25
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "self.slice.len() < 200",
          "norm": "200 > self.slice.len()",
          "value": "true",
          "line": 126,
          "bound": null
        },
        {
          "cond": "max_char_len == 1",
          "norm": "1 == max_char_len",
          "value": "true",
          "line": 140,
          "bound": null
        },
        {
          "cond": "len < 100",
          "norm": "100 > len",
          "value": "true",
          "line": 140,
          "bound": null
        },
        {
          "cond": "extend_len > 0",
          "norm": "0 < extend_len",
          "value": "true",
          "line": 146,
          "bound": null
        },
        {
          "cond": "extend_len > 0",
          "norm": "0 < extend_len",
          "value": "false",
          "line": 146,
          "bound": "extend_len == 0"
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        7,
        9,
        10,
        11,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        15,
        16,
        25
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "self.slice.len() < 200",
          "norm": "200 > self.slice.len()",
          "value": "true",
          "line": 126,
          "bound": null
        },
        {
          "cond": "max_char_len == 1",
          "norm": "1 == max_char_len",
          "value": "true",
          "line": 140,
          "bound": null
        },
        {
          "cond": "len < 100",
          "norm": "100 > len",
          "value": "true",
          "line": 140,
          "bound": null
        },
        {
          "cond": "extend_len > 0",
          "norm": "0 < extend_len",
          "value": "false",
          "line": 146,
          "bound": "extend_len == 0"
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        7,
        9,
        10,
        11,
        14,
        15,
        16,
        25
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "self.slice.len() < 200",
          "norm": "200 > self.slice.len()",
          "value": "true",
          "line": 126,
          "bound": null
        },
        {
          "cond": "max_char_len == 1",
          "norm": "1 == max_char_len",
          "value": "true",
          "line": 140,
          "bound": null
        },
        {
          "cond": "len < 100",
          "norm": "100 > len",
          "value": "false",
          "line": 140,
          "bound": "len == 100"
        },
        {
          "cond": "extend_len > 0",
          "norm": "0 < extend_len",
          "value": "true",
          "line": 146,
          "bound": null
        },
        {
          "cond": "extend_len > 0",
          "norm": "0 < extend_len",
          "value": "false",
          "line": 146,
          "bound": "extend_len == 0"
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        7,
        9,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        15,
        16,
        25
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "self.slice.len() < 200",
          "norm": "200 > self.slice.len()",
          "value": "true",
          "line": 126,
          "bound": null
        },
        {
          "cond": "max_char_len == 1",
          "norm": "1 == max_char_len",
          "value": "true",
          "line": 140,
          "bound": null
        },
        {
          "cond": "len < 100",
          "norm": "100 > len",
          "value": "false",
          "line": 140,
          "bound": "len == 100"
        },
        {
          "cond": "extend_len > 0",
          "norm": "0 < extend_len",
          "value": "false",
          "line": 146,
          "bound": "extend_len == 0"
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        7,
        9,
        12,
        13,
        14,
        15,
        16,
        25
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "self.slice.len() < 200",
          "norm": "200 > self.slice.len()",
          "value": "false",
          "line": 126,
          "bound": "self.slice.len() == 200"
        },
        {
          "cond": "max_char_len == 1",
          "norm": "1 == max_char_len",
          "value": "false",
          "line": 140,
          "bound": null
        },
        {
          "cond": "extend_len > 0",
          "norm": "0 < extend_len",
          "value": "true",
          "line": 146,
          "bound": null
        },
        {
          "cond": "extend_len > 0",
          "norm": "0 < extend_len",
          "value": "false",
          "line": 146,
          "bound": "extend_len == 0"
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        6,
        7,
        8,
        11,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        15,
        16,
        25
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 8,
      "conds": [
        {
          "cond": "self.slice.len() < 200",
          "norm": "200 > self.slice.len()",
          "value": "false",
          "line": 126,
          "bound": "self.slice.len() == 200"
        },
        {
          "cond": "max_char_len == 1",
          "norm": "1 == max_char_len",
          "value": "false",
          "line": 140,
          "bound": null
        },
        {
          "cond": "extend_len > 0",
          "norm": "0 < extend_len",
          "value": "false",
          "line": 146,
          "bound": "extend_len == 0"
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        6,
        7,
        8,
        11,
        14,
        15,
        16,
        25
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 9,
      "conds": [
        {
          "cond": "self.slice.len() < 200",
          "norm": "200 > self.slice.len()",
          "value": "false",
          "line": 126,
          "bound": "self.slice.len() == 200"
        },
        {
          "cond": "max_char_len == 1",
          "norm": "1 == max_char_len",
          "value": "true",
          "line": 140,
          "bound": null
        },
        {
          "cond": "len < 100",
          "norm": "100 > len",
          "value": "true",
          "line": 140,
          "bound": null
        },
        {
          "cond": "extend_len > 0",
          "norm": "0 < extend_len",
          "value": "true",
          "line": 146,
          "bound": null
        },
        {
          "cond": "extend_len > 0",
          "norm": "0 < extend_len",
          "value": "false",
          "line": 146,
          "bound": "extend_len == 0"
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        6,
        7,
        9,
        10,
        11,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        15,
        16,
        25
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 10,
      "conds": [
        {
          "cond": "self.slice.len() < 200",
          "norm": "200 > self.slice.len()",
          "value": "false",
          "line": 126,
          "bound": "self.slice.len() == 200"
        },
        {
          "cond": "max_char_len == 1",
          "norm": "1 == max_char_len",
          "value": "true",
          "line": 140,
          "bound": null
        },
        {
          "cond": "len < 100",
          "norm": "100 > len",
          "value": "true",
          "line": 140,
          "bound": null
        },
        {
          "cond": "extend_len > 0",
          "norm": "0 < extend_len",
          "value": "false",
          "line": 146,
          "bound": "extend_len == 0"
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        6,
        7,
        9,
        10,
        11,
        14,
        15,
        16,
        25
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 11,
      "conds": [
        {
          "cond": "self.slice.len() < 200",
          "norm": "200 > self.slice.len()",
          "value": "false",
          "line": 126,
          "bound": "self.slice.len() == 200"
        },
        {
          "cond": "max_char_len == 1",
          "norm": "1 == max_char_len",
          "value": "true",
          "line": 140,
          "bound": null
        },
        {
          "cond": "len < 100",
          "norm": "100 > len",
          "value": "false",
          "line": 140,
          "bound": "len == 100"
        },
        {
          "cond": "extend_len > 0",
          "norm": "0 < extend_len",
          "value": "true",
          "line": 146,
          "bound": null
        },
        {
          "cond": "extend_len > 0",
          "norm": "0 < extend_len",
          "value": "false",
          "line": 146,
          "bound": "extend_len == 0"
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        6,
        7,
        9,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        15,
        16,
        25
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 12,
      "conds": [
        {
          "cond": "self.slice.len() < 200",
          "norm": "200 > self.slice.len()",
          "value": "false",
          "line": 126,
          "bound": "self.slice.len() == 200"
        },
        {
          "cond": "max_char_len == 1",
          "norm": "1 == max_char_len",
          "value": "true",
          "line": 140,
          "bound": null
        },
        {
          "cond": "len < 100",
          "norm": "100 > len",
          "value": "false",
          "line": 140,
          "bound": "len == 100"
        },
        {
          "cond": "extend_len > 0",
          "norm": "0 < extend_len",
          "value": "false",
          "line": 146,
          "bound": "extend_len == 0"
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        6,
        7,
        9,
        12,
        13,
        14,
        15,
        16,
        25
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}