{
  "name": "rand::random_bool",
  "mod_info": {
    "name": "",
    "loc": "src/lib.rs:10:1:331:2"
  },
  "visible": true,
  "loc": "src/lib.rs:241:1:243:2",
  "doc": "/// Return a bool with a probability `p` of being true.\n///\n/// This function is shorthand for\n/// <code>[rng()].[random_bool](Rng::random_bool)(<var>p</var>)</code>.\n///\n/// # Example\n///\n/// ```\n/// println!(\"{}\", rand::random_bool(1.0 / 3.0));\n/// ```\n///\n/// # Panics\n///\n/// If `p < 0` or `p > 1`.\n",
  "code": [
    "pub fn random_bool(p: f64) -> bool {",
    "    rng().random_bool(p)",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}