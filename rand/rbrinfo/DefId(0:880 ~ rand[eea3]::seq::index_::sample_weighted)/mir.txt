bb0
  0: StorageLive(_5)
    SourceInfo(src/seq/index.rs:313:8-313:36)
  1: StorageLive(_6)
    SourceInfo(src/seq/index.rs:313:8-313:14)
  2: _6 = _2
    SourceInfo(src/seq/index.rs:313:8-313:14)
  3: StorageLive(_7)
    SourceInfo(src/seq/index.rs:313:17-313:36)
  4: _7 = const core::num::<impl u32>::MAX as usize (IntToInt)
    SourceInfo(src/seq/index.rs:313:17-313:36)
  5: _5 = Gt(move _6, move _7)
    SourceInfo(src/seq/index.rs:313:8-313:36)
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:313:8-313:36)
      kind: switchInt(move _5) -> [0: bb3, otherwise: bb1]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: StorageDead(_7)
    SourceInfo(src/seq/index.rs:313:35-313:36)
  1: StorageDead(_6)
    SourceInfo(src/seq/index.rs:313:35-313:36)
  2: StorageLive(_8)
    SourceInfo(src/seq/index.rs:319:17-319:23)
  3: StorageLive(_9)
    SourceInfo(src/seq/index.rs:319:26-319:32)
  4: _9 = _4
    SourceInfo(src/seq/index.rs:319:26-319:32)
  5: _8 = move _9 as u64 (IntToInt)
    SourceInfo(src/seq/index.rs:319:26-319:39)
  6: StorageDead(_9)
    SourceInfo(src/seq/index.rs:319:38-319:39)
  7: FakeRead(ForLet(None), _8)
    SourceInfo(src/seq/index.rs:319:17-319:23)
  8: StorageLive(_10)
    SourceInfo(src/seq/index.rs:320:17-320:23)
  9: StorageLive(_11)
    SourceInfo(src/seq/index.rs:320:26-320:32)
  10: _11 = _2
    SourceInfo(src/seq/index.rs:320:26-320:32)
  11: _10 = move _11 as u64 (IntToInt)
    SourceInfo(src/seq/index.rs:320:26-320:39)
  12: StorageDead(_11)
    SourceInfo(src/seq/index.rs:320:38-320:39)
  13: FakeRead(ForLet(None), _10)
    SourceInfo(src/seq/index.rs:320:17-320:23)
  14: StorageLive(_12)
    SourceInfo(src/seq/index.rs:321:40-321:43)
  15: _12 = &mut (*_1)
    SourceInfo(src/seq/index.rs:321:40-321:43)
  16: StorageLive(_13)
    SourceInfo(src/seq/index.rs:321:45-321:51)
  17: _13 = _10
    SourceInfo(src/seq/index.rs:321:45-321:51)
  18: StorageLive(_14)
    SourceInfo(src/seq/index.rs:321:53-321:59)
  19: _14 = move _3
    SourceInfo(src/seq/index.rs:321:53-321:59)
  20: StorageLive(_15)
    SourceInfo(src/seq/index.rs:321:61-321:67)
  21: _15 = _8
    SourceInfo(src/seq/index.rs:321:61-321:67)
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:321:13-321:68)
      kind: _0 = seq::index_::sample_efraimidis_spirakis::<R, F, X, u64>(move _12, move _13, move _14, move _15) -> [return: bb2, unwind: bb10]
  }
  preds [bb0]
  succs [bb2, bb10]

bb2
  0: StorageDead(_15)
    SourceInfo(src/seq/index.rs:321:67-321:68)
  1: StorageDead(_14)
    SourceInfo(src/seq/index.rs:321:67-321:68)
  2: StorageDead(_13)
    SourceInfo(src/seq/index.rs:321:67-321:68)
  3: StorageDead(_12)
    SourceInfo(src/seq/index.rs:321:67-321:68)
  4: StorageDead(_10)
    SourceInfo(src/seq/index.rs:322:9-322:10)
  5: StorageDead(_8)
    SourceInfo(src/seq/index.rs:322:9-322:10)
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:313:5-328:6)
      kind: goto -> bb7
  }
  preds [bb1]
  succs [bb7]

bb3
  0: StorageDead(_7)
    SourceInfo(src/seq/index.rs:313:35-313:36)
  1: StorageDead(_6)
    SourceInfo(src/seq/index.rs:313:35-313:36)
  2: StorageLive(_16)
    SourceInfo(src/seq/index.rs:324:9-324:45)
  3: StorageLive(_17)
    SourceInfo(src/seq/index.rs:324:17-324:44)
  4: StorageLive(_18)
    SourceInfo(src/seq/index.rs:324:17-324:23)
  5: _18 = _4
    SourceInfo(src/seq/index.rs:324:17-324:23)
  6: StorageLive(_19)
    SourceInfo(src/seq/index.rs:324:27-324:44)
  7: _19 = const core::num::<impl u32>::MAX as usize (IntToInt)
    SourceInfo(src/seq/index.rs:324:27-324:44)
  8: _17 = Le(move _18, move _19)
    SourceInfo(src/seq/index.rs:324:17-324:44)
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:324:17-324:44)
      kind: switchInt(move _17) -> [0: bb5, otherwise: bb4]
  }
  preds [bb0]
  succs [bb4, bb5]

bb4
  0: StorageDead(_19)
    SourceInfo(src/seq/index.rs:324:43-324:44)
  1: StorageDead(_18)
    SourceInfo(src/seq/index.rs:324:43-324:44)
  2: _16 = const ()
    SourceInfo(src/seq/index.rs:324:45-324:45)
  3: StorageDead(_17)
    SourceInfo(src/seq/index.rs:324:44-324:45)
  4: StorageDead(_16)
    SourceInfo(src/seq/index.rs:324:44-324:45)
  5: StorageLive(_21)
    SourceInfo(src/seq/index.rs:325:13-325:19)
  6: StorageLive(_22)
    SourceInfo(src/seq/index.rs:325:22-325:28)
  7: _22 = _4
    SourceInfo(src/seq/index.rs:325:22-325:28)
  8: _21 = move _22 as u32 (IntToInt)
    SourceInfo(src/seq/index.rs:325:22-325:35)
  9: StorageDead(_22)
    SourceInfo(src/seq/index.rs:325:34-325:35)
  10: FakeRead(ForLet(None), _21)
    SourceInfo(src/seq/index.rs:325:13-325:19)
  11: StorageLive(_23)
    SourceInfo(src/seq/index.rs:326:13-326:19)
  12: StorageLive(_24)
    SourceInfo(src/seq/index.rs:326:22-326:28)
  13: _24 = _2
    SourceInfo(src/seq/index.rs:326:22-326:28)
  14: _23 = move _24 as u32 (IntToInt)
    SourceInfo(src/seq/index.rs:326:22-326:35)
  15: StorageDead(_24)
    SourceInfo(src/seq/index.rs:326:34-326:35)
  16: FakeRead(ForLet(None), _23)
    SourceInfo(src/seq/index.rs:326:13-326:19)
  17: StorageLive(_25)
    SourceInfo(src/seq/index.rs:327:36-327:39)
  18: _25 = &mut (*_1)
    SourceInfo(src/seq/index.rs:327:36-327:39)
  19: StorageLive(_26)
    SourceInfo(src/seq/index.rs:327:41-327:47)
  20: _26 = _23
    SourceInfo(src/seq/index.rs:327:41-327:47)
  21: StorageLive(_27)
    SourceInfo(src/seq/index.rs:327:49-327:55)
  22: _27 = move _3
    SourceInfo(src/seq/index.rs:327:49-327:55)
  23: StorageLive(_28)
    SourceInfo(src/seq/index.rs:327:57-327:63)
  24: _28 = _21
    SourceInfo(src/seq/index.rs:327:57-327:63)
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:327:9-327:64)
      kind: _0 = seq::index_::sample_efraimidis_spirakis::<R, F, X, u32>(move _25, move _26, move _27, move _28) -> [return: bb6, unwind: bb9]
  }
  preds [bb3]
  succs [bb6, bb9]

bb5
  0: StorageDead(_19)
    SourceInfo(src/seq/index.rs:324:43-324:44)
  1: StorageDead(_18)
    SourceInfo(src/seq/index.rs:324:43-324:44)
  2: StorageLive(_20)
    SourceInfo(src/seq/index.rs:324:9-324:45)
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:324:9-324:45)
      kind: _20 = core::panicking::panic(const "assertion failed: amount <= u32::MAX as usize") -> bb11
  }
  preds [bb3]
  succs [bb11]

bb6
  0: StorageDead(_28)
    SourceInfo(src/seq/index.rs:327:63-327:64)
  1: StorageDead(_27)
    SourceInfo(src/seq/index.rs:327:63-327:64)
  2: StorageDead(_26)
    SourceInfo(src/seq/index.rs:327:63-327:64)
  3: StorageDead(_25)
    SourceInfo(src/seq/index.rs:327:63-327:64)
  4: StorageDead(_23)
    SourceInfo(src/seq/index.rs:328:5-328:6)
  5: StorageDead(_21)
    SourceInfo(src/seq/index.rs:328:5-328:6)
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:313:5-328:6)
      kind: goto -> bb7
  }
  preds [bb4]
  succs [bb7]

bb7
  0: StorageDead(_5)
    SourceInfo(src/seq/index.rs:328:5-328:6)
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:329:1-329:2)
      kind: drop(_3) -> [return: bb8, unwind: bb12]
  }
  preds [bb2, bb6]
  succs [bb8, bb12]

bb8
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:329:2-329:2)
      kind: return
  }
  preds [bb7]
  succs []

bb9
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:327:63-327:64)
      kind: drop(_27) -> [return: bb11, unwind terminate(cleanup)]
  }
  preds [bb4]
  succs [bb11]

bb10
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:321:67-321:68)
      kind: drop(_14) -> [return: bb11, unwind terminate(cleanup)]
  }
  preds [bb1]
  succs [bb11]

bb11
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:329:1-329:2)
      kind: drop(_3) -> [return: bb12, unwind terminate(cleanup)]
  }
  preds [bb5, bb9, bb10]
  succs [bb12]

bb12
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:302:1-329:2)
      kind: resume
  }
  preds [bb7, bb11]
  succs []

