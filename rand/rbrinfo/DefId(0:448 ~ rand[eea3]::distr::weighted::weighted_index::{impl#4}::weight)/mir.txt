bb0
  0: StorageLive(_3)
    SourceInfo(src/distr/weighted/weighted_index.rs:314:13-314:23)
  1: StorageLive(_4)
    SourceInfo(src/distr/weighted/weighted_index.rs:314:32-314:73)
  2: StorageLive(_5)
    SourceInfo(src/distr/weighted/weighted_index.rs:314:32-314:37)
  3: _5 = &_2
    SourceInfo(src/distr/weighted/weighted_index.rs:314:32-314:37)
  4: StorageLive(_6)
    SourceInfo(src/distr/weighted/weighted_index.rs:314:42-314:72)
  5: StorageLive(_7)
    SourceInfo(src/distr/weighted/weighted_index.rs:314:42-314:72)
  6: StorageLive(_8)
    SourceInfo(src/distr/weighted/weighted_index.rs:314:43-314:72)
  7: StorageLive(_9)
    SourceInfo(src/distr/weighted/weighted_index.rs:314:43-314:66)
  8: _9 = &((*_1).0: alloc::vec::Vec<X>)
    SourceInfo(src/distr/weighted/weighted_index.rs:314:43-314:66)
  Terminator {
      source_info: SourceInfo(src/distr/weighted/weighted_index.rs:314:43-314:72)
      kind: _8 = alloc::vec::Vec::<X>::len(move _9) -> [return: bb1, unwind: bb23]
  }
  preds []
  succs [bb1, bb23]

bb1
  0: StorageDead(_9)
    SourceInfo(src/distr/weighted/weighted_index.rs:314:71-314:72)
  1: _7 = &_8
    SourceInfo(src/distr/weighted/weighted_index.rs:314:42-314:72)
  2: _6 = &(*_7)
    SourceInfo(src/distr/weighted/weighted_index.rs:314:42-314:72)
  Terminator {
      source_info: SourceInfo(src/distr/weighted/weighted_index.rs:314:32-314:73)
      kind: _4 = <usize as core::cmp::Ord>::cmp(move _5, move _6) -> [return: bb2, unwind: bb23]
  }
  preds [bb0]
  succs [bb2, bb23]

bb2
  0: StorageDead(_6)
    SourceInfo(src/distr/weighted/weighted_index.rs:314:72-314:73)
  1: StorageDead(_5)
    SourceInfo(src/distr/weighted/weighted_index.rs:314:72-314:73)
  2: PlaceMention(_4)
    SourceInfo(src/distr/weighted/weighted_index.rs:314:32-314:73)
  3: _10 = discriminant(_4)
    SourceInfo(src/distr/weighted/weighted_index.rs:314:32-314:73)
  Terminator {
      source_info: SourceInfo(src/distr/weighted/weighted_index.rs:314:26-314:73)
      kind: switchInt(move _10) -> [255: bb4, 0: bb5, 1: bb6, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4, bb5, bb6]

bb3
  0: FakeRead(ForMatchedPlace(None), _4)
    SourceInfo(src/distr/weighted/weighted_index.rs:314:32-314:73)
  Terminator {
      source_info: SourceInfo(src/distr/weighted/weighted_index.rs:314:32-314:73)
      kind: unreachable
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(src/distr/weighted/weighted_index.rs:315:13-315:17)
      kind: falseEdge -> [real: bb7, imaginary: bb5]
  }
  preds [bb2]
  succs [bb5, bb7]

bb5
  Terminator {
      source_info: SourceInfo(src/distr/weighted/weighted_index.rs:316:13-316:18)
      kind: falseEdge -> [real: bb10, imaginary: bb6]
  }
  preds [bb2, bb4]
  succs [bb6, bb10]

bb6
  0: _0 = core::option::Option::<X>::None
    SourceInfo(src/distr/weighted/weighted_index.rs:317:31-317:35)
  1: StorageDead(_8)
    SourceInfo(src/distr/weighted/weighted_index.rs:318:10-318:11)
  2: StorageDead(_7)
    SourceInfo(src/distr/weighted/weighted_index.rs:318:10-318:11)
  3: StorageDead(_4)
    SourceInfo(src/distr/weighted/weighted_index.rs:318:10-318:11)
  4: StorageDead(_3)
    SourceInfo(src/distr/weighted/weighted_index.rs:324:5-324:6)
  Terminator {
      source_info: SourceInfo(src/distr/weighted/weighted_index.rs:324:6-324:6)
      kind: goto -> bb21
  }
  preds [bb2, bb5]
  succs [bb21]

bb7
  0: StorageLive(_11)
    SourceInfo(src/distr/weighted/weighted_index.rs:315:21-315:51)
  1: StorageLive(_12)
    SourceInfo(src/distr/weighted/weighted_index.rs:315:44-315:51)
  2: StorageLive(_13)
    SourceInfo(src/distr/weighted/weighted_index.rs:315:21-315:44)
  3: _13 = &((*_1).0: alloc::vec::Vec<X>)
    SourceInfo(src/distr/weighted/weighted_index.rs:315:21-315:44)
  4: StorageLive(_14)
    SourceInfo(src/distr/weighted/weighted_index.rs:315:45-315:50)
  5: _14 = _2
    SourceInfo(src/distr/weighted/weighted_index.rs:315:45-315:50)
  Terminator {
      source_info: SourceInfo(src/distr/weighted/weighted_index.rs:315:44-315:51)
      kind: _12 = <alloc::vec::Vec<X> as core::ops::Index<usize>>::index(move _13, move _14) -> [return: bb8, unwind: bb23]
  }
  preds [bb4]
  succs [bb8, bb23]

bb8
  0: _11 = &(*_12)
    SourceInfo(src/distr/weighted/weighted_index.rs:315:21-315:51)
  1: StorageDead(_14)
    SourceInfo(src/distr/weighted/weighted_index.rs:315:50-315:51)
  2: StorageDead(_13)
    SourceInfo(src/distr/weighted/weighted_index.rs:315:50-315:51)
  Terminator {
      source_info: SourceInfo(src/distr/weighted/weighted_index.rs:315:21-315:59)
      kind: _3 = <X as core::clone::Clone>::clone(move _11) -> [return: bb9, unwind: bb23]
  }
  preds [bb7]
  succs [bb9, bb23]

bb9
  0: StorageDead(_11)
    SourceInfo(src/distr/weighted/weighted_index.rs:315:58-315:59)
  1: StorageDead(_12)
    SourceInfo(src/distr/weighted/weighted_index.rs:315:58-315:59)
  Terminator {
      source_info: SourceInfo(src/distr/weighted/weighted_index.rs:315:58-315:59)
      kind: goto -> bb12
  }
  preds [bb8]
  succs [bb12]

bb10
  0: StorageLive(_15)
    SourceInfo(src/distr/weighted/weighted_index.rs:316:22-316:39)
  1: _15 = &((*_1).1: X)
    SourceInfo(src/distr/weighted/weighted_index.rs:316:22-316:39)
  Terminator {
      source_info: SourceInfo(src/distr/weighted/weighted_index.rs:316:22-316:47)
      kind: _3 = <X as core::clone::Clone>::clone(move _15) -> [return: bb11, unwind: bb23]
  }
  preds [bb5]
  succs [bb11, bb23]

bb11
  0: StorageDead(_15)
    SourceInfo(src/distr/weighted/weighted_index.rs:316:46-316:47)
  Terminator {
      source_info: SourceInfo(src/distr/weighted/weighted_index.rs:316:46-316:47)
      kind: goto -> bb12
  }
  preds [bb10]
  succs [bb12]

bb12
  0: FakeRead(ForLet(None), _3)
    SourceInfo(src/distr/weighted/weighted_index.rs:314:13-314:23)
  1: StorageDead(_8)
    SourceInfo(src/distr/weighted/weighted_index.rs:318:10-318:11)
  2: StorageDead(_7)
    SourceInfo(src/distr/weighted/weighted_index.rs:318:10-318:11)
  3: StorageDead(_4)
    SourceInfo(src/distr/weighted/weighted_index.rs:318:10-318:11)
  4: StorageLive(_17)
    SourceInfo(src/distr/weighted/weighted_index.rs:320:9-322:10)
  5: StorageLive(_18)
    SourceInfo(src/distr/weighted/weighted_index.rs:320:12-320:21)
  6: StorageLive(_19)
    SourceInfo(src/distr/weighted/weighted_index.rs:320:12-320:17)
  7: _19 = _2
    SourceInfo(src/distr/weighted/weighted_index.rs:320:12-320:17)
  8: _18 = Gt(move _19, const 0_usize)
    SourceInfo(src/distr/weighted/weighted_index.rs:320:12-320:21)
  Terminator {
      source_info: SourceInfo(src/distr/weighted/weighted_index.rs:320:12-320:21)
      kind: switchInt(move _18) -> [0: bb17, otherwise: bb13]
  }
  preds [bb9, bb11]
  succs [bb13, bb17]

bb13
  0: StorageDead(_19)
    SourceInfo(src/distr/weighted/weighted_index.rs:320:20-320:21)
  1: StorageLive(_20)
    SourceInfo(src/distr/weighted/weighted_index.rs:321:13-321:58)
  2: StorageLive(_21)
    SourceInfo(src/distr/weighted/weighted_index.rs:321:13-321:19)
  3: _21 = &mut _3
    SourceInfo(src/distr/weighted/weighted_index.rs:321:13-321:19)
  4: StorageLive(_22)
    SourceInfo(src/distr/weighted/weighted_index.rs:321:23-321:58)
  5: StorageLive(_23)
    SourceInfo(src/distr/weighted/weighted_index.rs:321:23-321:58)
  6: StorageLive(_24)
    SourceInfo(src/distr/weighted/weighted_index.rs:321:47-321:58)
  7: StorageLive(_25)
    SourceInfo(src/distr/weighted/weighted_index.rs:321:24-321:47)
  8: _25 = &((*_1).0: alloc::vec::Vec<X>)
    SourceInfo(src/distr/weighted/weighted_index.rs:321:24-321:47)
  9: StorageLive(_26)
    SourceInfo(src/distr/weighted/weighted_index.rs:321:48-321:57)
  10: StorageLive(_27)
    SourceInfo(src/distr/weighted/weighted_index.rs:321:48-321:53)
  11: _27 = _2
    SourceInfo(src/distr/weighted/weighted_index.rs:321:48-321:53)
  12: _28 = SubWithOverflow(_27, const 1_usize)
    SourceInfo(src/distr/weighted/weighted_index.rs:321:48-321:57)
  Terminator {
      source_info: SourceInfo(src/distr/weighted/weighted_index.rs:321:48-321:57)
      kind: assert(!move (_28.1: bool), "attempt to compute `{} - {}`, which would overflow", move _27, const 1_usize) -> [success: bb14, unwind: bb22]
  }
  preds [bb12]
  succs [bb14, bb22]

bb14
  0: _26 = move (_28.0: usize)
    SourceInfo(src/distr/weighted/weighted_index.rs:321:48-321:57)
  1: StorageDead(_27)
    SourceInfo(src/distr/weighted/weighted_index.rs:321:56-321:57)
  Terminator {
      source_info: SourceInfo(src/distr/weighted/weighted_index.rs:321:47-321:58)
      kind: _24 = <alloc::vec::Vec<X> as core::ops::Index<usize>>::index(move _25, move _26) -> [return: bb15, unwind: bb22]
  }
  preds [bb13]
  succs [bb15, bb22]

bb15
  0: StorageDead(_26)
    SourceInfo(src/distr/weighted/weighted_index.rs:321:57-321:58)
  1: StorageDead(_25)
    SourceInfo(src/distr/weighted/weighted_index.rs:321:57-321:58)
  2: _23 = &(*_24)
    SourceInfo(src/distr/weighted/weighted_index.rs:321:23-321:58)
  3: _22 = &(*_23)
    SourceInfo(src/distr/weighted/weighted_index.rs:321:23-321:58)
  Terminator {
      source_info: SourceInfo(src/distr/weighted/weighted_index.rs:321:13-321:58)
      kind: _20 = <X as core::ops::SubAssign<&X>>::sub_assign(move _21, move _22) -> [return: bb16, unwind: bb22]
  }
  preds [bb14]
  succs [bb16, bb22]

bb16
  0: StorageDead(_22)
    SourceInfo(src/distr/weighted/weighted_index.rs:321:57-321:58)
  1: StorageDead(_21)
    SourceInfo(src/distr/weighted/weighted_index.rs:321:57-321:58)
  2: StorageDead(_24)
    SourceInfo(src/distr/weighted/weighted_index.rs:321:58-321:59)
  3: StorageDead(_23)
    SourceInfo(src/distr/weighted/weighted_index.rs:321:58-321:59)
  4: StorageDead(_20)
    SourceInfo(src/distr/weighted/weighted_index.rs:321:58-321:59)
  5: _17 = const ()
    SourceInfo(src/distr/weighted/weighted_index.rs:320:22-322:10)
  Terminator {
      source_info: SourceInfo(src/distr/weighted/weighted_index.rs:320:9-322:10)
      kind: goto -> bb18
  }
  preds [bb15]
  succs [bb18]

bb17
  0: StorageDead(_19)
    SourceInfo(src/distr/weighted/weighted_index.rs:320:20-320:21)
  1: _17 = const ()
    SourceInfo(src/distr/weighted/weighted_index.rs:322:10-322:10)
  Terminator {
      source_info: SourceInfo(src/distr/weighted/weighted_index.rs:320:9-322:10)
      kind: goto -> bb18
  }
  preds [bb12]
  succs [bb18]

bb18
  0: StorageDead(_18)
    SourceInfo(src/distr/weighted/weighted_index.rs:322:9-322:10)
  1: StorageDead(_17)
    SourceInfo(src/distr/weighted/weighted_index.rs:322:9-322:10)
  2: StorageLive(_29)
    SourceInfo(src/distr/weighted/weighted_index.rs:323:14-323:20)
  3: _29 = move _3
    SourceInfo(src/distr/weighted/weighted_index.rs:323:14-323:20)
  4: _0 = core::option::Option::<X>::Some(move _29)
    SourceInfo(src/distr/weighted/weighted_index.rs:323:9-323:21)
  Terminator {
      source_info: SourceInfo(src/distr/weighted/weighted_index.rs:323:20-323:21)
      kind: drop(_29) -> [return: bb19, unwind: bb22]
  }
  preds [bb16, bb17]
  succs [bb19, bb22]

bb19
  0: StorageDead(_29)
    SourceInfo(src/distr/weighted/weighted_index.rs:323:20-323:21)
  Terminator {
      source_info: SourceInfo(src/distr/weighted/weighted_index.rs:324:5-324:6)
      kind: drop(_3) -> [return: bb20, unwind: bb23]
  }
  preds [bb18]
  succs [bb20, bb23]

bb20
  0: StorageDead(_3)
    SourceInfo(src/distr/weighted/weighted_index.rs:324:5-324:6)
  Terminator {
      source_info: SourceInfo(src/distr/weighted/weighted_index.rs:324:6-324:6)
      kind: goto -> bb21
  }
  preds [bb19]
  succs [bb21]

bb21
  Terminator {
      source_info: SourceInfo(src/distr/weighted/weighted_index.rs:324:6-324:6)
      kind: return
  }
  preds [bb6, bb20]
  succs []

bb22
  Terminator {
      source_info: SourceInfo(src/distr/weighted/weighted_index.rs:324:5-324:6)
      kind: drop(_3) -> [return: bb23, unwind terminate(cleanup)]
  }
  preds [bb13, bb14, bb15, bb18]
  succs [bb23]

bb23
  Terminator {
      source_info: SourceInfo(src/distr/weighted/weighted_index.rs:308:5-324:6)
      kind: resume
  }
  preds [bb0, bb1, bb7, bb8, bb10, bb19, bb22]
  succs []

