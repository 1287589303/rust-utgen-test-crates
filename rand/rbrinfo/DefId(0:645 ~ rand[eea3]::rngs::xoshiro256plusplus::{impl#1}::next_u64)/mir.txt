bb0
  0: StorageLive(_2)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:79:13-79:16)
  1: StorageLive(_3)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:79:19-81:29)
  2: StorageLive(_4)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:79:19-80:37)
  3: StorageLive(_5)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:79:19-79:28)
  4: StorageLive(_6)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:79:26-79:27)
  5: _6 = const 0_usize
    SourceInfo(src/rngs/xoshiro256plusplus.rs:79:26-79:27)
  6: _7 = Len(((*_1).0: [u64; 4]))
    SourceInfo(src/rngs/xoshiro256plusplus.rs:79:19-79:28)
  7: _8 = Lt(_6, _7)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:79:19-79:28)
  Terminator {
      source_info: SourceInfo(src/rngs/xoshiro256plusplus.rs:79:19-79:28)
      kind: assert(move _8, "index out of bounds: the length is {} but the index is {}", move _7, _6) -> [success: bb1, unwind: bb21]
  }
  preds []
  succs [bb1, bb21]

bb1
  0: _5 = ((*_1).0: [u64; 4])[_6]
    SourceInfo(src/rngs/xoshiro256plusplus.rs:79:19-79:28)
  1: StorageLive(_9)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:80:27-80:36)
  2: StorageLive(_10)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:80:34-80:35)
  3: _10 = const 3_usize
    SourceInfo(src/rngs/xoshiro256plusplus.rs:80:34-80:35)
  4: _11 = Len(((*_1).0: [u64; 4]))
    SourceInfo(src/rngs/xoshiro256plusplus.rs:80:27-80:36)
  5: _12 = Lt(_10, _11)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:80:27-80:36)
  Terminator {
      source_info: SourceInfo(src/rngs/xoshiro256plusplus.rs:80:27-80:36)
      kind: assert(move _12, "index out of bounds: the length is {} but the index is {}", move _11, _10) -> [success: bb2, unwind: bb21]
  }
  preds [bb0]
  succs [bb2, bb21]

bb2
  0: _9 = ((*_1).0: [u64; 4])[_10]
    SourceInfo(src/rngs/xoshiro256plusplus.rs:80:27-80:36)
  Terminator {
      source_info: SourceInfo(src/rngs/xoshiro256plusplus.rs:79:19-80:37)
      kind: _4 = core::num::<impl u64>::wrapping_add(move _5, move _9) -> [return: bb3, unwind: bb21]
  }
  preds [bb1]
  succs [bb3, bb21]

bb3
  0: StorageDead(_9)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:80:36-80:37)
  1: StorageDead(_5)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:80:36-80:37)
  Terminator {
      source_info: SourceInfo(src/rngs/xoshiro256plusplus.rs:79:19-81:29)
      kind: _3 = core::num::<impl u64>::rotate_left(move _4, const 23_u32) -> [return: bb4, unwind: bb21]
  }
  preds [bb2]
  succs [bb4, bb21]

bb4
  0: StorageDead(_4)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:81:28-81:29)
  1: StorageLive(_13)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:82:27-82:36)
  2: StorageLive(_14)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:82:34-82:35)
  3: _14 = const 0_usize
    SourceInfo(src/rngs/xoshiro256plusplus.rs:82:34-82:35)
  4: _15 = Len(((*_1).0: [u64; 4]))
    SourceInfo(src/rngs/xoshiro256plusplus.rs:82:27-82:36)
  5: _16 = Lt(_14, _15)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:82:27-82:36)
  Terminator {
      source_info: SourceInfo(src/rngs/xoshiro256plusplus.rs:82:27-82:36)
      kind: assert(move _16, "index out of bounds: the length is {} but the index is {}", move _15, _14) -> [success: bb5, unwind: bb21]
  }
  preds [bb3]
  succs [bb5, bb21]

bb5
  0: _13 = ((*_1).0: [u64; 4])[_14]
    SourceInfo(src/rngs/xoshiro256plusplus.rs:82:27-82:36)
  Terminator {
      source_info: SourceInfo(src/rngs/xoshiro256plusplus.rs:79:19-82:37)
      kind: _2 = core::num::<impl u64>::wrapping_add(move _3, move _13) -> [return: bb6, unwind: bb21]
  }
  preds [bb4]
  succs [bb6, bb21]

bb6
  0: StorageDead(_13)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:82:36-82:37)
  1: StorageDead(_3)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:82:36-82:37)
  2: FakeRead(ForLet(None), _2)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:79:13-79:16)
  3: StorageDead(_14)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:82:37-82:38)
  4: StorageDead(_10)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:82:37-82:38)
  5: StorageDead(_6)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:82:37-82:38)
  6: StorageLive(_17)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:84:13-84:14)
  7: StorageLive(_18)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:84:17-84:26)
  8: StorageLive(_19)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:84:24-84:25)
  9: _19 = const 1_usize
    SourceInfo(src/rngs/xoshiro256plusplus.rs:84:24-84:25)
  10: _20 = Len(((*_1).0: [u64; 4]))
    SourceInfo(src/rngs/xoshiro256plusplus.rs:84:17-84:26)
  11: _21 = Lt(_19, _20)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:84:17-84:26)
  Terminator {
      source_info: SourceInfo(src/rngs/xoshiro256plusplus.rs:84:17-84:26)
      kind: assert(move _21, "index out of bounds: the length is {} but the index is {}", move _20, _19) -> [success: bb7, unwind: bb21]
  }
  preds [bb5]
  succs [bb7, bb21]

bb7
  0: _18 = ((*_1).0: [u64; 4])[_19]
    SourceInfo(src/rngs/xoshiro256plusplus.rs:84:17-84:26)
  1: _22 = const 17_i32 as u32 (IntToInt)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:84:17-84:32)
  2: _23 = Lt(move _22, const 64_u32)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:84:17-84:32)
  Terminator {
      source_info: SourceInfo(src/rngs/xoshiro256plusplus.rs:84:17-84:32)
      kind: assert(move _23, "attempt to shift left by `{}`, which would overflow", const 17_i32) -> [success: bb8, unwind: bb21]
  }
  preds [bb6]
  succs [bb8, bb21]

bb8
  0: _17 = Shl(move _18, const 17_i32)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:84:17-84:32)
  1: StorageDead(_18)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:84:31-84:32)
  2: FakeRead(ForLet(None), _17)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:84:13-84:14)
  3: StorageDead(_19)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:84:32-84:33)
  4: StorageLive(_24)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:86:22-86:31)
  5: StorageLive(_25)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:86:29-86:30)
  6: _25 = const 0_usize
    SourceInfo(src/rngs/xoshiro256plusplus.rs:86:29-86:30)
  7: _26 = Len(((*_1).0: [u64; 4]))
    SourceInfo(src/rngs/xoshiro256plusplus.rs:86:22-86:31)
  8: _27 = Lt(_25, _26)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:86:22-86:31)
  Terminator {
      source_info: SourceInfo(src/rngs/xoshiro256plusplus.rs:86:22-86:31)
      kind: assert(move _27, "index out of bounds: the length is {} but the index is {}", move _26, _25) -> [success: bb9, unwind: bb21]
  }
  preds [bb7]
  succs [bb9, bb21]

bb9
  0: _24 = ((*_1).0: [u64; 4])[_25]
    SourceInfo(src/rngs/xoshiro256plusplus.rs:86:22-86:31)
  1: StorageLive(_28)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:86:16-86:17)
  2: _28 = const 2_usize
    SourceInfo(src/rngs/xoshiro256plusplus.rs:86:16-86:17)
  3: _29 = Len(((*_1).0: [u64; 4]))
    SourceInfo(src/rngs/xoshiro256plusplus.rs:86:9-86:18)
  4: _30 = Lt(_28, _29)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:86:9-86:18)
  Terminator {
      source_info: SourceInfo(src/rngs/xoshiro256plusplus.rs:86:9-86:18)
      kind: assert(move _30, "index out of bounds: the length is {} but the index is {}", move _29, _28) -> [success: bb10, unwind: bb21]
  }
  preds [bb8]
  succs [bb10, bb21]

bb10
  0: ((*_1).0: [u64; 4])[_28] = BitXor(((*_1).0: [u64; 4])[_28], move _24)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:86:9-86:31)
  1: StorageDead(_24)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:86:30-86:31)
  2: StorageDead(_28)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:86:31-86:32)
  3: StorageDead(_25)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:86:31-86:32)
  4: StorageLive(_31)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:87:22-87:31)
  5: StorageLive(_32)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:87:29-87:30)
  6: _32 = const 1_usize
    SourceInfo(src/rngs/xoshiro256plusplus.rs:87:29-87:30)
  7: _33 = Len(((*_1).0: [u64; 4]))
    SourceInfo(src/rngs/xoshiro256plusplus.rs:87:22-87:31)
  8: _34 = Lt(_32, _33)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:87:22-87:31)
  Terminator {
      source_info: SourceInfo(src/rngs/xoshiro256plusplus.rs:87:22-87:31)
      kind: assert(move _34, "index out of bounds: the length is {} but the index is {}", move _33, _32) -> [success: bb11, unwind: bb21]
  }
  preds [bb9]
  succs [bb11, bb21]

bb11
  0: _31 = ((*_1).0: [u64; 4])[_32]
    SourceInfo(src/rngs/xoshiro256plusplus.rs:87:22-87:31)
  1: StorageLive(_35)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:87:16-87:17)
  2: _35 = const 3_usize
    SourceInfo(src/rngs/xoshiro256plusplus.rs:87:16-87:17)
  3: _36 = Len(((*_1).0: [u64; 4]))
    SourceInfo(src/rngs/xoshiro256plusplus.rs:87:9-87:18)
  4: _37 = Lt(_35, _36)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:87:9-87:18)
  Terminator {
      source_info: SourceInfo(src/rngs/xoshiro256plusplus.rs:87:9-87:18)
      kind: assert(move _37, "index out of bounds: the length is {} but the index is {}", move _36, _35) -> [success: bb12, unwind: bb21]
  }
  preds [bb10]
  succs [bb12, bb21]

bb12
  0: ((*_1).0: [u64; 4])[_35] = BitXor(((*_1).0: [u64; 4])[_35], move _31)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:87:9-87:31)
  1: StorageDead(_31)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:87:30-87:31)
  2: StorageDead(_35)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:87:31-87:32)
  3: StorageDead(_32)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:87:31-87:32)
  4: StorageLive(_38)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:88:22-88:31)
  5: StorageLive(_39)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:88:29-88:30)
  6: _39 = const 2_usize
    SourceInfo(src/rngs/xoshiro256plusplus.rs:88:29-88:30)
  7: _40 = Len(((*_1).0: [u64; 4]))
    SourceInfo(src/rngs/xoshiro256plusplus.rs:88:22-88:31)
  8: _41 = Lt(_39, _40)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:88:22-88:31)
  Terminator {
      source_info: SourceInfo(src/rngs/xoshiro256plusplus.rs:88:22-88:31)
      kind: assert(move _41, "index out of bounds: the length is {} but the index is {}", move _40, _39) -> [success: bb13, unwind: bb21]
  }
  preds [bb11]
  succs [bb13, bb21]

bb13
  0: _38 = ((*_1).0: [u64; 4])[_39]
    SourceInfo(src/rngs/xoshiro256plusplus.rs:88:22-88:31)
  1: StorageLive(_42)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:88:16-88:17)
  2: _42 = const 1_usize
    SourceInfo(src/rngs/xoshiro256plusplus.rs:88:16-88:17)
  3: _43 = Len(((*_1).0: [u64; 4]))
    SourceInfo(src/rngs/xoshiro256plusplus.rs:88:9-88:18)
  4: _44 = Lt(_42, _43)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:88:9-88:18)
  Terminator {
      source_info: SourceInfo(src/rngs/xoshiro256plusplus.rs:88:9-88:18)
      kind: assert(move _44, "index out of bounds: the length is {} but the index is {}", move _43, _42) -> [success: bb14, unwind: bb21]
  }
  preds [bb12]
  succs [bb14, bb21]

bb14
  0: ((*_1).0: [u64; 4])[_42] = BitXor(((*_1).0: [u64; 4])[_42], move _38)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:88:9-88:31)
  1: StorageDead(_38)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:88:30-88:31)
  2: StorageDead(_42)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:88:31-88:32)
  3: StorageDead(_39)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:88:31-88:32)
  4: StorageLive(_45)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:89:22-89:31)
  5: StorageLive(_46)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:89:29-89:30)
  6: _46 = const 3_usize
    SourceInfo(src/rngs/xoshiro256plusplus.rs:89:29-89:30)
  7: _47 = Len(((*_1).0: [u64; 4]))
    SourceInfo(src/rngs/xoshiro256plusplus.rs:89:22-89:31)
  8: _48 = Lt(_46, _47)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:89:22-89:31)
  Terminator {
      source_info: SourceInfo(src/rngs/xoshiro256plusplus.rs:89:22-89:31)
      kind: assert(move _48, "index out of bounds: the length is {} but the index is {}", move _47, _46) -> [success: bb15, unwind: bb21]
  }
  preds [bb13]
  succs [bb15, bb21]

bb15
  0: _45 = ((*_1).0: [u64; 4])[_46]
    SourceInfo(src/rngs/xoshiro256plusplus.rs:89:22-89:31)
  1: StorageLive(_49)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:89:16-89:17)
  2: _49 = const 0_usize
    SourceInfo(src/rngs/xoshiro256plusplus.rs:89:16-89:17)
  3: _50 = Len(((*_1).0: [u64; 4]))
    SourceInfo(src/rngs/xoshiro256plusplus.rs:89:9-89:18)
  4: _51 = Lt(_49, _50)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:89:9-89:18)
  Terminator {
      source_info: SourceInfo(src/rngs/xoshiro256plusplus.rs:89:9-89:18)
      kind: assert(move _51, "index out of bounds: the length is {} but the index is {}", move _50, _49) -> [success: bb16, unwind: bb21]
  }
  preds [bb14]
  succs [bb16, bb21]

bb16
  0: ((*_1).0: [u64; 4])[_49] = BitXor(((*_1).0: [u64; 4])[_49], move _45)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:89:9-89:31)
  1: StorageDead(_45)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:89:30-89:31)
  2: StorageDead(_49)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:89:31-89:32)
  3: StorageDead(_46)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:89:31-89:32)
  4: StorageLive(_52)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:91:22-91:23)
  5: _52 = _17
    SourceInfo(src/rngs/xoshiro256plusplus.rs:91:22-91:23)
  6: StorageLive(_53)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:91:16-91:17)
  7: _53 = const 2_usize
    SourceInfo(src/rngs/xoshiro256plusplus.rs:91:16-91:17)
  8: _54 = Len(((*_1).0: [u64; 4]))
    SourceInfo(src/rngs/xoshiro256plusplus.rs:91:9-91:18)
  9: _55 = Lt(_53, _54)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:91:9-91:18)
  Terminator {
      source_info: SourceInfo(src/rngs/xoshiro256plusplus.rs:91:9-91:18)
      kind: assert(move _55, "index out of bounds: the length is {} but the index is {}", move _54, _53) -> [success: bb17, unwind: bb21]
  }
  preds [bb15]
  succs [bb17, bb21]

bb17
  0: ((*_1).0: [u64; 4])[_53] = BitXor(((*_1).0: [u64; 4])[_53], move _52)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:91:9-91:23)
  1: StorageDead(_52)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:91:22-91:23)
  2: StorageDead(_53)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:91:23-91:24)
  3: StorageLive(_56)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:93:21-93:46)
  4: StorageLive(_57)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:93:21-93:30)
  5: StorageLive(_58)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:93:28-93:29)
  6: _58 = const 3_usize
    SourceInfo(src/rngs/xoshiro256plusplus.rs:93:28-93:29)
  7: _59 = Len(((*_1).0: [u64; 4]))
    SourceInfo(src/rngs/xoshiro256plusplus.rs:93:21-93:30)
  8: _60 = Lt(_58, _59)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:93:21-93:30)
  Terminator {
      source_info: SourceInfo(src/rngs/xoshiro256plusplus.rs:93:21-93:30)
      kind: assert(move _60, "index out of bounds: the length is {} but the index is {}", move _59, _58) -> [success: bb18, unwind: bb21]
  }
  preds [bb16]
  succs [bb18, bb21]

bb18
  0: _57 = ((*_1).0: [u64; 4])[_58]
    SourceInfo(src/rngs/xoshiro256plusplus.rs:93:21-93:30)
  Terminator {
      source_info: SourceInfo(src/rngs/xoshiro256plusplus.rs:93:21-93:46)
      kind: _56 = core::num::<impl u64>::rotate_left(move _57, const 45_u32) -> [return: bb19, unwind: bb21]
  }
  preds [bb17]
  succs [bb19, bb21]

bb19
  0: StorageDead(_57)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:93:45-93:46)
  1: StorageLive(_61)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:93:16-93:17)
  2: _61 = const 3_usize
    SourceInfo(src/rngs/xoshiro256plusplus.rs:93:16-93:17)
  3: _62 = Len(((*_1).0: [u64; 4]))
    SourceInfo(src/rngs/xoshiro256plusplus.rs:93:9-93:18)
  4: _63 = Lt(_61, _62)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:93:9-93:18)
  Terminator {
      source_info: SourceInfo(src/rngs/xoshiro256plusplus.rs:93:9-93:18)
      kind: assert(move _63, "index out of bounds: the length is {} but the index is {}", move _62, _61) -> [success: bb20, unwind: bb21]
  }
  preds [bb18]
  succs [bb20, bb21]

bb20
  0: ((*_1).0: [u64; 4])[_61] = move _56
    SourceInfo(src/rngs/xoshiro256plusplus.rs:93:9-93:46)
  1: StorageDead(_56)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:93:45-93:46)
  2: StorageDead(_61)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:93:46-93:47)
  3: StorageDead(_58)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:93:46-93:47)
  4: _0 = _2
    SourceInfo(src/rngs/xoshiro256plusplus.rs:95:9-95:12)
  5: StorageDead(_17)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:96:5-96:6)
  6: StorageDead(_2)
    SourceInfo(src/rngs/xoshiro256plusplus.rs:96:5-96:6)
  Terminator {
      source_info: SourceInfo(src/rngs/xoshiro256plusplus.rs:96:6-96:6)
      kind: return
  }
  preds [bb19]
  succs []

bb21
  Terminator {
      source_info: SourceInfo(src/rngs/xoshiro256plusplus.rs:78:5-96:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3, bb4, bb5, bb6, bb7, bb8, bb9, bb10, bb11, bb12, bb13, bb14, bb15, bb16, bb17, bb18, bb19]
  succs []

