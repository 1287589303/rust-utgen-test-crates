bb0
  0: StorageLive(_3)
    SourceInfo(src/rngs/reseeding.rs:219:13-219:22)
  1: StorageLive(_4)
    SourceInfo(src/rngs/reseeding.rs:219:37-219:53)
  2: StorageLive(_5)
    SourceInfo(src/rngs/reseeding.rs:219:37-219:53)
  3: StorageLive(_6)
    SourceInfo(src/rngs/reseeding.rs:219:37-219:44)
  4: _6 = &_2
    SourceInfo(src/rngs/reseeding.rs:219:37-219:44)
  Terminator {
      source_info: SourceInfo(src/rngs/reseeding.rs:219:37-219:53)
      kind: _5 = <&mut <R as rand_core::block::BlockRngCore>::Results as core::convert::AsRef<[<R as rand_core::block::BlockRngCore>::Item]>>::as_ref(move _6) -> [return: bb1, unwind: bb13]
  }
  preds []
  succs [bb1, bb13]

bb1
  0: _4 = &(*_5)
    SourceInfo(src/rngs/reseeding.rs:219:37-219:53)
  1: StorageDead(_6)
    SourceInfo(src/rngs/reseeding.rs:219:52-219:53)
  Terminator {
      source_info: SourceInfo(src/rngs/reseeding.rs:219:25-219:54)
      kind: _3 = core::mem::size_of_val::<[<R as rand_core::block::BlockRngCore>::Item]>(move _4) -> [return: bb2, unwind: bb13]
  }
  preds [bb0]
  succs [bb2, bb13]

bb2
  0: StorageDead(_4)
    SourceInfo(src/rngs/reseeding.rs:219:53-219:54)
  1: FakeRead(ForLet(None), _3)
    SourceInfo(src/rngs/reseeding.rs:219:13-219:22)
  2: StorageDead(_5)
    SourceInfo(src/rngs/reseeding.rs:219:54-219:55)
  3: StorageLive(_7)
    SourceInfo(src/rngs/reseeding.rs:221:9-224:10)
  4: StorageLive(_8)
    SourceInfo(src/rngs/reseeding.rs:221:25-221:38)
  5: StorageLive(_9)
    SourceInfo(src/rngs/reseeding.rs:221:25-221:29)
  6: _9 = &mut (*_1)
    SourceInfo(src/rngs/reseeding.rs:221:25-221:29)
  Terminator {
      source_info: SourceInfo(src/rngs/reseeding.rs:221:25-221:38)
      kind: _8 = rngs::reseeding::ReseedingCore::<R, Rsdr>::reseed(move _9) -> [return: bb3, unwind: bb13]
  }
  preds [bb1]
  succs [bb3, bb13]

bb3
  0: StorageDead(_9)
    SourceInfo(src/rngs/reseeding.rs:221:37-221:38)
  1: PlaceMention(_8)
    SourceInfo(src/rngs/reseeding.rs:221:25-221:38)
  2: _10 = discriminant(_8)
    SourceInfo(src/rngs/reseeding.rs:221:25-221:38)
  Terminator {
      source_info: SourceInfo(src/rngs/reseeding.rs:221:16-221:22)
      kind: switchInt(move _10) -> [1: bb4, otherwise: bb6]
  }
  preds [bb2]
  succs [bb4, bb6]

bb4
  Terminator {
      source_info: SourceInfo(src/rngs/reseeding.rs:221:16-221:22)
      kind: falseEdge -> [real: bb5, imaginary: bb6]
  }
  preds [bb3]
  succs [bb5, bb6]

bb5
  0: StorageLive(_11)
    SourceInfo(src/rngs/reseeding.rs:221:20-221:21)
  1: _11 = move ((_8 as Err).0: <Rsdr as rand_core::TryRngCore>::Error)
    SourceInfo(src/rngs/reseeding.rs:221:20-221:21)
  2: PlaceMention(_11)
    SourceInfo(src/rngs/reseeding.rs:223:21-223:22)
  3: _7 = const ()
    SourceInfo(src/rngs/reseeding.rs:221:39-224:10)
  Terminator {
      source_info: SourceInfo(src/rngs/reseeding.rs:224:9-224:10)
      kind: drop(_11) -> [return: bb7, unwind: bb12]
  }
  preds [bb4]
  succs [bb7, bb12]

bb6
  0: _7 = const ()
    SourceInfo(src/rngs/reseeding.rs:224:10-224:10)
  Terminator {
      source_info: SourceInfo(src/rngs/reseeding.rs:221:9-224:10)
      kind: goto -> bb8
  }
  preds [bb3, bb4]
  succs [bb8]

bb7
  0: StorageDead(_11)
    SourceInfo(src/rngs/reseeding.rs:224:9-224:10)
  Terminator {
      source_info: SourceInfo(src/rngs/reseeding.rs:221:9-224:10)
      kind: goto -> bb8
  }
  preds [bb5]
  succs [bb8]

bb8
  Terminator {
      source_info: SourceInfo(src/rngs/reseeding.rs:224:9-224:10)
      kind: drop(_8) -> [return: bb9, unwind: bb13]
  }
  preds [bb6, bb7]
  succs [bb9, bb13]

bb9
  0: StorageDead(_8)
    SourceInfo(src/rngs/reseeding.rs:224:9-224:10)
  1: StorageDead(_7)
    SourceInfo(src/rngs/reseeding.rs:224:9-224:10)
  2: StorageLive(_12)
    SourceInfo(src/rngs/reseeding.rs:226:35-226:49)
  3: _12 = ((*_1).2: i64)
    SourceInfo(src/rngs/reseeding.rs:226:35-226:49)
  4: StorageLive(_13)
    SourceInfo(src/rngs/reseeding.rs:226:52-226:68)
  5: StorageLive(_14)
    SourceInfo(src/rngs/reseeding.rs:226:52-226:61)
  6: _14 = _3
    SourceInfo(src/rngs/reseeding.rs:226:52-226:61)
  7: _13 = move _14 as i64 (IntToInt)
    SourceInfo(src/rngs/reseeding.rs:226:52-226:68)
  8: StorageDead(_14)
    SourceInfo(src/rngs/reseeding.rs:226:67-226:68)
  9: _15 = SubWithOverflow(_12, _13)
    SourceInfo(src/rngs/reseeding.rs:226:35-226:68)
  Terminator {
      source_info: SourceInfo(src/rngs/reseeding.rs:226:35-226:68)
      kind: assert(!move (_15.1: bool), "attempt to compute `{} - {}`, which would overflow", move _12, move _13) -> [success: bb10, unwind: bb13]
  }
  preds [bb8]
  succs [bb10, bb13]

bb10
  0: ((*_1).3: i64) = move (_15.0: i64)
    SourceInfo(src/rngs/reseeding.rs:226:9-226:68)
  1: StorageDead(_13)
    SourceInfo(src/rngs/reseeding.rs:226:67-226:68)
  2: StorageDead(_12)
    SourceInfo(src/rngs/reseeding.rs:226:67-226:68)
  3: StorageLive(_16)
    SourceInfo(src/rngs/reseeding.rs:227:9-227:37)
  4: StorageLive(_17)
    SourceInfo(src/rngs/reseeding.rs:227:9-227:19)
  5: _17 = &mut ((*_1).0: R)
    SourceInfo(src/rngs/reseeding.rs:227:9-227:19)
  6: StorageLive(_18)
    SourceInfo(src/rngs/reseeding.rs:227:29-227:36)
  7: _18 = &mut (*_2)
    SourceInfo(src/rngs/reseeding.rs:227:29-227:36)
  Terminator {
      source_info: SourceInfo(src/rngs/reseeding.rs:227:9-227:37)
      kind: _16 = <R as rand_core::block::BlockRngCore>::generate(move _17, move _18) -> [return: bb11, unwind: bb13]
  }
  preds [bb9]
  succs [bb11, bb13]

bb11
  0: StorageDead(_18)
    SourceInfo(src/rngs/reseeding.rs:227:36-227:37)
  1: StorageDead(_17)
    SourceInfo(src/rngs/reseeding.rs:227:36-227:37)
  2: StorageDead(_16)
    SourceInfo(src/rngs/reseeding.rs:227:37-227:38)
  3: _0 = const ()
    SourceInfo(src/rngs/reseeding.rs:216:86-228:6)
  4: StorageDead(_3)
    SourceInfo(src/rngs/reseeding.rs:228:5-228:6)
  Terminator {
      source_info: SourceInfo(src/rngs/reseeding.rs:228:6-228:6)
      kind: return
  }
  preds [bb10]
  succs []

bb12
  Terminator {
      source_info: SourceInfo(src/rngs/reseeding.rs:224:9-224:10)
      kind: drop(_8) -> [return: bb13, unwind terminate(cleanup)]
  }
  preds [bb5]
  succs [bb13]

bb13
  Terminator {
      source_info: SourceInfo(src/rngs/reseeding.rs:216:5-228:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb8, bb9, bb10, bb12]
  succs []

