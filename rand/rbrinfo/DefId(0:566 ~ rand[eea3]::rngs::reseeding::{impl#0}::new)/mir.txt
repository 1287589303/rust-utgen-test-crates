bb0
  0: StorageLive(_3)
    SourceInfo(src/rngs/reseeding.rs:91:12-93:13)
  1: StorageLive(_4)
    SourceInfo(src/rngs/reseeding.rs:91:25-93:12)
  2: StorageLive(_5)
    SourceInfo(src/rngs/reseeding.rs:91:39-93:11)
  3: StorageLive(_6)
    SourceInfo(src/rngs/reseeding.rs:91:39-93:11)
  4: StorageLive(_7)
    SourceInfo(src/rngs/reseeding.rs:91:39-93:10)
  5: StorageLive(_8)
    SourceInfo(src/rngs/reseeding.rs:92:13-92:22)
  6: _8 = _1
    SourceInfo(src/rngs/reseeding.rs:92:13-92:22)
  7: StorageLive(_9)
    SourceInfo(src/rngs/reseeding.rs:92:24-92:32)
  8: _9 = move _2
    SourceInfo(src/rngs/reseeding.rs:92:24-92:32)
  Terminator {
      source_info: SourceInfo(src/rngs/reseeding.rs:91:39-93:10)
      kind: _7 = rngs::reseeding::ReseedingCore::<R, Rsdr>::new(move _8, move _9) -> [return: bb1, unwind: bb22]
  }
  preds []
  succs [bb1, bb22]

bb1
  0: StorageDead(_9)
    SourceInfo(src/rngs/reseeding.rs:93:9-93:10)
  1: StorageDead(_8)
    SourceInfo(src/rngs/reseeding.rs:93:9-93:10)
  Terminator {
      source_info: SourceInfo(src/rngs/reseeding.rs:91:39-93:11)
      kind: _6 = <core::result::Result<rngs::reseeding::ReseedingCore<R, Rsdr>, <Rsdr as rand_core::TryRngCore>::Error> as core::ops::Try>::branch(move _7) -> [return: bb2, unwind: bb21]
  }
  preds [bb0]
  succs [bb2, bb21]

bb2
  0: StorageDead(_7)
    SourceInfo(src/rngs/reseeding.rs:93:10-93:11)
  1: PlaceMention(_6)
    SourceInfo(src/rngs/reseeding.rs:91:39-93:11)
  2: _10 = discriminant(_6)
    SourceInfo(src/rngs/reseeding.rs:91:39-93:11)
  Terminator {
      source_info: SourceInfo(src/rngs/reseeding.rs:91:39-93:11)
      kind: switchInt(move _10) -> [0: bb5, 1: bb4, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4, bb5]

bb3
  0: FakeRead(ForMatchedPlace(None), _6)
    SourceInfo(src/rngs/reseeding.rs:91:39-93:11)
  Terminator {
      source_info: SourceInfo(src/rngs/reseeding.rs:91:39-93:11)
      kind: unreachable
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(src/rngs/reseeding.rs:93:10-93:11)
      kind: falseEdge -> [real: bb6, imaginary: bb5]
  }
  preds [bb2]
  succs [bb5, bb6]

bb5
  0: StorageLive(_14)
    SourceInfo(src/rngs/reseeding.rs:91:39-93:11)
  1: _14 = move ((_6 as Continue).0: rngs::reseeding::ReseedingCore<R, Rsdr>)
    SourceInfo(src/rngs/reseeding.rs:91:39-93:11)
  2: _5 = move _14
    SourceInfo(src/rngs/reseeding.rs:91:39-93:11)
  Terminator {
      source_info: SourceInfo(src/rngs/reseeding.rs:93:10-93:11)
      kind: drop(_14) -> [return: bb8, unwind: bb20]
  }
  preds [bb2, bb4]
  succs [bb8, bb20]

bb6
  0: StorageLive(_11)
    SourceInfo(src/rngs/reseeding.rs:93:10-93:11)
  1: _11 = move ((_6 as Break).0: core::result::Result<core::convert::Infallible, <Rsdr as rand_core::TryRngCore>::Error>)
    SourceInfo(src/rngs/reseeding.rs:93:10-93:11)
  2: StorageLive(_13)
    SourceInfo(src/rngs/reseeding.rs:93:10-93:11)
  3: _13 = move _11
    SourceInfo(src/rngs/reseeding.rs:93:10-93:11)
  Terminator {
      source_info: SourceInfo(src/rngs/reseeding.rs:91:39-93:11)
      kind: _0 = <core::result::Result<rngs::reseeding::ReseedingRng<R, Rsdr>, <Rsdr as rand_core::TryRngCore>::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, <Rsdr as rand_core::TryRngCore>::Error>>>::from_residual(move _13) -> [return: bb7, unwind: bb18]
  }
  preds [bb4]
  succs [bb7, bb18]

bb7
  0: StorageDead(_13)
    SourceInfo(src/rngs/reseeding.rs:93:10-93:11)
  Terminator {
      source_info: SourceInfo(src/rngs/reseeding.rs:93:10-93:11)
      kind: drop(_11) -> [return: bb13, unwind: bb20]
  }
  preds [bb6]
  succs [bb13, bb20]

bb8
  0: StorageDead(_14)
    SourceInfo(src/rngs/reseeding.rs:93:10-93:11)
  Terminator {
      source_info: SourceInfo(src/rngs/reseeding.rs:91:25-93:12)
      kind: _4 = rand_core::block::BlockRng::<rngs::reseeding::ReseedingCore<R, Rsdr>>::new(move _5) -> [return: bb9, unwind: bb17]
  }
  preds [bb5]
  succs [bb9, bb17]

bb9
  0: StorageDead(_5)
    SourceInfo(src/rngs/reseeding.rs:93:11-93:12)
  1: _3 = rngs::reseeding::ReseedingRng::<R, Rsdr>(move _4)
    SourceInfo(src/rngs/reseeding.rs:91:12-93:13)
  Terminator {
      source_info: SourceInfo(src/rngs/reseeding.rs:93:12-93:13)
      kind: drop(_4) -> [return: bb10, unwind: bb16]
  }
  preds [bb8]
  succs [bb10, bb16]

bb10
  0: StorageDead(_4)
    SourceInfo(src/rngs/reseeding.rs:93:12-93:13)
  1: _0 = core::result::Result::<rngs::reseeding::ReseedingRng<R, Rsdr>, <Rsdr as rand_core::TryRngCore>::Error>::Ok(move _3)
    SourceInfo(src/rngs/reseeding.rs:91:9-93:14)
  Terminator {
      source_info: SourceInfo(src/rngs/reseeding.rs:93:13-93:14)
      kind: drop(_3) -> [return: bb11, unwind: bb20]
  }
  preds [bb9]
  succs [bb11, bb20]

bb11
  0: StorageDead(_3)
    SourceInfo(src/rngs/reseeding.rs:93:13-93:14)
  Terminator {
      source_info: SourceInfo(src/rngs/reseeding.rs:94:5-94:6)
      kind: drop(_6) -> [return: bb12, unwind: bb23]
  }
  preds [bb10]
  succs [bb12, bb23]

bb12
  0: StorageDead(_6)
    SourceInfo(src/rngs/reseeding.rs:94:5-94:6)
  Terminator {
      source_info: SourceInfo(src/rngs/reseeding.rs:94:5-94:6)
      kind: drop(_2) -> [return: bb15, unwind: bb24]
  }
  preds [bb11]
  succs [bb15, bb24]

bb13
  0: StorageDead(_11)
    SourceInfo(src/rngs/reseeding.rs:93:10-93:11)
  1: StorageDead(_5)
    SourceInfo(src/rngs/reseeding.rs:93:11-93:12)
  2: StorageDead(_4)
    SourceInfo(src/rngs/reseeding.rs:93:12-93:13)
  3: StorageDead(_3)
    SourceInfo(src/rngs/reseeding.rs:93:13-93:14)
  Terminator {
      source_info: SourceInfo(src/rngs/reseeding.rs:94:5-94:6)
      kind: drop(_6) -> [return: bb14, unwind: bb23]
  }
  preds [bb7]
  succs [bb14, bb23]

bb14
  0: StorageDead(_6)
    SourceInfo(src/rngs/reseeding.rs:94:5-94:6)
  Terminator {
      source_info: SourceInfo(src/rngs/reseeding.rs:94:5-94:6)
      kind: drop(_2) -> [return: bb15, unwind: bb24]
  }
  preds [bb13]
  succs [bb15, bb24]

bb15
  Terminator {
      source_info: SourceInfo(src/rngs/reseeding.rs:94:6-94:6)
      kind: return
  }
  preds [bb12, bb14]
  succs []

bb16
  Terminator {
      source_info: SourceInfo(src/rngs/reseeding.rs:93:13-93:14)
      kind: drop(_3) -> [return: bb20, unwind terminate(cleanup)]
  }
  preds [bb9]
  succs [bb20]

bb17
  Terminator {
      source_info: SourceInfo(src/rngs/reseeding.rs:93:11-93:12)
      kind: drop(_5) -> [return: bb20, unwind terminate(cleanup)]
  }
  preds [bb8]
  succs [bb20]

bb18
  Terminator {
      source_info: SourceInfo(src/rngs/reseeding.rs:93:10-93:11)
      kind: drop(_13) -> [return: bb19, unwind terminate(cleanup)]
  }
  preds [bb6]
  succs [bb19]

bb19
  Terminator {
      source_info: SourceInfo(src/rngs/reseeding.rs:93:10-93:11)
      kind: drop(_11) -> [return: bb20, unwind terminate(cleanup)]
  }
  preds [bb18]
  succs [bb20]

bb20
  Terminator {
      source_info: SourceInfo(src/rngs/reseeding.rs:94:5-94:6)
      kind: drop(_6) -> [return: bb23, unwind terminate(cleanup)]
  }
  preds [bb5, bb7, bb10, bb16, bb17, bb19]
  succs [bb23]

bb21
  Terminator {
      source_info: SourceInfo(src/rngs/reseeding.rs:93:10-93:11)
      kind: drop(_7) -> [return: bb23, unwind terminate(cleanup)]
  }
  preds [bb1]
  succs [bb23]

bb22
  Terminator {
      source_info: SourceInfo(src/rngs/reseeding.rs:93:9-93:10)
      kind: drop(_9) -> [return: bb23, unwind terminate(cleanup)]
  }
  preds [bb0]
  succs [bb23]

bb23
  Terminator {
      source_info: SourceInfo(src/rngs/reseeding.rs:94:5-94:6)
      kind: drop(_2) -> [return: bb24, unwind terminate(cleanup)]
  }
  preds [bb11, bb13, bb20, bb21, bb22]
  succs [bb24]

bb24
  Terminator {
      source_info: SourceInfo(src/rngs/reseeding.rs:90:5-94:6)
      kind: resume
  }
  preds [bb12, bb14, bb23]
  succs []

