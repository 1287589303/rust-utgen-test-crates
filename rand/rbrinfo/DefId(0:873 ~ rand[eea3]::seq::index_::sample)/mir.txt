bb0
  0: StorageLive(_4)
    SourceInfo(src/seq/index.rs:244:5-246:6)
  1: StorageLive(_5)
    SourceInfo(src/seq/index.rs:244:8-244:23)
  2: StorageLive(_6)
    SourceInfo(src/seq/index.rs:244:8-244:14)
  3: _6 = _3
    SourceInfo(src/seq/index.rs:244:8-244:14)
  4: StorageLive(_7)
    SourceInfo(src/seq/index.rs:244:17-244:23)
  5: _7 = _2
    SourceInfo(src/seq/index.rs:244:17-244:23)
  6: _5 = Gt(move _6, move _7)
    SourceInfo(src/seq/index.rs:244:8-244:23)
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:244:8-244:23)
      kind: switchInt(move _5) -> [0: bb3, otherwise: bb1]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: StorageDead(_7)
    SourceInfo(src/seq/index.rs:244:22-244:23)
  1: StorageDead(_6)
    SourceInfo(src/seq/index.rs:244:22-244:23)
  2: StorageLive(_10)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:9-108:73)
  3: StorageLive(_11)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  4: StorageLive(_12)
    SourceInfo(src/seq/index.rs:245:16-245:76)
  5: StorageLive(_13)
    SourceInfo(src/seq/index.rs:245:16-245:76)
  6: StorageLive(_14)
    SourceInfo(src/seq/index.rs:245:16-245:76)
  7: _14 = [const "`amount` of samples must be less than or equal to `length`"]
    SourceInfo(src/seq/index.rs:245:16-245:76)
  8: _13 = &_14
    SourceInfo(src/seq/index.rs:245:16-245:76)
  9: _12 = &(*_13)
    SourceInfo(src/seq/index.rs:245:16-245:76)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
      kind: _11 = core::fmt::Arguments::<'_>::new_const::<1>(move _12) -> [return: bb2, unwind: bb31]
  }
  preds [bb0]
  succs [bb2, bb31]

bb2
  0: StorageDead(_12)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:71-108:72)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:9-108:73)
      kind: _10 = core::panicking::panic_fmt(move _11) -> bb31
  }
  preds [bb1]
  succs [bb31]

bb3
  0: StorageDead(_7)
    SourceInfo(src/seq/index.rs:244:22-244:23)
  1: StorageDead(_6)
    SourceInfo(src/seq/index.rs:244:22-244:23)
  2: _4 = const ()
    SourceInfo(src/seq/index.rs:246:6-246:6)
  3: StorageDead(_5)
    SourceInfo(src/seq/index.rs:246:5-246:6)
  4: StorageDead(_4)
    SourceInfo(src/seq/index.rs:246:5-246:6)
  5: StorageLive(_15)
    SourceInfo(src/seq/index.rs:247:5-255:6)
  6: StorageLive(_16)
    SourceInfo(src/seq/index.rs:247:8-247:36)
  7: StorageLive(_17)
    SourceInfo(src/seq/index.rs:247:8-247:14)
  8: _17 = _2
    SourceInfo(src/seq/index.rs:247:8-247:14)
  9: StorageLive(_18)
    SourceInfo(src/seq/index.rs:247:17-247:36)
  10: _18 = const core::num::<impl u32>::MAX as usize (IntToInt)
    SourceInfo(src/seq/index.rs:247:17-247:36)
  11: _16 = Gt(move _17, move _18)
    SourceInfo(src/seq/index.rs:247:8-247:36)
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:247:8-247:36)
      kind: switchInt(move _16) -> [0: bb5, otherwise: bb4]
  }
  preds [bb0]
  succs [bb4, bb5]

bb4
  0: StorageDead(_18)
    SourceInfo(src/seq/index.rs:247:35-247:36)
  1: StorageDead(_17)
    SourceInfo(src/seq/index.rs:247:35-247:36)
  2: StorageLive(_20)
    SourceInfo(src/seq/index.rs:254:33-254:36)
  3: _20 = &mut (*_1)
    SourceInfo(src/seq/index.rs:254:33-254:36)
  4: StorageLive(_21)
    SourceInfo(src/seq/index.rs:254:38-254:51)
  5: StorageLive(_22)
    SourceInfo(src/seq/index.rs:254:38-254:44)
  6: _22 = _2
    SourceInfo(src/seq/index.rs:254:38-254:44)
  7: _21 = move _22 as u64 (IntToInt)
    SourceInfo(src/seq/index.rs:254:38-254:51)
  8: StorageDead(_22)
    SourceInfo(src/seq/index.rs:254:50-254:51)
  9: StorageLive(_23)
    SourceInfo(src/seq/index.rs:254:53-254:66)
  10: StorageLive(_24)
    SourceInfo(src/seq/index.rs:254:53-254:59)
  11: _24 = _3
    SourceInfo(src/seq/index.rs:254:53-254:59)
  12: _23 = move _24 as u64 (IntToInt)
    SourceInfo(src/seq/index.rs:254:53-254:66)
  13: StorageDead(_24)
    SourceInfo(src/seq/index.rs:254:65-254:66)
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:254:16-254:67)
      kind: _0 = seq::index_::sample_rejection::<u64, R>(move _20, move _21, move _23) -> [return: bb6, unwind: bb31]
  }
  preds [bb3]
  succs [bb6, bb31]

bb5
  0: StorageDead(_18)
    SourceInfo(src/seq/index.rs:247:35-247:36)
  1: StorageDead(_17)
    SourceInfo(src/seq/index.rs:247:35-247:36)
  2: _15 = const ()
    SourceInfo(src/seq/index.rs:255:6-255:6)
  3: StorageDead(_16)
    SourceInfo(src/seq/index.rs:255:5-255:6)
  4: StorageDead(_15)
    SourceInfo(src/seq/index.rs:255:5-255:6)
  5: StorageLive(_25)
    SourceInfo(src/seq/index.rs:256:9-256:15)
  6: StorageLive(_26)
    SourceInfo(src/seq/index.rs:256:18-256:24)
  7: _26 = _3
    SourceInfo(src/seq/index.rs:256:18-256:24)
  8: _25 = move _26 as u32 (IntToInt)
    SourceInfo(src/seq/index.rs:256:18-256:31)
  9: StorageDead(_26)
    SourceInfo(src/seq/index.rs:256:30-256:31)
  10: FakeRead(ForLet(None), _25)
    SourceInfo(src/seq/index.rs:256:9-256:15)
  11: StorageLive(_27)
    SourceInfo(src/seq/index.rs:257:9-257:15)
  12: StorageLive(_28)
    SourceInfo(src/seq/index.rs:257:18-257:24)
  13: _28 = _2
    SourceInfo(src/seq/index.rs:257:18-257:24)
  14: _27 = move _28 as u32 (IntToInt)
    SourceInfo(src/seq/index.rs:257:18-257:31)
  15: StorageDead(_28)
    SourceInfo(src/seq/index.rs:257:30-257:31)
  16: FakeRead(ForLet(None), _27)
    SourceInfo(src/seq/index.rs:257:9-257:15)
  17: StorageLive(_29)
    SourceInfo(src/seq/index.rs:263:8-263:20)
  18: StorageLive(_30)
    SourceInfo(src/seq/index.rs:263:8-263:14)
  19: _30 = _25
    SourceInfo(src/seq/index.rs:263:8-263:14)
  20: _29 = Lt(move _30, const 163_u32)
    SourceInfo(src/seq/index.rs:263:8-263:20)
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:263:8-263:20)
      kind: switchInt(move _29) -> [0: bb8, otherwise: bb7]
  }
  preds [bb3]
  succs [bb7, bb8]

bb6
  0: StorageDead(_23)
    SourceInfo(src/seq/index.rs:254:66-254:67)
  1: StorageDead(_21)
    SourceInfo(src/seq/index.rs:254:66-254:67)
  2: StorageDead(_20)
    SourceInfo(src/seq/index.rs:254:66-254:67)
  3: StorageDead(_16)
    SourceInfo(src/seq/index.rs:255:5-255:6)
  4: StorageDead(_15)
    SourceInfo(src/seq/index.rs:255:5-255:6)
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:283:2-283:2)
      kind: goto -> bb30
  }
  preds [bb4]
  succs [bb30]

bb7
  0: StorageDead(_30)
    SourceInfo(src/seq/index.rs:263:19-263:20)
  1: StorageLive(_31)
    SourceInfo(src/seq/index.rs:265:13-265:14)
  2: StorageLive(_32)
    SourceInfo(src/seq/index.rs:265:29-265:46)
  3: StorageLive(_33)
    SourceInfo(src/seq/index.rs:265:29-265:35)
  4: _33 = _27
    SourceInfo(src/seq/index.rs:265:29-265:35)
  5: _32 = Ge(move _33, const 500000_u32)
    SourceInfo(src/seq/index.rs:265:29-265:46)
  6: StorageDead(_33)
    SourceInfo(src/seq/index.rs:265:45-265:46)
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:265:17-265:47)
      kind: _31 = <usize as core::convert::From<bool>>::from(move _32) -> [return: bb9, unwind: bb31]
  }
  preds [bb5]
  succs [bb9, bb31]

bb8
  0: StorageDead(_30)
    SourceInfo(src/seq/index.rs:263:19-263:20)
  1: StorageLive(_69)
    SourceInfo(src/seq/index.rs:276:13-276:14)
  2: StorageLive(_70)
    SourceInfo(src/seq/index.rs:276:29-276:46)
  3: StorageLive(_71)
    SourceInfo(src/seq/index.rs:276:29-276:35)
  4: _71 = _27
    SourceInfo(src/seq/index.rs:276:29-276:35)
  5: _70 = Ge(move _71, const 500000_u32)
    SourceInfo(src/seq/index.rs:276:29-276:46)
  6: StorageDead(_71)
    SourceInfo(src/seq/index.rs:276:45-276:46)
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:276:17-276:47)
      kind: _69 = <usize as core::convert::From<bool>>::from(move _70) -> [return: bb22, unwind: bb31]
  }
  preds [bb5]
  succs [bb22, bb31]

bb9
  0: StorageDead(_32)
    SourceInfo(src/seq/index.rs:265:46-265:47)
  1: FakeRead(ForLet(None), _31)
    SourceInfo(src/seq/index.rs:265:13-265:14)
  2: StorageLive(_34)
    SourceInfo(src/seq/index.rs:266:13-266:22)
  3: StorageLive(_35)
    SourceInfo(src/seq/index.rs:266:25-266:31)
  4: _35 = _25
    SourceInfo(src/seq/index.rs:266:25-266:31)
  5: _34 = move _35 as f32 (IntToFloat)
    SourceInfo(src/seq/index.rs:266:25-266:38)
  6: StorageDead(_35)
    SourceInfo(src/seq/index.rs:266:37-266:38)
  7: FakeRead(ForLet(None), _34)
    SourceInfo(src/seq/index.rs:266:13-266:22)
  8: StorageLive(_36)
    SourceInfo(src/seq/index.rs:267:13-267:15)
  9: StorageLive(_37)
    SourceInfo(src/seq/index.rs:267:18-267:25)
  10: StorageLive(_38)
    SourceInfo(src/seq/index.rs:267:18-267:19)
  11: _38 = const seq::index_::sample::C
    SourceInfo(src/seq/index.rs:267:18-267:19)
  12: StorageLive(_39)
    SourceInfo(src/seq/index.rs:267:20-267:21)
  13: _39 = const 0_usize
    SourceInfo(src/seq/index.rs:267:20-267:21)
  14: _40 = Len(_38)
    SourceInfo(src/seq/index.rs:267:18-267:22)
  15: _41 = Lt(_39, _40)
    SourceInfo(src/seq/index.rs:267:18-267:22)
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:267:18-267:22)
      kind: assert(move _41, "index out of bounds: the length is {} but the index is {}", move _40, _39) -> [success: bb10, unwind: bb31]
  }
  preds [bb7]
  succs [bb10, bb31]

bb10
  0: StorageLive(_42)
    SourceInfo(src/seq/index.rs:267:23-267:24)
  1: _42 = _31
    SourceInfo(src/seq/index.rs:267:23-267:24)
  2: _43 = Len(_38[_39])
    SourceInfo(src/seq/index.rs:267:18-267:25)
  3: _44 = Lt(_42, _43)
    SourceInfo(src/seq/index.rs:267:18-267:25)
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:267:18-267:25)
      kind: assert(move _44, "index out of bounds: the length is {} but the index is {}", move _43, _42) -> [success: bb11, unwind: bb31]
  }
  preds [bb9]
  succs [bb11, bb31]

bb11
  0: _37 = _38[_39][_42]
    SourceInfo(src/seq/index.rs:267:18-267:25)
  1: StorageLive(_45)
    SourceInfo(src/seq/index.rs:267:28-267:37)
  2: _45 = _34
    SourceInfo(src/seq/index.rs:267:28-267:37)
  3: _36 = Mul(move _37, move _45)
    SourceInfo(src/seq/index.rs:267:18-267:37)
  4: StorageDead(_45)
    SourceInfo(src/seq/index.rs:267:36-267:37)
  5: StorageDead(_37)
    SourceInfo(src/seq/index.rs:267:36-267:37)
  6: FakeRead(ForLet(None), _36)
    SourceInfo(src/seq/index.rs:267:13-267:15)
  7: StorageDead(_42)
    SourceInfo(src/seq/index.rs:267:37-267:38)
  8: StorageDead(_39)
    SourceInfo(src/seq/index.rs:267:37-267:38)
  9: StorageDead(_38)
    SourceInfo(src/seq/index.rs:267:37-267:38)
  10: StorageLive(_46)
    SourceInfo(src/seq/index.rs:269:12-269:23)
  11: StorageLive(_47)
    SourceInfo(src/seq/index.rs:269:12-269:18)
  12: _47 = _25
    SourceInfo(src/seq/index.rs:269:12-269:18)
  13: _46 = Gt(move _47, const 11_u32)
    SourceInfo(src/seq/index.rs:269:12-269:23)
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:269:12-269:23)
      kind: switchInt(move _46) -> [0: bb18, otherwise: bb12]
  }
  preds [bb10]
  succs [bb12, bb18]

bb12
  0: StorageDead(_47)
    SourceInfo(src/seq/index.rs:269:22-269:23)
  1: StorageLive(_48)
    SourceInfo(src/seq/index.rs:269:27-269:71)
  2: StorageLive(_49)
    SourceInfo(src/seq/index.rs:269:27-269:42)
  3: StorageLive(_50)
    SourceInfo(src/seq/index.rs:269:28-269:34)
  4: _50 = _27
    SourceInfo(src/seq/index.rs:269:28-269:34)
  5: _49 = move _50 as f32 (IntToFloat)
    SourceInfo(src/seq/index.rs:269:27-269:42)
  6: StorageDead(_50)
    SourceInfo(src/seq/index.rs:269:41-269:42)
  7: StorageLive(_51)
    SourceInfo(src/seq/index.rs:269:45-269:71)
  8: StorageLive(_52)
    SourceInfo(src/seq/index.rs:269:45-269:59)
  9: StorageLive(_53)
    SourceInfo(src/seq/index.rs:269:46-269:53)
  10: StorageLive(_54)
    SourceInfo(src/seq/index.rs:269:46-269:47)
  11: _54 = const seq::index_::sample::C
    SourceInfo(src/seq/index.rs:269:46-269:47)
  12: StorageLive(_55)
    SourceInfo(src/seq/index.rs:269:48-269:49)
  13: _55 = const 1_usize
    SourceInfo(src/seq/index.rs:269:48-269:49)
  14: _56 = Len(_54)
    SourceInfo(src/seq/index.rs:269:46-269:50)
  15: _57 = Lt(_55, _56)
    SourceInfo(src/seq/index.rs:269:46-269:50)
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:269:46-269:50)
      kind: assert(move _57, "index out of bounds: the length is {} but the index is {}", move _56, _55) -> [success: bb13, unwind: bb31]
  }
  preds [bb11]
  succs [bb13, bb31]

bb13
  0: StorageLive(_58)
    SourceInfo(src/seq/index.rs:269:51-269:52)
  1: _58 = _31
    SourceInfo(src/seq/index.rs:269:51-269:52)
  2: _59 = Len(_54[_55])
    SourceInfo(src/seq/index.rs:269:46-269:53)
  3: _60 = Lt(_58, _59)
    SourceInfo(src/seq/index.rs:269:46-269:53)
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:269:46-269:53)
      kind: assert(move _60, "index out of bounds: the length is {} but the index is {}", move _59, _58) -> [success: bb14, unwind: bb31]
  }
  preds [bb12]
  succs [bb14, bb31]

bb14
  0: _53 = _54[_55][_58]
    SourceInfo(src/seq/index.rs:269:46-269:53)
  1: StorageLive(_61)
    SourceInfo(src/seq/index.rs:269:56-269:58)
  2: _61 = _36
    SourceInfo(src/seq/index.rs:269:56-269:58)
  3: _52 = Add(move _53, move _61)
    SourceInfo(src/seq/index.rs:269:45-269:59)
  4: StorageDead(_61)
    SourceInfo(src/seq/index.rs:269:58-269:59)
  5: StorageDead(_53)
    SourceInfo(src/seq/index.rs:269:58-269:59)
  6: StorageLive(_62)
    SourceInfo(src/seq/index.rs:269:62-269:71)
  7: _62 = _34
    SourceInfo(src/seq/index.rs:269:62-269:71)
  8: _51 = Mul(move _52, move _62)
    SourceInfo(src/seq/index.rs:269:45-269:71)
  9: StorageDead(_62)
    SourceInfo(src/seq/index.rs:269:70-269:71)
  10: StorageDead(_52)
    SourceInfo(src/seq/index.rs:269:70-269:71)
  11: _48 = Lt(move _49, move _51)
    SourceInfo(src/seq/index.rs:269:27-269:71)
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:269:27-269:71)
      kind: switchInt(move _48) -> [0: bb17, otherwise: bb15]
  }
  preds [bb13]
  succs [bb15, bb17]

bb15
  0: StorageDead(_58)
    SourceInfo(src/seq/index.rs:269:70-269:71)
  1: StorageDead(_55)
    SourceInfo(src/seq/index.rs:269:70-269:71)
  2: StorageDead(_54)
    SourceInfo(src/seq/index.rs:269:70-269:71)
  3: StorageDead(_51)
    SourceInfo(src/seq/index.rs:269:70-269:71)
  4: StorageDead(_49)
    SourceInfo(src/seq/index.rs:269:70-269:71)
  5: StorageLive(_63)
    SourceInfo(src/seq/index.rs:270:28-270:31)
  6: _63 = &mut (*_1)
    SourceInfo(src/seq/index.rs:270:28-270:31)
  7: StorageLive(_64)
    SourceInfo(src/seq/index.rs:270:33-270:39)
  8: _64 = _27
    SourceInfo(src/seq/index.rs:270:33-270:39)
  9: StorageLive(_65)
    SourceInfo(src/seq/index.rs:270:41-270:47)
  10: _65 = _25
    SourceInfo(src/seq/index.rs:270:41-270:47)
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:270:13-270:48)
      kind: _0 = seq::index_::sample_inplace::<R>(move _63, move _64, move _65) -> [return: bb16, unwind: bb31]
  }
  preds [bb14]
  succs [bb16, bb31]

bb16
  0: StorageDead(_65)
    SourceInfo(src/seq/index.rs:270:47-270:48)
  1: StorageDead(_64)
    SourceInfo(src/seq/index.rs:270:47-270:48)
  2: StorageDead(_63)
    SourceInfo(src/seq/index.rs:270:47-270:48)
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:269:9-273:10)
      kind: goto -> bb21
  }
  preds [bb15]
  succs [bb21]

bb17
  0: StorageDead(_58)
    SourceInfo(src/seq/index.rs:269:70-269:71)
  1: StorageDead(_55)
    SourceInfo(src/seq/index.rs:269:70-269:71)
  2: StorageDead(_54)
    SourceInfo(src/seq/index.rs:269:70-269:71)
  3: StorageDead(_51)
    SourceInfo(src/seq/index.rs:269:70-269:71)
  4: StorageDead(_49)
    SourceInfo(src/seq/index.rs:269:70-269:71)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb19
  }
  preds [bb14]
  succs [bb19]

bb18
  0: StorageDead(_47)
    SourceInfo(src/seq/index.rs:269:22-269:23)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb19
  }
  preds [bb11]
  succs [bb19]

bb19
  0: StorageLive(_66)
    SourceInfo(src/seq/index.rs:272:26-272:29)
  1: _66 = &mut (*_1)
    SourceInfo(src/seq/index.rs:272:26-272:29)
  2: StorageLive(_67)
    SourceInfo(src/seq/index.rs:272:31-272:37)
  3: _67 = _27
    SourceInfo(src/seq/index.rs:272:31-272:37)
  4: StorageLive(_68)
    SourceInfo(src/seq/index.rs:272:39-272:45)
  5: _68 = _25
    SourceInfo(src/seq/index.rs:272:39-272:45)
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:272:13-272:46)
      kind: _0 = seq::index_::sample_floyd::<R>(move _66, move _67, move _68) -> [return: bb20, unwind: bb31]
  }
  preds [bb17, bb18]
  succs [bb20, bb31]

bb20
  0: StorageDead(_68)
    SourceInfo(src/seq/index.rs:272:45-272:46)
  1: StorageDead(_67)
    SourceInfo(src/seq/index.rs:272:45-272:46)
  2: StorageDead(_66)
    SourceInfo(src/seq/index.rs:272:45-272:46)
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:269:9-273:10)
      kind: goto -> bb21
  }
  preds [bb19]
  succs [bb21]

bb21
  0: StorageDead(_48)
    SourceInfo(src/seq/index.rs:273:9-273:10)
  1: StorageDead(_46)
    SourceInfo(src/seq/index.rs:273:9-273:10)
  2: StorageDead(_36)
    SourceInfo(src/seq/index.rs:274:5-274:6)
  3: StorageDead(_34)
    SourceInfo(src/seq/index.rs:274:5-274:6)
  4: StorageDead(_31)
    SourceInfo(src/seq/index.rs:274:5-274:6)
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:263:5-282:6)
      kind: goto -> bb29
  }
  preds [bb16, bb20]
  succs [bb29]

bb22
  0: StorageDead(_70)
    SourceInfo(src/seq/index.rs:276:46-276:47)
  1: FakeRead(ForLet(None), _69)
    SourceInfo(src/seq/index.rs:276:13-276:14)
  2: StorageLive(_72)
    SourceInfo(src/seq/index.rs:277:12-277:52)
  3: StorageLive(_73)
    SourceInfo(src/seq/index.rs:277:12-277:27)
  4: StorageLive(_74)
    SourceInfo(src/seq/index.rs:277:13-277:19)
  5: _74 = _27
    SourceInfo(src/seq/index.rs:277:13-277:19)
  6: _73 = move _74 as f32 (IntToFloat)
    SourceInfo(src/seq/index.rs:277:12-277:27)
  7: StorageDead(_74)
    SourceInfo(src/seq/index.rs:277:26-277:27)
  8: StorageLive(_75)
    SourceInfo(src/seq/index.rs:277:30-277:52)
  9: StorageLive(_76)
    SourceInfo(src/seq/index.rs:277:30-277:34)
  10: StorageLive(_77)
    SourceInfo(src/seq/index.rs:277:30-277:31)
  11: _77 = const seq::index_::sample::C
    SourceInfo(src/seq/index.rs:277:30-277:31)
  12: StorageLive(_78)
    SourceInfo(src/seq/index.rs:277:32-277:33)
  13: _78 = _69
    SourceInfo(src/seq/index.rs:277:32-277:33)
  14: _79 = Len(_77)
    SourceInfo(src/seq/index.rs:277:30-277:34)
  15: _80 = Lt(_78, _79)
    SourceInfo(src/seq/index.rs:277:30-277:34)
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:277:30-277:34)
      kind: assert(move _80, "index out of bounds: the length is {} but the index is {}", move _79, _78) -> [success: bb23, unwind: bb31]
  }
  preds [bb8]
  succs [bb23, bb31]

bb23
  0: _76 = _77[_78]
    SourceInfo(src/seq/index.rs:277:30-277:34)
  1: StorageLive(_81)
    SourceInfo(src/seq/index.rs:277:37-277:52)
  2: StorageLive(_82)
    SourceInfo(src/seq/index.rs:277:38-277:44)
  3: _82 = _25
    SourceInfo(src/seq/index.rs:277:38-277:44)
  4: _81 = move _82 as f32 (IntToFloat)
    SourceInfo(src/seq/index.rs:277:37-277:52)
  5: StorageDead(_82)
    SourceInfo(src/seq/index.rs:277:51-277:52)
  6: _75 = Mul(move _76, move _81)
    SourceInfo(src/seq/index.rs:277:30-277:52)
  7: StorageDead(_81)
    SourceInfo(src/seq/index.rs:277:51-277:52)
  8: StorageDead(_76)
    SourceInfo(src/seq/index.rs:277:51-277:52)
  9: _72 = Lt(move _73, move _75)
    SourceInfo(src/seq/index.rs:277:12-277:52)
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:277:12-277:52)
      kind: switchInt(move _72) -> [0: bb26, otherwise: bb24]
  }
  preds [bb22]
  succs [bb24, bb26]

bb24
  0: StorageDead(_78)
    SourceInfo(src/seq/index.rs:277:51-277:52)
  1: StorageDead(_77)
    SourceInfo(src/seq/index.rs:277:51-277:52)
  2: StorageDead(_75)
    SourceInfo(src/seq/index.rs:277:51-277:52)
  3: StorageDead(_73)
    SourceInfo(src/seq/index.rs:277:51-277:52)
  4: StorageLive(_83)
    SourceInfo(src/seq/index.rs:278:28-278:31)
  5: _83 = &mut (*_1)
    SourceInfo(src/seq/index.rs:278:28-278:31)
  6: StorageLive(_84)
    SourceInfo(src/seq/index.rs:278:33-278:39)
  7: _84 = _27
    SourceInfo(src/seq/index.rs:278:33-278:39)
  8: StorageLive(_85)
    SourceInfo(src/seq/index.rs:278:41-278:47)
  9: _85 = _25
    SourceInfo(src/seq/index.rs:278:41-278:47)
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:278:13-278:48)
      kind: _0 = seq::index_::sample_inplace::<R>(move _83, move _84, move _85) -> [return: bb25, unwind: bb31]
  }
  preds [bb23]
  succs [bb25, bb31]

bb25
  0: StorageDead(_85)
    SourceInfo(src/seq/index.rs:278:47-278:48)
  1: StorageDead(_84)
    SourceInfo(src/seq/index.rs:278:47-278:48)
  2: StorageDead(_83)
    SourceInfo(src/seq/index.rs:278:47-278:48)
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:277:9-281:10)
      kind: goto -> bb28
  }
  preds [bb24]
  succs [bb28]

bb26
  0: StorageDead(_78)
    SourceInfo(src/seq/index.rs:277:51-277:52)
  1: StorageDead(_77)
    SourceInfo(src/seq/index.rs:277:51-277:52)
  2: StorageDead(_75)
    SourceInfo(src/seq/index.rs:277:51-277:52)
  3: StorageDead(_73)
    SourceInfo(src/seq/index.rs:277:51-277:52)
  4: StorageLive(_86)
    SourceInfo(src/seq/index.rs:280:30-280:33)
  5: _86 = &mut (*_1)
    SourceInfo(src/seq/index.rs:280:30-280:33)
  6: StorageLive(_87)
    SourceInfo(src/seq/index.rs:280:35-280:41)
  7: _87 = _27
    SourceInfo(src/seq/index.rs:280:35-280:41)
  8: StorageLive(_88)
    SourceInfo(src/seq/index.rs:280:43-280:49)
  9: _88 = _25
    SourceInfo(src/seq/index.rs:280:43-280:49)
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:280:13-280:50)
      kind: _0 = seq::index_::sample_rejection::<u32, R>(move _86, move _87, move _88) -> [return: bb27, unwind: bb31]
  }
  preds [bb23]
  succs [bb27, bb31]

bb27
  0: StorageDead(_88)
    SourceInfo(src/seq/index.rs:280:49-280:50)
  1: StorageDead(_87)
    SourceInfo(src/seq/index.rs:280:49-280:50)
  2: StorageDead(_86)
    SourceInfo(src/seq/index.rs:280:49-280:50)
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:277:9-281:10)
      kind: goto -> bb28
  }
  preds [bb26]
  succs [bb28]

bb28
  0: StorageDead(_72)
    SourceInfo(src/seq/index.rs:281:9-281:10)
  1: StorageDead(_69)
    SourceInfo(src/seq/index.rs:282:5-282:6)
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:263:5-282:6)
      kind: goto -> bb29
  }
  preds [bb25, bb27]
  succs [bb29]

bb29
  0: StorageDead(_29)
    SourceInfo(src/seq/index.rs:282:5-282:6)
  1: StorageDead(_27)
    SourceInfo(src/seq/index.rs:283:1-283:2)
  2: StorageDead(_25)
    SourceInfo(src/seq/index.rs:283:1-283:2)
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:283:2-283:2)
      kind: goto -> bb30
  }
  preds [bb21, bb28]
  succs [bb30]

bb30
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:283:2-283:2)
      kind: return
  }
  preds [bb6, bb29]
  succs []

bb31
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:240:1-283:2)
      kind: resume
  }
  preds [bb1, bb2, bb4, bb7, bb8, bb9, bb10, bb12, bb13, bb15, bb19, bb22, bb24, bb26]
  succs []

