bb0
  0: StorageLive(_2)
    SourceInfo(src/lib.rs:242:5-242:10)
  1: StorageLive(_3)
    SourceInfo(src/lib.rs:242:5-242:10)
  Terminator {
      source_info: SourceInfo(src/lib.rs:242:5-242:10)
      kind: _3 = rngs::thread::rng() -> [return: bb1, unwind: bb5]
  }
  preds []
  succs [bb1, bb5]

bb1
  0: _2 = &mut _3
    SourceInfo(src/lib.rs:242:5-242:10)
  1: StorageLive(_4)
    SourceInfo(src/lib.rs:242:23-242:24)
  2: _4 = _1
    SourceInfo(src/lib.rs:242:23-242:24)
  Terminator {
      source_info: SourceInfo(src/lib.rs:242:5-242:25)
      kind: _0 = <rngs::thread::ThreadRng as rng::Rng>::random_bool(move _2, move _4) -> [return: bb2, unwind: bb4]
  }
  preds [bb0]
  succs [bb2, bb4]

bb2
  0: StorageDead(_4)
    SourceInfo(src/lib.rs:242:24-242:25)
  1: StorageDead(_2)
    SourceInfo(src/lib.rs:242:24-242:25)
  Terminator {
      source_info: SourceInfo(src/lib.rs:243:1-243:2)
      kind: drop(_3) -> [return: bb3, unwind: bb5]
  }
  preds [bb1]
  succs [bb3, bb5]

bb3
  0: StorageDead(_3)
    SourceInfo(src/lib.rs:243:1-243:2)
  Terminator {
      source_info: SourceInfo(src/lib.rs:243:2-243:2)
      kind: return
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(src/lib.rs:243:1-243:2)
      kind: drop(_3) -> [return: bb5, unwind terminate(cleanup)]
  }
  preds [bb1]
  succs [bb5]

bb5
  Terminator {
      source_info: SourceInfo(src/lib.rs:241:1-243:2)
      kind: resume
  }
  preds [bb0, bb2, bb4]
  succs []

