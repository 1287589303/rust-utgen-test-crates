bb0
  0: StorageLive(_4)
    SourceInfo(src/seq/iterator.rs:199:13-199:19)
  1: StorageLive(_5)
    SourceInfo(src/seq/iterator.rs:199:22-199:25)
  2: _5 = &(*_3)
    SourceInfo(src/seq/iterator.rs:199:22-199:25)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:199:22-199:31)
      kind: _4 = core::slice::<impl [<Self as core::iter::Iterator>::Item]>::len(move _5) -> [return: bb1, unwind: bb53]
  }
  preds []
  succs [bb1, bb53]

bb1
  0: StorageDead(_5)
    SourceInfo(src/seq/iterator.rs:199:30-199:31)
  1: FakeRead(ForLet(None), _4)
    SourceInfo(src/seq/iterator.rs:199:13-199:19)
  2: StorageLive(_6)
    SourceInfo(src/seq/iterator.rs:200:13-200:20)
  3: _6 = const 0_usize
    SourceInfo(src/seq/iterator.rs:200:23-200:24)
  4: FakeRead(ForLet(None), _6)
    SourceInfo(src/seq/iterator.rs:200:13-200:20)
  5: StorageLive(_7)
    SourceInfo(src/seq/iterator.rs:201:9-209:10)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:201:9-209:10)
      kind: goto -> bb2
  }
  preds [bb0]
  succs [bb2]

bb2
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:201:9-209:10)
      kind: falseUnwind -> [real: bb3, unwind: bb53]
  }
  preds [bb1, bb15]
  succs [bb3, bb53]

bb3
  0: StorageLive(_9)
    SourceInfo(src/seq/iterator.rs:201:15-201:27)
  1: StorageLive(_10)
    SourceInfo(src/seq/iterator.rs:201:15-201:18)
  2: _10 = _6
    SourceInfo(src/seq/iterator.rs:201:15-201:18)
  3: StorageLive(_11)
    SourceInfo(src/seq/iterator.rs:201:21-201:27)
  4: _11 = _4
    SourceInfo(src/seq/iterator.rs:201:21-201:27)
  5: _9 = Lt(move _10, move _11)
    SourceInfo(src/seq/iterator.rs:201:15-201:27)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:201:15-201:27)
      kind: switchInt(move _9) -> [0: bb16, otherwise: bb4]
  }
  preds [bb2]
  succs [bb4, bb16]

bb4
  0: StorageDead(_11)
    SourceInfo(src/seq/iterator.rs:201:26-201:27)
  1: StorageDead(_10)
    SourceInfo(src/seq/iterator.rs:201:26-201:27)
  2: StorageLive(_12)
    SourceInfo(src/seq/iterator.rs:202:33-202:44)
  3: StorageLive(_13)
    SourceInfo(src/seq/iterator.rs:202:33-202:37)
  4: _13 = &mut _1
    SourceInfo(src/seq/iterator.rs:202:33-202:37)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:202:33-202:44)
      kind: _12 = <Self as core::iter::Iterator>::next(move _13) -> [return: bb5, unwind: bb53]
  }
  preds [bb3]
  succs [bb5, bb53]

bb5
  0: StorageDead(_13)
    SourceInfo(src/seq/iterator.rs:202:43-202:44)
  1: PlaceMention(_12)
    SourceInfo(src/seq/iterator.rs:202:33-202:44)
  2: _14 = discriminant(_12)
    SourceInfo(src/seq/iterator.rs:202:33-202:44)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:202:20-202:30)
      kind: switchInt(move _14) -> [1: bb6, otherwise: bb13]
  }
  preds [bb4]
  succs [bb6, bb13]

bb6
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:202:20-202:30)
      kind: falseEdge -> [real: bb7, imaginary: bb13]
  }
  preds [bb5]
  succs [bb7, bb13]

bb7
  0: StorageLive(_15)
    SourceInfo(src/seq/iterator.rs:202:25-202:29)
  1: _15 = move ((_12 as Some).0: <Self as core::iter::Iterator>::Item)
    SourceInfo(src/seq/iterator.rs:202:25-202:29)
  2: StorageLive(_16)
    SourceInfo(src/seq/iterator.rs:203:28-203:32)
  3: _16 = move _15
    SourceInfo(src/seq/iterator.rs:203:28-203:32)
  4: StorageLive(_17)
    SourceInfo(src/seq/iterator.rs:203:21-203:24)
  5: _17 = _6
    SourceInfo(src/seq/iterator.rs:203:21-203:24)
  6: _18 = Len((*_3))
    SourceInfo(src/seq/iterator.rs:203:17-203:25)
  7: _19 = Lt(_17, _18)
    SourceInfo(src/seq/iterator.rs:203:17-203:25)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:203:17-203:25)
      kind: assert(move _19, "index out of bounds: the length is {} but the index is {}", move _18, _17) -> [success: bb8, unwind: bb50]
  }
  preds [bb6]
  succs [bb8, bb50]

bb8
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:203:17-203:25)
      kind: drop((*_3)[_17]) -> [return: bb9, unwind: bb10]
  }
  preds [bb7]
  succs [bb9, bb10]

bb9
  0: (*_3)[_17] = move _16
    SourceInfo(src/seq/iterator.rs:203:17-203:25)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:203:31-203:32)
      kind: drop(_16) -> [return: bb11, unwind: bb51]
  }
  preds [bb8]
  succs [bb11, bb51]

bb10
  0: (*_3)[_17] = move _16
    SourceInfo(src/seq/iterator.rs:203:17-203:25)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:203:17-203:25)
      kind: goto -> bb50
  }
  preds [bb8]
  succs [bb50]

bb11
  0: StorageDead(_16)
    SourceInfo(src/seq/iterator.rs:203:31-203:32)
  1: StorageDead(_17)
    SourceInfo(src/seq/iterator.rs:203:32-203:33)
  2: _20 = AddWithOverflow(_6, const 1_usize)
    SourceInfo(src/seq/iterator.rs:204:17-204:25)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:204:17-204:25)
      kind: assert(!move (_20.1: bool), "attempt to compute `{} + {}`, which would overflow", _6, const 1_usize) -> [success: bb12, unwind: bb51]
  }
  preds [bb9]
  succs [bb12, bb51]

bb12
  0: _6 = move (_20.0: usize)
    SourceInfo(src/seq/iterator.rs:204:17-204:25)
  1: _8 = const ()
    SourceInfo(src/seq/iterator.rs:202:45-205:14)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:205:13-205:14)
      kind: drop(_15) -> [return: bb14, unwind: bb52]
  }
  preds [bb11]
  succs [bb14, bb52]

bb13
  0: _0 = _6
    SourceInfo(src/seq/iterator.rs:207:24-207:27)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:209:9-209:10)
      kind: drop(_12) -> [return: bb42, unwind: bb53]
  }
  preds [bb5, bb6]
  succs [bb42, bb53]

bb14
  0: StorageDead(_15)
    SourceInfo(src/seq/iterator.rs:205:13-205:14)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:209:9-209:10)
      kind: drop(_12) -> [return: bb15, unwind: bb53]
  }
  preds [bb12]
  succs [bb15, bb53]

bb15
  0: StorageDead(_12)
    SourceInfo(src/seq/iterator.rs:209:9-209:10)
  1: StorageDead(_9)
    SourceInfo(src/seq/iterator.rs:209:9-209:10)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:201:9-209:10)
      kind: goto -> bb2
  }
  preds [bb14]
  succs [bb2]

bb16
  0: StorageDead(_11)
    SourceInfo(src/seq/iterator.rs:201:26-201:27)
  1: StorageDead(_10)
    SourceInfo(src/seq/iterator.rs:201:26-201:27)
  2: StorageLive(_23)
    SourceInfo(src/seq/iterator.rs:201:9-209:10)
  3: _7 = const ()
    SourceInfo(src/seq/iterator.rs:201:9-209:10)
  4: StorageDead(_23)
    SourceInfo(src/seq/iterator.rs:209:9-209:10)
  5: StorageDead(_9)
    SourceInfo(src/seq/iterator.rs:209:9-209:10)
  6: StorageDead(_7)
    SourceInfo(src/seq/iterator.rs:209:9-209:10)
  7: StorageLive(_25)
    SourceInfo(src/seq/iterator.rs:212:9-217:10)
  8: StorageLive(_26)
    SourceInfo(src/seq/iterator.rs:212:26-212:42)
  9: StorageLive(_27)
    SourceInfo(src/seq/iterator.rs:212:26-212:42)
  10: StorageLive(_28)
    SourceInfo(src/seq/iterator.rs:212:26-212:30)
  11: _28 = move _1
    SourceInfo(src/seq/iterator.rs:212:26-212:30)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:212:26-212:42)
      kind: _27 = <Self as core::iter::Iterator>::enumerate(move _28) -> [return: bb17, unwind: bb49]
  }
  preds [bb3]
  succs [bb17, bb49]

bb17
  0: StorageDead(_28)
    SourceInfo(src/seq/iterator.rs:212:41-212:42)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:212:26-212:42)
      kind: _26 = <core::iter::Enumerate<Self> as core::iter::IntoIterator>::into_iter(move _27) -> [return: bb18, unwind: bb48]
  }
  preds [bb16]
  succs [bb18, bb48]

bb18
  0: StorageDead(_27)
    SourceInfo(src/seq/iterator.rs:212:41-212:42)
  1: PlaceMention(_26)
    SourceInfo(src/seq/iterator.rs:212:26-212:42)
  2: StorageLive(_29)
    SourceInfo(src/seq/iterator.rs:212:26-212:42)
  3: _29 = move _26
    SourceInfo(src/seq/iterator.rs:212:26-212:42)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:212:9-217:10)
      kind: goto -> bb19
  }
  preds [bb17]
  succs [bb19]

bb19
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:212:9-217:10)
      kind: falseUnwind -> [real: bb20, unwind: bb46]
  }
  preds [bb18, bb38]
  succs [bb20, bb46]

bb20
  0: StorageLive(_30)
    SourceInfo(src/seq/iterator.rs:212:26-212:42)
  1: StorageLive(_31)
    SourceInfo(src/seq/iterator.rs:212:26-212:42)
  2: StorageLive(_32)
    SourceInfo(src/seq/iterator.rs:212:26-212:42)
  3: StorageLive(_33)
    SourceInfo(src/seq/iterator.rs:212:26-212:42)
  4: _33 = &mut _29
    SourceInfo(src/seq/iterator.rs:212:26-212:42)
  5: _32 = &mut (*_33)
    SourceInfo(src/seq/iterator.rs:212:26-212:42)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:212:26-212:42)
      kind: _31 = <core::iter::Enumerate<Self> as core::iter::Iterator>::next(move _32) -> [return: bb21, unwind: bb46]
  }
  preds [bb19]
  succs [bb21, bb46]

bb21
  0: StorageDead(_32)
    SourceInfo(src/seq/iterator.rs:212:41-212:42)
  1: PlaceMention(_31)
    SourceInfo(src/seq/iterator.rs:212:26-212:42)
  2: _34 = discriminant(_31)
    SourceInfo(src/seq/iterator.rs:212:26-212:42)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:212:26-212:42)
      kind: switchInt(move _34) -> [0: bb23, 1: bb24, otherwise: bb22]
  }
  preds [bb20]
  succs [bb22, bb23, bb24]

bb22
  0: FakeRead(ForMatchedPlace(None), _31)
    SourceInfo(src/seq/iterator.rs:212:26-212:42)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:212:26-212:42)
      kind: unreachable
  }
  preds [bb21]
  succs []

bb23
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:212:9-217:10)
      kind: falseEdge -> [real: bb25, imaginary: bb24]
  }
  preds [bb21]
  succs [bb24, bb25]

bb24
  0: StorageLive(_36)
    SourceInfo(src/seq/iterator.rs:212:14-212:15)
  1: _36 = (((_31 as Some).0: (usize, <Self as core::iter::Iterator>::Item)).0: usize)
    SourceInfo(src/seq/iterator.rs:212:14-212:15)
  2: StorageLive(_37)
    SourceInfo(src/seq/iterator.rs:212:17-212:21)
  3: _37 = move (((_31 as Some).0: (usize, <Self as core::iter::Iterator>::Item)).1: <Self as core::iter::Iterator>::Item)
    SourceInfo(src/seq/iterator.rs:212:17-212:21)
  4: StorageLive(_38)
    SourceInfo(src/seq/iterator.rs:213:17-213:18)
  5: StorageLive(_39)
    SourceInfo(src/seq/iterator.rs:213:21-213:24)
  6: _39 = &mut (*_2)
    SourceInfo(src/seq/iterator.rs:213:21-213:24)
  7: StorageLive(_40)
    SourceInfo(src/seq/iterator.rs:213:38-213:54)
  8: StorageLive(_41)
    SourceInfo(src/seq/iterator.rs:213:40-213:54)
  9: StorageLive(_42)
    SourceInfo(src/seq/iterator.rs:213:40-213:45)
  10: StorageLive(_43)
    SourceInfo(src/seq/iterator.rs:213:40-213:41)
  11: _43 = _36
    SourceInfo(src/seq/iterator.rs:213:40-213:41)
  12: _44 = AddWithOverflow(_43, const 1_usize)
    SourceInfo(src/seq/iterator.rs:213:40-213:45)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:213:40-213:45)
      kind: assert(!move (_44.1: bool), "attempt to compute `{} + {}`, which would overflow", move _43, const 1_usize) -> [success: bb26, unwind: bb44]
  }
  preds [bb21, bb23]
  succs [bb26, bb44]

bb25
  0: _25 = const ()
    SourceInfo(src/seq/iterator.rs:212:9-217:10)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:217:9-217:10)
      kind: drop(_31) -> [return: bb39, unwind: bb46]
  }
  preds [bb23]
  succs [bb39, bb46]

bb26
  0: _42 = move (_44.0: usize)
    SourceInfo(src/seq/iterator.rs:213:40-213:45)
  1: StorageDead(_43)
    SourceInfo(src/seq/iterator.rs:213:44-213:45)
  2: StorageLive(_45)
    SourceInfo(src/seq/iterator.rs:213:48-213:54)
  3: _45 = _4
    SourceInfo(src/seq/iterator.rs:213:48-213:54)
  4: _46 = AddWithOverflow(_42, _45)
    SourceInfo(src/seq/iterator.rs:213:40-213:54)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:213:40-213:54)
      kind: assert(!move (_46.1: bool), "attempt to compute `{} + {}`, which would overflow", move _42, move _45) -> [success: bb27, unwind: bb44]
  }
  preds [bb24]
  succs [bb27, bb44]

bb27
  0: _41 = move (_46.0: usize)
    SourceInfo(src/seq/iterator.rs:213:40-213:54)
  1: StorageDead(_45)
    SourceInfo(src/seq/iterator.rs:213:53-213:54)
  2: StorageDead(_42)
    SourceInfo(src/seq/iterator.rs:213:53-213:54)
  3: _40 = core::ops::RangeTo::<usize> { end: move _41 }
    SourceInfo(src/seq/iterator.rs:213:38-213:54)
  4: StorageDead(_41)
    SourceInfo(src/seq/iterator.rs:213:53-213:54)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:213:21-213:55)
      kind: _38 = <R as rng::Rng>::random_range::<usize, core::ops::RangeTo<usize>>(move _39, move _40) -> [return: bb28, unwind: bb44]
  }
  preds [bb26]
  succs [bb28, bb44]

bb28
  0: StorageDead(_40)
    SourceInfo(src/seq/iterator.rs:213:54-213:55)
  1: StorageDead(_39)
    SourceInfo(src/seq/iterator.rs:213:54-213:55)
  2: FakeRead(ForLet(None), _38)
    SourceInfo(src/seq/iterator.rs:213:17-213:18)
  3: StorageLive(_47)
    SourceInfo(src/seq/iterator.rs:214:33-214:47)
  4: StorageLive(_48)
    SourceInfo(src/seq/iterator.rs:214:33-214:36)
  5: _48 = &mut (*_3)
    SourceInfo(src/seq/iterator.rs:214:33-214:36)
  6: StorageLive(_49)
    SourceInfo(src/seq/iterator.rs:214:45-214:46)
  7: _49 = _38
    SourceInfo(src/seq/iterator.rs:214:45-214:46)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:214:33-214:47)
      kind: _47 = core::slice::<impl [<Self as core::iter::Iterator>::Item]>::get_mut::<usize>(move _48, move _49) -> [return: bb29, unwind: bb44]
  }
  preds [bb27]
  succs [bb29, bb44]

bb29
  0: StorageDead(_49)
    SourceInfo(src/seq/iterator.rs:214:46-214:47)
  1: StorageDead(_48)
    SourceInfo(src/seq/iterator.rs:214:46-214:47)
  2: PlaceMention(_47)
    SourceInfo(src/seq/iterator.rs:214:33-214:47)
  3: _50 = discriminant(_47)
    SourceInfo(src/seq/iterator.rs:214:33-214:47)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:214:20-214:30)
      kind: switchInt(move _50) -> [1: bb30, otherwise: bb35]
  }
  preds [bb28]
  succs [bb30, bb35]

bb30
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:214:20-214:30)
      kind: falseEdge -> [real: bb31, imaginary: bb35]
  }
  preds [bb29]
  succs [bb31, bb35]

bb31
  0: StorageLive(_51)
    SourceInfo(src/seq/iterator.rs:214:25-214:29)
  1: _51 = move ((_47 as Some).0: &mut <Self as core::iter::Iterator>::Item)
    SourceInfo(src/seq/iterator.rs:214:25-214:29)
  2: StorageLive(_52)
    SourceInfo(src/seq/iterator.rs:215:25-215:29)
  3: _52 = move _37
    SourceInfo(src/seq/iterator.rs:215:25-215:29)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:215:17-215:22)
      kind: drop((*_51)) -> [return: bb32, unwind: bb33]
  }
  preds [bb30]
  succs [bb32, bb33]

bb32
  0: (*_51) = move _52
    SourceInfo(src/seq/iterator.rs:215:17-215:22)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:215:28-215:29)
      kind: drop(_52) -> [return: bb34, unwind: bb44]
  }
  preds [bb31]
  succs [bb34, bb44]

bb33
  0: (*_51) = move _52
    SourceInfo(src/seq/iterator.rs:215:17-215:22)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:215:28-215:29)
      kind: drop(_52) -> [return: bb44, unwind terminate(cleanup)]
  }
  preds [bb31]
  succs [bb44]

bb34
  0: StorageDead(_52)
    SourceInfo(src/seq/iterator.rs:215:28-215:29)
  1: _30 = const ()
    SourceInfo(src/seq/iterator.rs:214:48-216:14)
  2: StorageDead(_51)
    SourceInfo(src/seq/iterator.rs:216:13-216:14)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:214:13-216:14)
      kind: goto -> bb36
  }
  preds [bb32]
  succs [bb36]

bb35
  0: _30 = const ()
    SourceInfo(src/seq/iterator.rs:216:14-216:14)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:214:13-216:14)
      kind: goto -> bb36
  }
  preds [bb29, bb30]
  succs [bb36]

bb36
  0: StorageDead(_38)
    SourceInfo(src/seq/iterator.rs:217:9-217:10)
  1: StorageDead(_47)
    SourceInfo(src/seq/iterator.rs:217:9-217:10)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:217:9-217:10)
      kind: drop(_37) -> [return: bb37, unwind: bb45]
  }
  preds [bb34, bb35]
  succs [bb37, bb45]

bb37
  0: StorageDead(_37)
    SourceInfo(src/seq/iterator.rs:217:9-217:10)
  1: StorageDead(_36)
    SourceInfo(src/seq/iterator.rs:217:9-217:10)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:217:9-217:10)
      kind: drop(_31) -> [return: bb38, unwind: bb46]
  }
  preds [bb36]
  succs [bb38, bb46]

bb38
  0: StorageDead(_33)
    SourceInfo(src/seq/iterator.rs:217:9-217:10)
  1: StorageDead(_31)
    SourceInfo(src/seq/iterator.rs:217:9-217:10)
  2: StorageDead(_30)
    SourceInfo(src/seq/iterator.rs:217:9-217:10)
  3: _8 = const ()
    SourceInfo(src/seq/iterator.rs:212:9-217:10)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:212:9-217:10)
      kind: goto -> bb19
  }
  preds [bb37]
  succs [bb19]

bb39
  0: StorageDead(_33)
    SourceInfo(src/seq/iterator.rs:217:9-217:10)
  1: StorageDead(_31)
    SourceInfo(src/seq/iterator.rs:217:9-217:10)
  2: StorageDead(_30)
    SourceInfo(src/seq/iterator.rs:217:9-217:10)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:217:9-217:10)
      kind: drop(_29) -> [return: bb40, unwind: bb47]
  }
  preds [bb25]
  succs [bb40, bb47]

bb40
  0: StorageDead(_29)
    SourceInfo(src/seq/iterator.rs:217:9-217:10)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:217:9-217:10)
      kind: drop(_26) -> [return: bb41, unwind: bb53]
  }
  preds [bb39]
  succs [bb41, bb53]

bb41
  0: StorageDead(_26)
    SourceInfo(src/seq/iterator.rs:217:9-217:10)
  1: StorageDead(_25)
    SourceInfo(src/seq/iterator.rs:217:9-217:10)
  2: _0 = _6
    SourceInfo(src/seq/iterator.rs:218:9-218:12)
  3: StorageDead(_6)
    SourceInfo(src/seq/iterator.rs:219:5-219:6)
  4: StorageDead(_4)
    SourceInfo(src/seq/iterator.rs:219:5-219:6)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:219:5-219:6)
      kind: drop(_1) -> [return: bb43, unwind: bb54]
  }
  preds [bb40]
  succs [bb43, bb54]

bb42
  0: StorageDead(_12)
    SourceInfo(src/seq/iterator.rs:209:9-209:10)
  1: StorageDead(_9)
    SourceInfo(src/seq/iterator.rs:209:9-209:10)
  2: StorageDead(_7)
    SourceInfo(src/seq/iterator.rs:209:9-209:10)
  3: StorageDead(_6)
    SourceInfo(src/seq/iterator.rs:219:5-219:6)
  4: StorageDead(_4)
    SourceInfo(src/seq/iterator.rs:219:5-219:6)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:219:5-219:6)
      kind: drop(_1) -> [return: bb43, unwind: bb54]
  }
  preds [bb13]
  succs [bb43, bb54]

bb43
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:219:6-219:6)
      kind: return
  }
  preds [bb41, bb42]
  succs []

bb44
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:217:9-217:10)
      kind: drop(_37) -> [return: bb45, unwind terminate(cleanup)]
  }
  preds [bb24, bb26, bb27, bb28, bb32, bb33]
  succs [bb45]

bb45
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:217:9-217:10)
      kind: drop(_31) -> [return: bb46, unwind terminate(cleanup)]
  }
  preds [bb36, bb44]
  succs [bb46]

bb46
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:217:9-217:10)
      kind: drop(_29) -> [return: bb47, unwind terminate(cleanup)]
  }
  preds [bb19, bb20, bb25, bb37, bb45]
  succs [bb47]

bb47
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:217:9-217:10)
      kind: drop(_26) -> [return: bb53, unwind terminate(cleanup)]
  }
  preds [bb39, bb46]
  succs [bb53]

bb48
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:212:41-212:42)
      kind: drop(_27) -> [return: bb53, unwind terminate(cleanup)]
  }
  preds [bb17]
  succs [bb53]

bb49
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:212:41-212:42)
      kind: drop(_28) -> [return: bb53, unwind terminate(cleanup)]
  }
  preds [bb16]
  succs [bb53]

bb50
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:203:31-203:32)
      kind: drop(_16) -> [return: bb51, unwind terminate(cleanup)]
  }
  preds [bb7, bb10]
  succs [bb51]

bb51
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:205:13-205:14)
      kind: drop(_15) -> [return: bb52, unwind terminate(cleanup)]
  }
  preds [bb9, bb11, bb50]
  succs [bb52]

bb52
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:209:9-209:10)
      kind: drop(_12) -> [return: bb53, unwind terminate(cleanup)]
  }
  preds [bb12, bb51]
  succs [bb53]

bb53
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:219:5-219:6)
      kind: drop(_1) -> [return: bb54, unwind terminate(cleanup)]
  }
  preds [bb0, bb2, bb4, bb13, bb14, bb40, bb47, bb48, bb49, bb52]
  succs [bb54]

bb54
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:195:5-219:6)
      kind: resume
  }
  preds [bb41, bb42, bb53]
  succs []

