bb0
  0: StorageLive(_2)
    SourceInfo(src/rngs/small.rs:95:13-95:17)
  1: StorageLive(_3)
    SourceInfo(src/rngs/small.rs:95:20-95:45)
  2: StorageLive(_4)
    SourceInfo(src/rngs/small.rs:95:20-95:34)
  3: StorageLive(_5)
    SourceInfo(src/rngs/small.rs:95:20-95:34)
  4: StorageLive(_6)
    SourceInfo(src/rngs/small.rs:95:26-95:33)
  5: StorageLive(_7)
    SourceInfo(src/rngs/small.rs:95:22-95:26)
  6: _7 = &_1
    SourceInfo(src/rngs/small.rs:95:22-95:26)
  7: StorageLive(_8)
    SourceInfo(src/rngs/small.rs:95:27-95:32)
  8: _8 = core::ops::RangeTo::<usize> { end: const <rngs::small::SmallRng as rand_core::SeedableRng>::from_seed::LEN }
    SourceInfo(src/rngs/small.rs:95:27-95:32)
  Terminator {
      source_info: SourceInfo(src/rngs/small.rs:95:26-95:33)
      kind: _6 = <[u8; 32] as core::ops::Index<core::ops::RangeTo<usize>>>::index(move _7, move _8) -> [return: bb1, unwind: bb5]
  }
  preds []
  succs [bb1, bb5]

bb1
  0: StorageDead(_8)
    SourceInfo(src/rngs/small.rs:95:32-95:33)
  1: StorageDead(_7)
    SourceInfo(src/rngs/small.rs:95:32-95:33)
  2: _5 = &(*_6)
    SourceInfo(src/rngs/small.rs:95:20-95:34)
  3: _4 = &(*_5)
    SourceInfo(src/rngs/small.rs:95:20-95:34)
  Terminator {
      source_info: SourceInfo(src/rngs/small.rs:95:20-95:45)
      kind: _3 = <&[u8] as core::convert::TryInto<[u8; 32]>>::try_into(move _4) -> [return: bb2, unwind: bb5]
  }
  preds [bb0]
  succs [bb2, bb5]

bb2
  0: StorageDead(_4)
    SourceInfo(src/rngs/small.rs:95:44-95:45)
  Terminator {
      source_info: SourceInfo(src/rngs/small.rs:95:20-95:54)
      kind: _2 = core::result::Result::<[u8; 32], core::array::TryFromSliceError>::unwrap(move _3) -> [return: bb3, unwind: bb5]
  }
  preds [bb1]
  succs [bb3, bb5]

bb3
  0: StorageDead(_3)
    SourceInfo(src/rngs/small.rs:95:53-95:54)
  1: FakeRead(ForLet(None), _2)
    SourceInfo(src/rngs/small.rs:95:13-95:17)
  2: StorageDead(_6)
    SourceInfo(src/rngs/small.rs:95:54-95:55)
  3: StorageDead(_5)
    SourceInfo(src/rngs/small.rs:95:54-95:55)
  4: StorageLive(_9)
    SourceInfo(src/rngs/small.rs:96:18-96:38)
  5: StorageLive(_10)
    SourceInfo(src/rngs/small.rs:96:33-96:37)
  6: _10 = _2
    SourceInfo(src/rngs/small.rs:96:33-96:37)
  Terminator {
      source_info: SourceInfo(src/rngs/small.rs:96:18-96:38)
      kind: _9 = <rngs::xoshiro256plusplus::Xoshiro256PlusPlus as rand_core::SeedableRng>::from_seed(move _10) -> [return: bb4, unwind: bb5]
  }
  preds [bb2]
  succs [bb4, bb5]

bb4
  0: StorageDead(_10)
    SourceInfo(src/rngs/small.rs:96:37-96:38)
  1: _0 = rngs::small::SmallRng(move _9)
    SourceInfo(src/rngs/small.rs:96:9-96:39)
  2: StorageDead(_9)
    SourceInfo(src/rngs/small.rs:96:38-96:39)
  3: StorageDead(_2)
    SourceInfo(src/rngs/small.rs:97:5-97:6)
  Terminator {
      source_info: SourceInfo(src/rngs/small.rs:97:6-97:6)
      kind: return
  }
  preds [bb3]
  succs []

bb5
  Terminator {
      source_info: SourceInfo(src/rngs/small.rs:91:5-97:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3]
  succs []

