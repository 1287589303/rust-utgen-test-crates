bb0
  0: StorageLive(_3)
    SourceInfo(src/distr/other.rs:115:13-115:18)
  1: StorageLive(_4)
    SourceInfo(src/distr/other.rs:115:21-115:54)
  Terminator {
      source_info: SourceInfo(src/distr/other.rs:115:21-115:54)
      kind: _4 = distr::uniform::Uniform::<u32>::new::<u32, u32>(const distr::other::<impl distr::distribution::Distribution<char> for distr::StandardUniform>::sample::GAP_SIZE, const 1114112_u32) -> [return: bb1, unwind: bb9]
  }
  preds []
  succs [bb1, bb9]

bb1
  Terminator {
      source_info: SourceInfo(src/distr/other.rs:115:21-115:63)
      kind: _3 = core::result::Result::<distr::uniform::Uniform<u32>, distr::uniform::Error>::unwrap(move _4) -> [return: bb2, unwind: bb9]
  }
  preds [bb0]
  succs [bb2, bb9]

bb2
  0: StorageDead(_4)
    SourceInfo(src/distr/other.rs:115:62-115:63)
  1: FakeRead(ForLet(None), _3)
    SourceInfo(src/distr/other.rs:115:13-115:18)
  2: StorageLive(_5)
    SourceInfo(src/distr/other.rs:117:13-117:18)
  3: StorageLive(_6)
    SourceInfo(src/distr/other.rs:117:21-117:26)
  4: _6 = &_3
    SourceInfo(src/distr/other.rs:117:21-117:26)
  5: StorageLive(_7)
    SourceInfo(src/distr/other.rs:117:34-117:37)
  6: _7 = &mut (*_2)
    SourceInfo(src/distr/other.rs:117:34-117:37)
  Terminator {
      source_info: SourceInfo(src/distr/other.rs:117:21-117:38)
      kind: _5 = <distr::uniform::Uniform<u32> as distr::distribution::Distribution<u32>>::sample::<R>(move _6, move _7) -> [return: bb3, unwind: bb9]
  }
  preds [bb1]
  succs [bb3, bb9]

bb3
  0: StorageDead(_7)
    SourceInfo(src/distr/other.rs:117:37-117:38)
  1: StorageDead(_6)
    SourceInfo(src/distr/other.rs:117:37-117:38)
  2: FakeRead(ForLet(None), _5)
    SourceInfo(src/distr/other.rs:117:13-117:18)
  3: StorageLive(_8)
    SourceInfo(src/distr/other.rs:118:9-120:10)
  4: StorageLive(_9)
    SourceInfo(src/distr/other.rs:118:12-118:23)
  5: StorageLive(_10)
    SourceInfo(src/distr/other.rs:118:12-118:13)
  6: _10 = _5
    SourceInfo(src/distr/other.rs:118:12-118:13)
  7: _9 = Le(move _10, const 57343_u32)
    SourceInfo(src/distr/other.rs:118:12-118:23)
  Terminator {
      source_info: SourceInfo(src/distr/other.rs:118:12-118:23)
      kind: switchInt(move _9) -> [0: bb6, otherwise: bb4]
  }
  preds [bb2]
  succs [bb4, bb6]

bb4
  0: StorageDead(_10)
    SourceInfo(src/distr/other.rs:118:22-118:23)
  1: _11 = SubWithOverflow(_5, const distr::other::<impl distr::distribution::Distribution<char> for distr::StandardUniform>::sample::GAP_SIZE)
    SourceInfo(src/distr/other.rs:119:13-119:26)
  Terminator {
      source_info: SourceInfo(src/distr/other.rs:119:13-119:26)
      kind: assert(!move (_11.1: bool), "attempt to compute `{} - {}`, which would overflow", _5, const distr::other::<impl distr::distribution::Distribution<char> for distr::StandardUniform>::sample::GAP_SIZE) -> [success: bb5, unwind: bb9]
  }
  preds [bb3]
  succs [bb5, bb9]

bb5
  0: _5 = move (_11.0: u32)
    SourceInfo(src/distr/other.rs:119:13-119:26)
  1: _8 = const ()
    SourceInfo(src/distr/other.rs:118:24-120:10)
  Terminator {
      source_info: SourceInfo(src/distr/other.rs:118:9-120:10)
      kind: goto -> bb7
  }
  preds [bb4]
  succs [bb7]

bb6
  0: StorageDead(_10)
    SourceInfo(src/distr/other.rs:118:22-118:23)
  1: _8 = const ()
    SourceInfo(src/distr/other.rs:120:10-120:10)
  Terminator {
      source_info: SourceInfo(src/distr/other.rs:118:9-120:10)
      kind: goto -> bb7
  }
  preds [bb3]
  succs [bb7]

bb7
  0: StorageDead(_9)
    SourceInfo(src/distr/other.rs:120:9-120:10)
  1: StorageDead(_8)
    SourceInfo(src/distr/other.rs:120:9-120:10)
  2: StorageLive(_12)
    SourceInfo(src/distr/other.rs:121:43-121:44)
  3: _12 = _5
    SourceInfo(src/distr/other.rs:121:43-121:44)
  Terminator {
      source_info: SourceInfo(src/distr/other.rs:121:18-121:45)
      kind: _0 = core::char::from_u32_unchecked(move _12) -> [return: bb8, unwind: bb9]
  }
  preds [bb5, bb6]
  succs [bb8, bb9]

bb8
  0: StorageDead(_12)
    SourceInfo(src/distr/other.rs:121:44-121:45)
  1: StorageDead(_5)
    SourceInfo(src/distr/other.rs:122:5-122:6)
  2: StorageDead(_3)
    SourceInfo(src/distr/other.rs:122:5-122:6)
  Terminator {
      source_info: SourceInfo(src/distr/other.rs:122:6-122:6)
      kind: return
  }
  preds [bb7]
  succs []

bb9
  Terminator {
      source_info: SourceInfo(src/distr/other.rs:106:5-122:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb4, bb7]
  succs []

