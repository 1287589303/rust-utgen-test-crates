bb0
  0: StorageLive(_3)
    SourceInfo(src/distr/bernoulli.rs:157:9-159:10)
  1: StorageLive(_4)
    SourceInfo(src/distr/bernoulli.rs:157:12-157:37)
  2: StorageLive(_5)
    SourceInfo(src/distr/bernoulli.rs:157:12-157:22)
  3: _5 = ((*_1).0: u64)
    SourceInfo(src/distr/bernoulli.rs:157:12-157:22)
  4: _4 = Eq(move _5, const distr::bernoulli::ALWAYS_TRUE)
    SourceInfo(src/distr/bernoulli.rs:157:12-157:37)
  Terminator {
      source_info: SourceInfo(src/distr/bernoulli.rs:157:12-157:37)
      kind: switchInt(move _4) -> [0: bb2, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2]

bb1
  0: StorageDead(_5)
    SourceInfo(src/distr/bernoulli.rs:157:36-157:37)
  1: _0 = const true
    SourceInfo(src/distr/bernoulli.rs:158:20-158:24)
  2: StorageDead(_4)
    SourceInfo(src/distr/bernoulli.rs:159:9-159:10)
  3: StorageDead(_3)
    SourceInfo(src/distr/bernoulli.rs:159:9-159:10)
  Terminator {
      source_info: SourceInfo(src/distr/bernoulli.rs:162:6-162:6)
      kind: goto -> bb4
  }
  preds [bb0]
  succs [bb4]

bb2
  0: StorageDead(_5)
    SourceInfo(src/distr/bernoulli.rs:157:36-157:37)
  1: _3 = const ()
    SourceInfo(src/distr/bernoulli.rs:159:10-159:10)
  2: StorageDead(_4)
    SourceInfo(src/distr/bernoulli.rs:159:9-159:10)
  3: StorageDead(_3)
    SourceInfo(src/distr/bernoulli.rs:159:9-159:10)
  4: StorageLive(_7)
    SourceInfo(src/distr/bernoulli.rs:160:13-160:14)
  5: StorageLive(_8)
    SourceInfo(src/distr/bernoulli.rs:160:22-160:25)
  6: _8 = &mut (*_2)
    SourceInfo(src/distr/bernoulli.rs:160:22-160:25)
  Terminator {
      source_info: SourceInfo(src/distr/bernoulli.rs:160:22-160:34)
      kind: _7 = <R as rng::Rng>::random::<u64>(move _8) -> [return: bb3, unwind: bb5]
  }
  preds [bb0]
  succs [bb3, bb5]

bb3
  0: StorageDead(_8)
    SourceInfo(src/distr/bernoulli.rs:160:33-160:34)
  1: FakeRead(ForLet(None), _7)
    SourceInfo(src/distr/bernoulli.rs:160:13-160:14)
  2: AscribeUserType(_7, o, UserTypeProjection { base: UserType(1), projs: [] })
    SourceInfo(src/distr/bernoulli.rs:160:16-160:19)
  3: StorageLive(_9)
    SourceInfo(src/distr/bernoulli.rs:161:9-161:10)
  4: _9 = _7
    SourceInfo(src/distr/bernoulli.rs:161:9-161:10)
  5: StorageLive(_10)
    SourceInfo(src/distr/bernoulli.rs:161:13-161:23)
  6: _10 = ((*_1).0: u64)
    SourceInfo(src/distr/bernoulli.rs:161:13-161:23)
  7: _0 = Lt(move _9, move _10)
    SourceInfo(src/distr/bernoulli.rs:161:9-161:23)
  8: StorageDead(_10)
    SourceInfo(src/distr/bernoulli.rs:161:22-161:23)
  9: StorageDead(_9)
    SourceInfo(src/distr/bernoulli.rs:161:22-161:23)
  10: StorageDead(_7)
    SourceInfo(src/distr/bernoulli.rs:162:5-162:6)
  Terminator {
      source_info: SourceInfo(src/distr/bernoulli.rs:162:6-162:6)
      kind: goto -> bb4
  }
  preds [bb2]
  succs [bb4]

bb4
  Terminator {
      source_info: SourceInfo(src/distr/bernoulli.rs:162:6-162:6)
      kind: return
  }
  preds [bb1, bb3]
  succs []

bb5
  Terminator {
      source_info: SourceInfo(src/distr/bernoulli.rs:155:5-162:6)
      kind: resume
  }
  preds [bb2]
  succs []

