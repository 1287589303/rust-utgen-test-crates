bb0
  0: PlaceMention(_1)
    SourceInfo(src/seq/index.rs:89:15-89:19)
  1: _2 = discriminant((*_1))
    SourceInfo(src/seq/index.rs:89:15-89:19)
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:89:9-89:19)
      kind: switchInt(move _2) -> [0: bb2, 1: bb3, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2, bb3]

bb1
  0: FakeRead(ForMatchedPlace(None), _1)
    SourceInfo(src/seq/index.rs:89:15-89:19)
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:89:15-89:19)
      kind: unreachable
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:90:13-90:29)
      kind: falseEdge -> [real: bb4, imaginary: bb3]
  }
  preds [bb0]
  succs [bb3, bb4]

bb3
  0: StorageLive(_8)
    SourceInfo(src/seq/index.rs:92:27-92:28)
  1: _8 = &(((*_1) as U64).0: alloc::vec::Vec<u64>)
    SourceInfo(src/seq/index.rs:92:27-92:28)
  2: StorageLive(_9)
    SourceInfo(src/seq/index.rs:92:51-92:59)
  3: StorageLive(_10)
    SourceInfo(src/seq/index.rs:92:51-92:52)
  4: StorageLive(_11)
    SourceInfo(src/seq/index.rs:92:51-92:59)
  5: StorageLive(_12)
    SourceInfo(src/seq/index.rs:92:51-92:52)
  6: _12 = &(*_8)
    SourceInfo(src/seq/index.rs:92:51-92:52)
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:92:51-92:59)
      kind: _11 = <alloc::vec::Vec<u64> as core::ops::Deref>::deref(move _12) -> [return: bb7, unwind: bb10]
  }
  preds [bb0, bb2]
  succs [bb7, bb10]

bb4
  0: StorageLive(_3)
    SourceInfo(src/seq/index.rs:90:27-90:28)
  1: _3 = &(((*_1) as U32).0: alloc::vec::Vec<u32>)
    SourceInfo(src/seq/index.rs:90:27-90:28)
  2: StorageLive(_4)
    SourceInfo(src/seq/index.rs:90:51-90:59)
  3: StorageLive(_5)
    SourceInfo(src/seq/index.rs:90:51-90:52)
  4: StorageLive(_6)
    SourceInfo(src/seq/index.rs:90:51-90:59)
  5: StorageLive(_7)
    SourceInfo(src/seq/index.rs:90:51-90:52)
  6: _7 = &(*_3)
    SourceInfo(src/seq/index.rs:90:51-90:52)
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:90:51-90:59)
      kind: _6 = <alloc::vec::Vec<u32> as core::ops::Deref>::deref(move _7) -> [return: bb5, unwind: bb10]
  }
  preds [bb2]
  succs [bb5, bb10]

bb5
  0: _5 = &(*_6)
    SourceInfo(src/seq/index.rs:90:51-90:52)
  1: StorageDead(_7)
    SourceInfo(src/seq/index.rs:90:51-90:52)
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:90:51-90:59)
      kind: _4 = core::slice::<impl [u32]>::iter(move _5) -> [return: bb6, unwind: bb10]
  }
  preds [bb4]
  succs [bb6, bb10]

bb6
  0: StorageDead(_5)
    SourceInfo(src/seq/index.rs:90:58-90:59)
  1: _0 = seq::index_::IndexVecIter::<'_>::U32(move _4)
    SourceInfo(src/seq/index.rs:90:33-90:60)
  2: StorageDead(_4)
    SourceInfo(src/seq/index.rs:90:59-90:60)
  3: StorageDead(_6)
    SourceInfo(src/seq/index.rs:90:59-90:60)
  4: StorageDead(_3)
    SourceInfo(src/seq/index.rs:90:59-90:60)
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:90:59-90:60)
      kind: goto -> bb9
  }
  preds [bb5]
  succs [bb9]

bb7
  0: _10 = &(*_11)
    SourceInfo(src/seq/index.rs:92:51-92:52)
  1: StorageDead(_12)
    SourceInfo(src/seq/index.rs:92:51-92:52)
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:92:51-92:59)
      kind: _9 = core::slice::<impl [u64]>::iter(move _10) -> [return: bb8, unwind: bb10]
  }
  preds [bb3]
  succs [bb8, bb10]

bb8
  0: StorageDead(_10)
    SourceInfo(src/seq/index.rs:92:58-92:59)
  1: _0 = seq::index_::IndexVecIter::<'_>::U64(move _9)
    SourceInfo(src/seq/index.rs:92:33-92:60)
  2: StorageDead(_9)
    SourceInfo(src/seq/index.rs:92:59-92:60)
  3: StorageDead(_11)
    SourceInfo(src/seq/index.rs:92:59-92:60)
  4: StorageDead(_8)
    SourceInfo(src/seq/index.rs:92:59-92:60)
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:92:59-92:60)
      kind: goto -> bb9
  }
  preds [bb7]
  succs [bb9]

bb9
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:94:6-94:6)
      kind: return
  }
  preds [bb6, bb8]
  succs []

bb10
  Terminator {
      source_info: SourceInfo(src/seq/index.rs:88:5-94:6)
      kind: resume
  }
  preds [bb3, bb4, bb5, bb7]
  succs []

