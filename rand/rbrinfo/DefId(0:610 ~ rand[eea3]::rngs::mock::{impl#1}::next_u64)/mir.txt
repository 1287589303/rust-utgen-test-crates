bb0
  0: StorageLive(_2)
    SourceInfo(src/rngs/mock.rs:67:13-67:16)
  1: _2 = ((*_1).0: u64)
    SourceInfo(src/rngs/mock.rs:67:19-67:25)
  2: FakeRead(ForLet(None), _2)
    SourceInfo(src/rngs/mock.rs:67:13-67:16)
  3: StorageLive(_3)
    SourceInfo(src/rngs/mock.rs:68:18-68:45)
  4: StorageLive(_4)
    SourceInfo(src/rngs/mock.rs:68:18-68:24)
  5: _4 = ((*_1).0: u64)
    SourceInfo(src/rngs/mock.rs:68:18-68:24)
  6: StorageLive(_5)
    SourceInfo(src/rngs/mock.rs:68:38-68:44)
  7: _5 = ((*_1).1: u64)
    SourceInfo(src/rngs/mock.rs:68:38-68:44)
  Terminator {
      source_info: SourceInfo(src/rngs/mock.rs:68:18-68:45)
      kind: _3 = core::num::<impl u64>::wrapping_add(move _4, move _5) -> [return: bb1, unwind: bb2]
  }
  preds []
  succs [bb1, bb2]

bb1
  0: StorageDead(_5)
    SourceInfo(src/rngs/mock.rs:68:44-68:45)
  1: StorageDead(_4)
    SourceInfo(src/rngs/mock.rs:68:44-68:45)
  2: ((*_1).0: u64) = move _3
    SourceInfo(src/rngs/mock.rs:68:9-68:45)
  3: StorageDead(_3)
    SourceInfo(src/rngs/mock.rs:68:44-68:45)
  4: _0 = _2
    SourceInfo(src/rngs/mock.rs:69:9-69:12)
  5: StorageDead(_2)
    SourceInfo(src/rngs/mock.rs:70:5-70:6)
  Terminator {
      source_info: SourceInfo(src/rngs/mock.rs:70:6-70:6)
      kind: return
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(src/rngs/mock.rs:66:5-70:6)
      kind: resume
  }
  preds [bb0]
  succs []

