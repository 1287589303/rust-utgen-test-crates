bb0
  0: StorageLive(_4)
    SourceInfo(src/seq/slice.rs:296:13-296:18)
  1: StorageLive(_5)
    SourceInfo(src/seq/slice.rs:296:21-296:87)
  2: StorageLive(_6)
    SourceInfo(src/seq/slice.rs:296:21-296:86)
  3: StorageLive(_7)
    SourceInfo(src/seq/slice.rs:296:40-296:85)
  4: StorageLive(_8)
    SourceInfo(src/seq/slice.rs:296:40-296:55)
  5: StorageLive(_9)
    SourceInfo(src/seq/slice.rs:296:44-296:54)
  6: StorageLive(_10)
    SourceInfo(src/seq/slice.rs:296:44-296:48)
  7: _10 = &(*_1)
    SourceInfo(src/seq/slice.rs:296:44-296:48)
  Terminator {
      source_info: SourceInfo(src/seq/slice.rs:296:44-296:54)
      kind: _9 = <Self as seq::slice::IndexedRandom>::len(move _10) -> [return: bb1, unwind: bb20]
  }
  preds []
  succs [bb1, bb20]

bb1
  0: StorageDead(_10)
    SourceInfo(src/seq/slice.rs:296:53-296:54)
  1: _8 = core::ops::Range::<usize> { start: const 0_usize, end: move _9 }
    SourceInfo(src/seq/slice.rs:296:40-296:55)
  2: StorageDead(_9)
    SourceInfo(src/seq/slice.rs:296:54-296:55)
  3: StorageLive(_11)
    SourceInfo(src/seq/slice.rs:296:60-296:84)
  4: StorageLive(_12)
    SourceInfo(src/seq/slice.rs:296:60-296:84)
  5: _12 = &_3
    SourceInfo(src/seq/slice.rs:296:60-296:84)
  6: StorageLive(_13)
    SourceInfo(src/seq/slice.rs:296:60-296:84)
  7: _13 = &(*_1)
    SourceInfo(src/seq/slice.rs:296:60-296:84)
  8: _11 = {closure@src/seq/slice.rs:296:60: 296:65} { weight: move _12, self: move _13 }
    SourceInfo(src/seq/slice.rs:296:60-296:84)
  9: StorageDead(_13)
    SourceInfo(src/seq/slice.rs:296:64-296:65)
  10: StorageDead(_12)
    SourceInfo(src/seq/slice.rs:296:64-296:65)
  Terminator {
      source_info: SourceInfo(src/seq/slice.rs:296:40-296:85)
      kind: _7 = <core::ops::Range<usize> as core::iter::Iterator>::map::<B, {closure@src/seq/slice.rs:296:60: 296:65}>(move _8, move _11) -> [return: bb2, unwind: bb20]
  }
  preds [bb0]
  succs [bb2, bb20]

bb2
  0: StorageDead(_11)
    SourceInfo(src/seq/slice.rs:296:84-296:85)
  1: StorageDead(_8)
    SourceInfo(src/seq/slice.rs:296:84-296:85)
  Terminator {
      source_info: SourceInfo(src/seq/slice.rs:296:21-296:86)
      kind: _6 = distr::weighted::weighted_index::WeightedIndex::<X>::new::<core::iter::Map<core::ops::Range<usize>, {closure@src/seq/slice.rs:296:60: 296:65}>>(move _7) -> [return: bb3, unwind: bb20]
  }
  preds [bb1]
  succs [bb3, bb20]

bb3
  0: StorageDead(_7)
    SourceInfo(src/seq/slice.rs:296:85-296:86)
  Terminator {
      source_info: SourceInfo(src/seq/slice.rs:296:21-296:87)
      kind: _5 = <core::result::Result<distr::weighted::weighted_index::WeightedIndex<X>, distr::weighted::Error> as core::ops::Try>::branch(move _6) -> [return: bb4, unwind: bb19]
  }
  preds [bb2]
  succs [bb4, bb19]

bb4
  0: StorageDead(_6)
    SourceInfo(src/seq/slice.rs:296:86-296:87)
  1: PlaceMention(_5)
    SourceInfo(src/seq/slice.rs:296:21-296:87)
  2: _14 = discriminant(_5)
    SourceInfo(src/seq/slice.rs:296:21-296:87)
  Terminator {
      source_info: SourceInfo(src/seq/slice.rs:296:21-296:87)
      kind: switchInt(move _14) -> [0: bb7, 1: bb6, otherwise: bb5]
  }
  preds [bb3]
  succs [bb5, bb6, bb7]

bb5
  0: FakeRead(ForMatchedPlace(None), _5)
    SourceInfo(src/seq/slice.rs:296:21-296:87)
  Terminator {
      source_info: SourceInfo(src/seq/slice.rs:296:21-296:87)
      kind: unreachable
  }
  preds [bb4]
  succs []

bb6
  Terminator {
      source_info: SourceInfo(src/seq/slice.rs:296:86-296:87)
      kind: falseEdge -> [real: bb8, imaginary: bb7]
  }
  preds [bb4]
  succs [bb7, bb8]

bb7
  0: StorageLive(_18)
    SourceInfo(src/seq/slice.rs:296:21-296:87)
  1: _18 = move ((_5 as Continue).0: distr::weighted::weighted_index::WeightedIndex<X>)
    SourceInfo(src/seq/slice.rs:296:21-296:87)
  2: _4 = move _18
    SourceInfo(src/seq/slice.rs:296:21-296:87)
  Terminator {
      source_info: SourceInfo(src/seq/slice.rs:296:86-296:87)
      kind: drop(_18) -> [return: bb10, unwind: bb18]
  }
  preds [bb4, bb6]
  succs [bb10, bb18]

bb8
  0: StorageLive(_15)
    SourceInfo(src/seq/slice.rs:296:86-296:87)
  1: _15 = ((_5 as Break).0: core::result::Result<core::convert::Infallible, distr::weighted::Error>)
    SourceInfo(src/seq/slice.rs:296:86-296:87)
  2: StorageLive(_17)
    SourceInfo(src/seq/slice.rs:296:86-296:87)
  3: _17 = _15
    SourceInfo(src/seq/slice.rs:296:86-296:87)
  Terminator {
      source_info: SourceInfo(src/seq/slice.rs:296:21-296:87)
      kind: _0 = <core::result::Result<&mut <Self as core::ops::Index<usize>>::Output, distr::weighted::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, distr::weighted::Error>>>::from_residual(move _17) -> [return: bb9, unwind: bb18]
  }
  preds [bb6]
  succs [bb9, bb18]

bb9
  0: StorageDead(_17)
    SourceInfo(src/seq/slice.rs:296:86-296:87)
  1: StorageDead(_15)
    SourceInfo(src/seq/slice.rs:296:86-296:87)
  Terminator {
      source_info: SourceInfo(src/seq/slice.rs:296:87-296:88)
      kind: drop(_5) -> [return: bb15, unwind: bb20]
  }
  preds [bb8]
  succs [bb15, bb20]

bb10
  0: StorageDead(_18)
    SourceInfo(src/seq/slice.rs:296:86-296:87)
  1: FakeRead(ForLet(None), _4)
    SourceInfo(src/seq/slice.rs:296:13-296:18)
  Terminator {
      source_info: SourceInfo(src/seq/slice.rs:296:87-296:88)
      kind: drop(_5) -> [return: bb11, unwind: bb17]
  }
  preds [bb7]
  succs [bb11, bb17]

bb11
  0: StorageDead(_5)
    SourceInfo(src/seq/slice.rs:296:87-296:88)
  1: StorageLive(_19)
    SourceInfo(src/seq/slice.rs:297:13-297:18)
  2: StorageLive(_20)
    SourceInfo(src/seq/slice.rs:297:21-297:26)
  3: _20 = &_4
    SourceInfo(src/seq/slice.rs:297:21-297:26)
  4: StorageLive(_21)
    SourceInfo(src/seq/slice.rs:297:34-297:37)
  5: _21 = &mut (*_2)
    SourceInfo(src/seq/slice.rs:297:34-297:37)
  Terminator {
      source_info: SourceInfo(src/seq/slice.rs:297:21-297:38)
      kind: _19 = <distr::weighted::weighted_index::WeightedIndex<X> as distr::distribution::Distribution<usize>>::sample::<R>(move _20, move _21) -> [return: bb12, unwind: bb17]
  }
  preds [bb10]
  succs [bb12, bb17]

bb12
  0: StorageDead(_21)
    SourceInfo(src/seq/slice.rs:297:37-297:38)
  1: StorageDead(_20)
    SourceInfo(src/seq/slice.rs:297:37-297:38)
  2: FakeRead(ForLet(None), _19)
    SourceInfo(src/seq/slice.rs:297:13-297:18)
  3: StorageLive(_22)
    SourceInfo(src/seq/slice.rs:298:12-298:28)
  4: StorageLive(_23)
    SourceInfo(src/seq/slice.rs:298:12-298:28)
  5: StorageLive(_24)
    SourceInfo(src/seq/slice.rs:298:21-298:28)
  6: StorageLive(_25)
    SourceInfo(src/seq/slice.rs:298:17-298:21)
  7: _25 = &mut (*_1)
    SourceInfo(src/seq/slice.rs:298:17-298:21)
  8: StorageLive(_26)
    SourceInfo(src/seq/slice.rs:298:22-298:27)
  9: _26 = _19
    SourceInfo(src/seq/slice.rs:298:22-298:27)
  Terminator {
      source_info: SourceInfo(src/seq/slice.rs:298:21-298:28)
      kind: _24 = <Self as core::ops::IndexMut<usize>>::index_mut(move _25, move _26) -> [return: bb13, unwind: bb17]
  }
  preds [bb11]
  succs [bb13, bb17]

bb13
  0: StorageDead(_26)
    SourceInfo(src/seq/slice.rs:298:27-298:28)
  1: StorageDead(_25)
    SourceInfo(src/seq/slice.rs:298:27-298:28)
  2: _23 = &mut (*_24)
    SourceInfo(src/seq/slice.rs:298:12-298:28)
  3: _22 = &mut (*_23)
    SourceInfo(src/seq/slice.rs:298:12-298:28)
  4: _0 = core::result::Result::<&mut <Self as core::ops::Index<usize>>::Output, distr::weighted::Error>::Ok(move _22)
    SourceInfo(src/seq/slice.rs:298:9-298:29)
  5: StorageDead(_22)
    SourceInfo(src/seq/slice.rs:298:28-298:29)
  6: StorageDead(_19)
    SourceInfo(src/seq/slice.rs:299:5-299:6)
  Terminator {
      source_info: SourceInfo(src/seq/slice.rs:299:5-299:6)
      kind: drop(_4) -> [return: bb14, unwind: bb20]
  }
  preds [bb12]
  succs [bb14, bb20]

bb14
  0: StorageDead(_4)
    SourceInfo(src/seq/slice.rs:299:5-299:6)
  1: StorageDead(_24)
    SourceInfo(src/seq/slice.rs:299:5-299:6)
  2: StorageDead(_23)
    SourceInfo(src/seq/slice.rs:299:5-299:6)
  Terminator {
      source_info: SourceInfo(src/seq/slice.rs:299:5-299:6)
      kind: drop(_3) -> [return: bb16, unwind: bb21]
  }
  preds [bb13]
  succs [bb16, bb21]

bb15
  0: StorageDead(_5)
    SourceInfo(src/seq/slice.rs:296:87-296:88)
  1: StorageDead(_4)
    SourceInfo(src/seq/slice.rs:299:5-299:6)
  Terminator {
      source_info: SourceInfo(src/seq/slice.rs:299:5-299:6)
      kind: drop(_3) -> [return: bb16, unwind: bb21]
  }
  preds [bb9]
  succs [bb16, bb21]

bb16
  Terminator {
      source_info: SourceInfo(src/seq/slice.rs:299:6-299:6)
      kind: return
  }
  preds [bb14, bb15]
  succs []

bb17
  Terminator {
      source_info: SourceInfo(src/seq/slice.rs:299:5-299:6)
      kind: drop(_4) -> [return: bb20, unwind terminate(cleanup)]
  }
  preds [bb10, bb11, bb12]
  succs [bb20]

bb18
  Terminator {
      source_info: SourceInfo(src/seq/slice.rs:296:87-296:88)
      kind: drop(_5) -> [return: bb20, unwind terminate(cleanup)]
  }
  preds [bb7, bb8]
  succs [bb20]

bb19
  Terminator {
      source_info: SourceInfo(src/seq/slice.rs:296:86-296:87)
      kind: drop(_6) -> [return: bb20, unwind terminate(cleanup)]
  }
  preds [bb3]
  succs [bb20]

bb20
  Terminator {
      source_info: SourceInfo(src/seq/slice.rs:299:5-299:6)
      kind: drop(_3) -> [return: bb21, unwind terminate(cleanup)]
  }
  preds [bb0, bb1, bb2, bb9, bb13, bb17, bb18, bb19]
  succs [bb21]

bb21
  Terminator {
      source_info: SourceInfo(src/seq/slice.rs:284:5-299:6)
      kind: resume
  }
  preds [bb14, bb15, bb20]
  succs []

