bb0
  0: StorageLive(_5)
    SourceInfo(src/seq/iterator.rs:70:38-70:54)
  1: StorageLive(_6)
    SourceInfo(src/seq/iterator.rs:70:38-70:42)
  2: _6 = &_1
    SourceInfo(src/seq/iterator.rs:70:38-70:42)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:70:38-70:54)
      kind: _5 = <Self as core::iter::Iterator>::size_hint(move _6) -> [return: bb1, unwind: bb62]
  }
  preds []
  succs [bb1, bb62]

bb1
  0: StorageDead(_6)
    SourceInfo(src/seq/iterator.rs:70:53-70:54)
  1: PlaceMention(_5)
    SourceInfo(src/seq/iterator.rs:70:38-70:54)
  2: StorageLive(_3)
    SourceInfo(src/seq/iterator.rs:70:14-70:23)
  3: _3 = (_5.0: usize)
    SourceInfo(src/seq/iterator.rs:70:14-70:23)
  4: StorageLive(_4)
    SourceInfo(src/seq/iterator.rs:70:25-70:34)
  5: _4 = (_5.1: core::option::Option<usize>)
    SourceInfo(src/seq/iterator.rs:70:25-70:34)
  6: StorageDead(_5)
    SourceInfo(src/seq/iterator.rs:70:54-70:55)
  7: StorageLive(_7)
    SourceInfo(src/seq/iterator.rs:71:13-71:23)
  8: _7 = core::option::Option::<<Self as core::iter::Iterator>::Item>::None
    SourceInfo(src/seq/iterator.rs:71:26-71:30)
  9: FakeRead(ForLet(None), _7)
    SourceInfo(src/seq/iterator.rs:71:13-71:23)
  10: StorageLive(_8)
    SourceInfo(src/seq/iterator.rs:76:9-82:10)
  11: StorageLive(_9)
    SourceInfo(src/seq/iterator.rs:76:12-76:32)
  12: StorageLive(_10)
    SourceInfo(src/seq/iterator.rs:76:12-76:17)
  13: _10 = &_4
    SourceInfo(src/seq/iterator.rs:76:12-76:17)
  14: StorageLive(_11)
    SourceInfo(src/seq/iterator.rs:76:21-76:32)
  15: StorageLive(_12)
    SourceInfo(src/seq/iterator.rs:76:21-76:32)
  16: StorageLive(_13)
    SourceInfo(src/seq/iterator.rs:76:26-76:31)
  17: _13 = _3
    SourceInfo(src/seq/iterator.rs:76:26-76:31)
  18: _12 = core::option::Option::<usize>::Some(move _13)
    SourceInfo(src/seq/iterator.rs:76:21-76:32)
  19: _11 = &_12
    SourceInfo(src/seq/iterator.rs:76:21-76:32)
  20: StorageDead(_13)
    SourceInfo(src/seq/iterator.rs:76:31-76:32)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:76:12-76:32)
      kind: _9 = <core::option::Option<usize> as core::cmp::PartialEq>::eq(move _10, move _11) -> [return: bb2, unwind: bb61]
  }
  preds [bb0]
  succs [bb2, bb61]

bb2
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:76:12-76:32)
      kind: switchInt(move _9) -> [0: bb12, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb12]

bb3
  0: StorageDead(_12)
    SourceInfo(src/seq/iterator.rs:76:31-76:32)
  1: StorageDead(_11)
    SourceInfo(src/seq/iterator.rs:76:31-76:32)
  2: StorageDead(_10)
    SourceInfo(src/seq/iterator.rs:76:31-76:32)
  3: PlaceMention(_3)
    SourceInfo(src/seq/iterator.rs:77:26-77:31)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:77:20-77:31)
      kind: switchInt(_3) -> [0: bb5, 1: bb6, otherwise: bb4]
  }
  preds [bb2]
  succs [bb4, bb5, bb6]

bb4
  0: StorageLive(_16)
    SourceInfo(src/seq/iterator.rs:80:22-80:26)
  1: _16 = &mut _1
    SourceInfo(src/seq/iterator.rs:80:22-80:26)
  2: StorageLive(_17)
    SourceInfo(src/seq/iterator.rs:80:31-80:56)
  3: StorageLive(_18)
    SourceInfo(src/seq/iterator.rs:80:31-80:34)
  4: _18 = &mut (*_2)
    SourceInfo(src/seq/iterator.rs:80:31-80:34)
  5: StorageLive(_19)
    SourceInfo(src/seq/iterator.rs:80:48-80:55)
  6: StorageLive(_20)
    SourceInfo(src/seq/iterator.rs:80:50-80:55)
  7: _20 = _3
    SourceInfo(src/seq/iterator.rs:80:50-80:55)
  8: _19 = core::ops::RangeTo::<usize> { end: move _20 }
    SourceInfo(src/seq/iterator.rs:80:48-80:55)
  9: StorageDead(_20)
    SourceInfo(src/seq/iterator.rs:80:54-80:55)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:80:31-80:56)
      kind: _17 = <R as rng::Rng>::random_range::<usize, core::ops::RangeTo<usize>>(move _18, move _19) -> [return: bb10, unwind: bb61]
  }
  preds [bb3, bb6]
  succs [bb10, bb61]

bb5
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:78:17-78:18)
      kind: falseEdge -> [real: bb7, imaginary: bb6]
  }
  preds [bb3]
  succs [bb6, bb7]

bb6
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:79:17-79:18)
      kind: falseEdge -> [real: bb8, imaginary: bb4]
  }
  preds [bb3, bb5]
  succs [bb4, bb8]

bb7
  0: _0 = core::option::Option::<<Self as core::iter::Iterator>::Item>::None
    SourceInfo(src/seq/iterator.rs:78:22-78:26)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:78:22-78:26)
      kind: goto -> bb56
  }
  preds [bb5]
  succs [bb56]

bb8
  0: StorageLive(_15)
    SourceInfo(src/seq/iterator.rs:79:22-79:26)
  1: _15 = &mut _1
    SourceInfo(src/seq/iterator.rs:79:22-79:26)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:79:22-79:33)
      kind: _0 = <Self as core::iter::Iterator>::next(move _15) -> [return: bb9, unwind: bb61]
  }
  preds [bb6]
  succs [bb9, bb61]

bb9
  0: StorageDead(_15)
    SourceInfo(src/seq/iterator.rs:79:32-79:33)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:79:32-79:33)
      kind: goto -> bb56
  }
  preds [bb8]
  succs [bb56]

bb10
  0: StorageDead(_19)
    SourceInfo(src/seq/iterator.rs:80:55-80:56)
  1: StorageDead(_18)
    SourceInfo(src/seq/iterator.rs:80:55-80:56)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:80:22-80:57)
      kind: _0 = <Self as core::iter::Iterator>::nth(move _16, move _17) -> [return: bb11, unwind: bb61]
  }
  preds [bb4]
  succs [bb11, bb61]

bb11
  0: StorageDead(_17)
    SourceInfo(src/seq/iterator.rs:80:56-80:57)
  1: StorageDead(_16)
    SourceInfo(src/seq/iterator.rs:80:56-80:57)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:80:56-80:57)
      kind: goto -> bb56
  }
  preds [bb10]
  succs [bb56]

bb12
  0: StorageDead(_12)
    SourceInfo(src/seq/iterator.rs:76:31-76:32)
  1: StorageDead(_11)
    SourceInfo(src/seq/iterator.rs:76:31-76:32)
  2: StorageDead(_10)
    SourceInfo(src/seq/iterator.rs:76:31-76:32)
  3: _8 = const ()
    SourceInfo(src/seq/iterator.rs:82:10-82:10)
  4: StorageDead(_9)
    SourceInfo(src/seq/iterator.rs:82:9-82:10)
  5: StorageDead(_8)
    SourceInfo(src/seq/iterator.rs:82:9-82:10)
  6: StorageLive(_21)
    SourceInfo(src/seq/iterator.rs:84:13-84:29)
  7: StorageLive(_22)
    SourceInfo(src/seq/iterator.rs:84:49-84:52)
  8: _22 = move _2
    SourceInfo(src/seq/iterator.rs:84:49-84:52)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:84:32-84:53)
      kind: _21 = seq::coin_flipper::CoinFlipper::<&mut R>::new(move _22) -> [return: bb13, unwind: bb61]
  }
  preds [bb2]
  succs [bb13, bb61]

bb13
  0: StorageDead(_22)
    SourceInfo(src/seq/iterator.rs:84:52-84:53)
  1: FakeRead(ForLet(None), _21)
    SourceInfo(src/seq/iterator.rs:84:13-84:29)
  2: StorageLive(_23)
    SourceInfo(src/seq/iterator.rs:85:13-85:25)
  3: _23 = const 0_usize
    SourceInfo(src/seq/iterator.rs:85:28-85:29)
  4: FakeRead(ForLet(None), _23)
    SourceInfo(src/seq/iterator.rs:85:13-85:25)
  5: StorageLive(_24)
    SourceInfo(src/seq/iterator.rs:88:9-118:10)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:88:9-118:10)
      kind: goto -> bb14
  }
  preds [bb12]
  succs [bb14]

bb14
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:88:9-118:10)
      kind: falseUnwind -> [real: bb15, unwind: bb61]
  }
  preds [bb13, bb53]
  succs [bb15, bb61]

bb15
  0: StorageLive(_26)
    SourceInfo(src/seq/iterator.rs:89:13-113:14)
  1: StorageLive(_27)
    SourceInfo(src/seq/iterator.rs:89:16-89:25)
  2: StorageLive(_28)
    SourceInfo(src/seq/iterator.rs:89:16-89:21)
  3: _28 = _3
    SourceInfo(src/seq/iterator.rs:89:16-89:21)
  4: _27 = Gt(move _28, const 1_usize)
    SourceInfo(src/seq/iterator.rs:89:16-89:25)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:89:16-89:25)
      kind: switchInt(move _27) -> [0: bb38, otherwise: bb16]
  }
  preds [bb14]
  succs [bb16, bb38]

bb16
  0: StorageDead(_28)
    SourceInfo(src/seq/iterator.rs:89:24-89:25)
  1: StorageLive(_29)
    SourceInfo(src/seq/iterator.rs:90:21-90:23)
  2: StorageLive(_30)
    SourceInfo(src/seq/iterator.rs:90:26-90:42)
  3: _30 = &mut (*(_21.0: &mut R))
    SourceInfo(src/seq/iterator.rs:90:26-90:42)
  4: StorageLive(_31)
    SourceInfo(src/seq/iterator.rs:90:56-90:74)
  5: StorageLive(_32)
    SourceInfo(src/seq/iterator.rs:90:58-90:74)
  6: StorageLive(_33)
    SourceInfo(src/seq/iterator.rs:90:58-90:63)
  7: _33 = _3
    SourceInfo(src/seq/iterator.rs:90:58-90:63)
  8: StorageLive(_34)
    SourceInfo(src/seq/iterator.rs:90:66-90:74)
  9: _34 = _23
    SourceInfo(src/seq/iterator.rs:90:66-90:74)
  10: _35 = AddWithOverflow(_33, _34)
    SourceInfo(src/seq/iterator.rs:90:58-90:74)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:90:58-90:74)
      kind: assert(!move (_35.1: bool), "attempt to compute `{} + {}`, which would overflow", move _33, move _34) -> [success: bb17, unwind: bb61]
  }
  preds [bb15]
  succs [bb17, bb61]

bb17
  0: _32 = move (_35.0: usize)
    SourceInfo(src/seq/iterator.rs:90:58-90:74)
  1: StorageDead(_34)
    SourceInfo(src/seq/iterator.rs:90:73-90:74)
  2: StorageDead(_33)
    SourceInfo(src/seq/iterator.rs:90:73-90:74)
  3: _31 = core::ops::RangeTo::<usize> { end: move _32 }
    SourceInfo(src/seq/iterator.rs:90:56-90:74)
  4: StorageDead(_32)
    SourceInfo(src/seq/iterator.rs:90:73-90:74)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:90:26-90:75)
      kind: _29 = <R as rng::Rng>::random_range::<usize, core::ops::RangeTo<usize>>(move _30, move _31) -> [return: bb18, unwind: bb61]
  }
  preds [bb16]
  succs [bb18, bb61]

bb18
  0: StorageDead(_31)
    SourceInfo(src/seq/iterator.rs:90:74-90:75)
  1: StorageDead(_30)
    SourceInfo(src/seq/iterator.rs:90:74-90:75)
  2: FakeRead(ForLet(None), _29)
    SourceInfo(src/seq/iterator.rs:90:21-90:23)
  3: StorageLive(_36)
    SourceInfo(src/seq/iterator.rs:91:21-91:25)
  4: StorageLive(_37)
    SourceInfo(src/seq/iterator.rs:91:31-91:41)
  5: StorageLive(_38)
    SourceInfo(src/seq/iterator.rs:91:31-91:33)
  6: _38 = _29
    SourceInfo(src/seq/iterator.rs:91:31-91:33)
  7: StorageLive(_39)
    SourceInfo(src/seq/iterator.rs:91:36-91:41)
  8: _39 = _3
    SourceInfo(src/seq/iterator.rs:91:36-91:41)
  9: _37 = Lt(move _38, move _39)
    SourceInfo(src/seq/iterator.rs:91:31-91:41)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:91:31-91:41)
      kind: switchInt(move _37) -> [0: bb26, otherwise: bb19]
  }
  preds [bb17]
  succs [bb19, bb26]

bb19
  0: StorageDead(_39)
    SourceInfo(src/seq/iterator.rs:91:40-91:41)
  1: StorageDead(_38)
    SourceInfo(src/seq/iterator.rs:91:40-91:41)
  2: StorageLive(_40)
    SourceInfo(src/seq/iterator.rs:92:30-92:42)
  3: StorageLive(_41)
    SourceInfo(src/seq/iterator.rs:92:30-92:34)
  4: _41 = &mut _1
    SourceInfo(src/seq/iterator.rs:92:30-92:34)
  5: StorageLive(_42)
    SourceInfo(src/seq/iterator.rs:92:39-92:41)
  6: _42 = _29
    SourceInfo(src/seq/iterator.rs:92:39-92:41)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:92:30-92:42)
      kind: _40 = <Self as core::iter::Iterator>::nth(move _41, move _42) -> [return: bb20, unwind: bb61]
  }
  preds [bb18]
  succs [bb20, bb61]

bb20
  0: StorageDead(_42)
    SourceInfo(src/seq/iterator.rs:92:41-92:42)
  1: StorageDead(_41)
    SourceInfo(src/seq/iterator.rs:92:41-92:42)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:92:21-92:27)
      kind: drop(_7) -> [return: bb21, unwind: bb22]
  }
  preds [bb19]
  succs [bb21, bb22]

bb21
  0: _7 = move _40
    SourceInfo(src/seq/iterator.rs:92:21-92:27)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:92:41-92:42)
      kind: drop(_40) -> [return: bb23, unwind: bb61]
  }
  preds [bb20]
  succs [bb23, bb61]

bb22
  0: _7 = move _40
    SourceInfo(src/seq/iterator.rs:92:21-92:27)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:92:41-92:42)
      kind: drop(_40) -> [return: bb61, unwind terminate(cleanup)]
  }
  preds [bb20]
  succs [bb61]

bb23
  0: StorageDead(_40)
    SourceInfo(src/seq/iterator.rs:92:41-92:42)
  1: StorageLive(_43)
    SourceInfo(src/seq/iterator.rs:93:21-93:26)
  2: _43 = _3
    SourceInfo(src/seq/iterator.rs:93:21-93:26)
  3: StorageLive(_44)
    SourceInfo(src/seq/iterator.rs:93:29-93:37)
  4: StorageLive(_45)
    SourceInfo(src/seq/iterator.rs:93:30-93:32)
  5: _45 = _29
    SourceInfo(src/seq/iterator.rs:93:30-93:32)
  6: _46 = AddWithOverflow(_45, const 1_usize)
    SourceInfo(src/seq/iterator.rs:93:29-93:37)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:93:29-93:37)
      kind: assert(!move (_46.1: bool), "attempt to compute `{} + {}`, which would overflow", move _45, const 1_usize) -> [success: bb24, unwind: bb61]
  }
  preds [bb21]
  succs [bb24, bb61]

bb24
  0: _44 = move (_46.0: usize)
    SourceInfo(src/seq/iterator.rs:93:29-93:37)
  1: StorageDead(_45)
    SourceInfo(src/seq/iterator.rs:93:36-93:37)
  2: _47 = SubWithOverflow(_43, _44)
    SourceInfo(src/seq/iterator.rs:93:21-93:37)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:93:21-93:37)
      kind: assert(!move (_47.1: bool), "attempt to compute `{} - {}`, which would overflow", move _43, move _44) -> [success: bb25, unwind: bb61]
  }
  preds [bb23]
  succs [bb25, bb61]

bb25
  0: _36 = move (_47.0: usize)
    SourceInfo(src/seq/iterator.rs:93:21-93:37)
  1: StorageDead(_44)
    SourceInfo(src/seq/iterator.rs:93:36-93:37)
  2: StorageDead(_43)
    SourceInfo(src/seq/iterator.rs:93:36-93:37)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:91:28-96:18)
      kind: goto -> bb27
  }
  preds [bb24]
  succs [bb27]

bb26
  0: StorageDead(_39)
    SourceInfo(src/seq/iterator.rs:91:40-91:41)
  1: StorageDead(_38)
    SourceInfo(src/seq/iterator.rs:91:40-91:41)
  2: _36 = _3
    SourceInfo(src/seq/iterator.rs:95:21-95:26)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:91:28-96:18)
      kind: goto -> bb27
  }
  preds [bb18]
  succs [bb27]

bb27
  0: StorageDead(_37)
    SourceInfo(src/seq/iterator.rs:96:17-96:18)
  1: FakeRead(ForLet(None), _36)
    SourceInfo(src/seq/iterator.rs:91:21-91:25)
  2: StorageLive(_48)
    SourceInfo(src/seq/iterator.rs:97:17-99:18)
  3: StorageLive(_49)
    SourceInfo(src/seq/iterator.rs:97:20-97:40)
  4: StorageLive(_50)
    SourceInfo(src/seq/iterator.rs:97:20-97:25)
  5: _50 = &_4
    SourceInfo(src/seq/iterator.rs:97:20-97:25)
  6: StorageLive(_51)
    SourceInfo(src/seq/iterator.rs:97:29-97:40)
  7: StorageLive(_52)
    SourceInfo(src/seq/iterator.rs:97:29-97:40)
  8: StorageLive(_53)
    SourceInfo(src/seq/iterator.rs:97:34-97:39)
  9: _53 = _3
    SourceInfo(src/seq/iterator.rs:97:34-97:39)
  10: _52 = core::option::Option::<usize>::Some(move _53)
    SourceInfo(src/seq/iterator.rs:97:29-97:40)
  11: _51 = &_52
    SourceInfo(src/seq/iterator.rs:97:29-97:40)
  12: StorageDead(_53)
    SourceInfo(src/seq/iterator.rs:97:39-97:40)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:97:20-97:40)
      kind: _49 = <core::option::Option<usize> as core::cmp::PartialEq>::eq(move _50, move _51) -> [return: bb28, unwind: bb61]
  }
  preds [bb25, bb26]
  succs [bb28, bb61]

bb28
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:97:20-97:40)
      kind: switchInt(move _49) -> [0: bb30, otherwise: bb29]
  }
  preds [bb27]
  succs [bb29, bb30]

bb29
  0: StorageDead(_52)
    SourceInfo(src/seq/iterator.rs:97:39-97:40)
  1: StorageDead(_51)
    SourceInfo(src/seq/iterator.rs:97:39-97:40)
  2: StorageDead(_50)
    SourceInfo(src/seq/iterator.rs:97:39-97:40)
  3: _0 = move _7
    SourceInfo(src/seq/iterator.rs:98:28-98:34)
  4: StorageDead(_49)
    SourceInfo(src/seq/iterator.rs:99:17-99:18)
  5: StorageDead(_48)
    SourceInfo(src/seq/iterator.rs:99:17-99:18)
  6: StorageDead(_36)
    SourceInfo(src/seq/iterator.rs:104:13-104:14)
  7: StorageDead(_29)
    SourceInfo(src/seq/iterator.rs:104:13-104:14)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb55
  }
  preds [bb28]
  succs [bb55]

bb30
  0: StorageDead(_52)
    SourceInfo(src/seq/iterator.rs:97:39-97:40)
  1: StorageDead(_51)
    SourceInfo(src/seq/iterator.rs:97:39-97:40)
  2: StorageDead(_50)
    SourceInfo(src/seq/iterator.rs:97:39-97:40)
  3: _48 = const ()
    SourceInfo(src/seq/iterator.rs:99:18-99:18)
  4: StorageDead(_49)
    SourceInfo(src/seq/iterator.rs:99:17-99:18)
  5: StorageDead(_48)
    SourceInfo(src/seq/iterator.rs:99:17-99:18)
  6: StorageLive(_55)
    SourceInfo(src/seq/iterator.rs:100:29-100:34)
  7: _55 = _3
    SourceInfo(src/seq/iterator.rs:100:29-100:34)
  8: _56 = AddWithOverflow(_23, _55)
    SourceInfo(src/seq/iterator.rs:100:17-100:34)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:100:17-100:34)
      kind: assert(!move (_56.1: bool), "attempt to compute `{} + {}`, which would overflow", _23, move _55) -> [success: bb31, unwind: bb61]
  }
  preds [bb28]
  succs [bb31, bb61]

bb31
  0: _23 = move (_56.0: usize)
    SourceInfo(src/seq/iterator.rs:100:17-100:34)
  1: StorageDead(_55)
    SourceInfo(src/seq/iterator.rs:100:33-100:34)
  2: StorageLive(_57)
    SourceInfo(src/seq/iterator.rs:101:20-101:28)
  3: StorageLive(_58)
    SourceInfo(src/seq/iterator.rs:101:20-101:24)
  4: _58 = _36
    SourceInfo(src/seq/iterator.rs:101:20-101:24)
  5: _57 = Gt(move _58, const 0_usize)
    SourceInfo(src/seq/iterator.rs:101:20-101:28)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:101:20-101:28)
      kind: switchInt(move _57) -> [0: bb36, otherwise: bb32]
  }
  preds [bb30]
  succs [bb32, bb36]

bb32
  0: StorageDead(_58)
    SourceInfo(src/seq/iterator.rs:101:27-101:28)
  1: StorageLive(_59)
    SourceInfo(src/seq/iterator.rs:102:21-102:39)
  2: StorageLive(_60)
    SourceInfo(src/seq/iterator.rs:102:21-102:25)
  3: _60 = &mut _1
    SourceInfo(src/seq/iterator.rs:102:21-102:25)
  4: StorageLive(_61)
    SourceInfo(src/seq/iterator.rs:102:30-102:38)
  5: StorageLive(_62)
    SourceInfo(src/seq/iterator.rs:102:30-102:34)
  6: _62 = _36
    SourceInfo(src/seq/iterator.rs:102:30-102:34)
  7: _63 = SubWithOverflow(_62, const 1_usize)
    SourceInfo(src/seq/iterator.rs:102:30-102:38)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:102:30-102:38)
      kind: assert(!move (_63.1: bool), "attempt to compute `{} - {}`, which would overflow", move _62, const 1_usize) -> [success: bb33, unwind: bb61]
  }
  preds [bb31]
  succs [bb33, bb61]

bb33
  0: _61 = move (_63.0: usize)
    SourceInfo(src/seq/iterator.rs:102:30-102:38)
  1: StorageDead(_62)
    SourceInfo(src/seq/iterator.rs:102:37-102:38)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:102:21-102:39)
      kind: _59 = <Self as core::iter::Iterator>::nth(move _60, move _61) -> [return: bb34, unwind: bb61]
  }
  preds [bb32]
  succs [bb34, bb61]

bb34
  0: StorageDead(_61)
    SourceInfo(src/seq/iterator.rs:102:38-102:39)
  1: StorageDead(_60)
    SourceInfo(src/seq/iterator.rs:102:38-102:39)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:102:39-102:40)
      kind: drop(_59) -> [return: bb35, unwind: bb61]
  }
  preds [bb33]
  succs [bb35, bb61]

bb35
  0: StorageDead(_59)
    SourceInfo(src/seq/iterator.rs:102:39-102:40)
  1: _26 = const ()
    SourceInfo(src/seq/iterator.rs:101:29-103:18)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:101:17-103:18)
      kind: goto -> bb37
  }
  preds [bb34]
  succs [bb37]

bb36
  0: StorageDead(_58)
    SourceInfo(src/seq/iterator.rs:101:27-101:28)
  1: _26 = const ()
    SourceInfo(src/seq/iterator.rs:103:18-103:18)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:101:17-103:18)
      kind: goto -> bb37
  }
  preds [bb31]
  succs [bb37]

bb37
  0: StorageDead(_57)
    SourceInfo(src/seq/iterator.rs:103:17-103:18)
  1: StorageDead(_36)
    SourceInfo(src/seq/iterator.rs:104:13-104:14)
  2: StorageDead(_29)
    SourceInfo(src/seq/iterator.rs:104:13-104:14)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:89:13-113:14)
      kind: goto -> bb52
  }
  preds [bb35, bb36]
  succs [bb52]

bb38
  0: StorageDead(_28)
    SourceInfo(src/seq/iterator.rs:89:24-89:25)
  1: StorageLive(_64)
    SourceInfo(src/seq/iterator.rs:105:21-105:25)
  2: StorageLive(_65)
    SourceInfo(src/seq/iterator.rs:105:28-105:32)
  3: _65 = &mut _1
    SourceInfo(src/seq/iterator.rs:105:28-105:32)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:105:28-105:39)
      kind: _64 = <Self as core::iter::Iterator>::next(move _65) -> [return: bb39, unwind: bb61]
  }
  preds [bb15]
  succs [bb39, bb61]

bb39
  0: StorageDead(_65)
    SourceInfo(src/seq/iterator.rs:105:38-105:39)
  1: FakeRead(ForLet(None), _64)
    SourceInfo(src/seq/iterator.rs:105:21-105:25)
  2: StorageLive(_66)
    SourceInfo(src/seq/iterator.rs:106:17-108:18)
  3: StorageLive(_67)
    SourceInfo(src/seq/iterator.rs:106:20-106:34)
  4: StorageLive(_68)
    SourceInfo(src/seq/iterator.rs:106:20-106:24)
  5: _68 = &_64
    SourceInfo(src/seq/iterator.rs:106:20-106:24)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:106:20-106:34)
      kind: _67 = core::option::Option::<<Self as core::iter::Iterator>::Item>::is_none(move _68) -> [return: bb40, unwind: bb60]
  }
  preds [bb38]
  succs [bb40, bb60]

bb40
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:106:20-106:34)
      kind: switchInt(move _67) -> [0: bb42, otherwise: bb41]
  }
  preds [bb39]
  succs [bb41, bb42]

bb41
  0: StorageDead(_68)
    SourceInfo(src/seq/iterator.rs:106:33-106:34)
  1: _0 = move _7
    SourceInfo(src/seq/iterator.rs:107:28-107:34)
  2: StorageDead(_67)
    SourceInfo(src/seq/iterator.rs:108:17-108:18)
  3: StorageDead(_66)
    SourceInfo(src/seq/iterator.rs:108:17-108:18)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:113:13-113:14)
      kind: drop(_64) -> [return: bb54, unwind: bb61]
  }
  preds [bb40]
  succs [bb54, bb61]

bb42
  0: StorageDead(_68)
    SourceInfo(src/seq/iterator.rs:106:33-106:34)
  1: _66 = const ()
    SourceInfo(src/seq/iterator.rs:108:18-108:18)
  2: StorageDead(_67)
    SourceInfo(src/seq/iterator.rs:108:17-108:18)
  3: StorageDead(_66)
    SourceInfo(src/seq/iterator.rs:108:17-108:18)
  4: _70 = AddWithOverflow(_23, const 1_usize)
    SourceInfo(src/seq/iterator.rs:109:17-109:30)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:109:17-109:30)
      kind: assert(!move (_70.1: bool), "attempt to compute `{} + {}`, which would overflow", _23, const 1_usize) -> [success: bb43, unwind: bb60]
  }
  preds [bb40]
  succs [bb43, bb60]

bb43
  0: _23 = move (_70.0: usize)
    SourceInfo(src/seq/iterator.rs:109:17-109:30)
  1: StorageLive(_71)
    SourceInfo(src/seq/iterator.rs:110:20-110:64)
  2: StorageLive(_72)
    SourceInfo(src/seq/iterator.rs:110:20-110:32)
  3: _72 = &mut _21
    SourceInfo(src/seq/iterator.rs:110:20-110:32)
  4: StorageLive(_73)
    SourceInfo(src/seq/iterator.rs:110:55-110:63)
  5: _73 = _23
    SourceInfo(src/seq/iterator.rs:110:55-110:63)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:110:20-110:64)
      kind: _71 = seq::coin_flipper::CoinFlipper::<&mut R>::random_ratio_one_over(move _72, move _73) -> [return: bb44, unwind: bb60]
  }
  preds [bb42]
  succs [bb44, bb60]

bb44
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:110:20-110:64)
      kind: switchInt(move _71) -> [0: bb49, otherwise: bb45]
  }
  preds [bb43]
  succs [bb45, bb49]

bb45
  0: StorageDead(_73)
    SourceInfo(src/seq/iterator.rs:110:63-110:64)
  1: StorageDead(_72)
    SourceInfo(src/seq/iterator.rs:110:63-110:64)
  2: StorageLive(_74)
    SourceInfo(src/seq/iterator.rs:111:30-111:34)
  3: _74 = move _64
    SourceInfo(src/seq/iterator.rs:111:30-111:34)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:111:21-111:27)
      kind: drop(_7) -> [return: bb46, unwind: bb47]
  }
  preds [bb44]
  succs [bb46, bb47]

bb46
  0: _7 = move _74
    SourceInfo(src/seq/iterator.rs:111:21-111:27)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:111:33-111:34)
      kind: drop(_74) -> [return: bb48, unwind: bb60]
  }
  preds [bb45]
  succs [bb48, bb60]

bb47
  0: _7 = move _74
    SourceInfo(src/seq/iterator.rs:111:21-111:27)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:111:33-111:34)
      kind: drop(_74) -> [return: bb60, unwind terminate(cleanup)]
  }
  preds [bb45]
  succs [bb60]

bb48
  0: StorageDead(_74)
    SourceInfo(src/seq/iterator.rs:111:33-111:34)
  1: _26 = const ()
    SourceInfo(src/seq/iterator.rs:110:65-112:18)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:110:17-112:18)
      kind: goto -> bb50
  }
  preds [bb46]
  succs [bb50]

bb49
  0: StorageDead(_73)
    SourceInfo(src/seq/iterator.rs:110:63-110:64)
  1: StorageDead(_72)
    SourceInfo(src/seq/iterator.rs:110:63-110:64)
  2: _26 = const ()
    SourceInfo(src/seq/iterator.rs:112:18-112:18)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:110:17-112:18)
      kind: goto -> bb50
  }
  preds [bb44]
  succs [bb50]

bb50
  0: StorageDead(_71)
    SourceInfo(src/seq/iterator.rs:112:17-112:18)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:113:13-113:14)
      kind: drop(_64) -> [return: bb51, unwind: bb61]
  }
  preds [bb48, bb49]
  succs [bb51, bb61]

bb51
  0: StorageDead(_64)
    SourceInfo(src/seq/iterator.rs:113:13-113:14)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:89:13-113:14)
      kind: goto -> bb52
  }
  preds [bb50]
  succs [bb52]

bb52
  0: StorageDead(_27)
    SourceInfo(src/seq/iterator.rs:113:13-113:14)
  1: StorageDead(_26)
    SourceInfo(src/seq/iterator.rs:113:13-113:14)
  2: StorageLive(_75)
    SourceInfo(src/seq/iterator.rs:115:17-115:21)
  3: StorageLive(_76)
    SourceInfo(src/seq/iterator.rs:115:24-115:28)
  4: _76 = &_1
    SourceInfo(src/seq/iterator.rs:115:24-115:28)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:115:24-115:40)
      kind: _75 = <Self as core::iter::Iterator>::size_hint(move _76) -> [return: bb53, unwind: bb61]
  }
  preds [bb37, bb51]
  succs [bb53, bb61]

bb53
  0: StorageDead(_76)
    SourceInfo(src/seq/iterator.rs:115:39-115:40)
  1: FakeRead(ForLet(None), _75)
    SourceInfo(src/seq/iterator.rs:115:17-115:21)
  2: StorageLive(_77)
    SourceInfo(src/seq/iterator.rs:116:21-116:27)
  3: _77 = (_75.0: usize)
    SourceInfo(src/seq/iterator.rs:116:21-116:27)
  4: _3 = move _77
    SourceInfo(src/seq/iterator.rs:116:13-116:27)
  5: StorageDead(_77)
    SourceInfo(src/seq/iterator.rs:116:26-116:27)
  6: StorageLive(_78)
    SourceInfo(src/seq/iterator.rs:117:21-117:27)
  7: _78 = (_75.1: core::option::Option<usize>)
    SourceInfo(src/seq/iterator.rs:117:21-117:27)
  8: _4 = move _78
    SourceInfo(src/seq/iterator.rs:117:13-117:27)
  9: StorageDead(_78)
    SourceInfo(src/seq/iterator.rs:117:26-117:27)
  10: _25 = const ()
    SourceInfo(src/seq/iterator.rs:88:14-118:10)
  11: StorageDead(_75)
    SourceInfo(src/seq/iterator.rs:118:9-118:10)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:88:9-118:10)
      kind: goto -> bb14
  }
  preds [bb52]
  succs [bb14]

bb54
  0: StorageDead(_64)
    SourceInfo(src/seq/iterator.rs:113:13-113:14)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb55
  }
  preds [bb41]
  succs [bb55]

bb55
  0: StorageDead(_27)
    SourceInfo(src/seq/iterator.rs:113:13-113:14)
  1: StorageDead(_26)
    SourceInfo(src/seq/iterator.rs:113:13-113:14)
  2: StorageDead(_24)
    SourceInfo(src/seq/iterator.rs:118:9-118:10)
  3: StorageDead(_23)
    SourceInfo(src/seq/iterator.rs:119:5-119:6)
  4: StorageDead(_21)
    SourceInfo(src/seq/iterator.rs:119:5-119:6)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb57
  }
  preds [bb29, bb54]
  succs [bb57]

bb56
  0: StorageDead(_9)
    SourceInfo(src/seq/iterator.rs:82:9-82:10)
  1: StorageDead(_8)
    SourceInfo(src/seq/iterator.rs:82:9-82:10)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb57
  }
  preds [bb7, bb9, bb11]
  succs [bb57]

bb57
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:119:5-119:6)
      kind: drop(_7) -> [return: bb58, unwind: bb62]
  }
  preds [bb55, bb56]
  succs [bb58, bb62]

bb58
  0: StorageDead(_7)
    SourceInfo(src/seq/iterator.rs:119:5-119:6)
  1: StorageDead(_4)
    SourceInfo(src/seq/iterator.rs:119:5-119:6)
  2: StorageDead(_3)
    SourceInfo(src/seq/iterator.rs:119:5-119:6)
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:119:5-119:6)
      kind: drop(_1) -> [return: bb59, unwind: bb63]
  }
  preds [bb57]
  succs [bb59, bb63]

bb59
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:119:6-119:6)
      kind: return
  }
  preds [bb58]
  succs []

bb60
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:113:13-113:14)
      kind: drop(_64) -> [return: bb61, unwind terminate(cleanup)]
  }
  preds [bb39, bb42, bb43, bb46, bb47]
  succs [bb61]

bb61
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:119:5-119:6)
      kind: drop(_7) -> [return: bb62, unwind terminate(cleanup)]
  }
  preds [bb1, bb4, bb8, bb10, bb12, bb14, bb16, bb17, bb19, bb21, bb22, bb23, bb24, bb27, bb30, bb32, bb33, bb34, bb38, bb41, bb50, bb52, bb60]
  succs [bb62]

bb62
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:119:5-119:6)
      kind: drop(_1) -> [return: bb63, unwind terminate(cleanup)]
  }
  preds [bb0, bb57, bb61]
  succs [bb63]

bb63
  Terminator {
      source_info: SourceInfo(src/seq/iterator.rs:66:5-119:6)
      kind: resume
  }
  preds [bb58, bb62]
  succs []

