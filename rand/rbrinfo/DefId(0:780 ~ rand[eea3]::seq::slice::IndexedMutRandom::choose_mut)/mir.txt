bb0
  0: StorageLive(_3)
    SourceInfo(src/seq/slice.rs:257:12-257:27)
  1: StorageLive(_4)
    SourceInfo(src/seq/slice.rs:257:12-257:16)
  2: _4 = &(*_1)
    SourceInfo(src/seq/slice.rs:257:12-257:16)
  Terminator {
      source_info: SourceInfo(src/seq/slice.rs:257:12-257:27)
      kind: _3 = <Self as seq::slice::IndexedRandom>::is_empty(move _4) -> [return: bb1, unwind: bb8]
  }
  preds []
  succs [bb1, bb8]

bb1
  Terminator {
      source_info: SourceInfo(src/seq/slice.rs:257:12-257:27)
      kind: switchInt(move _3) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_4)
    SourceInfo(src/seq/slice.rs:257:26-257:27)
  1: _0 = core::option::Option::<&mut <Self as core::ops::Index<usize>>::Output>::None
    SourceInfo(src/seq/slice.rs:258:13-258:17)
  Terminator {
      source_info: SourceInfo(src/seq/slice.rs:257:9-262:10)
      kind: goto -> bb7
  }
  preds [bb1]
  succs [bb7]

bb3
  0: StorageDead(_4)
    SourceInfo(src/seq/slice.rs:257:26-257:27)
  1: StorageLive(_5)
    SourceInfo(src/seq/slice.rs:260:17-260:20)
  2: StorageLive(_6)
    SourceInfo(src/seq/slice.rs:260:23-260:27)
  3: _6 = &(*_1)
    SourceInfo(src/seq/slice.rs:260:23-260:27)
  Terminator {
      source_info: SourceInfo(src/seq/slice.rs:260:23-260:33)
      kind: _5 = <Self as seq::slice::IndexedRandom>::len(move _6) -> [return: bb4, unwind: bb8]
  }
  preds [bb1]
  succs [bb4, bb8]

bb4
  0: StorageDead(_6)
    SourceInfo(src/seq/slice.rs:260:32-260:33)
  1: FakeRead(ForLet(None), _5)
    SourceInfo(src/seq/slice.rs:260:17-260:20)
  2: StorageLive(_7)
    SourceInfo(src/seq/slice.rs:261:18-261:52)
  3: StorageLive(_8)
    SourceInfo(src/seq/slice.rs:261:18-261:52)
  4: StorageLive(_9)
    SourceInfo(src/seq/slice.rs:261:27-261:52)
  5: StorageLive(_10)
    SourceInfo(src/seq/slice.rs:261:23-261:27)
  6: _10 = &mut (*_1)
    SourceInfo(src/seq/slice.rs:261:23-261:27)
  7: StorageLive(_11)
    SourceInfo(src/seq/slice.rs:261:28-261:51)
  8: StorageLive(_12)
    SourceInfo(src/seq/slice.rs:261:28-261:31)
  9: _12 = &mut (*_2)
    SourceInfo(src/seq/slice.rs:261:28-261:31)
  10: StorageLive(_13)
    SourceInfo(src/seq/slice.rs:261:45-261:50)
  11: StorageLive(_14)
    SourceInfo(src/seq/slice.rs:261:47-261:50)
  12: _14 = _5
    SourceInfo(src/seq/slice.rs:261:47-261:50)
  13: _13 = core::ops::RangeTo::<usize> { end: move _14 }
    SourceInfo(src/seq/slice.rs:261:45-261:50)
  14: StorageDead(_14)
    SourceInfo(src/seq/slice.rs:261:49-261:50)
  Terminator {
      source_info: SourceInfo(src/seq/slice.rs:261:28-261:51)
      kind: _11 = <R as rng::Rng>::random_range::<usize, core::ops::RangeTo<usize>>(move _12, move _13) -> [return: bb5, unwind: bb8]
  }
  preds [bb3]
  succs [bb5, bb8]

bb5
  0: StorageDead(_13)
    SourceInfo(src/seq/slice.rs:261:50-261:51)
  1: StorageDead(_12)
    SourceInfo(src/seq/slice.rs:261:50-261:51)
  Terminator {
      source_info: SourceInfo(src/seq/slice.rs:261:27-261:52)
      kind: _9 = <Self as core::ops::IndexMut<usize>>::index_mut(move _10, move _11) -> [return: bb6, unwind: bb8]
  }
  preds [bb4]
  succs [bb6, bb8]

bb6
  0: StorageDead(_11)
    SourceInfo(src/seq/slice.rs:261:51-261:52)
  1: StorageDead(_10)
    SourceInfo(src/seq/slice.rs:261:51-261:52)
  2: _8 = &mut (*_9)
    SourceInfo(src/seq/slice.rs:261:18-261:52)
  3: _7 = &mut (*_8)
    SourceInfo(src/seq/slice.rs:261:18-261:52)
  4: _0 = core::option::Option::<&mut <Self as core::ops::Index<usize>>::Output>::Some(move _7)
    SourceInfo(src/seq/slice.rs:261:13-261:53)
  5: StorageDead(_7)
    SourceInfo(src/seq/slice.rs:261:52-261:53)
  6: StorageDead(_5)
    SourceInfo(src/seq/slice.rs:262:9-262:10)
  7: StorageDead(_9)
    SourceInfo(src/seq/slice.rs:262:9-262:10)
  8: StorageDead(_8)
    SourceInfo(src/seq/slice.rs:262:9-262:10)
  Terminator {
      source_info: SourceInfo(src/seq/slice.rs:257:9-262:10)
      kind: goto -> bb7
  }
  preds [bb5]
  succs [bb7]

bb7
  0: StorageDead(_3)
    SourceInfo(src/seq/slice.rs:262:9-262:10)
  Terminator {
      source_info: SourceInfo(src/seq/slice.rs:263:6-263:6)
      kind: return
  }
  preds [bb2, bb6]
  succs []

bb8
  Terminator {
      source_info: SourceInfo(src/seq/slice.rs:253:5-263:6)
      kind: resume
  }
  preds [bb0, bb3, bb4, bb5]
  succs []

