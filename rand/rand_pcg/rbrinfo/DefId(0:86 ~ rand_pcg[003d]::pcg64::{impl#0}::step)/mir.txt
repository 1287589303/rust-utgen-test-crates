bb0
  0: StorageLive(_2)
    SourceInfo(rand_pcg/src/pcg64.rs:110:22-113:42)
  1: StorageLive(_3)
    SourceInfo(rand_pcg/src/pcg64.rs:110:22-112:38)
  2: StorageLive(_4)
    SourceInfo(rand_pcg/src/pcg64.rs:110:22-111:19)
  3: _4 = ((*_1).0: u64)
    SourceInfo(rand_pcg/src/pcg64.rs:110:22-111:19)
  Terminator {
      source_info: SourceInfo(rand_pcg/src/pcg64.rs:110:22-112:38)
      kind: _3 = core::num::<impl u64>::wrapping_mul(move _4, const pcg64::MULTIPLIER) -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: StorageDead(_4)
    SourceInfo(rand_pcg/src/pcg64.rs:112:37-112:38)
  1: StorageLive(_5)
    SourceInfo(rand_pcg/src/pcg64.rs:113:27-113:41)
  2: _5 = ((*_1).1: u64)
    SourceInfo(rand_pcg/src/pcg64.rs:113:27-113:41)
  Terminator {
      source_info: SourceInfo(rand_pcg/src/pcg64.rs:110:22-113:42)
      kind: _2 = core::num::<impl u64>::wrapping_add(move _3, move _5) -> [return: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_5)
    SourceInfo(rand_pcg/src/pcg64.rs:113:41-113:42)
  1: StorageDead(_3)
    SourceInfo(rand_pcg/src/pcg64.rs:113:41-113:42)
  2: ((*_1).0: u64) = move _2
    SourceInfo(rand_pcg/src/pcg64.rs:110:9-113:42)
  3: StorageDead(_2)
    SourceInfo(rand_pcg/src/pcg64.rs:113:41-113:42)
  4: _0 = const ()
    SourceInfo(rand_pcg/src/pcg64.rs:108:24-114:6)
  Terminator {
      source_info: SourceInfo(rand_pcg/src/pcg64.rs:114:6-114:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(rand_pcg/src/pcg64.rs:108:5-114:6)
      kind: resume
  }
  preds [bb0, bb1]
  succs []

