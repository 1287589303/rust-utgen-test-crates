{
  "name": "rand_pcg::pcg128cm::output_dxsm",
  "mod_info": {
    "name": "pcg128cm",
    "loc": "rand_pcg/src/lib.rs:93:1:93:14"
  },
  "visible": false,
  "loc": "rand_pcg/src/pcg128cm.rs:164:1:177:2",
  "doc": "",
  "code": [
    "fn output_dxsm(state: u128) -> u64 {",
    "    // See https://github.com/imneme/pcg-cpp/blob/ffd522e7188bef30a00c74dc7eb9de5faff90092/include/pcg_random.hpp#L1016",
    "    // for a short discussion of the construction and its original implementation.",
    "    let mut hi = (state >> 64) as u64;",
    "    let mut lo = state as u64;",
    "",
    "    lo |= 1;",
    "    hi ^= hi >> 32;",
    "    hi = hi.wrapping_mul(MULTIPLIER);",
    "    hi ^= hi >> 48;",
    "    hi = hi.wrapping_mul(lo);",
    "",
    "    hi",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "hi",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}