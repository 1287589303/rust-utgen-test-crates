{
  "name": "rand_pcg::pcg128::output_xsl_rr",
  "mod_info": {
    "name": "pcg128",
    "loc": "rand_pcg/src/lib.rs:92:1:92:12"
  },
  "visible": false,
  "loc": "rand_pcg/src/pcg128.rs:261:1:270:2",
  "doc": "",
  "code": [
    "fn output_xsl_rr(state: u128) -> u64 {",
    "    // Output function XSL RR (\"xorshift low (bits), random rotation\")",
    "    // Constants are for 128-bit state, 64-bit output",
    "    const XSHIFT: u32 = 64; // (128 - 64 + 64) / 2",
    "    const ROTATE: u32 = 122; // 128 - 6",
    "",
    "    let rot = (state >> ROTATE) as u32;",
    "    let xsl = ((state >> XSHIFT) as u64) ^ (state as u64);",
    "    xsl.rotate_right(rot)",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}