{
  "name": "rand_pcg::pcg64::{impl#3}::next_u32",
  "mod_info": {
    "name": "pcg64",
    "loc": "rand_pcg/src/lib.rs:94:1:94:11"
  },
  "visible": true,
  "loc": "rand_pcg/src/pcg64.rs:140:5:153:6",
  "doc": "",
  "code": [
    "fn next_u32(&mut self) -> u32 {",
    "    let state = self.state;",
    "    self.step();",
    "",
    "    // Output function XSH RR: xorshift high (bits), followed by a random rotate",
    "    // Constants are for 64-bit state, 32-bit output",
    "    const ROTATE: u32 = 59; // 64 - 5",
    "    const XSHIFT: u32 = 18; // (5 + 32) / 2",
    "    const SPARE: u32 = 27; // 64 - 32 - 5",
    "",
    "    let rot = (state >> ROTATE) as u32;",
    "    let xsh = (((state >> XSHIFT) ^ state) >> SPARE) as u32;",
    "    xsh.rotate_right(rot)",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}