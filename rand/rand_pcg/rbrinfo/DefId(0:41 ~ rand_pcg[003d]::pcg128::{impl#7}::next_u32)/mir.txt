bb0
  0: StorageLive(_2)
    SourceInfo(rand_pcg/src/pcg128.rs:245:9-245:24)
  1: StorageLive(_3)
    SourceInfo(rand_pcg/src/pcg128.rs:245:9-245:13)
  2: _3 = &mut (*_1)
    SourceInfo(rand_pcg/src/pcg128.rs:245:9-245:13)
  Terminator {
      source_info: SourceInfo(rand_pcg/src/pcg128.rs:245:9-245:24)
      kind: _2 = <pcg128::Mcg128Xsl64 as rand_core::RngCore>::next_u64(move _3) -> [return: bb1, unwind: bb2]
  }
  preds []
  succs [bb1, bb2]

bb1
  0: StorageDead(_3)
    SourceInfo(rand_pcg/src/pcg128.rs:245:23-245:24)
  1: _0 = move _2 as u32 (IntToInt)
    SourceInfo(rand_pcg/src/pcg128.rs:245:9-245:31)
  2: StorageDead(_2)
    SourceInfo(rand_pcg/src/pcg128.rs:245:30-245:31)
  Terminator {
      source_info: SourceInfo(rand_pcg/src/pcg128.rs:246:6-246:6)
      kind: return
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(rand_pcg/src/pcg128.rs:244:5-246:6)
      kind: resume
  }
  preds [bb0]
  succs []

