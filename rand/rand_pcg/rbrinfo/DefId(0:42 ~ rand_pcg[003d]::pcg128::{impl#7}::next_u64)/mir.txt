bb0
  0: StorageLive(_2)
    SourceInfo(rand_pcg/src/pcg128.rs:250:22-250:57)
  1: StorageLive(_3)
    SourceInfo(rand_pcg/src/pcg128.rs:250:22-250:32)
  2: _3 = ((*_1).0: u128)
    SourceInfo(rand_pcg/src/pcg128.rs:250:22-250:32)
  Terminator {
      source_info: SourceInfo(rand_pcg/src/pcg128.rs:250:22-250:57)
      kind: _2 = core::num::<impl u128>::wrapping_mul(move _3, const pcg128::MULTIPLIER) -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: StorageDead(_3)
    SourceInfo(rand_pcg/src/pcg128.rs:250:56-250:57)
  1: ((*_1).0: u128) = move _2
    SourceInfo(rand_pcg/src/pcg128.rs:250:9-250:57)
  2: StorageDead(_2)
    SourceInfo(rand_pcg/src/pcg128.rs:250:56-250:57)
  3: StorageLive(_4)
    SourceInfo(rand_pcg/src/pcg128.rs:251:23-251:33)
  4: _4 = ((*_1).0: u128)
    SourceInfo(rand_pcg/src/pcg128.rs:251:23-251:33)
  Terminator {
      source_info: SourceInfo(rand_pcg/src/pcg128.rs:251:9-251:34)
      kind: _0 = pcg128::output_xsl_rr(move _4) -> [return: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_4)
    SourceInfo(rand_pcg/src/pcg128.rs:251:33-251:34)
  Terminator {
      source_info: SourceInfo(rand_pcg/src/pcg128.rs:252:6-252:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(rand_pcg/src/pcg128.rs:249:5-252:6)
      kind: resume
  }
  preds [bb0, bb1]
  succs []

