bb0
  0: StorageLive(_2)
    SourceInfo(rand_pcg/src/pcg128cm.rs:114:22-117:42)
  1: StorageLive(_3)
    SourceInfo(rand_pcg/src/pcg128cm.rs:114:22-116:46)
  2: StorageLive(_4)
    SourceInfo(rand_pcg/src/pcg128cm.rs:114:22-115:19)
  3: _4 = ((*_1).0: u128)
    SourceInfo(rand_pcg/src/pcg128cm.rs:114:22-115:19)
  4: StorageLive(_5)
    SourceInfo(rand_pcg/src/pcg128cm.rs:116:27-116:45)
  5: _5 = const pcg128cm::MULTIPLIER as u128 (IntToInt)
    SourceInfo(rand_pcg/src/pcg128cm.rs:116:27-116:45)
  Terminator {
      source_info: SourceInfo(rand_pcg/src/pcg128cm.rs:114:22-116:46)
      kind: _3 = core::num::<impl u128>::wrapping_mul(move _4, move _5) -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: StorageDead(_5)
    SourceInfo(rand_pcg/src/pcg128cm.rs:116:45-116:46)
  1: StorageDead(_4)
    SourceInfo(rand_pcg/src/pcg128cm.rs:116:45-116:46)
  2: StorageLive(_6)
    SourceInfo(rand_pcg/src/pcg128cm.rs:117:27-117:41)
  3: _6 = ((*_1).1: u128)
    SourceInfo(rand_pcg/src/pcg128cm.rs:117:27-117:41)
  Terminator {
      source_info: SourceInfo(rand_pcg/src/pcg128cm.rs:114:22-117:42)
      kind: _2 = core::num::<impl u128>::wrapping_add(move _3, move _6) -> [return: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_6)
    SourceInfo(rand_pcg/src/pcg128cm.rs:117:41-117:42)
  1: StorageDead(_3)
    SourceInfo(rand_pcg/src/pcg128cm.rs:117:41-117:42)
  2: ((*_1).0: u128) = move _2
    SourceInfo(rand_pcg/src/pcg128cm.rs:114:9-117:42)
  3: StorageDead(_2)
    SourceInfo(rand_pcg/src/pcg128cm.rs:117:41-117:42)
  4: _0 = const ()
    SourceInfo(rand_pcg/src/pcg128cm.rs:112:24-118:6)
  Terminator {
      source_info: SourceInfo(rand_pcg/src/pcg128cm.rs:118:6-118:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(rand_pcg/src/pcg128cm.rs:112:5-118:6)
      kind: resume
  }
  preds [bb0, bb1]
  succs []

