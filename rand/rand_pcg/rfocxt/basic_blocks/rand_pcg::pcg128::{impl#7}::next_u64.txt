[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            StorageLive(_3),
            _3 = ((*_1).0: u128),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_pcg/src/pcg128.rs:250:22: 250:57 (#0),
                    scope: scope[0],
                },
                kind: _2 = core::num::<impl u128>::wrapping_mul(move _3, const pcg128::MULTIPLIER) -> [return: bb1, unwind: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
            ((*_1).0: u128) = move _2,
            StorageDead(_2),
            StorageLive(_4),
            _4 = ((*_1).0: u128),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_pcg/src/pcg128.rs:251:9: 251:34 (#0),
                    scope: scope[0],
                },
                kind: _0 = pcg128::output_xsl_rr(move _4) -> [return: bb2, unwind: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_pcg/src/pcg128.rs:252:6: 252:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_pcg/src/pcg128.rs:249:5: 252:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_pcg/src/pcg128.rs:249:31: 249:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefMut,
                ),
            ),
        ),
        ty: &'{erased} mut pcg128::Mcg128Xsl64,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_pcg/src/pcg128.rs:249:17: 249:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u128,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_pcg/src/pcg128.rs:250:22: 250:57 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u128,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_pcg/src/pcg128.rs:250:22: 250:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: rand_pcg/src/pcg128.rs:251:9: 251:34 (#0),
                },
            ),
        ),
        ty: u128,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_pcg/src/pcg128.rs:251:23: 251:33 (#0),
            scope: scope[0],
        },
    },
]