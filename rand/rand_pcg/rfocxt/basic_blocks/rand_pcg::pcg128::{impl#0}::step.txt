[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            StorageLive(_3),
            StorageLive(_4),
            _4 = ((*_1).0: u128),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_pcg/src/pcg128.rs:109:22: 111:38 (#0),
                    scope: scope[0],
                },
                kind: _3 = core::num::<impl u128>::wrapping_mul(move _4, const pcg128::MULTIPLIER) -> [return: bb1, unwind: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
            StorageLive(_5),
            _5 = ((*_1).1: u128),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_pcg/src/pcg128.rs:109:22: 112:42 (#0),
                    scope: scope[0],
                },
                kind: _2 = core::num::<impl u128>::wrapping_add(move _3, move _5) -> [return: bb2, unwind: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
            StorageDead(_3),
            ((*_1).0: u128) = move _2,
            StorageDead(_2),
            _0 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_pcg/src/pcg128.rs:113:6: 113:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_pcg/src/pcg128.rs:107:5: 113:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: rand_pcg/src/pcg128.rs:107:23: 107:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefMut,
                ),
            ),
        ),
        ty: &'{erased} mut pcg128::Lcg128Xsl64,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_pcg/src/pcg128.rs:107:13: 107:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u128,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_pcg/src/pcg128.rs:109:22: 112:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u128,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_pcg/src/pcg128.rs:109:22: 111:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u128,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_pcg/src/pcg128.rs:109:22: 110:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u128,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_pcg/src/pcg128.rs:112:27: 112:41 (#0),
            scope: scope[0],
        },
    },
]