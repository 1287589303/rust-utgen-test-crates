[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            StorageLive(_4),
            StorageLive(_5),
            _5 = _2,
            _6 = const 1_i32 as u32 (IntToInt),
            _7 = Lt(move _6, const 128_u32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_pcg/src/pcg128cm.rs:98:25: 98:38 (#0),
                    scope: scope[0],
                },
                kind: assert(move _7, "attempt to shift left by `{}`, which would overflow", const 1_i32) -> [success: bb1, unwind: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _4 = Shl(move _5, const 1_i32),
            StorageDead(_5),
            _3 = BitOr(move _4, const 1_u128),
            StorageDead(_4),
            FakeRead(ForLet(None), _3),
            StorageLive(_8),
            _8 = _1,
            StorageLive(_9),
            _9 = _3,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_pcg/src/pcg128cm.rs:99:9: 99:48 (#0),
                    scope: scope[1],
                },
                kind: _0 = pcg128cm::Lcg128CmDxsm64::from_state_incr(move _8, move _9) -> [return: bb2, unwind: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_9),
            StorageDead(_8),
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_pcg/src/pcg128cm.rs:100:6: 100:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_pcg/src/pcg128cm.rs:96:5: 100:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: pcg128cm::Lcg128CmDxsm64,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_pcg/src/pcg128cm.rs:96:46: 96:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            rand_pcg/src/pcg128cm.rs:96:23: 96:27 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                rand_pcg/src/pcg128cm.rs:96:16: 96:21 (#0),
                            ),
                        ),
                        pat_span: rand_pcg/src/pcg128cm.rs:96:16: 96:21 (#0),
                    },
                ),
            ),
        ),
        ty: u128,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_pcg/src/pcg128cm.rs:96:16: 96:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            rand_pcg/src/pcg128cm.rs:96:37: 96:41 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                rand_pcg/src/pcg128cm.rs:96:29: 96:35 (#0),
                            ),
                        ),
                        pat_span: rand_pcg/src/pcg128cm.rs:96:29: 96:35 (#0),
                    },
                ),
            ),
        ),
        ty: u128,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_pcg/src/pcg128cm.rs:96:29: 96:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                rand_pcg/src/pcg128cm.rs:98:25: 98:42 (#0),
                            ),
                        ),
                        pat_span: rand_pcg/src/pcg128cm.rs:98:13: 98:22 (#0),
                    },
                ),
            ),
        ),
        ty: u128,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_pcg/src/pcg128cm.rs:98:13: 98:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u128,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_pcg/src/pcg128cm.rs:98:25: 98:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u128,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_pcg/src/pcg128cm.rs:98:26: 98:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_pcg/src/pcg128cm.rs:98:25: 98:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_pcg/src/pcg128cm.rs:98:25: 98:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: rand_pcg/src/pcg128cm.rs:99:9: 99:48 (#0),
                },
            ),
        ),
        ty: u128,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_pcg/src/pcg128cm.rs:99:31: 99:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: rand_pcg/src/pcg128cm.rs:99:9: 99:48 (#0),
                },
            ),
        ),
        ty: u128,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_pcg/src/pcg128cm.rs:99:38: 99:47 (#0),
            scope: scope[0],
        },
    },
]