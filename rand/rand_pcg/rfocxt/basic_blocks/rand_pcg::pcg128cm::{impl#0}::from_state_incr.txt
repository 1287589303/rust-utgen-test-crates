[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            StorageLive(_4),
            _4 = _1,
            StorageLive(_5),
            _5 = _2,
            _3 = pcg128cm::Lcg128CmDxsm64 { state: move _4, increment: move _5 },
            StorageDead(_5),
            StorageDead(_4),
            FakeRead(ForLet(None), _3),
            StorageLive(_6),
            StorageLive(_7),
            _7 = (_3.0: u128),
            StorageLive(_8),
            _8 = (_3.1: u128),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_pcg/src/pcg128cm.rs:106:21: 106:58 (#0),
                    scope: scope[1],
                },
                kind: _6 = core::num::<impl u128>::wrapping_add(move _7, move _8) -> [return: bb1, unwind: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_8),
            StorageDead(_7),
            (_3.0: u128) = move _6,
            StorageDead(_6),
            StorageLive(_9),
            StorageLive(_10),
            _10 = &mut _3,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_pcg/src/pcg128cm.rs:107:9: 107:19 (#0),
                    scope: scope[1],
                },
                kind: _9 = pcg128cm::Lcg128CmDxsm64::step(move _10) -> [return: bb2, unwind: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_10),
            StorageDead(_9),
            _0 = move _3,
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_pcg/src/pcg128cm.rs:109:6: 109:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_pcg/src/pcg128cm.rs:103:5: 109:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: pcg128cm::Lcg128CmDxsm64,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_pcg/src/pcg128cm.rs:103:57: 103:61 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            rand_pcg/src/pcg128cm.rs:103:31: 103:35 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                rand_pcg/src/pcg128cm.rs:103:24: 103:29 (#0),
                            ),
                        ),
                        pat_span: rand_pcg/src/pcg128cm.rs:103:24: 103:29 (#0),
                    },
                ),
            ),
        ),
        ty: u128,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_pcg/src/pcg128cm.rs:103:24: 103:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            rand_pcg/src/pcg128cm.rs:103:48: 103:52 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                rand_pcg/src/pcg128cm.rs:103:37: 103:46 (#0),
                            ),
                        ),
                        pat_span: rand_pcg/src/pcg128cm.rs:103:37: 103:46 (#0),
                    },
                ),
            ),
        ),
        ty: u128,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_pcg/src/pcg128cm.rs:103:37: 103:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                rand_pcg/src/pcg128cm.rs:104:23: 104:48 (#0),
                            ),
                        ),
                        pat_span: rand_pcg/src/pcg128cm.rs:104:13: 104:20 (#0),
                    },
                ),
            ),
        ),
        ty: pcg128cm::Lcg128CmDxsm64,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_pcg/src/pcg128cm.rs:104:13: 104:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: u128,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_pcg/src/pcg128cm.rs:104:30: 104:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: u128,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_pcg/src/pcg128cm.rs:104:37: 104:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u128,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_pcg/src/pcg128cm.rs:106:21: 106:58 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u128,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_pcg/src/pcg128cm.rs:106:21: 106:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u128,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_pcg/src/pcg128cm.rs:106:44: 106:57 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: rand_pcg/src/pcg128cm.rs:107:9: 107:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut pcg128cm::Lcg128CmDxsm64,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_pcg/src/pcg128cm.rs:107:9: 107:12 (#0),
            scope: scope[0],
        },
    },
]