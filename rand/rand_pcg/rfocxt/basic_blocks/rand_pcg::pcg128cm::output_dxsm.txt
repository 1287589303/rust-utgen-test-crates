[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            StorageLive(_3),
            StorageLive(_4),
            _4 = _1,
            _5 = const 64_i32 as u32 (IntToInt),
            _6 = Lt(move _5, const 128_u32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_pcg/src/pcg128cm.rs:167:18: 167:31 (#0),
                    scope: scope[0],
                },
                kind: assert(move _6, "attempt to shift right by `{}`, which would overflow", const 64_i32) -> [success: bb1, unwind: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _3 = Shr(move _4, const 64_i32),
            StorageDead(_4),
            _2 = move _3 as u64 (IntToInt),
            StorageDead(_3),
            FakeRead(ForLet(None), _2),
            StorageLive(_7),
            StorageLive(_8),
            _8 = _1,
            _7 = move _8 as u64 (IntToInt),
            StorageDead(_8),
            FakeRead(ForLet(None), _7),
            _7 = BitOr(_7, const 1_u64),
            StorageLive(_9),
            StorageLive(_10),
            _10 = _2,
            _11 = const 32_i32 as u32 (IntToInt),
            _12 = Lt(move _11, const 64_u32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_pcg/src/pcg128cm.rs:171:11: 171:19 (#0),
                    scope: scope[2],
                },
                kind: assert(move _12, "attempt to shift right by `{}`, which would overflow", const 32_i32) -> [success: bb2, unwind: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _9 = Shr(move _10, const 32_i32),
            StorageDead(_10),
            _2 = BitXor(_2, move _9),
            StorageDead(_9),
            StorageLive(_13),
            StorageLive(_14),
            _14 = _2,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_pcg/src/pcg128cm.rs:172:10: 172:37 (#0),
                    scope: scope[2],
                },
                kind: _13 = core::num::<impl u64>::wrapping_mul(move _14, const pcg128cm::MULTIPLIER) -> [return: bb3, unwind: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_14),
            _2 = move _13,
            StorageDead(_13),
            StorageLive(_15),
            StorageLive(_16),
            _16 = _2,
            _17 = const 48_i32 as u32 (IntToInt),
            _18 = Lt(move _17, const 64_u32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_pcg/src/pcg128cm.rs:173:11: 173:19 (#0),
                    scope: scope[2],
                },
                kind: assert(move _18, "attempt to shift right by `{}`, which would overflow", const 48_i32) -> [success: bb4, unwind: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _15 = Shr(move _16, const 48_i32),
            StorageDead(_16),
            _2 = BitXor(_2, move _15),
            StorageDead(_15),
            StorageLive(_19),
            StorageLive(_20),
            _20 = _2,
            StorageLive(_21),
            _21 = _7,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_pcg/src/pcg128cm.rs:174:10: 174:29 (#0),
                    scope: scope[2],
                },
                kind: _19 = core::num::<impl u64>::wrapping_mul(move _20, move _21) -> [return: bb5, unwind: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_21),
            StorageDead(_20),
            _2 = move _19,
            StorageDead(_19),
            _0 = _2,
            StorageDead(_7),
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_pcg/src/pcg128cm.rs:177:2: 177:2 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_pcg/src/pcg128cm.rs:164:1: 177:2 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_pcg/src/pcg128cm.rs:164:32: 164:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            rand_pcg/src/pcg128cm.rs:164:23: 164:27 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                rand_pcg/src/pcg128cm.rs:164:16: 164:21 (#0),
                            ),
                        ),
                        pat_span: rand_pcg/src/pcg128cm.rs:164:16: 164:21 (#0),
                    },
                ),
            ),
        ),
        ty: u128,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_pcg/src/pcg128cm.rs:164:16: 164:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                rand_pcg/src/pcg128cm.rs:167:18: 167:38 (#0),
                            ),
                        ),
                        pat_span: rand_pcg/src/pcg128cm.rs:167:9: 167:15 (#0),
                    },
                ),
            ),
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_pcg/src/pcg128cm.rs:167:9: 167:15 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u128,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_pcg/src/pcg128cm.rs:167:18: 167:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u128,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_pcg/src/pcg128cm.rs:167:19: 167:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_pcg/src/pcg128cm.rs:167:18: 167:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_pcg/src/pcg128cm.rs:167:18: 167:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                rand_pcg/src/pcg128cm.rs:168:18: 168:30 (#0),
                            ),
                        ),
                        pat_span: rand_pcg/src/pcg128cm.rs:168:9: 168:15 (#0),
                    },
                ),
            ),
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_pcg/src/pcg128cm.rs:168:9: 168:15 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u128,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_pcg/src/pcg128cm.rs:168:18: 168:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_pcg/src/pcg128cm.rs:171:11: 171:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_pcg/src/pcg128cm.rs:171:11: 171:13 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_pcg/src/pcg128cm.rs:171:11: 171:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_pcg/src/pcg128cm.rs:171:11: 171:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_pcg/src/pcg128cm.rs:172:10: 172:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_pcg/src/pcg128cm.rs:172:10: 172:12 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_pcg/src/pcg128cm.rs:173:11: 173:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_pcg/src/pcg128cm.rs:173:11: 173:13 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_pcg/src/pcg128cm.rs:173:11: 173:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_pcg/src/pcg128cm.rs:173:11: 173:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_pcg/src/pcg128cm.rs:174:10: 174:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_pcg/src/pcg128cm.rs:174:10: 174:12 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_pcg/src/pcg128cm.rs:174:26: 174:28 (#0),
            scope: scope[0],
        },
    },
]